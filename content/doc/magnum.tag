<?xml version='1.0' encoding='UTF-8' standalone='yes' ?>
<tagfile>
  <compound kind="file">
    <name>AbstractUiShader.h</name>
    <path>/home/mosra/Code/magnum-extras/src/Magnum/Ui/</path>
    <filename>AbstractUiShader_8h</filename>
    <includes id="AbstractShaderProgram_8h" name="AbstractShaderProgram.h" local="no" imported="no">Magnum/AbstractShaderProgram.h</includes>
    <includes id="Matrix3_8h" name="Matrix3.h" local="no" imported="no">Magnum/Math/Matrix3.h</includes>
    <class kind="class">Magnum::Ui::AbstractUiShader</class>
    <namespace>Magnum</namespace>
    <namespace>Magnum::Ui</namespace>
  </compound>
  <compound kind="file">
    <name>Anchor.h</name>
    <path>/home/mosra/Code/magnum-extras/src/Magnum/Ui/</path>
    <filename>Anchor_8h</filename>
    <includes id="Magnum_8h" name="Magnum.h" local="no" imported="no">Magnum/Magnum.h</includes>
    <includes id="Range_8h" name="Range.h" local="no" imported="no">Magnum/Math/Range.h</includes>
    <includes id="Ui_8h" name="Ui.h" local="yes" imported="no">Magnum/Ui/Ui.h</includes>
    <class kind="class">Magnum::Ui::Anchor</class>
    <namespace>Magnum</namespace>
    <namespace>Magnum::Ui</namespace>
    <member kind="typedef">
      <type>Containers::EnumSet&lt; Snap &gt;</type>
      <name>Snaps</name>
      <anchorfile>namespaceMagnum_1_1Ui.html</anchorfile>
      <anchor>abf82220e5ebfc36efdff609efcb9ae01</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>Snap</name>
      <anchorfile>namespaceMagnum_1_1Ui.html</anchorfile>
      <anchor>adb75721c5ea61dfb3b39cdae3743482b</anchor>
      <arglist></arglist>
      <enumvalue file="namespaceMagnum_1_1Ui.html" anchor="adb75721c5ea61dfb3b39cdae3743482ba945d5e233cf7d6240f6b783b36a374ff">Left</enumvalue>
      <enumvalue file="namespaceMagnum_1_1Ui.html" anchor="adb75721c5ea61dfb3b39cdae3743482ba92b09c7c48c520c3c55e497875da437c">Right</enumvalue>
      <enumvalue file="namespaceMagnum_1_1Ui.html" anchor="adb75721c5ea61dfb3b39cdae3743482ba2ad9d63b69c4a10a5cc9cad923133bc4">Bottom</enumvalue>
      <enumvalue file="namespaceMagnum_1_1Ui.html" anchor="adb75721c5ea61dfb3b39cdae3743482baa4ffdcf0dc1f31b9acaf295d75b51d00">Top</enumvalue>
      <enumvalue file="namespaceMagnum_1_1Ui.html" anchor="adb75721c5ea61dfb3b39cdae3743482babb372b16a6afd593f17b8fbdb297d823">InsideX</enumvalue>
      <enumvalue file="namespaceMagnum_1_1Ui.html" anchor="adb75721c5ea61dfb3b39cdae3743482bae1a26b20ef38819a20b38008f8436ee6">InsideY</enumvalue>
      <enumvalue file="namespaceMagnum_1_1Ui.html" anchor="adb75721c5ea61dfb3b39cdae3743482bac87437e57753ee4bc03f6ce6b2a37d97">NoSpaceX</enumvalue>
      <enumvalue file="namespaceMagnum_1_1Ui.html" anchor="adb75721c5ea61dfb3b39cdae3743482ba52bc69c5b52cb1ef358ec05222e8f4c5">NoSpaceY</enumvalue>
    </member>
  </compound>
  <compound kind="file">
    <name>BasicGLLayer.h</name>
    <path>/home/mosra/Code/magnum-extras/src/Magnum/Ui/</path>
    <filename>BasicGLLayer_8h</filename>
    <includes id="Buffer_8h" name="Buffer.h" local="no" imported="no">Magnum/Buffer.h</includes>
    <includes id="Mesh_8h" name="Mesh.h" local="no" imported="no">Magnum/Mesh.h</includes>
    <includes id="BasicLayer_8h" name="BasicLayer.h" local="yes" imported="no">Magnum/Ui/BasicLayer.h</includes>
    <class kind="class">Magnum::Ui::BasicGLLayer</class>
    <namespace>Magnum</namespace>
    <namespace>Magnum::Ui</namespace>
  </compound>
  <compound kind="file">
    <name>BasicGLLayer.hpp</name>
    <path>/home/mosra/Code/magnum-extras/src/Magnum/Ui/</path>
    <filename>BasicGLLayer_8hpp</filename>
    <includes id="BasicGLLayer_8h" name="BasicGLLayer.h" local="yes" imported="no">BasicGLLayer.h</includes>
    <includes id="AbstractUiShader_8h" name="AbstractUiShader.h" local="yes" imported="no">Magnum/Ui/AbstractUiShader.h</includes>
    <namespace>Magnum</namespace>
    <namespace>Magnum::Ui</namespace>
  </compound>
  <compound kind="file">
    <name>BasicInstancedGLLayer.h</name>
    <path>/home/mosra/Code/magnum-extras/src/Magnum/Ui/</path>
    <filename>BasicInstancedGLLayer_8h</filename>
    <includes id="Buffer_8h" name="Buffer.h" local="no" imported="no">Magnum/Buffer.h</includes>
    <includes id="Mesh_8h" name="Mesh.h" local="no" imported="no">Magnum/Mesh.h</includes>
    <includes id="BasicInstancedLayer_8h" name="BasicInstancedLayer.h" local="yes" imported="no">Magnum/Ui/BasicInstancedLayer.h</includes>
    <class kind="class">Magnum::Ui::BasicInstancedGLLayer</class>
    <namespace>Magnum</namespace>
    <namespace>Magnum::Ui</namespace>
  </compound>
  <compound kind="file">
    <name>BasicInstancedGLLayer.hpp</name>
    <path>/home/mosra/Code/magnum-extras/src/Magnum/Ui/</path>
    <filename>BasicInstancedGLLayer_8hpp</filename>
    <includes id="BasicInstancedGLLayer_8h" name="BasicInstancedGLLayer.h" local="yes" imported="no">BasicInstancedGLLayer.h</includes>
    <includes id="AbstractUiShader_8h" name="AbstractUiShader.h" local="yes" imported="no">Magnum/Ui/AbstractUiShader.h</includes>
    <namespace>Magnum</namespace>
    <namespace>Magnum::Ui</namespace>
  </compound>
  <compound kind="file">
    <name>BasicInstancedLayer.h</name>
    <path>/home/mosra/Code/magnum-extras/src/Magnum/Ui/</path>
    <filename>BasicInstancedLayer_8h</filename>
    <includes id="Range_8h" name="Range.h" local="no" imported="no">Magnum/Math/Range.h</includes>
    <includes id="Ui_8h" name="Ui.h" local="yes" imported="no">Magnum/Ui/Ui.h</includes>
    <class kind="class">Magnum::Ui::BasicInstancedLayer</class>
    <namespace>Magnum</namespace>
    <namespace>Magnum::Ui</namespace>
  </compound>
  <compound kind="file">
    <name>BasicInstancedLayer.hpp</name>
    <path>/home/mosra/Code/magnum-extras/src/Magnum/Ui/</path>
    <filename>BasicInstancedLayer_8hpp</filename>
    <includes id="BasicInstancedLayer_8h" name="BasicInstancedLayer.h" local="yes" imported="no">BasicInstancedLayer.h</includes>
    <namespace>Magnum</namespace>
    <namespace>Magnum::Ui</namespace>
  </compound>
  <compound kind="file">
    <name>BasicLayer.h</name>
    <path>/home/mosra/Code/magnum-extras/src/Magnum/Ui/</path>
    <filename>BasicLayer_8h</filename>
    <includes id="Range_8h" name="Range.h" local="no" imported="no">Magnum/Math/Range.h</includes>
    <includes id="Ui_8h" name="Ui.h" local="yes" imported="no">Magnum/Ui/Ui.h</includes>
    <class kind="class">Magnum::Ui::BasicLayer</class>
    <namespace>Magnum</namespace>
    <namespace>Magnum::Ui</namespace>
  </compound>
  <compound kind="file">
    <name>BasicLayer.hpp</name>
    <path>/home/mosra/Code/magnum-extras/src/Magnum/Ui/</path>
    <filename>BasicLayer_8hpp</filename>
    <includes id="BasicLayer_8h" name="BasicLayer.h" local="yes" imported="no">BasicLayer.h</includes>
    <namespace>Magnum</namespace>
    <namespace>Magnum::Ui</namespace>
  </compound>
  <compound kind="file">
    <name>BasicPlane.h</name>
    <path>/home/mosra/Code/magnum-extras/src/Magnum/Ui/</path>
    <filename>BasicPlane_8h</filename>
    <includes id="Magnum_8h" name="Magnum.h" local="no" imported="no">Magnum/Magnum.h</includes>
    <includes id="Range_8h" name="Range.h" local="no" imported="no">Magnum/Math/Range.h</includes>
    <includes id="Ui_8h" name="Ui.h" local="yes" imported="no">Magnum/Ui/Ui.h</includes>
    <class kind="class">Magnum::Ui::AbstractPlane</class>
    <class kind="class">Magnum::Ui::BasicPlane</class>
    <namespace>Magnum</namespace>
    <namespace>Magnum::Ui</namespace>
    <member kind="typedef">
      <type>Containers::EnumSet&lt; PlaneFlag &gt;</type>
      <name>PlaneFlags</name>
      <anchorfile>namespaceMagnum_1_1Ui.html</anchorfile>
      <anchor>a25efa17947864ff2d297cc5f560cc62e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>PlaneFlag</name>
      <anchorfile>namespaceMagnum_1_1Ui.html</anchorfile>
      <anchor>ae45be3c82cb871a531ca61b5f228015c</anchor>
      <arglist></arglist>
      <enumvalue file="namespaceMagnum_1_1Ui.html" anchor="ae45be3c82cb871a531ca61b5f228015ca7acdf85c69cc3c5305456a293524386e">Hidden</enumvalue>
    </member>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceMagnum_1_1Ui.html</anchorfile>
      <anchor>a7a282f38bdfb30e0bf96e3a9263d4379</anchor>
      <arglist>(Debug &amp;debug, PlaneFlag value)</arglist>
    </member>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceMagnum_1_1Ui.html</anchorfile>
      <anchor>a054d68d97cdff0794d7fbefc84bc8206</anchor>
      <arglist>(Debug &amp;debug, PlaneFlags value)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>BasicPlane.hpp</name>
    <path>/home/mosra/Code/magnum-extras/src/Magnum/Ui/</path>
    <filename>BasicPlane_8hpp</filename>
    <includes id="BasicPlane_8h" name="BasicPlane.h" local="yes" imported="no">BasicPlane.h</includes>
    <includes id="AbstractUiShader_8h" name="AbstractUiShader.h" local="yes" imported="no">Magnum/Ui/AbstractUiShader.h</includes>
    <includes id="Widget_8h" name="Widget.h" local="yes" imported="no">Magnum/Ui/Widget.h</includes>
    <namespace>Magnum</namespace>
    <namespace>Magnum::Ui</namespace>
  </compound>
  <compound kind="file">
    <name>BasicUserInterface.h</name>
    <path>/home/mosra/Code/magnum-extras/src/Magnum/Ui/</path>
    <filename>BasicUserInterface_8h</filename>
    <includes id="Magnum_8h" name="Magnum.h" local="no" imported="no">Magnum/Magnum.h</includes>
    <includes id="Range_8h" name="Range.h" local="no" imported="no">Magnum/Math/Range.h</includes>
    <includes id="Ui_8h" name="Ui.h" local="yes" imported="no">Magnum/Ui/Ui.h</includes>
    <class kind="class">Magnum::Ui::AbstractUserInterface</class>
    <class kind="class">Magnum::Ui::BasicUserInterface</class>
    <namespace>Magnum</namespace>
    <namespace>Magnum::Ui</namespace>
  </compound>
  <compound kind="file">
    <name>Button.h</name>
    <path>/home/mosra/Code/magnum-extras/src/Magnum/Ui/</path>
    <filename>Button_8h</filename>
    <includes id="Widget_8h" name="Widget.h" local="yes" imported="no">Magnum/Ui/Widget.h</includes>
    <includes id="Style_8h" name="Style.h" local="yes" imported="no">Magnum/Ui/Style.h</includes>
    <class kind="class">Magnum::Ui::Button</class>
    <namespace>Magnum</namespace>
    <namespace>Magnum::Ui</namespace>
  </compound>
  <compound kind="file">
    <name>Input.h</name>
    <path>/home/mosra/Code/magnum-extras/src/Magnum/Ui/</path>
    <filename>Input_8h</filename>
    <includes id="Text_8h" name="Text.h" local="no" imported="no">Magnum/Text/Text.h</includes>
    <includes id="Widget_8h" name="Widget.h" local="yes" imported="no">Magnum/Ui/Widget.h</includes>
    <includes id="Style_8h" name="Style.h" local="yes" imported="no">Magnum/Ui/Style.h</includes>
    <class kind="class">Magnum::Ui::Input</class>
    <namespace>Magnum</namespace>
    <namespace>Magnum::Ui</namespace>
  </compound>
  <compound kind="file">
    <name>Label.h</name>
    <path>/home/mosra/Code/magnum-extras/src/Magnum/Ui/</path>
    <filename>Label_8h</filename>
    <includes id="Text_8h" name="Text.h" local="no" imported="no">Magnum/Text/Text.h</includes>
    <includes id="Widget_8h" name="Widget.h" local="yes" imported="no">Magnum/Ui/Widget.h</includes>
    <includes id="Style_8h" name="Style.h" local="yes" imported="no">Magnum/Ui/Style.h</includes>
    <class kind="class">Magnum::Ui::Label</class>
    <namespace>Magnum</namespace>
    <namespace>Magnum::Ui</namespace>
  </compound>
  <compound kind="file">
    <name>Modal.h</name>
    <path>/home/mosra/Code/magnum-extras/src/Magnum/Ui/</path>
    <filename>Modal_8h</filename>
    <includes id="Text_8h" name="Text.h" local="no" imported="no">Magnum/Text/Text.h</includes>
    <includes id="Widget_8h" name="Widget.h" local="yes" imported="no">Magnum/Ui/Widget.h</includes>
    <includes id="Style_8h" name="Style.h" local="yes" imported="no">Magnum/Ui/Style.h</includes>
    <class kind="class">Magnum::Ui::Modal</class>
    <namespace>Magnum</namespace>
    <namespace>Magnum::Ui</namespace>
  </compound>
  <compound kind="file">
    <name>Style.h</name>
    <path>/home/mosra/Code/magnum-extras/src/Magnum/Ui/</path>
    <filename>Style_8h</filename>
    <includes id="Math_2Color_8h" name="Color.h" local="no" imported="no">Magnum/Math/Color.h</includes>
    <includes id="Range_8h" name="Range.h" local="no" imported="no">Magnum/Math/Range.h</includes>
    <includes id="AbstractUiShader_8h" name="AbstractUiShader.h" local="yes" imported="no">Magnum/Ui/AbstractUiShader.h</includes>
    <includes id="Ui_8h" name="Ui.h" local="yes" imported="no">Magnum/Ui/Ui.h</includes>
    <class kind="class">Magnum::Ui::StyleConfiguration</class>
    <namespace>Magnum</namespace>
    <namespace>Magnum::Ui</namespace>
    <member kind="enumeration">
      <type></type>
      <name>Type</name>
      <anchorfile>namespaceMagnum_1_1Ui.html</anchorfile>
      <anchor>a3a950dd64c0c17160f00681acf28d71c</anchor>
      <arglist></arglist>
      <enumvalue file="namespaceMagnum_1_1Ui.html" anchor="a3a950dd64c0c17160f00681acf28d71ca87b7760f14fbff78d8819291f36ab9a0">Button</enumvalue>
      <enumvalue file="namespaceMagnum_1_1Ui.html" anchor="a3a950dd64c0c17160f00681acf28d71cab021df6aac4654c454f46c77646e745f">Label</enumvalue>
      <enumvalue file="namespaceMagnum_1_1Ui.html" anchor="a3a950dd64c0c17160f00681acf28d71ca324118a6721dd6b8a9b9f4e327df2bf5">Input</enumvalue>
      <enumvalue file="namespaceMagnum_1_1Ui.html" anchor="a3a950dd64c0c17160f00681acf28d71cac59d6df802c32f037c2a15ff75faec17">Modal</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>State</name>
      <anchorfile>namespaceMagnum_1_1Ui.html</anchorfile>
      <anchor>ad16021b9313de52986ac0ff6e92b346c</anchor>
      <arglist></arglist>
      <enumvalue file="namespaceMagnum_1_1Ui.html" anchor="ad16021b9313de52986ac0ff6e92b346ca7a1920d61156abc05a60135aefe8bc67">Default</enumvalue>
      <enumvalue file="namespaceMagnum_1_1Ui.html" anchor="ad16021b9313de52986ac0ff6e92b346caeee0168be69b854c20621fc6f01cc3fc">Hover</enumvalue>
      <enumvalue file="namespaceMagnum_1_1Ui.html" anchor="ad16021b9313de52986ac0ff6e92b346cad78a68f6a85421ae121c2cb5b73a1040">Pressed</enumvalue>
      <enumvalue file="namespaceMagnum_1_1Ui.html" anchor="ad16021b9313de52986ac0ff6e92b346ca4d3d769b812b6faa6b76e1a8abaece2d">Active</enumvalue>
      <enumvalue file="namespaceMagnum_1_1Ui.html" anchor="ad16021b9313de52986ac0ff6e92b346cab9f5c797ebbf55adccdd8539a65a0241">Disabled</enumvalue>
      <enumvalue file="namespaceMagnum_1_1Ui.html" anchor="ad16021b9313de52986ac0ff6e92b346ca7acdf85c69cc3c5305456a293524386e">Hidden</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>Style</name>
      <anchorfile>namespaceMagnum_1_1Ui.html</anchorfile>
      <anchor>ab8c9d883509415e4668b9165e63c10de</anchor>
      <arglist></arglist>
      <enumvalue file="namespaceMagnum_1_1Ui.html" anchor="ab8c9d883509415e4668b9165e63c10dea7a1920d61156abc05a60135aefe8bc67">Default</enumvalue>
      <enumvalue file="namespaceMagnum_1_1Ui.html" anchor="ab8c9d883509415e4668b9165e63c10dea074de7e7c226d5c60f8af14c20725352">Primary</enumvalue>
      <enumvalue file="namespaceMagnum_1_1Ui.html" anchor="ab8c9d883509415e4668b9165e63c10dea505a83f220c02df2f85c3810cd9ceb38">Success</enumvalue>
      <enumvalue file="namespaceMagnum_1_1Ui.html" anchor="ab8c9d883509415e4668b9165e63c10dea4059b0251f66a18cb56f544728796875">Info</enumvalue>
      <enumvalue file="namespaceMagnum_1_1Ui.html" anchor="ab8c9d883509415e4668b9165e63c10dea0eaadb4fcb48a0a0ed7bc9868be9fbaa">Warning</enumvalue>
      <enumvalue file="namespaceMagnum_1_1Ui.html" anchor="ab8c9d883509415e4668b9165e63c10dea990816b607ebf99b1415760965e4d564">Danger</enumvalue>
      <enumvalue file="namespaceMagnum_1_1Ui.html" anchor="ab8c9d883509415e4668b9165e63c10dea8ed64ce6e8032ddb62a463ffa78881d9">Dim</enumvalue>
      <enumvalue file="namespaceMagnum_1_1Ui.html" anchor="ab8c9d883509415e4668b9165e63c10dea745e3db6a7ffd50e1a72b39482f0882d">Flat</enumvalue>
    </member>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceMagnum_1_1Ui.html</anchorfile>
      <anchor>a80012b5da15050b1d9d527f6ce833fd9</anchor>
      <arglist>(Debug &amp;debug, Type value)</arglist>
    </member>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceMagnum_1_1Ui.html</anchorfile>
      <anchor>a5ce5a2039af17edd22c9e851f07ffb07</anchor>
      <arglist>(Debug &amp;debug, State value)</arglist>
    </member>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceMagnum_1_1Ui.html</anchorfile>
      <anchor>ac5f33b043d9d0c87a98edceac041f506</anchor>
      <arglist>(Debug &amp;debug, Style value)</arglist>
    </member>
    <member kind="function">
      <type>StyleConfiguration</type>
      <name>defaultStyleConfiguration</name>
      <anchorfile>namespaceMagnum_1_1Ui.html</anchorfile>
      <anchor>ad57a0a7abf897080139bce4ed91642cd</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Ui.h</name>
    <path>/home/mosra/Code/magnum-extras/src/Magnum/Ui/</path>
    <filename>Ui_8h</filename>
    <includes id="Magnum_8h" name="Magnum.h" local="no" imported="no">Magnum/Magnum.h</includes>
    <class kind="class">Magnum::Ui::BasicInstancedLayer</class>
    <class kind="class">Magnum::Ui::BasicInstancedGLLayer</class>
    <class kind="class">Magnum::Ui::BasicLayer</class>
    <class kind="class">Magnum::Ui::BasicGLLayer</class>
    <class kind="class">Magnum::Ui::BasicPlane</class>
    <class kind="class">Magnum::Ui::BasicUserInterface</class>
    <namespace>Magnum</namespace>
    <namespace>Magnum::Ui</namespace>
  </compound>
  <compound kind="file">
    <name>UserInterface.h</name>
    <path>/home/mosra/Code/magnum-extras/src/Magnum/Ui/</path>
    <filename>UserInterface_8h</filename>
    <includes id="Buffer_8h" name="Buffer.h" local="no" imported="no">Magnum/Buffer.h</includes>
    <includes id="Text_8h" name="Text.h" local="no" imported="no">Magnum/Text/Text.h</includes>
    <includes id="GlyphCache_8h" name="GlyphCache.h" local="no" imported="no">Magnum/Text/GlyphCache.h</includes>
    <includes id="AbstractUiShader_8h" name="AbstractUiShader.h" local="yes" imported="no">Magnum/Ui/AbstractUiShader.h</includes>
    <includes id="BasicUserInterface_8h" name="BasicUserInterface.h" local="yes" imported="no">Magnum/Ui/BasicUserInterface.h</includes>
    <includes id="Style_8h" name="Style.h" local="yes" imported="no">Magnum/Ui/Style.h</includes>
    <class kind="class">Magnum::Ui::UserInterface</class>
    <namespace>Magnum</namespace>
    <namespace>Magnum::Ui</namespace>
  </compound>
  <compound kind="file">
    <name>ValidatedInput.h</name>
    <path>/home/mosra/Code/magnum-extras/src/Magnum/Ui/</path>
    <filename>ValidatedInput_8h</filename>
    <includes id="Input_8h" name="Input.h" local="yes" imported="no">Magnum/Ui/Input.h</includes>
    <class kind="class">Magnum::Ui::ValidatedInput</class>
    <namespace>Magnum</namespace>
    <namespace>Magnum::Ui</namespace>
  </compound>
  <compound kind="file">
    <name>Widget.h</name>
    <path>/home/mosra/Code/magnum-extras/src/Magnum/Ui/</path>
    <filename>Widget_8h</filename>
    <includes id="Magnum_8h" name="Magnum.h" local="no" imported="no">Magnum/Magnum.h</includes>
    <includes id="Range_8h" name="Range.h" local="no" imported="no">Magnum/Math/Range.h</includes>
    <includes id="Ui_8h" name="Ui.h" local="yes" imported="no">Magnum/Ui/Ui.h</includes>
    <class kind="class">Magnum::Ui::Widget</class>
    <namespace>Magnum</namespace>
    <namespace>Magnum::Ui</namespace>
    <member kind="typedef">
      <type>Containers::EnumSet&lt; WidgetFlag &gt;</type>
      <name>WidgetFlags</name>
      <anchorfile>namespaceMagnum_1_1Ui.html</anchorfile>
      <anchor>a8f043ada252e182e750e0f74407965de</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>WidgetFlag</name>
      <anchorfile>namespaceMagnum_1_1Ui.html</anchorfile>
      <anchor>a45de09c646008bdb65fc358488fd64b6</anchor>
      <arglist></arglist>
      <enumvalue file="namespaceMagnum_1_1Ui.html" anchor="a45de09c646008bdb65fc358488fd64b6a3ef193e1ac8f2bc3d7226a29d6b09875">Hovered</enumvalue>
      <enumvalue file="namespaceMagnum_1_1Ui.html" anchor="a45de09c646008bdb65fc358488fd64b6ad78a68f6a85421ae121c2cb5b73a1040">Pressed</enumvalue>
      <enumvalue file="namespaceMagnum_1_1Ui.html" anchor="a45de09c646008bdb65fc358488fd64b6a4d3d769b812b6faa6b76e1a8abaece2d">Active</enumvalue>
      <enumvalue file="namespaceMagnum_1_1Ui.html" anchor="a45de09c646008bdb65fc358488fd64b6ab9f5c797ebbf55adccdd8539a65a0241">Disabled</enumvalue>
      <enumvalue file="namespaceMagnum_1_1Ui.html" anchor="a45de09c646008bdb65fc358488fd64b6a7acdf85c69cc3c5305456a293524386e">Hidden</enumvalue>
    </member>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceMagnum_1_1Ui.html</anchorfile>
      <anchor>aa8da4a420b361121b5e71f13da8c2b9b</anchor>
      <arglist>(Debug &amp;debug, WidgetFlag value)</arglist>
    </member>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceMagnum_1_1Ui.html</anchorfile>
      <anchor>a9b714e67f7fa8079cdc357574f2486aa</anchor>
      <arglist>(Debug &amp;debug, WidgetFlags value)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>ConvertShape.h</name>
    <path>/home/mosra/Code/magnum-integration/src/Magnum/BulletIntegration/</path>
    <filename>ConvertShape_8h</filename>
    <includes id="Shapes_8h" name="Shapes.h" local="no" imported="no">Magnum/Shapes/Shapes.h</includes>
    <includes id="SceneGraph_8h" name="SceneGraph.h" local="no" imported="no">Magnum/SceneGraph/SceneGraph.h</includes>
    <namespace>Magnum</namespace>
    <namespace>Magnum::BulletIntegration</namespace>
    <member kind="function">
      <type>Shapes::AbstractShape3D *</type>
      <name>convertShape</name>
      <anchorfile>namespaceMagnum_1_1BulletIntegration.html</anchorfile>
      <anchor>a126bfaf12459eb1a25ef13559de89510</anchor>
      <arglist>(SceneGraph::AbstractBasicObject3D&lt; btScalar &gt; &amp;object, const btCollisionShape &amp;shape, Shapes::ShapeGroup3D *shapes=nullptr)</arglist>
    </member>
    <member kind="function">
      <type>Shapes::Shape&lt; Shapes::Box3D &gt; *</type>
      <name>convertShape</name>
      <anchorfile>namespaceMagnum_1_1BulletIntegration.html</anchorfile>
      <anchor>af76460d8f14aa7dc64e78ca327f8d7a5</anchor>
      <arglist>(SceneGraph::AbstractBasicObject3D&lt; btScalar &gt; &amp;object, const btBoxShape &amp;box, Shapes::ShapeGroup3D *shapes=nullptr)</arglist>
    </member>
    <member kind="function">
      <type>Shapes::Shape&lt; Shapes::Sphere3D &gt; *</type>
      <name>convertShape</name>
      <anchorfile>namespaceMagnum_1_1BulletIntegration.html</anchorfile>
      <anchor>ab23e9ad42c1adb4f0c565163a442ce66</anchor>
      <arglist>(SceneGraph::AbstractBasicObject3D&lt; btScalar &gt; &amp;object, const btSphereShape &amp;sphere, Shapes::ShapeGroup3D *shapes=nullptr)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>DebugDraw.h</name>
    <path>/home/mosra/Code/magnum-integration/src/Magnum/BulletIntegration/</path>
    <filename>DebugDraw_8h</filename>
    <includes id="Buffer_8h" name="Buffer.h" local="no" imported="no">Magnum/Buffer.h</includes>
    <includes id="Magnum_8h" name="Magnum.h" local="no" imported="no">Magnum/Magnum.h</includes>
    <includes id="Mesh_8h" name="Mesh.h" local="no" imported="no">Magnum/Mesh.h</includes>
    <includes id="VertexColor_8h" name="VertexColor.h" local="no" imported="no">Magnum/Shaders/VertexColor.h</includes>
    <includes id="Integration_8h" name="Integration.h" local="yes" imported="no">Magnum/BulletIntegration/Integration.h</includes>
    <class kind="class">Magnum::BulletIntegration::DebugDraw</class>
    <namespace>Magnum</namespace>
    <namespace>Magnum::BulletIntegration</namespace>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceMagnum_1_1BulletIntegration.html</anchorfile>
      <anchor>aa37ff90bc9f6e2756fe1a2854d114f43</anchor>
      <arglist>(Debug &amp;debug, DebugDraw::DebugMode value)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Integration.h</name>
    <path>/home/mosra/Code/magnum-integration/src/Magnum/BulletIntegration/</path>
    <filename>Integration_8h</filename>
    <includes id="RectangularMatrix_8h" name="RectangularMatrix.h" local="no" imported="no">Magnum/Math/RectangularMatrix.h</includes>
    <includes id="Quaternion_8h" name="Quaternion.h" local="no" imported="no">Magnum/Math/Quaternion.h</includes>
    <namespace>Magnum</namespace>
    <namespace>Magnum::Math</namespace>
  </compound>
  <compound kind="file">
    <name>MotionState.h</name>
    <path>/home/mosra/Code/magnum-integration/src/Magnum/BulletIntegration/</path>
    <filename>MotionState_8h</filename>
    <includes id="AbstractFeature_8h" name="AbstractFeature.h" local="no" imported="no">Magnum/SceneGraph/AbstractFeature.h</includes>
    <includes id="AbstractTranslationRotation3D_8h" name="AbstractTranslationRotation3D.h" local="no" imported="no">Magnum/SceneGraph/AbstractTranslationRotation3D.h</includes>
    <class kind="class">Magnum::BulletIntegration::MotionState</class>
    <namespace>Magnum</namespace>
    <namespace>Magnum::BulletIntegration</namespace>
  </compound>
  <compound kind="file">
    <name>Compositor.h</name>
    <path>/home/mosra/Code/magnum-integration/src/Magnum/OvrIntegration/</path>
    <filename>Compositor_8h</filename>
    <includes id="Magnum_8h" name="Magnum.h" local="no" imported="no">Magnum/Magnum.h</includes>
    <includes id="OvrIntegration_8h" name="OvrIntegration.h" local="yes" imported="no">Magnum/OvrIntegration/OvrIntegration.h</includes>
    <class kind="class">Magnum::OvrIntegration::Layer</class>
    <class kind="class">Magnum::OvrIntegration::HeadLockableLayer</class>
    <class kind="class">Magnum::OvrIntegration::LayerEyeFov</class>
    <class kind="class">Magnum::OvrIntegration::LayerQuad</class>
    <class kind="class">Magnum::OvrIntegration::Compositor</class>
    <namespace>Magnum</namespace>
    <namespace>Magnum::OvrIntegration</namespace>
    <member kind="enumeration">
      <type></type>
      <name>LayerType</name>
      <anchorfile>namespaceMagnum_1_1OvrIntegration.html</anchorfile>
      <anchor>a77b0ed14328c2faa7b2519b746c4ce90</anchor>
      <arglist></arglist>
      <enumvalue file="namespaceMagnum_1_1OvrIntegration.html" anchor="a77b0ed14328c2faa7b2519b746c4ce90a10cad50ddd2638ffc443bc4bb874f95e">EyeFov</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OvrIntegration.html" anchor="a77b0ed14328c2faa7b2519b746c4ce90ae9017664588010860a92ceb5f8fcb824">Quad</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OvrIntegration.html" anchor="a77b0ed14328c2faa7b2519b746c4ce90ad0845b10e8e64b028afc0b1fb22ffca4">EyeMatrix</enumvalue>
    </member>
  </compound>
  <compound kind="file">
    <name>Conversion.h</name>
    <path>/home/mosra/Code/magnum-integration/src/Magnum/OvrIntegration/</path>
    <filename>Conversion_8h</filename>
    <includes id="Magnum_8h" name="Magnum.h" local="no" imported="no">Magnum/Magnum.h</includes>
    <includes id="Texture_8h" name="Texture.h" local="no" imported="no">Magnum/Texture.h</includes>
    <includes id="Range_8h" name="Range.h" local="no" imported="no">Magnum/Math/Range.h</includes>
    <includes id="Math_2Vector_8h" name="Vector.h" local="no" imported="no">Magnum/Math/Vector.h</includes>
    <includes id="Matrix4_8h" name="Matrix4.h" local="no" imported="no">Magnum/Math/Matrix4.h</includes>
    <includes id="Quaternion_8h" name="Quaternion.h" local="no" imported="no">Magnum/Math/Quaternion.h</includes>
    <includes id="DualQuaternion_8h" name="DualQuaternion.h" local="no" imported="no">Magnum/Math/DualQuaternion.h</includes>
    <namespace>Magnum</namespace>
    <namespace>Magnum::Math</namespace>
  </compound>
  <compound kind="file">
    <name>Enums.h</name>
    <path>/home/mosra/Code/magnum-integration/src/Magnum/OvrIntegration/</path>
    <filename>Enums_8h</filename>
    <includes id="Texture_8h" name="Texture.h" local="no" imported="no">Magnum/Texture.h</includes>
    <includes id="Magnum_8h" name="Magnum.h" local="no" imported="no">Magnum/Magnum.h</includes>
    <class kind="struct">Magnum::OvrIntegration::Buttons</class>
    <class kind="struct">Magnum::OvrIntegration::Touches</class>
    <namespace>Magnum</namespace>
    <namespace>Magnum::OvrIntegration</namespace>
    <member kind="typedef">
      <type>Containers::EnumSet&lt; TrackerFlag &gt;</type>
      <name>TrackerFlags</name>
      <anchorfile>namespaceMagnum_1_1OvrIntegration.html</anchorfile>
      <anchor>a96d457b1afd55fc8dbf7c4c5c8914108</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Containers::EnumSet&lt; StatusFlag &gt;</type>
      <name>StatusFlags</name>
      <anchorfile>namespaceMagnum_1_1OvrIntegration.html</anchorfile>
      <anchor>a3ecc95a048c433bfe45edab8ac88d15b</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Corrade::Containers::EnumSet&lt; SessionStatusFlag &gt;</type>
      <name>SessionStatusFlags</name>
      <anchorfile>namespaceMagnum_1_1OvrIntegration.html</anchorfile>
      <anchor>a98bef84792091fda50bf4128a950af69</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>HmdType</name>
      <anchorfile>namespaceMagnum_1_1OvrIntegration.html</anchorfile>
      <anchor>ab8c9a8c7cce6ad0ef7ce2e1befecc41c</anchor>
      <arglist></arglist>
      <enumvalue file="namespaceMagnum_1_1OvrIntegration.html" anchor="ab8c9a8c7cce6ad0ef7ce2e1befecc41ca6adf97f83acf6453d4a6a4b1070f3754">None</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OvrIntegration.html" anchor="ab8c9a8c7cce6ad0ef7ce2e1befecc41ca47f84b7951ed9537b0a70c4e0047de81">DK1</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OvrIntegration.html" anchor="ab8c9a8c7cce6ad0ef7ce2e1befecc41ca66994daf724ae63030fbcc30d3655bef">DKHD</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OvrIntegration.html" anchor="ab8c9a8c7cce6ad0ef7ce2e1befecc41ca284bad9c648d4b9dbdf4baa703acb02d">DK2</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OvrIntegration.html" anchor="ab8c9a8c7cce6ad0ef7ce2e1befecc41ca834cb54b61bbed9d4296c995e4c5d8b2">CB</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OvrIntegration.html" anchor="ab8c9a8c7cce6ad0ef7ce2e1befecc41ca6311ae17c1ee52b36e68aaf4ad066387">Other</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OvrIntegration.html" anchor="ab8c9a8c7cce6ad0ef7ce2e1befecc41ca3bedec542f1401c2da728a90cc6fa1b2">E3_2015</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OvrIntegration.html" anchor="ab8c9a8c7cce6ad0ef7ce2e1befecc41ca28dd683b878e138a2c30a2cb3094306a">ES06</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OvrIntegration.html" anchor="ab8c9a8c7cce6ad0ef7ce2e1befecc41cab67df66fbe1fbfdd5becd15bbc4a8585">ES09</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OvrIntegration.html" anchor="ab8c9a8c7cce6ad0ef7ce2e1befecc41caf58b754169ac9c2928472f57f73e1610">ES11</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OvrIntegration.html" anchor="ab8c9a8c7cce6ad0ef7ce2e1befecc41ca5cd3d32886412288e18a345898146b8d">CV1</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>TrackingOrigin</name>
      <anchorfile>namespaceMagnum_1_1OvrIntegration.html</anchorfile>
      <anchor>a6d5277b84d2b8c94d19de5cbeaa45fc7</anchor>
      <arglist></arglist>
      <enumvalue file="namespaceMagnum_1_1OvrIntegration.html" anchor="a6d5277b84d2b8c94d19de5cbeaa45fc7a16d89336a4617fb6b87763d4b56139b7">EyeLevel</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OvrIntegration.html" anchor="a6d5277b84d2b8c94d19de5cbeaa45fc7acbd6ea814849130b29ce44bc70114c4b">FloorLevel</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>TrackerFlag</name>
      <anchorfile>namespaceMagnum_1_1OvrIntegration.html</anchorfile>
      <anchor>a0abd84c8f718932b3c2268e0e02310e7</anchor>
      <arglist></arglist>
      <enumvalue file="namespaceMagnum_1_1OvrIntegration.html" anchor="a0abd84c8f718932b3c2268e0e02310e7a2ec0d16e4ca169baedb9b2d50ec5c6d7">Connected</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OvrIntegration.html" anchor="a0abd84c8f718932b3c2268e0e02310e7a03b7e73d85589978f9c3a063b8246508">PoseTracked</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>Button</name>
      <anchorfile>namespaceMagnum_1_1OvrIntegration.html</anchorfile>
      <anchor>a077525510ed427920eff7ae75ec5123f</anchor>
      <arglist></arglist>
      <enumvalue file="namespaceMagnum_1_1OvrIntegration.html" anchor="a077525510ed427920eff7ae75ec5123fa7fc56270e7a70fa81a5935b72eacbe29">A</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OvrIntegration.html" anchor="a077525510ed427920eff7ae75ec5123fa9d5ed678fe57bcca610140957afab571">B</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OvrIntegration.html" anchor="a077525510ed427920eff7ae75ec5123fa02129bb861061d1a052c592e2dc6b383">X</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OvrIntegration.html" anchor="a077525510ed427920eff7ae75ec5123fa57cec4137b614c87cb4e24a3d003a3e0">Y</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OvrIntegration.html" anchor="a077525510ed427920eff7ae75ec5123fa787cce7d516ae441abe97ffff79b08c8">RThumb</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OvrIntegration.html" anchor="a077525510ed427920eff7ae75ec5123fa41a810fe24d1ea211a55337eaaa1e3d2">RShoulder</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OvrIntegration.html" anchor="a077525510ed427920eff7ae75ec5123faa459ba7fb2f974adf6eba980f35f8d14">LThumb</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OvrIntegration.html" anchor="a077525510ed427920eff7ae75ec5123fafe788e67252c3049b894226c0c6ca5aa">LShoulder</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OvrIntegration.html" anchor="a077525510ed427920eff7ae75ec5123fa258f49887ef8d14ac268c92b02503aaa">Up</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OvrIntegration.html" anchor="a077525510ed427920eff7ae75ec5123fa08a38277b0309070706f6652eeae9a53">Down</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OvrIntegration.html" anchor="a077525510ed427920eff7ae75ec5123fa945d5e233cf7d6240f6b783b36a374ff">Left</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OvrIntegration.html" anchor="a077525510ed427920eff7ae75ec5123fa92b09c7c48c520c3c55e497875da437c">Right</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OvrIntegration.html" anchor="a077525510ed427920eff7ae75ec5123faf1851d5600eae616ee802a31ac74701b">Enter</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OvrIntegration.html" anchor="a077525510ed427920eff7ae75ec5123fa0557fa923dcee4d0f86b1409f5c2167f">Back</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OvrIntegration.html" anchor="a077525510ed427920eff7ae75ec5123fa685dec8174e7e1bbc0e7566fc30c72f0">VolUp</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OvrIntegration.html" anchor="a077525510ed427920eff7ae75ec5123fa573c1456126efb9d131daea39f0c30ff">VolDown</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OvrIntegration.html" anchor="a077525510ed427920eff7ae75ec5123fa8cf04a9734132302f96da8e113e80ce5">Home</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>Touch</name>
      <anchorfile>namespaceMagnum_1_1OvrIntegration.html</anchorfile>
      <anchor>a5a7392511ba112942f2528ff415ffeac</anchor>
      <arglist></arglist>
      <enumvalue file="namespaceMagnum_1_1OvrIntegration.html" anchor="a5a7392511ba112942f2528ff415ffeaca7fc56270e7a70fa81a5935b72eacbe29">A</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OvrIntegration.html" anchor="a5a7392511ba112942f2528ff415ffeaca9d5ed678fe57bcca610140957afab571">B</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OvrIntegration.html" anchor="a5a7392511ba112942f2528ff415ffeaca02129bb861061d1a052c592e2dc6b383">X</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OvrIntegration.html" anchor="a5a7392511ba112942f2528ff415ffeaca57cec4137b614c87cb4e24a3d003a3e0">Y</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OvrIntegration.html" anchor="a5a7392511ba112942f2528ff415ffeaca787cce7d516ae441abe97ffff79b08c8">RThumb</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OvrIntegration.html" anchor="a5a7392511ba112942f2528ff415ffeacaa459ba7fb2f974adf6eba980f35f8d14">LThumb</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OvrIntegration.html" anchor="a5a7392511ba112942f2528ff415ffeaca0501589371e70c45f36658f9bb4b7843">RIndexTrigger</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OvrIntegration.html" anchor="a5a7392511ba112942f2528ff415ffeaca539fc444c6c42c09fec1c86daa96b8a2">LIndexTrigger</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OvrIntegration.html" anchor="a5a7392511ba112942f2528ff415ffeacacfe67b27ee94b2453d80c20089a65d9e">RIndexPointing</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OvrIntegration.html" anchor="a5a7392511ba112942f2528ff415ffeacad68850271da7c45858aa8df755601922">RThumbUp</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OvrIntegration.html" anchor="a5a7392511ba112942f2528ff415ffeaca522257548de440cb48251ce74a036633">LIndexPointing</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OvrIntegration.html" anchor="a5a7392511ba112942f2528ff415ffeaca3bbcb71d84685fa1383e07d91a3cf011">LThumbUp</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>ControllerType</name>
      <anchorfile>namespaceMagnum_1_1OvrIntegration.html</anchorfile>
      <anchor>aad674320383d77fc5e7a9f028ea56843</anchor>
      <arglist></arglist>
      <enumvalue file="namespaceMagnum_1_1OvrIntegration.html" anchor="aad674320383d77fc5e7a9f028ea56843a6adf97f83acf6453d4a6a4b1070f3754">None</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OvrIntegration.html" anchor="aad674320383d77fc5e7a9f028ea56843a253c104ad721758c8c0654a6878f47ff">LTouch</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OvrIntegration.html" anchor="aad674320383d77fc5e7a9f028ea56843a02f85d6ee062327d58a289335f56fca1">RTouch</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OvrIntegration.html" anchor="aad674320383d77fc5e7a9f028ea56843af0f31c9700c6b10d8a20dc487b2ae6a8">Touch</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OvrIntegration.html" anchor="aad674320383d77fc5e7a9f028ea56843af8508f576cd3f742dfc268258dcdf0dd">Remote</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OvrIntegration.html" anchor="aad674320383d77fc5e7a9f028ea56843ad7a5c7a13c0838c399a34112f46676b6">XBox</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OvrIntegration.html" anchor="aad674320383d77fc5e7a9f028ea56843a4d3d769b812b6faa6b76e1a8abaece2d">Active</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>StatusFlag</name>
      <anchorfile>namespaceMagnum_1_1OvrIntegration.html</anchorfile>
      <anchor>a018508181e5fd5575105208b3c9f5a65</anchor>
      <arglist></arglist>
      <enumvalue file="namespaceMagnum_1_1OvrIntegration.html" anchor="a018508181e5fd5575105208b3c9f5a65a6a8886de54f4886e42898ef3b017442b">OrientationTracked</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OvrIntegration.html" anchor="a018508181e5fd5575105208b3c9f5a65ab7ddf1ada4f53b9481038b4bf8c6cc56">PositionTracked</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>SessionStatusFlag</name>
      <anchorfile>namespaceMagnum_1_1OvrIntegration.html</anchorfile>
      <anchor>a05fe9e5cf2c3f76cad37febcfda1569f</anchor>
      <arglist></arglist>
      <enumvalue file="namespaceMagnum_1_1OvrIntegration.html" anchor="a05fe9e5cf2c3f76cad37febcfda1569fa149c5e61355c8de0943d094e18471195">IsVisible</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OvrIntegration.html" anchor="a05fe9e5cf2c3f76cad37febcfda1569fa173e3971d0e0a2e4de01a20ce02864a2">HmdPresent</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OvrIntegration.html" anchor="a05fe9e5cf2c3f76cad37febcfda1569fa7007260d2109c1b8a5614f339d6de495">HmdMounted</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OvrIntegration.html" anchor="a05fe9e5cf2c3f76cad37febcfda1569fa89dad51f4ce3c9e37a4581346d338a8a">DisplayLost</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OvrIntegration.html" anchor="a05fe9e5cf2c3f76cad37febcfda1569fae991b8c66aad662cea8ca5bdeb073dee">ShouldQuit</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OvrIntegration.html" anchor="a05fe9e5cf2c3f76cad37febcfda1569fa706fe46f20c4f4f109d18310acd81c72">ShouldRecenter</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>PerformanceHudMode</name>
      <anchorfile>namespaceMagnum_1_1OvrIntegration.html</anchorfile>
      <anchor>a13dbe6c3cff28c02def2998200ae32ba</anchor>
      <arglist></arglist>
      <enumvalue file="namespaceMagnum_1_1OvrIntegration.html" anchor="a13dbe6c3cff28c02def2998200ae32baad15305d7a4e34e02489c74a5ef542f36">Off</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OvrIntegration.html" anchor="a13dbe6c3cff28c02def2998200ae32baaa753651df182d2d54712d863b9af4f0d">PerfSummary</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OvrIntegration.html" anchor="a13dbe6c3cff28c02def2998200ae32baa03eb527e4457d835779020ea5b946e4e">LatencyTiming</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OvrIntegration.html" anchor="a13dbe6c3cff28c02def2998200ae32baafa4e966fc32d9ddcd5084b98cbb26f4f">AppRenderTiming</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OvrIntegration.html" anchor="a13dbe6c3cff28c02def2998200ae32baa376814a1f428866975b538385cc67810">CompRenderTiming</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OvrIntegration.html" anchor="a13dbe6c3cff28c02def2998200ae32baa9db78fd43c596601aa891c5c656a078d">VersionInfo</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>DebugHudStereoMode</name>
      <anchorfile>namespaceMagnum_1_1OvrIntegration.html</anchorfile>
      <anchor>a981bf665fe55ea30d79c251cb8dd3dae</anchor>
      <arglist></arglist>
      <enumvalue file="namespaceMagnum_1_1OvrIntegration.html" anchor="a981bf665fe55ea30d79c251cb8dd3daead15305d7a4e34e02489c74a5ef542f36">Off</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OvrIntegration.html" anchor="a981bf665fe55ea30d79c251cb8dd3daeae9017664588010860a92ceb5f8fcb824">Quad</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OvrIntegration.html" anchor="a981bf665fe55ea30d79c251cb8dd3daeace19873f7b7fd296a0c3b514c6562d37">QuadWithCrosshair</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OvrIntegration.html" anchor="a981bf665fe55ea30d79c251cb8dd3daeaab6e7a65e73a0fc5d343d78c616d7e6d">CrosshairAtInfinity</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>LayerHudMode</name>
      <anchorfile>namespaceMagnum_1_1OvrIntegration.html</anchorfile>
      <anchor>a7457b8480db6553349312d38e10ee2d3</anchor>
      <arglist></arglist>
      <enumvalue file="namespaceMagnum_1_1OvrIntegration.html" anchor="a7457b8480db6553349312d38e10ee2d3ad15305d7a4e34e02489c74a5ef542f36">Off</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OvrIntegration.html" anchor="a7457b8480db6553349312d38e10ee2d3a4059b0251f66a18cb56f544728796875">Info</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>ErrorType</name>
      <anchorfile>namespaceMagnum_1_1OvrIntegration.html</anchorfile>
      <anchor>adabeb393adcab6691d7250753ef6582c</anchor>
      <arglist></arglist>
      <enumvalue file="namespaceMagnum_1_1OvrIntegration.html" anchor="adabeb393adcab6691d7250753ef6582cadfa6c4e376d67452db5b14bb40d4d9a0">MemoryAllocationFailure</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OvrIntegration.html" anchor="adabeb393adcab6691d7250753ef6582ca082b94968d127d17abb24a69da6cda56">InvalidSession</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OvrIntegration.html" anchor="adabeb393adcab6691d7250753ef6582cac85a251cc457840f1e032f1b733e9398">Timeout</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OvrIntegration.html" anchor="adabeb393adcab6691d7250753ef6582ca9646ad3a1c3e708b4fa8b4b4270fbab6">NotInitialized</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OvrIntegration.html" anchor="adabeb393adcab6691d7250753ef6582ca627251310d3384b591e4138be21145d5">InvalidParameter</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OvrIntegration.html" anchor="adabeb393adcab6691d7250753ef6582ca112197d9297e3f816e50aa133dc6dd5e">ServiceError</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OvrIntegration.html" anchor="adabeb393adcab6691d7250753ef6582caff59267aa541879a068a88355d62f058">NoHmd</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OvrIntegration.html" anchor="adabeb393adcab6691d7250753ef6582cab4080bdf74febf04d578ff105cce9d3f">Unsupported</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OvrIntegration.html" anchor="adabeb393adcab6691d7250753ef6582ca758b1a8856a2f8715b9c898ae0a57c14">DeviceUnavailable</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OvrIntegration.html" anchor="adabeb393adcab6691d7250753ef6582ca49c2d0b56e40fadbdc0c2a9fd4315524">InvalidHeadsetOrientation</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OvrIntegration.html" anchor="adabeb393adcab6691d7250753ef6582ca7eb9535c8784e5d2aa3a652471c1a7b4">ClientSkippedDestroy</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OvrIntegration.html" anchor="adabeb393adcab6691d7250753ef6582cae813f5801e9ff3e49091c0aafe8965a9">ClientSkippedShutdown</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OvrIntegration.html" anchor="adabeb393adcab6691d7250753ef6582cad509009f13c4de2c1177bc2d363b73e8">AudioDeviceNotFound</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OvrIntegration.html" anchor="adabeb393adcab6691d7250753ef6582cafc426c134912a0008fc9c7a48263c5df">AudioComError</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OvrIntegration.html" anchor="adabeb393adcab6691d7250753ef6582ca223e06f5cb15fc701ea1e686f7934f4f">Initialize</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OvrIntegration.html" anchor="adabeb393adcab6691d7250753ef6582ca7133af63cf13b9725dff98d146b3ccff">LibLoad</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OvrIntegration.html" anchor="adabeb393adcab6691d7250753ef6582ca4491810b1469ebfe9ed1c40221d2c4d8">LibVersion</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OvrIntegration.html" anchor="adabeb393adcab6691d7250753ef6582caece78a70b624b88f562799ec52ddb02d">ServiceConnection</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OvrIntegration.html" anchor="adabeb393adcab6691d7250753ef6582ca43ea2ee41bedd266ad7da264884ca5c5">ServiceVersion</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OvrIntegration.html" anchor="adabeb393adcab6691d7250753ef6582ca4a9681314bd727c21cb6ed804911e6d7">IncompatibleOs</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OvrIntegration.html" anchor="adabeb393adcab6691d7250753ef6582ca7ae7a1fe2dc931469a6534b9262d6fc4">DisplayInit</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OvrIntegration.html" anchor="adabeb393adcab6691d7250753ef6582ca79ba98cd5eb4e6dae3995d81fd0e6ad4">ServerStart</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OvrIntegration.html" anchor="adabeb393adcab6691d7250753ef6582caf10363860dd5bc034f3078e1c30541b7">Reinitialization</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OvrIntegration.html" anchor="adabeb393adcab6691d7250753ef6582ca9cc6505cca9015da503dfdd9bb62b7d0">MismatchedAdapters</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OvrIntegration.html" anchor="adabeb393adcab6691d7250753ef6582caad61a17a5106a6821235602778309b84">LeakingResources</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OvrIntegration.html" anchor="adabeb393adcab6691d7250753ef6582ca5fa6776d2b97bf9fc75a006d96516129">ClientVersion</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OvrIntegration.html" anchor="adabeb393adcab6691d7250753ef6582ca2680972d5946d0faa51f71d1a7ec8646">OutOfDateOs</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OvrIntegration.html" anchor="adabeb393adcab6691d7250753ef6582caf21d6d4d86c3d104e5ee7b120b1f90af">OutOfDateGfxDriver</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OvrIntegration.html" anchor="adabeb393adcab6691d7250753ef6582cac022b6a8e903db3815747953baa21b19">IncompatibleGpu</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OvrIntegration.html" anchor="adabeb393adcab6691d7250753ef6582ca03ebe1b3b069f637eb93f06c30916350">NoValidVrDisplaySystem</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OvrIntegration.html" anchor="adabeb393adcab6691d7250753ef6582caec30c235d0eb792797af1aa1d11759a7">Obsolete</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OvrIntegration.html" anchor="adabeb393adcab6691d7250753ef6582caf9717c4a65ac4604bbf0a6e2288b3d87">DisabledOrDefaultAdapter</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OvrIntegration.html" anchor="adabeb393adcab6691d7250753ef6582cad516cecd05c0c1d9f6196a02d925617a">HybridGraphicsNotSupported</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OvrIntegration.html" anchor="adabeb393adcab6691d7250753ef6582ca486fac754172c31f16df1fbadf62e4e8">DisplayManagerInit</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OvrIntegration.html" anchor="adabeb393adcab6691d7250753ef6582cac5a395ab4d788f57bd18171ccc9f78fa">TrackerDriverInit</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OvrIntegration.html" anchor="adabeb393adcab6691d7250753ef6582ca89dad51f4ce3c9e37a4581346d338a8a">DisplayLost</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OvrIntegration.html" anchor="adabeb393adcab6691d7250753ef6582ca01ac2fb3024f7f373266fa56ecb33ded">TextureSwapChainFull</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OvrIntegration.html" anchor="adabeb393adcab6691d7250753ef6582ca21927b16639259e410f2054322ad64b8">TextureSwapChainInvalid</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OvrIntegration.html" anchor="adabeb393adcab6691d7250753ef6582ca15452a9b0f2356c3dabe720a67728b3d">RuntimeException</enumvalue>
    </member>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceMagnum_1_1OvrIntegration.html</anchorfile>
      <anchor>a4a10d88a62e4d474e820e1aea0f069c5</anchor>
      <arglist>(Debug &amp;debug, HmdType value)</arglist>
    </member>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceMagnum_1_1OvrIntegration.html</anchorfile>
      <anchor>aad9eb7c25050cc589dd7839ba68cd8b8</anchor>
      <arglist>(Debug &amp;debug, TrackingOrigin value)</arglist>
    </member>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceMagnum_1_1OvrIntegration.html</anchorfile>
      <anchor>af590305adfc6bdc7c96e6e80a65ddb43</anchor>
      <arglist>(Debug &amp;debug, TrackerFlag value)</arglist>
    </member>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceMagnum_1_1OvrIntegration.html</anchorfile>
      <anchor>ae6e92af37ce60f20df7e7f91968efa27</anchor>
      <arglist>(Debug &amp;debug, Button value)</arglist>
    </member>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceMagnum_1_1OvrIntegration.html</anchorfile>
      <anchor>a67cda2f111927cd1e9165953d0e14359</anchor>
      <arglist>(Debug &amp;debug, Touch value)</arglist>
    </member>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceMagnum_1_1OvrIntegration.html</anchorfile>
      <anchor>a565af34924402b9f08c965b363f33f7c</anchor>
      <arglist>(Debug &amp;debug, ControllerType value)</arglist>
    </member>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceMagnum_1_1OvrIntegration.html</anchorfile>
      <anchor>af02b621587a4811d5180e4cb4f1614fa</anchor>
      <arglist>(Debug &amp;debug, StatusFlag value)</arglist>
    </member>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceMagnum_1_1OvrIntegration.html</anchorfile>
      <anchor>a87cb3e499853d4455b1c0bf96c50e812</anchor>
      <arglist>(Debug &amp;debug, SessionStatusFlag value)</arglist>
    </member>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceMagnum_1_1OvrIntegration.html</anchorfile>
      <anchor>a194427e41c0919b2aaa1ba4e6e98665a</anchor>
      <arglist>(Debug &amp;debug, PerformanceHudMode value)</arglist>
    </member>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceMagnum_1_1OvrIntegration.html</anchorfile>
      <anchor>ae6d78ab231653215a4e595a46af077da</anchor>
      <arglist>(Debug &amp;debug, DebugHudStereoMode value)</arglist>
    </member>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceMagnum_1_1OvrIntegration.html</anchorfile>
      <anchor>a83b6866212d8f11499717ccdbedc37eb</anchor>
      <arglist>(Debug &amp;debug, LayerHudMode value)</arglist>
    </member>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceMagnum_1_1OvrIntegration.html</anchorfile>
      <anchor>a61cd76fb1687e7e03b67d8b6da39cf54</anchor>
      <arglist>(Debug &amp;debug, ErrorType value)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>OvrIntegration.h</name>
    <path>/home/mosra/Code/magnum-integration/src/Magnum/OvrIntegration/</path>
    <filename>OvrIntegration_8h</filename>
    <includes id="Magnum_8h" name="Magnum.h" local="no" imported="no">Magnum/Magnum.h</includes>
    <namespace>Magnum</namespace>
    <namespace>Magnum::OvrIntegration</namespace>
  </compound>
  <compound kind="file">
    <name>Session.h</name>
    <path>/home/mosra/Code/magnum-integration/src/Magnum/OvrIntegration/</path>
    <filename>Session_8h</filename>
    <includes id="Texture_8h" name="Texture.h" local="no" imported="no">Magnum/Texture.h</includes>
    <includes id="Conversion_8h" name="Conversion.h" local="yes" imported="no">Magnum/OvrIntegration/Conversion.h</includes>
    <includes id="OvrIntegration_8h" name="OvrIntegration.h" local="yes" imported="no">Magnum/OvrIntegration/OvrIntegration.h</includes>
    <class kind="class">Magnum::OvrIntegration::PoseState</class>
    <class kind="class">Magnum::OvrIntegration::InputState</class>
    <class kind="class">Magnum::OvrIntegration::TextureSwapChain</class>
    <class kind="class">Magnum::OvrIntegration::Session</class>
    <namespace>Magnum</namespace>
    <namespace>Magnum::OvrIntegration</namespace>
  </compound>
  <compound kind="file">
    <name>AnyImporter.h</name>
    <path>/home/mosra/Code/magnum-plugins/src/MagnumPlugins/AnyAudioImporter/</path>
    <filename>AnyImporter_8h</filename>
    <includes id="Audio_2AbstractImporter_8h" name="AbstractImporter.h" local="no" imported="no">Magnum/Audio/AbstractImporter.h</includes>
    <class kind="class">Magnum::Audio::AnyImporter</class>
    <namespace>Magnum</namespace>
    <namespace>Magnum::Audio</namespace>
  </compound>
  <compound kind="file">
    <name>AnyImageConverter.h</name>
    <path>/home/mosra/Code/magnum-plugins/src/MagnumPlugins/AnyImageConverter/</path>
    <filename>AnyImageConverter_8h</filename>
    <includes id="AbstractImageConverter_8h" name="AbstractImageConverter.h" local="no" imported="no">Magnum/Trade/AbstractImageConverter.h</includes>
    <class kind="class">Magnum::Trade::AnyImageConverter</class>
    <namespace>Magnum</namespace>
    <namespace>Magnum::Trade</namespace>
  </compound>
  <compound kind="file">
    <name>AnyImageImporter.h</name>
    <path>/home/mosra/Code/magnum-plugins/src/MagnumPlugins/AnyImageImporter/</path>
    <filename>AnyImageImporter_8h</filename>
    <includes id="Trade_2AbstractImporter_8h" name="AbstractImporter.h" local="no" imported="no">Magnum/Trade/AbstractImporter.h</includes>
    <class kind="class">Magnum::Trade::AnyImageImporter</class>
    <namespace>Magnum</namespace>
    <namespace>Magnum::Trade</namespace>
  </compound>
  <compound kind="file">
    <name>AnySceneImporter.h</name>
    <path>/home/mosra/Code/magnum-plugins/src/MagnumPlugins/AnySceneImporter/</path>
    <filename>AnySceneImporter_8h</filename>
    <includes id="Trade_2AbstractImporter_8h" name="AbstractImporter.h" local="no" imported="no">Magnum/Trade/AbstractImporter.h</includes>
    <class kind="class">Magnum::Trade::AnySceneImporter</class>
    <namespace>Magnum</namespace>
    <namespace>Magnum::Trade</namespace>
  </compound>
  <compound kind="file">
    <name>AssimpImporter.h</name>
    <path>/home/mosra/Code/magnum-plugins/src/MagnumPlugins/AssimpImporter/</path>
    <filename>AssimpImporter_8h</filename>
    <includes id="Trade_2AbstractImporter_8h" name="AbstractImporter.h" local="no" imported="no">Magnum/Trade/AbstractImporter.h</includes>
    <includes id="ObjectData3D_8h" name="ObjectData3D.h" local="no" imported="no">Magnum/Trade/ObjectData3D.h</includes>
    <class kind="class">Magnum::Trade::AssimpImporter</class>
    <namespace>Magnum</namespace>
    <namespace>Magnum::Trade</namespace>
  </compound>
  <compound kind="file">
    <name>ColladaImporter.h</name>
    <path>/home/mosra/Code/magnum-plugins/src/MagnumPlugins/ColladaImporter/</path>
    <filename>ColladaImporter_8h</filename>
    <includes id="Trade_2AbstractImporter_8h" name="AbstractImporter.h" local="no" imported="no">Magnum/Trade/AbstractImporter.h</includes>
    <class kind="class">Magnum::Trade::ColladaImporter</class>
    <namespace>Magnum</namespace>
    <namespace>Magnum::Trade</namespace>
  </compound>
  <compound kind="file">
    <name>DdsImporter.h</name>
    <path>/home/mosra/Code/magnum-plugins/src/MagnumPlugins/DdsImporter/</path>
    <filename>DdsImporter_8h</filename>
    <includes id="Trade_2AbstractImporter_8h" name="AbstractImporter.h" local="no" imported="no">Magnum/Trade/AbstractImporter.h</includes>
    <class kind="class">Magnum::Trade::DdsImporter</class>
    <namespace>Magnum</namespace>
    <namespace>Magnum::Trade</namespace>
  </compound>
  <compound kind="file">
    <name>DevIlImageImporter.h</name>
    <path>/home/mosra/Code/magnum-plugins/src/MagnumPlugins/DevIlImageImporter/</path>
    <filename>DevIlImageImporter_8h</filename>
    <includes id="Trade_2AbstractImporter_8h" name="AbstractImporter.h" local="no" imported="no">Magnum/Trade/AbstractImporter.h</includes>
    <class kind="class">Magnum::Trade::DevIlImageImporter</class>
    <namespace>Magnum</namespace>
    <namespace>Magnum::Trade</namespace>
  </compound>
  <compound kind="file">
    <name>DrFlacImporter.h</name>
    <path>/home/mosra/Code/magnum-plugins/src/MagnumPlugins/DrFlacAudioImporter/</path>
    <filename>DrFlacImporter_8h</filename>
    <includes id="Audio_2AbstractImporter_8h" name="AbstractImporter.h" local="no" imported="no">Magnum/Audio/AbstractImporter.h</includes>
    <class kind="class">Magnum::Audio::DrFlacImporter</class>
    <namespace>Magnum</namespace>
    <namespace>Magnum::Audio</namespace>
  </compound>
  <compound kind="file">
    <name>DrWavImporter.h</name>
    <path>/home/mosra/Code/magnum-plugins/src/MagnumPlugins/DrWavAudioImporter/</path>
    <filename>DrWavImporter_8h</filename>
    <includes id="Audio_2AbstractImporter_8h" name="AbstractImporter.h" local="no" imported="no">Magnum/Audio/AbstractImporter.h</includes>
    <class kind="class">Magnum::Audio::DrWavImporter</class>
    <namespace>Magnum</namespace>
    <namespace>Magnum::Audio</namespace>
  </compound>
  <compound kind="file">
    <name>FreeTypeFont.h</name>
    <path>/home/mosra/Code/magnum-plugins/src/MagnumPlugins/FreeTypeFont/</path>
    <filename>FreeTypeFont_8h</filename>
    <includes id="AbstractFont_8h" name="AbstractFont.h" local="no" imported="no">Magnum/Text/AbstractFont.h</includes>
    <class kind="class">Magnum::Text::FreeTypeFont</class>
    <namespace>Magnum</namespace>
    <namespace>Magnum::Text</namespace>
  </compound>
  <compound kind="file">
    <name>HarfBuzzFont.h</name>
    <path>/home/mosra/Code/magnum-plugins/src/MagnumPlugins/HarfBuzzFont/</path>
    <filename>HarfBuzzFont_8h</filename>
    <includes id="FreeTypeFont_8h" name="FreeTypeFont.h" local="yes" imported="no">MagnumPlugins/FreeTypeFont/FreeTypeFont.h</includes>
    <class kind="class">Magnum::Text::HarfBuzzFont</class>
    <namespace>Magnum</namespace>
    <namespace>Magnum::Text</namespace>
  </compound>
  <compound kind="file">
    <name>JpegImporter.h</name>
    <path>/home/mosra/Code/magnum-plugins/src/MagnumPlugins/JpegImporter/</path>
    <filename>JpegImporter_8h</filename>
    <includes id="Trade_2AbstractImporter_8h" name="AbstractImporter.h" local="no" imported="no">Magnum/Trade/AbstractImporter.h</includes>
    <class kind="class">Magnum::Trade::JpegImporter</class>
    <namespace>Magnum</namespace>
    <namespace>Magnum::Trade</namespace>
  </compound>
  <compound kind="file">
    <name>MiniExrImageConverter.h</name>
    <path>/home/mosra/Code/magnum-plugins/src/MagnumPlugins/MiniExrImageConverter/</path>
    <filename>MiniExrImageConverter_8h</filename>
    <includes id="AbstractImageConverter_8h" name="AbstractImageConverter.h" local="no" imported="no">Magnum/Trade/AbstractImageConverter.h</includes>
    <class kind="class">Magnum::Trade::MiniExrImageConverter</class>
    <namespace>Magnum</namespace>
    <namespace>Magnum::Trade</namespace>
  </compound>
  <compound kind="file">
    <name>Document.h</name>
    <path>/home/mosra/Code/magnum-plugins/src/MagnumPlugins/OpenGexImporter/OpenDdl/</path>
    <filename>Document_8h</filename>
    <includes id="OpenDdl_8h" name="OpenDdl.h" local="yes" imported="no">MagnumPlugins/OpenGexImporter/OpenDdl/OpenDdl.h</includes>
    <includes id="Type_8h" name="Type.h" local="yes" imported="no">MagnumPlugins/OpenGexImporter/OpenDdl/Type.h</includes>
    <class kind="struct">Magnum::OpenDdl::CharacterLiteral</class>
    <class kind="class">Magnum::OpenDdl::Document</class>
    <namespace>Magnum</namespace>
    <namespace>Magnum::OpenDdl</namespace>
    <namespace>Magnum::OpenDdl::Validation</namespace>
    <member kind="typedef">
      <type>std::initializer_list&lt; std::pair&lt; Int, std::pair&lt; Int, Int &gt; &gt; &gt;</type>
      <name>Structures</name>
      <anchorfile>namespaceMagnum_1_1OpenDdl_1_1Validation.html</anchorfile>
      <anchor>a1e6b6eba2d16c215adbbef9c2562b7be</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>OpenDdl.h</name>
    <path>/home/mosra/Code/magnum-plugins/src/MagnumPlugins/OpenGexImporter/OpenDdl/</path>
    <filename>OpenDdl_8h</filename>
    <includes id="Types_8h" name="Types.h" local="no" imported="no">Magnum/Types.h</includes>
    <namespace>Magnum</namespace>
    <namespace>Magnum::OpenDdl</namespace>
  </compound>
  <compound kind="file">
    <name>Property.h</name>
    <path>/home/mosra/Code/magnum-plugins/src/MagnumPlugins/OpenGexImporter/OpenDdl/</path>
    <filename>Property_8h</filename>
    <includes id="Magnum_8h" name="Magnum.h" local="no" imported="no">Magnum/Magnum.h</includes>
    <includes id="Document_8h" name="Document.h" local="yes" imported="no">MagnumPlugins/OpenGexImporter/OpenDdl/Document.h</includes>
    <class kind="class">Magnum::OpenDdl::Property</class>
    <namespace>Magnum</namespace>
    <namespace>Magnum::OpenDdl</namespace>
  </compound>
  <compound kind="file">
    <name>Structure.h</name>
    <path>/home/mosra/Code/magnum-plugins/src/MagnumPlugins/OpenGexImporter/OpenDdl/</path>
    <filename>Structure_8h</filename>
    <includes id="Document_8h" name="Document.h" local="yes" imported="no">MagnumPlugins/OpenGexImporter/OpenDdl/Document.h</includes>
    <class kind="class">Magnum::OpenDdl::Structure</class>
    <namespace>Magnum</namespace>
    <namespace>Magnum::OpenDdl</namespace>
  </compound>
  <compound kind="file">
    <name>Type.h</name>
    <path>/home/mosra/Code/magnum-plugins/src/MagnumPlugins/OpenGexImporter/OpenDdl/</path>
    <filename>Type_8h</filename>
    <includes id="Magnum_8h" name="Magnum.h" local="no" imported="no">Magnum/Magnum.h</includes>
    <namespace>Magnum</namespace>
    <namespace>Magnum::OpenDdl</namespace>
    <member kind="enumeration">
      <type></type>
      <name>Type</name>
      <anchorfile>namespaceMagnum_1_1OpenDdl.html</anchorfile>
      <anchor>a4009db4d647b9aca8556805c331b9ce2</anchor>
      <arglist></arglist>
      <enumvalue file="namespaceMagnum_1_1OpenDdl.html" anchor="a4009db4d647b9aca8556805c331b9ce2ac26f15e86e3de4c398a8273272aba034">Bool</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OpenDdl.html" anchor="a4009db4d647b9aca8556805c331b9ce2a8f0fb883eb5a52838534191513e365a2">UnsignedByte</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OpenDdl.html" anchor="a4009db4d647b9aca8556805c331b9ce2aa245c3230debe5c956484ecc6fa93877">Byte</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OpenDdl.html" anchor="a4009db4d647b9aca8556805c331b9ce2aeb51124277f3ec904a9af74d5de34e7b">UnsignedShort</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OpenDdl.html" anchor="a4009db4d647b9aca8556805c331b9ce2a30bb747c98bccdd11b3f89e644c4d0ad">Short</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OpenDdl.html" anchor="a4009db4d647b9aca8556805c331b9ce2ac93cff91b6b9a57fa32bbe1863150070">UnsignedInt</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OpenDdl.html" anchor="a4009db4d647b9aca8556805c331b9ce2a1686a6c336b71b36d77354cea19a8b52">Int</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OpenDdl.html" anchor="a4009db4d647b9aca8556805c331b9ce2a0c72cf9e88a9782dbad0fde761ae9352">UnsignedLong</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OpenDdl.html" anchor="a4009db4d647b9aca8556805c331b9ce2a8394f0347c184cf156ac5924dccb773b">Long</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OpenDdl.html" anchor="a4009db4d647b9aca8556805c331b9ce2a22ae0e2b89e5e3d477f988cc36d3272b">Float</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OpenDdl.html" anchor="a4009db4d647b9aca8556805c331b9ce2ad909d38d705ce75386dd86e611a82f5b">Double</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OpenDdl.html" anchor="a4009db4d647b9aca8556805c331b9ce2a27118326006d3829667a400ad23d5d98">String</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OpenDdl.html" anchor="a4009db4d647b9aca8556805c331b9ce2a63d5049791d9d79d86e9a108b0a999ca">Reference</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OpenDdl.html" anchor="a4009db4d647b9aca8556805c331b9ce2aa1fa27779242b4902f7ae3bdd5c6d508">Type</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OpenDdl.html" anchor="a4009db4d647b9aca8556805c331b9ce2a90589c47f06eb971d548591f23c285af">Custom</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>PropertyType</name>
      <anchorfile>namespaceMagnum_1_1OpenDdl.html</anchorfile>
      <anchor>a82efc07fb689b4b8a8520a15cb1e0a24</anchor>
      <arglist></arglist>
      <enumvalue file="namespaceMagnum_1_1OpenDdl.html" anchor="a82efc07fb689b4b8a8520a15cb1e0a24ac26f15e86e3de4c398a8273272aba034">Bool</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OpenDdl.html" anchor="a82efc07fb689b4b8a8520a15cb1e0a24a8f0fb883eb5a52838534191513e365a2">UnsignedByte</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OpenDdl.html" anchor="a82efc07fb689b4b8a8520a15cb1e0a24aa245c3230debe5c956484ecc6fa93877">Byte</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OpenDdl.html" anchor="a82efc07fb689b4b8a8520a15cb1e0a24aeb51124277f3ec904a9af74d5de34e7b">UnsignedShort</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OpenDdl.html" anchor="a82efc07fb689b4b8a8520a15cb1e0a24a30bb747c98bccdd11b3f89e644c4d0ad">Short</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OpenDdl.html" anchor="a82efc07fb689b4b8a8520a15cb1e0a24ac93cff91b6b9a57fa32bbe1863150070">UnsignedInt</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OpenDdl.html" anchor="a82efc07fb689b4b8a8520a15cb1e0a24a1686a6c336b71b36d77354cea19a8b52">Int</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OpenDdl.html" anchor="a82efc07fb689b4b8a8520a15cb1e0a24a0c72cf9e88a9782dbad0fde761ae9352">UnsignedLong</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OpenDdl.html" anchor="a82efc07fb689b4b8a8520a15cb1e0a24a8394f0347c184cf156ac5924dccb773b">Long</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OpenDdl.html" anchor="a82efc07fb689b4b8a8520a15cb1e0a24a22ae0e2b89e5e3d477f988cc36d3272b">Float</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OpenDdl.html" anchor="a82efc07fb689b4b8a8520a15cb1e0a24ad909d38d705ce75386dd86e611a82f5b">Double</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OpenDdl.html" anchor="a82efc07fb689b4b8a8520a15cb1e0a24a27118326006d3829667a400ad23d5d98">String</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OpenDdl.html" anchor="a82efc07fb689b4b8a8520a15cb1e0a24a63d5049791d9d79d86e9a108b0a999ca">Reference</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OpenDdl.html" anchor="a82efc07fb689b4b8a8520a15cb1e0a24aa1fa27779242b4902f7ae3bdd5c6d508">Type</enumvalue>
    </member>
    <member kind="enumvalue">
      <name>UnknownIdentifier</name>
      <anchorfile>namespaceMagnum_1_1OpenDdl.html</anchorfile>
      <anchor>a5d048a49f115edc4c82612e62eb89caba04e754b073ff12e4cd5c65c74b0f73c4</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceMagnum_1_1OpenDdl.html</anchorfile>
      <anchor>a0889969b8815dd0139622559b09b78a3</anchor>
      <arglist>(Debug &amp;debug, Type value)</arglist>
    </member>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceMagnum_1_1OpenDdl.html</anchorfile>
      <anchor>a3b1df866907b4e20bb899e8dc803bc9b</anchor>
      <arglist>(Debug &amp;debug, PropertyType value)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Validation.h</name>
    <path>/home/mosra/Code/magnum-plugins/src/MagnumPlugins/OpenGexImporter/OpenDdl/</path>
    <filename>Validation_8h</filename>
    <includes id="Type_8h" name="Type.h" local="yes" imported="no">MagnumPlugins/OpenGexImporter/OpenDdl/Type.h</includes>
    <class kind="struct">Magnum::OpenDdl::Validation::RequiredPropertyType</class>
    <class kind="class">Magnum::OpenDdl::Validation::Property</class>
    <class kind="class">Magnum::OpenDdl::Validation::Structure</class>
    <namespace>Magnum</namespace>
    <namespace>Magnum::OpenDdl</namespace>
    <namespace>Magnum::OpenDdl::Validation</namespace>
    <member kind="typedef">
      <type>std::initializer_list&lt; Property &gt;</type>
      <name>Properties</name>
      <anchorfile>namespaceMagnum_1_1OpenDdl_1_1Validation.html</anchorfile>
      <anchor>aaf1e085b806e79ad4689bcc45a8813ce</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::initializer_list&lt; Type &gt;</type>
      <name>Primitives</name>
      <anchorfile>namespaceMagnum_1_1OpenDdl_1_1Validation.html</anchorfile>
      <anchor>a7f9bfa8a467d3956e1ba3128c0285503</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>constexpr RequiredPropertyType</type>
      <name>RequiredProperty</name>
      <anchorfile>namespaceMagnum_1_1OpenDdl_1_1Validation.html</anchorfile>
      <anchor>ae85ee16ee3a7b8c1e3b9dcdd26f24c56</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>constexpr RequiredPropertyType</type>
      <name>OptionalProperty</name>
      <anchorfile>namespaceMagnum_1_1OpenDdl_1_1Validation.html</anchorfile>
      <anchor>a7c926c8ec7eec3eec79dd687eab2e03f</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>OpenGex.h</name>
    <path>/home/mosra/Code/magnum-plugins/src/MagnumPlugins/OpenGexImporter/</path>
    <filename>OpenGex_8h</filename>
    <includes id="Types_8h" name="Types.h" local="yes" imported="no">Magnum/Types.h</includes>
    <namespace>Magnum</namespace>
    <namespace>Magnum::Trade</namespace>
    <namespace>Magnum::Trade::OpenGex</namespace>
    <member kind="enumvalue">
      <name>Animation</name>
      <anchorfile>namespaceMagnum_1_1Trade_1_1OpenGex.html</anchorfile>
      <anchor>ac921a2ae190f4337dade6642d5b295afaf6304a6d8f2b01e13c2c03605012974f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Atten</name>
      <anchorfile>namespaceMagnum_1_1Trade_1_1OpenGex.html</anchorfile>
      <anchor>ac921a2ae190f4337dade6642d5b295afa3315a33f9cb5091a3b345490b505ad98</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BoneCountArray</name>
      <anchorfile>namespaceMagnum_1_1Trade_1_1OpenGex.html</anchorfile>
      <anchor>ac921a2ae190f4337dade6642d5b295afa5e03287e50a9f6c52a96e9640a421c39</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BoneIndexArray</name>
      <anchorfile>namespaceMagnum_1_1Trade_1_1OpenGex.html</anchorfile>
      <anchor>ac921a2ae190f4337dade6642d5b295afa714317d24ba7565cdf496364d16a9685</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BoneNode</name>
      <anchorfile>namespaceMagnum_1_1Trade_1_1OpenGex.html</anchorfile>
      <anchor>ac921a2ae190f4337dade6642d5b295afa7befe320b8fca7e7dcdec2b0f9d499e4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BoneRefArray</name>
      <anchorfile>namespaceMagnum_1_1Trade_1_1OpenGex.html</anchorfile>
      <anchor>ac921a2ae190f4337dade6642d5b295afa6812f44800f182c8e94f5491cac105c6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BoneWeightArray</name>
      <anchorfile>namespaceMagnum_1_1Trade_1_1OpenGex.html</anchorfile>
      <anchor>ac921a2ae190f4337dade6642d5b295afa56ee38e9394b75f64e62e6ced8742b54</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CameraNode</name>
      <anchorfile>namespaceMagnum_1_1Trade_1_1OpenGex.html</anchorfile>
      <anchor>ac921a2ae190f4337dade6642d5b295afa79f93a7971247339463c3443d84cc6ed</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CameraObject</name>
      <anchorfile>namespaceMagnum_1_1Trade_1_1OpenGex.html</anchorfile>
      <anchor>ac921a2ae190f4337dade6642d5b295afa9d30b4eba79b224629783fff2d715542</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Clip</name>
      <anchorfile>namespaceMagnum_1_1Trade_1_1OpenGex.html</anchorfile>
      <anchor>ac921a2ae190f4337dade6642d5b295afa5e5ba5fbc4f9f16da02dbc66e58e275a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Color</name>
      <anchorfile>namespaceMagnum_1_1Trade_1_1OpenGex.html</anchorfile>
      <anchor>ac921a2ae190f4337dade6642d5b295afaa305118a547fad84e384a955e9f0a1b1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Extension</name>
      <anchorfile>namespaceMagnum_1_1Trade_1_1OpenGex.html</anchorfile>
      <anchor>ac921a2ae190f4337dade6642d5b295afa449c75f33e58cc2eb597c310cfeb5fac</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>GeometryNode</name>
      <anchorfile>namespaceMagnum_1_1Trade_1_1OpenGex.html</anchorfile>
      <anchor>ac921a2ae190f4337dade6642d5b295afaa8b521e7303f947b6399cd3cd89add8d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>GeometryObject</name>
      <anchorfile>namespaceMagnum_1_1Trade_1_1OpenGex.html</anchorfile>
      <anchor>ac921a2ae190f4337dade6642d5b295afab9c0282c868cfceb40b18595ec09229e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>IndexArray</name>
      <anchorfile>namespaceMagnum_1_1Trade_1_1OpenGex.html</anchorfile>
      <anchor>ac921a2ae190f4337dade6642d5b295afa6f887a76d1a7c1feec058b6246e83416</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Key</name>
      <anchorfile>namespaceMagnum_1_1Trade_1_1OpenGex.html</anchorfile>
      <anchor>ac921a2ae190f4337dade6642d5b295afa6dad8335d3b0813d55a4c60ef049ffc8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>LightNode</name>
      <anchorfile>namespaceMagnum_1_1Trade_1_1OpenGex.html</anchorfile>
      <anchor>ac921a2ae190f4337dade6642d5b295afac8d133985294c96dff732ffbbee59552</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>LightObject</name>
      <anchorfile>namespaceMagnum_1_1Trade_1_1OpenGex.html</anchorfile>
      <anchor>ac921a2ae190f4337dade6642d5b295afa5de337af814f611451f4beeefdcc9da3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Material</name>
      <anchorfile>namespaceMagnum_1_1Trade_1_1OpenGex.html</anchorfile>
      <anchor>ac921a2ae190f4337dade6642d5b295afa2982962fd9e99b00b4359b514aee881a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MaterialRef</name>
      <anchorfile>namespaceMagnum_1_1Trade_1_1OpenGex.html</anchorfile>
      <anchor>ac921a2ae190f4337dade6642d5b295afaf39c57ecb85b2f39f559f692771ac749</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Mesh</name>
      <anchorfile>namespaceMagnum_1_1Trade_1_1OpenGex.html</anchorfile>
      <anchor>ac921a2ae190f4337dade6642d5b295afa6d661040b1fb0e10b974fe00b7bf3f8c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Metric</name>
      <anchorfile>namespaceMagnum_1_1Trade_1_1OpenGex.html</anchorfile>
      <anchor>ac921a2ae190f4337dade6642d5b295afa72fedae492949f109c5a671714ea11e6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Morph</name>
      <anchorfile>namespaceMagnum_1_1Trade_1_1OpenGex.html</anchorfile>
      <anchor>ac921a2ae190f4337dade6642d5b295afa8226a1c8b12b430b159901155419f1b8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MorphWeight</name>
      <anchorfile>namespaceMagnum_1_1Trade_1_1OpenGex.html</anchorfile>
      <anchor>ac921a2ae190f4337dade6642d5b295afa9fc57ac008463f0658dd45d2da01c799</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Name</name>
      <anchorfile>namespaceMagnum_1_1Trade_1_1OpenGex.html</anchorfile>
      <anchor>ac921a2ae190f4337dade6642d5b295afa9fb68c4b6dde8bbfa5a0338529adc39a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Node</name>
      <anchorfile>namespaceMagnum_1_1Trade_1_1OpenGex.html</anchorfile>
      <anchor>ac921a2ae190f4337dade6642d5b295afadf1cf043fcf03377aa66d637fa39452b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ObjectRef</name>
      <anchorfile>namespaceMagnum_1_1Trade_1_1OpenGex.html</anchorfile>
      <anchor>ac921a2ae190f4337dade6642d5b295afa49193eba0a0ec0e3b7896fa9aeed31ff</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Param</name>
      <anchorfile>namespaceMagnum_1_1Trade_1_1OpenGex.html</anchorfile>
      <anchor>ac921a2ae190f4337dade6642d5b295afafa110c5e2ac4a8bc1fa05c1f44690fda</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Rotation</name>
      <anchorfile>namespaceMagnum_1_1Trade_1_1OpenGex.html</anchorfile>
      <anchor>ac921a2ae190f4337dade6642d5b295afafea1cb9c8299c7ec22c61165fc21c689</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Scale</name>
      <anchorfile>namespaceMagnum_1_1Trade_1_1OpenGex.html</anchorfile>
      <anchor>ac921a2ae190f4337dade6642d5b295afa55d05b90c547fdab267e7b295fee5b87</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Skeleton</name>
      <anchorfile>namespaceMagnum_1_1Trade_1_1OpenGex.html</anchorfile>
      <anchor>ac921a2ae190f4337dade6642d5b295afaf6d3ca18ff250a79bc6baba3dc217b0b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Skin</name>
      <anchorfile>namespaceMagnum_1_1Trade_1_1OpenGex.html</anchorfile>
      <anchor>ac921a2ae190f4337dade6642d5b295afa7e6348fd496b7cf7023295dc02d08063</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Texture</name>
      <anchorfile>namespaceMagnum_1_1Trade_1_1OpenGex.html</anchorfile>
      <anchor>ac921a2ae190f4337dade6642d5b295afa3d7bd43b2ed5863a1ba7e13e929b34f0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Time</name>
      <anchorfile>namespaceMagnum_1_1Trade_1_1OpenGex.html</anchorfile>
      <anchor>ac921a2ae190f4337dade6642d5b295afa25494f92a1dc0c0fb91402b35a7fa813</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Track</name>
      <anchorfile>namespaceMagnum_1_1Trade_1_1OpenGex.html</anchorfile>
      <anchor>ac921a2ae190f4337dade6642d5b295afa794e6449746fc499f0a1e63cd1a02962</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Transform</name>
      <anchorfile>namespaceMagnum_1_1Trade_1_1OpenGex.html</anchorfile>
      <anchor>ac921a2ae190f4337dade6642d5b295afae734064831130b08157f87eb2fec5c31</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Translation</name>
      <anchorfile>namespaceMagnum_1_1Trade_1_1OpenGex.html</anchorfile>
      <anchor>ac921a2ae190f4337dade6642d5b295afa914fd569607f44f239d3f603a4d13ea9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Value</name>
      <anchorfile>namespaceMagnum_1_1Trade_1_1OpenGex.html</anchorfile>
      <anchor>ac921a2ae190f4337dade6642d5b295afa13a96ad06820240b8ffb3f97164232a0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>VertexArray</name>
      <anchorfile>namespaceMagnum_1_1Trade_1_1OpenGex.html</anchorfile>
      <anchor>ac921a2ae190f4337dade6642d5b295afac135467232e5951ff43f8067e418447f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>applic</name>
      <anchorfile>namespaceMagnum_1_1Trade_1_1OpenGex.html</anchorfile>
      <anchor>a1f931689f6965fa9f20e84e8c5b68289a9a26f4e136d781b2c1848520ae3141f1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>attrib</name>
      <anchorfile>namespaceMagnum_1_1Trade_1_1OpenGex.html</anchorfile>
      <anchor>a1f931689f6965fa9f20e84e8c5b68289a516e438559e8f2bab01700d47aa6f197</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>begin</name>
      <anchorfile>namespaceMagnum_1_1Trade_1_1OpenGex.html</anchorfile>
      <anchor>a1f931689f6965fa9f20e84e8c5b68289ae6626e94c1015e5b49fd45e1dd92d35d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>clip</name>
      <anchorfile>namespaceMagnum_1_1Trade_1_1OpenGex.html</anchorfile>
      <anchor>a1f931689f6965fa9f20e84e8c5b68289a2dce971eae3a260036e6d9713d772486</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>curve</name>
      <anchorfile>namespaceMagnum_1_1Trade_1_1OpenGex.html</anchorfile>
      <anchor>a1f931689f6965fa9f20e84e8c5b68289ad557c97bc0247e863099b2921b606775</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>end</name>
      <anchorfile>namespaceMagnum_1_1Trade_1_1OpenGex.html</anchorfile>
      <anchor>a1f931689f6965fa9f20e84e8c5b68289a7d34c05f5781373d6c7fac56d18f7d53</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>front</name>
      <anchorfile>namespaceMagnum_1_1Trade_1_1OpenGex.html</anchorfile>
      <anchor>a1f931689f6965fa9f20e84e8c5b68289a8a5263bb2eed3a692e0f4f195a82e18c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>index</name>
      <anchorfile>namespaceMagnum_1_1Trade_1_1OpenGex.html</anchorfile>
      <anchor>a1f931689f6965fa9f20e84e8c5b68289aadc159aa83eeca7f6445d433a33e2aae</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>key</name>
      <anchorfile>namespaceMagnum_1_1Trade_1_1OpenGex.html</anchorfile>
      <anchor>a1f931689f6965fa9f20e84e8c5b68289a9bf1cb45e2b8651c9e22d7446abcd4fc</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kind</name>
      <anchorfile>namespaceMagnum_1_1Trade_1_1OpenGex.html</anchorfile>
      <anchor>a1f931689f6965fa9f20e84e8c5b68289ac06e90780bba6ce7025c18dadf06d184</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>lod</name>
      <anchorfile>namespaceMagnum_1_1Trade_1_1OpenGex.html</anchorfile>
      <anchor>a1f931689f6965fa9f20e84e8c5b68289a193e71c288b7ae8e54e47b42e20921fb</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>material</name>
      <anchorfile>namespaceMagnum_1_1Trade_1_1OpenGex.html</anchorfile>
      <anchor>a1f931689f6965fa9f20e84e8c5b68289a154577709fcaa2cd5c0c7f938cb623e5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>morph</name>
      <anchorfile>namespaceMagnum_1_1Trade_1_1OpenGex.html</anchorfile>
      <anchor>a1f931689f6965fa9f20e84e8c5b68289ac552ac8ad16bad93b1b626ff5a87c0ac</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>motion_blur</name>
      <anchorfile>namespaceMagnum_1_1Trade_1_1OpenGex.html</anchorfile>
      <anchor>a1f931689f6965fa9f20e84e8c5b68289a224f46f7716477f92e775f86fdad3f61</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>object</name>
      <anchorfile>namespaceMagnum_1_1Trade_1_1OpenGex.html</anchorfile>
      <anchor>a1f931689f6965fa9f20e84e8c5b68289ae8c5cec062765c72668d1e378c168087</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>primitive</name>
      <anchorfile>namespaceMagnum_1_1Trade_1_1OpenGex.html</anchorfile>
      <anchor>a1f931689f6965fa9f20e84e8c5b68289a8153a3da7f9d0d647723ecba0a285ce2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>restart</name>
      <anchorfile>namespaceMagnum_1_1Trade_1_1OpenGex.html</anchorfile>
      <anchor>a1f931689f6965fa9f20e84e8c5b68289a71f9f08ca8c42c41b73c0e637b653bba</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>shadow</name>
      <anchorfile>namespaceMagnum_1_1Trade_1_1OpenGex.html</anchorfile>
      <anchor>a1f931689f6965fa9f20e84e8c5b68289aded2827f0f93ee44c700b4b3e12ec82e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>target</name>
      <anchorfile>namespaceMagnum_1_1Trade_1_1OpenGex.html</anchorfile>
      <anchor>a1f931689f6965fa9f20e84e8c5b68289a596bb86cf21072c10f8650dab16d390d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>texcoord</name>
      <anchorfile>namespaceMagnum_1_1Trade_1_1OpenGex.html</anchorfile>
      <anchor>a1f931689f6965fa9f20e84e8c5b68289a33f759f009a97cf9ef59b5995aa3ffb8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>two_sided</name>
      <anchorfile>namespaceMagnum_1_1Trade_1_1OpenGex.html</anchorfile>
      <anchor>a1f931689f6965fa9f20e84e8c5b68289a821084236c6eedf8d87a18d4b172f187</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>type</name>
      <anchorfile>namespaceMagnum_1_1Trade_1_1OpenGex.html</anchorfile>
      <anchor>a1f931689f6965fa9f20e84e8c5b68289a418aa48c09c18d8ea99d0917ee51ef7c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>visible</name>
      <anchorfile>namespaceMagnum_1_1Trade_1_1OpenGex.html</anchorfile>
      <anchor>a1f931689f6965fa9f20e84e8c5b68289aa998be9a9713013727605f355b066820</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>OpenGexImporter.h</name>
    <path>/home/mosra/Code/magnum-plugins/src/MagnumPlugins/OpenGexImporter/</path>
    <filename>OpenGexImporter_8h</filename>
    <includes id="Trade_2AbstractImporter_8h" name="AbstractImporter.h" local="no" imported="no">Magnum/Trade/AbstractImporter.h</includes>
    <includes id="OpenDdl_8h" name="OpenDdl.h" local="yes" imported="no">MagnumPlugins/OpenGexImporter/OpenDdl/OpenDdl.h</includes>
    <class kind="class">Magnum::Trade::OpenGexImporter</class>
    <namespace>Magnum</namespace>
    <namespace>Magnum::Trade</namespace>
  </compound>
  <compound kind="file">
    <name>PngImageConverter.h</name>
    <path>/home/mosra/Code/magnum-plugins/src/MagnumPlugins/PngImageConverter/</path>
    <filename>PngImageConverter_8h</filename>
    <includes id="AbstractImageConverter_8h" name="AbstractImageConverter.h" local="no" imported="no">Magnum/Trade/AbstractImageConverter.h</includes>
    <class kind="class">Magnum::Trade::PngImageConverter</class>
    <namespace>Magnum</namespace>
    <namespace>Magnum::Trade</namespace>
  </compound>
  <compound kind="file">
    <name>PngImporter.h</name>
    <path>/home/mosra/Code/magnum-plugins/src/MagnumPlugins/PngImporter/</path>
    <filename>PngImporter_8h</filename>
    <includes id="Trade_2AbstractImporter_8h" name="AbstractImporter.h" local="no" imported="no">Magnum/Trade/AbstractImporter.h</includes>
    <class kind="class">Magnum::Trade::PngImporter</class>
    <namespace>Magnum</namespace>
    <namespace>Magnum::Trade</namespace>
  </compound>
  <compound kind="file">
    <name>StanfordImporter.h</name>
    <path>/home/mosra/Code/magnum-plugins/src/MagnumPlugins/StanfordImporter/</path>
    <filename>StanfordImporter_8h</filename>
    <includes id="Trade_2AbstractImporter_8h" name="AbstractImporter.h" local="no" imported="no">Magnum/Trade/AbstractImporter.h</includes>
    <class kind="class">Magnum::Trade::StanfordImporter</class>
    <namespace>Magnum</namespace>
    <namespace>Magnum::Trade</namespace>
  </compound>
  <compound kind="file">
    <name>StbImageConverter.h</name>
    <path>/home/mosra/Code/magnum-plugins/src/MagnumPlugins/StbImageConverter/</path>
    <filename>StbImageConverter_8h</filename>
    <includes id="AbstractImageConverter_8h" name="AbstractImageConverter.h" local="no" imported="no">Magnum/Trade/AbstractImageConverter.h</includes>
    <class kind="class">Magnum::Trade::StbImageConverter</class>
    <namespace>Magnum</namespace>
    <namespace>Magnum::Trade</namespace>
  </compound>
  <compound kind="file">
    <name>StbImageImporter.h</name>
    <path>/home/mosra/Code/magnum-plugins/src/MagnumPlugins/StbImageImporter/</path>
    <filename>StbImageImporter_8h</filename>
    <includes id="Trade_2AbstractImporter_8h" name="AbstractImporter.h" local="no" imported="no">Magnum/Trade/AbstractImporter.h</includes>
    <class kind="class">Magnum::Trade::StbImageImporter</class>
    <namespace>Magnum</namespace>
    <namespace>Magnum::Trade</namespace>
  </compound>
  <compound kind="file">
    <name>StbTrueTypeFont.h</name>
    <path>/home/mosra/Code/magnum-plugins/src/MagnumPlugins/StbTrueTypeFont/</path>
    <filename>StbTrueTypeFont_8h</filename>
    <includes id="AbstractFont_8h" name="AbstractFont.h" local="no" imported="no">Magnum/Text/AbstractFont.h</includes>
    <class kind="class">Magnum::Text::StbTrueTypeFont</class>
    <namespace>Magnum</namespace>
    <namespace>Magnum::Text</namespace>
  </compound>
  <compound kind="file">
    <name>StbVorbisImporter.h</name>
    <path>/home/mosra/Code/magnum-plugins/src/MagnumPlugins/StbVorbisAudioImporter/</path>
    <filename>StbVorbisImporter_8h</filename>
    <includes id="Audio_2AbstractImporter_8h" name="AbstractImporter.h" local="no" imported="no">Magnum/Audio/AbstractImporter.h</includes>
    <class kind="class">Magnum::Audio::StbVorbisImporter</class>
    <namespace>Magnum</namespace>
    <namespace>Magnum::Audio</namespace>
  </compound>
  <compound kind="file">
    <name>AbstractFramebuffer.h</name>
    <path>/home/mosra/Code/magnum/src/Magnum/</path>
    <filename>AbstractFramebuffer_8h</filename>
    <includes id="AbstractObject_8h" name="AbstractObject.h" local="yes" imported="no">Magnum/AbstractObject.h</includes>
    <includes id="Range_8h" name="Range.h" local="yes" imported="no">Magnum/Math/Range.h</includes>
    <class kind="class">Magnum::AbstractFramebuffer</class>
    <namespace>Magnum</namespace>
    <member kind="typedef">
      <type>Containers::EnumSet&lt; FramebufferClear &gt;</type>
      <name>FramebufferClearMask</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>adec77bef39cea56d13818225a640d2b2</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Containers::EnumSet&lt; FramebufferBlit &gt;</type>
      <name>FramebufferBlitMask</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a96d7e99841ebcc0986b467d70277fae9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>FramebufferClear</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a9e26aff3faf7d8598bbd18dfbe5c90fe</anchor>
      <arglist></arglist>
      <enumvalue file="namespaceMagnum.html" anchor="a9e26aff3faf7d8598bbd18dfbe5c90feacb5feb1b7314637725a2e73bdc9f7295">Color</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a9e26aff3faf7d8598bbd18dfbe5c90fea675056ad1441b6375b2c5abd48c27ef1">Depth</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a9e26aff3faf7d8598bbd18dfbe5c90fead821e7ccd4d4c25a491ba1a9ea248895">Stencil</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>FramebufferBlit</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a3c488fc8703d335a9a96a316309aa72f</anchor>
      <arglist></arglist>
      <enumvalue file="namespaceMagnum.html" anchor="a3c488fc8703d335a9a96a316309aa72facb5feb1b7314637725a2e73bdc9f7295">Color</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a3c488fc8703d335a9a96a316309aa72fa675056ad1441b6375b2c5abd48c27ef1">Depth</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a3c488fc8703d335a9a96a316309aa72fad821e7ccd4d4c25a491ba1a9ea248895">Stencil</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>FramebufferBlitFilter</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>ad80aa06d64bc93b22c7fe23e95255118</anchor>
      <arglist></arglist>
      <enumvalue file="namespaceMagnum.html" anchor="ad80aa06d64bc93b22c7fe23e95255118a60494f02d440f316319dd0fad40ad007">Nearest</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="ad80aa06d64bc93b22c7fe23e95255118a32a843da6ea40ab3b17a3421ccdf671b">Linear</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>FramebufferTarget</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>ab6e6a5b180b456b22f5b9938113480a7</anchor>
      <arglist></arglist>
      <enumvalue file="namespaceMagnum.html" anchor="ab6e6a5b180b456b22f5b9938113480a7a7a1a5f3e79fdc91edf2f5ead9d66abb4">Read</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="ab6e6a5b180b456b22f5b9938113480a7a2d03c2d5a7ec65ef4619e0582c272ec2">Draw</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="ab6e6a5b180b456b22f5b9938113480a7adde78892c6911d1303ccc0607d5aa499">ReadDraw</enumvalue>
    </member>
  </compound>
  <compound kind="file">
    <name>AbstractObject.h</name>
    <path>/home/mosra/Code/magnum/src/Magnum/</path>
    <filename>AbstractObject_8h</filename>
    <includes id="Magnum_8h" name="Magnum.h" local="yes" imported="no">Magnum/Magnum.h</includes>
    <includes id="OpenGL_8h" name="OpenGL.h" local="yes" imported="no">Magnum/OpenGL.h</includes>
    <class kind="class">Magnum::AbstractObject</class>
    <namespace>Magnum</namespace>
    <member kind="typedef">
      <type>Containers::EnumSet&lt; ObjectFlag &gt;</type>
      <name>ObjectFlags</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a49f6742013bcea38a11ef1c7805d6bfe</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>ObjectFlag</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a7f62172cd5963a14eb7d88fa3cf15778</anchor>
      <arglist></arglist>
      <enumvalue file="namespaceMagnum.html" anchor="a7f62172cd5963a14eb7d88fa3cf15778a0eceeb45861f9585dd7a97a3e36f85c6">Created</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a7f62172cd5963a14eb7d88fa3cf15778a50dd1297fc0f8a96753257b224b1e5b8">DeleteOnDestruction</enumvalue>
    </member>
  </compound>
  <compound kind="file">
    <name>AbstractObject.h</name>
    <path>/home/mosra/Code/magnum/src/Magnum/SceneGraph/</path>
    <filename>SceneGraph_2AbstractObject_8h</filename>
    <includes id="DimensionTraits_8h" name="DimensionTraits.h" local="yes" imported="no">Magnum/DimensionTraits.h</includes>
    <includes id="SceneGraph_8h" name="SceneGraph.h" local="yes" imported="no">Magnum/SceneGraph/SceneGraph.h</includes>
    <class kind="class">Magnum::SceneGraph::AbstractObject</class>
    <namespace>Magnum</namespace>
    <namespace>Magnum::SceneGraph</namespace>
    <member kind="typedef">
      <type>AbstractObject&lt; 2, T &gt;</type>
      <name>AbstractBasicObject2D</name>
      <anchorfile>namespaceMagnum_1_1SceneGraph.html</anchorfile>
      <anchor>a9ba6f965849b32eec2a4bf716f57c0f6</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>AbstractBasicObject2D&lt; Float &gt;</type>
      <name>AbstractObject2D</name>
      <anchorfile>namespaceMagnum_1_1SceneGraph.html</anchorfile>
      <anchor>a4dc2f3b5d4fa5de326d57fd394bc02f8</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>AbstractObject&lt; 3, T &gt;</type>
      <name>AbstractBasicObject3D</name>
      <anchorfile>namespaceMagnum_1_1SceneGraph.html</anchorfile>
      <anchor>afcd46917ca137989e38c5f756a1d020b</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>AbstractBasicObject3D&lt; Float &gt;</type>
      <name>AbstractObject3D</name>
      <anchorfile>namespaceMagnum_1_1SceneGraph.html</anchorfile>
      <anchor>aebce906e64701c696f6ee3b2b01ae348</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>AbstractQuery.h</name>
    <path>/home/mosra/Code/magnum/src/Magnum/</path>
    <filename>AbstractQuery_8h</filename>
    <includes id="AbstractObject_8h" name="AbstractObject.h" local="yes" imported="no">Magnum/AbstractObject.h</includes>
    <includes id="Tags_8h" name="Tags.h" local="yes" imported="no">Magnum/Tags.h</includes>
    <class kind="class">Magnum::AbstractQuery</class>
    <namespace>Magnum</namespace>
  </compound>
  <compound kind="file">
    <name>AbstractResourceLoader.h</name>
    <path>/home/mosra/Code/magnum/src/Magnum/</path>
    <filename>AbstractResourceLoader_8h</filename>
    <includes id="ResourceManager_8h" name="ResourceManager.h" local="yes" imported="no">Magnum/ResourceManager.h</includes>
    <class kind="class">Magnum::AbstractResourceLoader</class>
    <namespace>Magnum</namespace>
  </compound>
  <compound kind="file">
    <name>AbstractShaderProgram.h</name>
    <path>/home/mosra/Code/magnum/src/Magnum/</path>
    <filename>AbstractShaderProgram_8h</filename>
    <includes id="AbstractObject_8h" name="AbstractObject.h" local="yes" imported="no">Magnum/AbstractObject.h</includes>
    <includes id="Attribute_8h" name="Attribute.h" local="yes" imported="no">Magnum/Attribute.h</includes>
    <includes id="Tags_8h" name="Tags.h" local="yes" imported="no">Magnum/Tags.h</includes>
    <class kind="class">Magnum::AbstractShaderProgram</class>
    <namespace>Magnum</namespace>
  </compound>
  <compound kind="file">
    <name>AbstractTexture.h</name>
    <path>/home/mosra/Code/magnum/src/Magnum/</path>
    <filename>AbstractTexture_8h</filename>
    <includes id="AbstractObject_8h" name="AbstractObject.h" local="yes" imported="no">Magnum/AbstractObject.h</includes>
    <includes id="DimensionTraits_8h" name="DimensionTraits.h" local="yes" imported="no">Magnum/DimensionTraits.h</includes>
    <includes id="Sampler_8h" name="Sampler.h" local="yes" imported="no">Magnum/Sampler.h</includes>
    <includes id="Tags_8h" name="Tags.h" local="yes" imported="no">Magnum/Tags.h</includes>
    <class kind="class">Magnum::AbstractTexture</class>
    <namespace>Magnum</namespace>
  </compound>
  <compound kind="file">
    <name>Array.h</name>
    <path>/home/mosra/Code/magnum/src/Magnum/</path>
    <filename>Array_8h</filename>
    <includes id="Magnum_8h" name="Magnum.h" local="yes" imported="no">Magnum/Magnum.h</includes>
    <includes id="BoolVector_8h" name="BoolVector.h" local="yes" imported="no">Magnum/Math/BoolVector.h</includes>
    <class kind="class">Magnum::Array</class>
    <class kind="class">Magnum::Array1D</class>
    <class kind="class">Magnum::Array2D</class>
    <class kind="class">Magnum::Array3D</class>
    <namespace>Magnum</namespace>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a2c022de6a506d510afb76bef6f382f10</anchor>
      <arglist>(Debug &amp;debug, const Array&lt; dimensions, T &gt; &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a0006f1ddb183ade30e6696eae4d9e41e</anchor>
      <arglist>(Debug &amp;debug, const Array1D&lt; T &gt; &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a0fd13dadee773ce45ed6ab0a7cfe1630</anchor>
      <arglist>(Debug &amp;debug, const Array2D&lt; T &gt; &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>ac95c370506ed1052ae50af8d3ab81fd1</anchor>
      <arglist>(Debug &amp;debug, const Array3D&lt; T &gt; &amp;value)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Attribute.h</name>
    <path>/home/mosra/Code/magnum/src/Magnum/</path>
    <filename>Attribute_8h</filename>
    <includes id="Magnum_8h" name="Magnum.h" local="yes" imported="no">Magnum/Magnum.h</includes>
    <includes id="OpenGL_8h" name="OpenGL.h" local="yes" imported="no">Magnum/OpenGL.h</includes>
    <class kind="class">Magnum::Attribute</class>
    <class kind="class">Magnum::DynamicAttribute</class>
    <namespace>Magnum</namespace>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a0eb7a0597aa54dac06f74058f7591913</anchor>
      <arglist>(Debug &amp;debug, Attribute&lt; T &gt;::Components)</arglist>
    </member>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a74a95cad0d549a952ac6a097e5c92b0b</anchor>
      <arglist>(Debug &amp;debug, Attribute&lt; T &gt;::DataType)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>AbstractImporter.h</name>
    <path>/home/mosra/Code/magnum/src/Magnum/Audio/</path>
    <filename>Audio_2AbstractImporter_8h</filename>
    <includes id="Magnum_8h" name="Magnum.h" local="yes" imported="no">Magnum/Magnum.h</includes>
    <includes id="Audio_2Buffer_8h" name="Buffer.h" local="yes" imported="no">Magnum/Audio/Buffer.h</includes>
    <class kind="class">Magnum::Audio::AbstractImporter</class>
    <namespace>Magnum</namespace>
    <namespace>Magnum::Audio</namespace>
  </compound>
  <compound kind="file">
    <name>AbstractImporter.h</name>
    <path>/home/mosra/Code/magnum/src/Magnum/Trade/</path>
    <filename>Trade_2AbstractImporter_8h</filename>
    <includes id="Magnum_8h" name="Magnum.h" local="yes" imported="no">Magnum/Magnum.h</includes>
    <includes id="Trade_8h" name="Trade.h" local="yes" imported="no">Magnum/Trade/Trade.h</includes>
    <class kind="class">Magnum::Trade::AbstractImporter</class>
    <namespace>Magnum</namespace>
    <namespace>Magnum::Trade</namespace>
  </compound>
  <compound kind="file">
    <name>Audio.h</name>
    <path>/home/mosra/Code/magnum/src/Magnum/Audio/</path>
    <filename>Audio_8h</filename>
    <includes id="Magnum_8h" name="Magnum.h" local="no" imported="no">Magnum/Magnum.h</includes>
    <class kind="class">Magnum::Audio::Playable</class>
    <class kind="class">Magnum::Audio::PlayableGroup</class>
    <class kind="class">Magnum::Audio::Listener</class>
    <namespace>Magnum</namespace>
    <namespace>Magnum::Audio</namespace>
    <member kind="typedef">
      <type>Playable&lt; 2 &gt;</type>
      <name>Playable2D</name>
      <anchorfile>namespaceMagnum_1_1Audio.html</anchorfile>
      <anchor>aea04a9f80a7ff221bd57b5cd1a376646</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Playable&lt; 3 &gt;</type>
      <name>Playable3D</name>
      <anchorfile>namespaceMagnum_1_1Audio.html</anchorfile>
      <anchor>ab957c446069f80c9b8e75d1b83d177d9</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>PlayableGroup&lt; 2 &gt;</type>
      <name>PlayableGroup2D</name>
      <anchorfile>namespaceMagnum_1_1Audio.html</anchorfile>
      <anchor>aba0415d6d8f769317d7df70ba290c592</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>PlayableGroup&lt; 3 &gt;</type>
      <name>PlayableGroup3D</name>
      <anchorfile>namespaceMagnum_1_1Audio.html</anchorfile>
      <anchor>a0577d53d828ce83a748328d046bad331</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Listener&lt; 2 &gt;</type>
      <name>Listener2D</name>
      <anchorfile>namespaceMagnum_1_1Audio.html</anchorfile>
      <anchor>a9349a3afa6bc17cf2c1d3827b7d3f51f</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Listener&lt; 3 &gt;</type>
      <name>Listener3D</name>
      <anchorfile>namespaceMagnum_1_1Audio.html</anchorfile>
      <anchor>aeec8317e1c2929ffa7e179140b1760cd</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Buffer.h</name>
    <path>/home/mosra/Code/magnum/src/Magnum/Audio/</path>
    <filename>Audio_2Buffer_8h</filename>
    <includes id="Magnum_8h" name="Magnum.h" local="yes" imported="no">Magnum/Magnum.h</includes>
    <class kind="class">Magnum::Audio::Buffer</class>
    <namespace>Magnum</namespace>
    <namespace>Magnum::Audio</namespace>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceMagnum_1_1Audio.html</anchorfile>
      <anchor>ab1e69c3dc00f873de9e13def3472dce4</anchor>
      <arglist>(Debug &amp;debug, Buffer::Format value)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Buffer.h</name>
    <path>/home/mosra/Code/magnum/src/Magnum/</path>
    <filename>Buffer_8h</filename>
    <includes id="AbstractObject_8h" name="AbstractObject.h" local="yes" imported="no">Magnum/AbstractObject.h</includes>
    <includes id="Magnum_8h" name="Magnum.h" local="yes" imported="no">Magnum/Magnum.h</includes>
    <includes id="Tags_8h" name="Tags.h" local="yes" imported="no">Magnum/Tags.h</includes>
    <class kind="class">Magnum::Buffer</class>
    <namespace>Magnum</namespace>
    <member kind="enumeration">
      <type></type>
      <name>BufferUsage</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>aad6da9d5c3bd3e353f3e99a7aa293e8d</anchor>
      <arglist></arglist>
      <enumvalue file="namespaceMagnum.html" anchor="aad6da9d5c3bd3e353f3e99a7aa293e8dab831b12d8d415645f1f00e37e0426ca2">StreamDraw</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="aad6da9d5c3bd3e353f3e99a7aa293e8da10953b8796ab666281dc734e99aa5180">StreamRead</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="aad6da9d5c3bd3e353f3e99a7aa293e8da72d80d051f94e8aa1e3dc1ebfb6cc8cc">StreamCopy</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="aad6da9d5c3bd3e353f3e99a7aa293e8dac3ed2ba606af12869974bdab26334e6c">StaticDraw</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="aad6da9d5c3bd3e353f3e99a7aa293e8da3b35249bb273aea8b56c05f2c914a38a">StaticRead</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="aad6da9d5c3bd3e353f3e99a7aa293e8dac5a66e746248ebb7fe5f99443172fca7">StaticCopy</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="aad6da9d5c3bd3e353f3e99a7aa293e8da07988dce2d161630856fb73bc06682c0">DynamicDraw</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="aad6da9d5c3bd3e353f3e99a7aa293e8da2ca7cf82bf5d2f11738ae1a371d5ae32">DynamicRead</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="aad6da9d5c3bd3e353f3e99a7aa293e8dac572ac15b4bcbc9e975b79480e253c14">DynamicCopy</enumvalue>
    </member>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a9024465ba0e0014d55008545bee2493d</anchor>
      <arglist>(Debug &amp;debug, Buffer::TargetHint value)</arglist>
    </member>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a41d8e7d6b7a2d9d12dcca72630d3a23a</anchor>
      <arglist>(Debug &amp;debug, Buffer::Target value)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Context.h</name>
    <path>/home/mosra/Code/magnum/src/Magnum/Audio/</path>
    <filename>src_2Magnum_2Audio_2Context_8h</filename>
    <includes id="Audio_8h" name="Audio.h" local="yes" imported="no">Magnum/Audio/Audio.h</includes>
    <includes id="Audio_2Buffer_8h" name="Buffer.h" local="yes" imported="no">Magnum/Audio/Buffer.h</includes>
    <includes id="Audio_2Extensions_8h" name="Extensions.h" local="yes" imported="no">Magnum/Audio/Extensions.h</includes>
    <class kind="class">Magnum::Audio::Extension</class>
    <class kind="class">Magnum::Audio::Context</class>
    <class kind="class">Magnum::Audio::Context::Configuration</class>
    <namespace>Magnum</namespace>
    <namespace>Magnum::Audio</namespace>
    <member kind="define">
      <type>#define</type>
      <name>MAGNUM_ASSERT_AUDIO_EXTENSION_SUPPORTED</name>
      <anchorfile>src_2Magnum_2Audio_2Context_8h.html</anchorfile>
      <anchor>a9f75fea97579840fea8ccdad95d01f1c</anchor>
      <arglist>(extension)                                </arglist>
    </member>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceMagnum_1_1Audio.html</anchorfile>
      <anchor>aaaa4894d3c9ef0fd261da648c8850155</anchor>
      <arglist>(Debug &amp;debug, Context::HrtfStatus value)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Context.h</name>
    <path>/home/mosra/Code/magnum/src/Magnum/</path>
    <filename>src_2Magnum_2Context_8h</filename>
    <includes id="Magnum_8h" name="Magnum.h" local="yes" imported="no">Magnum/Magnum.h</includes>
    <includes id="OpenGL_8h" name="OpenGL.h" local="yes" imported="no">Magnum/OpenGL.h</includes>
    <includes id="Tags_8h" name="Tags.h" local="yes" imported="no">Magnum/Tags.h</includes>
    <class kind="class">Magnum::Extension</class>
    <class kind="class">Magnum::Context</class>
    <namespace>Magnum</namespace>
    <namespace>Magnum::Platform</namespace>
    <member kind="define">
      <type>#define</type>
      <name>MAGNUM_ASSERT_VERSION_SUPPORTED</name>
      <anchorfile>src_2Magnum_2Context_8h.html</anchorfile>
      <anchor>a995bfe7260ebb8dc1cb0998c288899a5</anchor>
      <arglist>(version)                                                    </arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MAGNUM_ASSERT_EXTENSION_SUPPORTED</name>
      <anchorfile>src_2Magnum_2Context_8h.html</anchorfile>
      <anchor>a8d53a0909467354b13a245d2020c870e</anchor>
      <arglist>(extension)                                            </arglist>
    </member>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a0d4db4d0216dee7835c81b44f0e0a4e0</anchor>
      <arglist>(Debug &amp;debug, Context::Flag value)</arglist>
    </member>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>ad2a1b71ac5740761d3d5f922c0578ddf</anchor>
      <arglist>(Debug &amp;debug, Context::Flags value)</arglist>
    </member>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a9333b5940a6dfc9e3432f8231ded74bc</anchor>
      <arglist>(Debug &amp;debug, Context::DetectedDriver value)</arglist>
    </member>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>ad75f14aae1be07e6094458ae5eab06a7</anchor>
      <arglist>(Debug &amp;debug, Context::DetectedDrivers value)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Context.h</name>
    <path>/home/mosra/Code/magnum-integration/src/Magnum/OvrIntegration/</path>
    <filename>integration_2src_2Magnum_2OvrIntegration_2Context_8h</filename>
    <includes id="Texture_8h" name="Texture.h" local="no" imported="no">Magnum/Texture.h</includes>
    <includes id="Compositor_8h" name="Compositor.h" local="yes" imported="no">Magnum/OvrIntegration/Compositor.h</includes>
    <includes id="Session_8h" name="Session.h" local="yes" imported="no">Magnum/OvrIntegration/Session.h</includes>
    <includes id="OvrIntegration_8h" name="OvrIntegration.h" local="yes" imported="no">Magnum/OvrIntegration/OvrIntegration.h</includes>
    <class kind="struct">Magnum::OvrIntegration::Error</class>
    <class kind="class">Magnum::OvrIntegration::Context</class>
    <namespace>Magnum</namespace>
    <namespace>Magnum::OvrIntegration</namespace>
    <member kind="typedef">
      <type>Containers::EnumSet&lt; DetectResult &gt;</type>
      <name>DetectResults</name>
      <anchorfile>namespaceMagnum_1_1OvrIntegration.html</anchorfile>
      <anchor>a4fe10611df2e827d955a22c45a88028c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>DetectResult</name>
      <anchorfile>namespaceMagnum_1_1OvrIntegration.html</anchorfile>
      <anchor>abe437794a1624b8ecdcdb909d72ee895</anchor>
      <arglist></arglist>
      <enumvalue file="namespaceMagnum_1_1OvrIntegration.html" anchor="abe437794a1624b8ecdcdb909d72ee895a7970e3e8bdee1773a50915479ffbabb7">ServiceRunning</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OvrIntegration.html" anchor="abe437794a1624b8ecdcdb909d72ee895a66b7262d619bd3873bac68927465f0c5">HmdConnected</enumvalue>
    </member>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceMagnum_1_1OvrIntegration.html</anchorfile>
      <anchor>aac03f9b2a91ebbda095acce83b4a4f32</anchor>
      <arglist>(Debug &amp;debug, DetectResult value)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Extensions.h</name>
    <path>/home/mosra/Code/magnum/src/Magnum/Audio/</path>
    <filename>Audio_2Extensions_8h</filename>
    <namespace>Magnum</namespace>
    <namespace>Magnum::Audio</namespace>
    <namespace>Magnum::Audio::Extensions</namespace>
  </compound>
  <compound kind="file">
    <name>Extensions.h</name>
    <path>/home/mosra/Code/magnum/src/Magnum/</path>
    <filename>Extensions_8h</filename>
    <includes id="Version_8h" name="Version.h" local="yes" imported="no">Magnum/Version.h</includes>
    <namespace>Magnum</namespace>
    <namespace>Magnum::Extensions</namespace>
  </compound>
  <compound kind="file">
    <name>Listener.h</name>
    <path>/home/mosra/Code/magnum/src/Magnum/Audio/</path>
    <filename>Listener_8h</filename>
    <includes id="Matrix3_8h" name="Matrix3.h" local="no" imported="no">Magnum/Math/Matrix3.h</includes>
    <includes id="Matrix4_8h" name="Matrix4.h" local="no" imported="no">Magnum/Math/Matrix4.h</includes>
    <includes id="Quaternion_8h" name="Quaternion.h" local="no" imported="no">Magnum/Math/Quaternion.h</includes>
    <includes id="AbstractFeature_8h" name="AbstractFeature.h" local="no" imported="no">Magnum/SceneGraph/AbstractFeature.h</includes>
    <includes id="SceneGraph_2AbstractObject_8h" name="AbstractObject.h" local="no" imported="no">Magnum/SceneGraph/AbstractObject.h</includes>
    <includes id="Audio_2Renderer_8h" name="Renderer.h" local="yes" imported="no">Magnum/Audio/Renderer.h</includes>
    <includes id="PlayableGroup_8h" name="PlayableGroup.h" local="yes" imported="no">Magnum/Audio/PlayableGroup.h</includes>
    <class kind="class">Magnum::Audio::Listener</class>
    <namespace>Magnum</namespace>
    <namespace>Magnum::Audio</namespace>
  </compound>
  <compound kind="file">
    <name>Playable.h</name>
    <path>/home/mosra/Code/magnum/src/Magnum/Audio/</path>
    <filename>Playable_8h</filename>
    <includes id="AbstractGroupedFeature_8h" name="AbstractGroupedFeature.h" local="no" imported="no">Magnum/SceneGraph/AbstractGroupedFeature.h</includes>
    <includes id="Matrix3_8h" name="Matrix3.h" local="no" imported="no">Magnum/Math/Matrix3.h</includes>
    <includes id="Matrix4_8h" name="Matrix4.h" local="no" imported="no">Magnum/Math/Matrix4.h</includes>
    <includes id="PlayableGroup_8h" name="PlayableGroup.h" local="yes" imported="no">Magnum/Audio/PlayableGroup.h</includes>
    <includes id="Source_8h" name="Source.h" local="yes" imported="no">Magnum/Audio/Source.h</includes>
    <class kind="class">Magnum::Audio::Playable</class>
    <namespace>Magnum</namespace>
    <namespace>Magnum::Audio</namespace>
  </compound>
  <compound kind="file">
    <name>PlayableGroup.h</name>
    <path>/home/mosra/Code/magnum/src/Magnum/Audio/</path>
    <filename>PlayableGroup_8h</filename>
    <includes id="SceneGraph_2AbstractObject_8h" name="AbstractObject.h" local="no" imported="no">Magnum/SceneGraph/AbstractObject.h</includes>
    <includes id="SceneGraph_8h" name="SceneGraph.h" local="no" imported="no">Magnum/SceneGraph/SceneGraph.h</includes>
    <includes id="FeatureGroup_8h" name="FeatureGroup.h" local="no" imported="no">Magnum/SceneGraph/FeatureGroup.h</includes>
    <includes id="Audio_8h" name="Audio.h" local="yes" imported="no">Magnum/Audio/Audio.h</includes>
    <includes id="Playable_8h" name="Playable.h" local="yes" imported="no">Magnum/Audio/Playable.h</includes>
    <includes id="Source_8h" name="Source.h" local="yes" imported="no">Magnum/Audio/Source.h</includes>
    <class kind="class">Magnum::Audio::PlayableGroup</class>
    <namespace>Magnum</namespace>
    <namespace>Magnum::Audio</namespace>
  </compound>
  <compound kind="file">
    <name>Renderer.h</name>
    <path>/home/mosra/Code/magnum/src/Magnum/Audio/</path>
    <filename>Audio_2Renderer_8h</filename>
    <includes id="Magnum_8h" name="Magnum.h" local="yes" imported="no">Magnum/Magnum.h</includes>
    <includes id="src_2Magnum_2Audio_2Context_8h" name="Context.h" local="yes" imported="no">Magnum/Audio/Context.h</includes>
    <includes id="Vector3_8h" name="Vector3.h" local="yes" imported="no">Magnum/Math/Vector3.h</includes>
    <class kind="class">Magnum::Audio::Renderer</class>
    <namespace>Magnum</namespace>
    <namespace>Magnum::Audio</namespace>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceMagnum_1_1Audio.html</anchorfile>
      <anchor>af5ed7655c31326a82464a3856ce8adaa</anchor>
      <arglist>(Debug &amp;debug, Renderer::Error value)</arglist>
    </member>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceMagnum_1_1Audio.html</anchorfile>
      <anchor>ad9b6a4047aa891ba272662f35fd78414</anchor>
      <arglist>(Debug &amp;debug, Renderer::DistanceModel value)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Renderer.h</name>
    <path>/home/mosra/Code/magnum/src/Magnum/</path>
    <filename>Renderer_8h</filename>
    <includes id="Magnum_8h" name="Magnum.h" local="yes" imported="no">Magnum/Magnum.h</includes>
    <includes id="OpenGL_8h" name="OpenGL.h" local="yes" imported="no">Magnum/OpenGL.h</includes>
    <class kind="class">Magnum::Renderer</class>
    <namespace>Magnum</namespace>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>af5ed7655c31326a82464a3856ce8adaa</anchor>
      <arglist>(Debug &amp;debug, Renderer::Error value)</arglist>
    </member>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a4b42fb5b1eb68a0a42794f44ef20faf5</anchor>
      <arglist>(Debug &amp;debug, Renderer::ResetNotificationStrategy value)</arglist>
    </member>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a41f92605fac305549dc1f4bdb6957fa7</anchor>
      <arglist>(Debug &amp;debug, Renderer::GraphicsResetStatus value)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Renderer.h</name>
    <path>/home/mosra/Code/magnum/src/Magnum/Text/</path>
    <filename>Text_2Renderer_8h</filename>
    <includes id="Range_8h" name="Range.h" local="yes" imported="no">Magnum/Math/Range.h</includes>
    <includes id="Buffer_8h" name="Buffer.h" local="yes" imported="no">Magnum/Buffer.h</includes>
    <includes id="DimensionTraits_8h" name="DimensionTraits.h" local="yes" imported="no">Magnum/DimensionTraits.h</includes>
    <includes id="Mesh_8h" name="Mesh.h" local="yes" imported="no">Magnum/Mesh.h</includes>
    <includes id="Text_8h" name="Text.h" local="yes" imported="no">Magnum/Text/Text.h</includes>
    <includes id="Alignment_8h" name="Alignment.h" local="yes" imported="no">Magnum/Text/Alignment.h</includes>
    <class kind="class">Magnum::Text::AbstractRenderer</class>
    <class kind="class">Magnum::Text::Renderer</class>
    <namespace>Magnum</namespace>
    <namespace>Magnum::Text</namespace>
    <member kind="typedef">
      <type>Renderer&lt; 2 &gt;</type>
      <name>Renderer2D</name>
      <anchorfile>namespaceMagnum_1_1Text.html</anchorfile>
      <anchor>a2410d31063c8db63437a8cc44ff84e8b</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Renderer&lt; 3 &gt;</type>
      <name>Renderer3D</name>
      <anchorfile>namespaceMagnum_1_1Text.html</anchorfile>
      <anchor>a4b69f1bb3ee0486ceed6c41cfebfcb81</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Source.h</name>
    <path>/home/mosra/Code/magnum/src/Magnum/Audio/</path>
    <filename>Source_8h</filename>
    <includes id="Magnum_8h" name="Magnum.h" local="yes" imported="no">Magnum/Magnum.h</includes>
    <includes id="Audio_8h" name="Audio.h" local="yes" imported="no">Magnum/Audio/Audio.h</includes>
    <includes id="Vector3_8h" name="Vector3.h" local="yes" imported="no">Magnum/Math/Vector3.h</includes>
    <class kind="class">Magnum::Audio::Source</class>
    <namespace>Magnum</namespace>
    <namespace>Magnum::Audio</namespace>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceMagnum_1_1Audio.html</anchorfile>
      <anchor>a0a8de3ea9665f8333aabda2b530b9d7d</anchor>
      <arglist>(Debug &amp;debug, Source::State value)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>BufferImage.h</name>
    <path>/home/mosra/Code/magnum/src/Magnum/</path>
    <filename>BufferImage_8h</filename>
    <includes id="Buffer_8h" name="Buffer.h" local="yes" imported="no">Magnum/Buffer.h</includes>
    <includes id="DimensionTraits_8h" name="DimensionTraits.h" local="yes" imported="no">Magnum/DimensionTraits.h</includes>
    <includes id="PixelStorage_8h" name="PixelStorage.h" local="yes" imported="no">Magnum/PixelStorage.h</includes>
    <includes id="Vector4_8h" name="Vector4.h" local="yes" imported="no">Magnum/Math/Vector4.h</includes>
    <class kind="class">Magnum::BufferImage</class>
    <class kind="class">Magnum::CompressedBufferImage</class>
    <namespace>Magnum</namespace>
    <member kind="typedef">
      <type>BufferImage&lt; 1 &gt;</type>
      <name>BufferImage1D</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a64389d999241901f7d5388da97eff898</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>BufferImage&lt; 2 &gt;</type>
      <name>BufferImage2D</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a9c2b8ee2d4feeb7020a0bd4ae967c20c</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>BufferImage&lt; 3 &gt;</type>
      <name>BufferImage3D</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>aa4a82c29052812758b2580a7376a458d</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>CompressedBufferImage&lt; 1 &gt;</type>
      <name>CompressedBufferImage1D</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>adb7992a4252dbfe4aceeafc71fd5c96a</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>CompressedBufferImage&lt; 2 &gt;</type>
      <name>CompressedBufferImage2D</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>accbbf3c490d90179d9cbde25a98cedc5</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>CompressedBufferImage&lt; 3 &gt;</type>
      <name>CompressedBufferImage3D</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a2b372b13e85aae44d04166e79975c836</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>BufferTexture.h</name>
    <path>/home/mosra/Code/magnum/src/Magnum/</path>
    <filename>BufferTexture_8h</filename>
    <includes id="AbstractTexture_8h" name="AbstractTexture.h" local="yes" imported="no">Magnum/AbstractTexture.h</includes>
    <class kind="class">Magnum::BufferTexture</class>
    <namespace>Magnum</namespace>
  </compound>
  <compound kind="file">
    <name>BufferTextureFormat.h</name>
    <path>/home/mosra/Code/magnum/src/Magnum/</path>
    <filename>BufferTextureFormat_8h</filename>
    <includes id="OpenGL_8h" name="OpenGL.h" local="yes" imported="no">Magnum/OpenGL.h</includes>
    <namespace>Magnum</namespace>
    <member kind="enumeration">
      <type></type>
      <name>BufferTextureFormat</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>afaa2d98dfce5d92a7fed6a4e71138ad1</anchor>
      <arglist></arglist>
      <enumvalue file="namespaceMagnum.html" anchor="afaa2d98dfce5d92a7fed6a4e71138ad1acfff813d86d447fa2a9c858650ebbb90">R8</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="afaa2d98dfce5d92a7fed6a4e71138ad1a0367a93b9e3e7aa2fbe9802d80298e46">RG8</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="afaa2d98dfce5d92a7fed6a4e71138ad1ab4b279046a02077466fa26cabb00c642">RGBA8</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="afaa2d98dfce5d92a7fed6a4e71138ad1a9a486e1a3c543c7c58e1cc8086dc4239">R16</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="afaa2d98dfce5d92a7fed6a4e71138ad1a2b66caa416f0a28686ade3fc30ab223a">RG16</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="afaa2d98dfce5d92a7fed6a4e71138ad1a50989efe15b375dce8ba3a5714fe2543">RGBA16</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="afaa2d98dfce5d92a7fed6a4e71138ad1a477722a31a67b4a8f4bdb09e796e343b">R8UI</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="afaa2d98dfce5d92a7fed6a4e71138ad1a65264dd5d010ab021cbec10f07f97ed5">RG8UI</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="afaa2d98dfce5d92a7fed6a4e71138ad1aeb843f86a572765b9be8a71bd9563bea">RGBA8UI</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="afaa2d98dfce5d92a7fed6a4e71138ad1a1ab8b9cd2509e2ccf930739d6d29ff35">R8I</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="afaa2d98dfce5d92a7fed6a4e71138ad1af16a55975b8a8daa365e5b3cb116a001">RG8I</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="afaa2d98dfce5d92a7fed6a4e71138ad1ab99d001604e415e4ea7f107daaffd6dd">RGBA8I</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="afaa2d98dfce5d92a7fed6a4e71138ad1ac13d06830e39e268be15adfae07d9eb0">R16UI</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="afaa2d98dfce5d92a7fed6a4e71138ad1a4475a780df31a86ece088a8aac082b12">RG16UI</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="afaa2d98dfce5d92a7fed6a4e71138ad1ae418a751a46186248578aecf3f30a26c">RGBA16UI</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="afaa2d98dfce5d92a7fed6a4e71138ad1a3bf53b9d9aca5ddf22161b4c9d362f3f">R16I</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="afaa2d98dfce5d92a7fed6a4e71138ad1af0c6bc16df3d36b62adc241a797148de">RG16I</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="afaa2d98dfce5d92a7fed6a4e71138ad1a3d8d82a913260a439bf38ed05d6d2f46">RGBA16I</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="afaa2d98dfce5d92a7fed6a4e71138ad1a2c102dbf18ef5770d3beb5385661c1c2">R32UI</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="afaa2d98dfce5d92a7fed6a4e71138ad1ac16ead63f9b07b5c97635edac05412cd">RG32UI</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="afaa2d98dfce5d92a7fed6a4e71138ad1ae240d3e394b6a7cfa467efe512e96bb4">RGB32UI</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="afaa2d98dfce5d92a7fed6a4e71138ad1ac050956335d883e2f6ed07cc6b0c90d8">RGBA32UI</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="afaa2d98dfce5d92a7fed6a4e71138ad1a88996871eb63291d92c2f9d83219648a">R32I</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="afaa2d98dfce5d92a7fed6a4e71138ad1a56014c7d6ebfadbff4d0d4d3c20a0243">RG32I</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="afaa2d98dfce5d92a7fed6a4e71138ad1a8305c7f5432d31774cceb858c966b22e">RGB32I</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="afaa2d98dfce5d92a7fed6a4e71138ad1a9f87275b4130dd118085dd75ee6a7ac1">RGBA32I</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="afaa2d98dfce5d92a7fed6a4e71138ad1a8dfbaada0d68227f5c299c2aa637df68">R16F</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="afaa2d98dfce5d92a7fed6a4e71138ad1ad28539b874a2bc4c5d40f49b375af474">RG16F</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="afaa2d98dfce5d92a7fed6a4e71138ad1aa29d843695056f9c171a9eb702d6910a">RGBA16F</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="afaa2d98dfce5d92a7fed6a4e71138ad1aca70b53fb0610461a2327973614a76ce">R32F</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="afaa2d98dfce5d92a7fed6a4e71138ad1ab968b93cd3c34fc9583050ce7e267394">RG32F</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="afaa2d98dfce5d92a7fed6a4e71138ad1ad8936cc7055546f79128b9dbfb8c8bbb">RGB32F</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="afaa2d98dfce5d92a7fed6a4e71138ad1a703a7a81e586669c930e3dcaf3e8c428">RGBA32F</enumvalue>
    </member>
  </compound>
  <compound kind="file">
    <name>Color.h</name>
    <path>/home/mosra/Code/magnum/src/Magnum/</path>
    <filename>Color_8h</filename>
    <includes id="Magnum_8h" name="Magnum.h" local="yes" imported="no">Magnum/Magnum.h</includes>
    <includes id="Math_2Color_8h" name="Color.h" local="yes" imported="no">Magnum/Math/Color.h</includes>
    <namespace>Magnum</namespace>
    <member kind="typedef">
      <type>Math::Color3&lt; T &gt;</type>
      <name>BasicColor3</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a64f58d323718a49ca6cd58ccbfcf6a4e</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::Color4&lt; T &gt;</type>
      <name>BasicColor4</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a7d6a3f1120122300d9e6ad81e29136e2</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Color.h</name>
    <path>/home/mosra/Code/magnum/src/Magnum/Math/</path>
    <filename>Math_2Color_8h</filename>
    <includes id="Matrix_8h" name="Matrix.h" local="yes" imported="no">Magnum/Math/Matrix.h</includes>
    <includes id="Packing_8h" name="Packing.h" local="yes" imported="no">Magnum/Math/Packing.h</includes>
    <includes id="Vector4_8h" name="Vector4.h" local="yes" imported="no">Magnum/Math/Vector4.h</includes>
    <class kind="class">Magnum::Math::Color3</class>
    <class kind="class">Magnum::Math::Color4</class>
    <class kind="struct">Corrade::Utility::ConfigurationValue&lt; Magnum::Math::Color3&lt; T &gt; &gt;</class>
    <class kind="struct">Corrade::Utility::ConfigurationValue&lt; Magnum::Math::Color4&lt; T &gt; &gt;</class>
    <namespace>Magnum</namespace>
    <namespace>Magnum::Math</namespace>
    <namespace>Magnum::Math::Literals</namespace>
    <member kind="function">
      <type>Vector3&lt; T &gt;</type>
      <name>xyYToXyz</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>a4fc7e7145d373b085fe34b3492b12b88</anchor>
      <arglist>(const Vector3&lt; T &gt; &amp;xyY)</arglist>
    </member>
    <member kind="function">
      <type>Vector3&lt; T &gt;</type>
      <name>xyzToXyY</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>a95bff66ce9604939340d44686f857aa6</anchor>
      <arglist>(const Vector3&lt; T &gt; &amp;xyz)</arglist>
    </member>
    <member kind="function">
      <type>constexpr Color3&lt; UnsignedByte &gt;</type>
      <name>operator&quot;&quot;_rgb</name>
      <anchorfile>namespaceMagnum_1_1Math_1_1Literals.html</anchorfile>
      <anchor>a4f0eadc3e56cafb0555955462d517a34</anchor>
      <arglist>(unsigned long long value)</arglist>
    </member>
    <member kind="function">
      <type>constexpr Vector3&lt; UnsignedByte &gt;</type>
      <name>operator&quot;&quot;_srgb</name>
      <anchorfile>namespaceMagnum_1_1Math_1_1Literals.html</anchorfile>
      <anchor>a9052c59f7064fa0cfbebc072fc2b9ea0</anchor>
      <arglist>(unsigned long long value)</arglist>
    </member>
    <member kind="function">
      <type>constexpr Color4&lt; UnsignedByte &gt;</type>
      <name>operator&quot;&quot;_rgba</name>
      <anchorfile>namespaceMagnum_1_1Math_1_1Literals.html</anchorfile>
      <anchor>af1fd45fb22c7abab7789420803854ce8</anchor>
      <arglist>(unsigned long long value)</arglist>
    </member>
    <member kind="function">
      <type>constexpr Vector4&lt; UnsignedByte &gt;</type>
      <name>operator&quot;&quot;_srgba</name>
      <anchorfile>namespaceMagnum_1_1Math_1_1Literals.html</anchorfile>
      <anchor>a06c6b73f0ff0dc013473d471c291a004</anchor>
      <arglist>(unsigned long long value)</arglist>
    </member>
    <member kind="function">
      <type>Color3&lt; Float &gt;</type>
      <name>operator&quot;&quot;_rgbf</name>
      <anchorfile>namespaceMagnum_1_1Math_1_1Literals.html</anchorfile>
      <anchor>ad7f076b5e49b4994187962381ec8ab25</anchor>
      <arglist>(unsigned long long value)</arglist>
    </member>
    <member kind="function">
      <type>Color3&lt; Float &gt;</type>
      <name>operator&quot;&quot;_srgbf</name>
      <anchorfile>namespaceMagnum_1_1Math_1_1Literals.html</anchorfile>
      <anchor>a32d61d07f3015fa8e918913ff59b1d6a</anchor>
      <arglist>(unsigned long long value)</arglist>
    </member>
    <member kind="function">
      <type>Color4&lt; Float &gt;</type>
      <name>operator&quot;&quot;_rgbaf</name>
      <anchorfile>namespaceMagnum_1_1Math_1_1Literals.html</anchorfile>
      <anchor>a2d8cc91f17b65523b10d3cb3b3f959e7</anchor>
      <arglist>(unsigned long long value)</arglist>
    </member>
    <member kind="function">
      <type>Color4&lt; Float &gt;</type>
      <name>operator&quot;&quot;_srgbaf</name>
      <anchorfile>namespaceMagnum_1_1Math_1_1Literals.html</anchorfile>
      <anchor>ae2004bd1cd605e290e19b8566da65934</anchor>
      <arglist>(unsigned long long value)</arglist>
    </member>
    <member kind="function">
      <type>Corrade::Utility::Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>afae5b383b9623a3b56c4fae43a16b9ca</anchor>
      <arglist>(Corrade::Utility::Debug &amp;debug, const Color3&lt; UnsignedByte &gt; &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>Corrade::Utility::Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>a338890901a6aa2d1e80e689f9b2532a4</anchor>
      <arglist>(Corrade::Utility::Debug &amp;debug, const Color4&lt; UnsignedByte &gt; &amp;value)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>ColorFormat.h</name>
    <path>/home/mosra/Code/magnum/src/Magnum/</path>
    <filename>ColorFormat_8h</filename>
    <includes id="PixelFormat_8h" name="PixelFormat.h" local="yes" imported="no">Magnum/PixelFormat.h</includes>
    <namespace>Magnum</namespace>
    <member kind="typedef">
      <type>PixelFormat</type>
      <name>ColorFormat</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a95e18e6d2271577f091b368109c8103a</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>PixelType</type>
      <name>ColorType</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a7839428a8ba5920a68da32ad33d74b0e</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>CompressedPixelFormat</type>
      <name>CompressedColorFormat</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a74efc9793a9f7d3de27c508a1c9c4e9b</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>CubeMapTexture.h</name>
    <path>/home/mosra/Code/magnum/src/Magnum/</path>
    <filename>CubeMapTexture_8h</filename>
    <includes id="AbstractTexture_8h" name="AbstractTexture.h" local="yes" imported="no">Magnum/AbstractTexture.h</includes>
    <includes id="Array_8h" name="Array.h" local="yes" imported="no">Magnum/Array.h</includes>
    <includes id="Vector2_8h" name="Vector2.h" local="yes" imported="no">Magnum/Math/Vector2.h</includes>
    <class kind="class">Magnum::CubeMapTexture</class>
    <namespace>Magnum</namespace>
    <member kind="enumeration">
      <type></type>
      <name>CubeMapCoordinate</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a6e3143b79f2fdb0865096c2c940b5590</anchor>
      <arglist></arglist>
      <enumvalue file="namespaceMagnum.html" anchor="a6e3143b79f2fdb0865096c2c940b5590a9f082d04c481aab268b9f614d2ffd129">PositiveX</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a6e3143b79f2fdb0865096c2c940b5590a963a8a64a09d54efc81b136ca6be21b2">NegativeX</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a6e3143b79f2fdb0865096c2c940b5590ac53c385ced96bd629c0f45a902aceba3">PositiveY</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a6e3143b79f2fdb0865096c2c940b5590ae4d5f02ceecd15caf66e9f0b2393c86b">NegativeY</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a6e3143b79f2fdb0865096c2c940b5590a1921c16ffdafaf04e378ca1b6774c0ce">PositiveZ</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a6e3143b79f2fdb0865096c2c940b5590ada76df034cd139bd515761c8bb8e3090">NegativeZ</enumvalue>
    </member>
  </compound>
  <compound kind="file">
    <name>CubeMapTextureArray.h</name>
    <path>/home/mosra/Code/magnum/src/Magnum/</path>
    <filename>CubeMapTextureArray_8h</filename>
    <includes id="AbstractTexture_8h" name="AbstractTexture.h" local="yes" imported="no">Magnum/AbstractTexture.h</includes>
    <includes id="Array_8h" name="Array.h" local="yes" imported="no">Magnum/Array.h</includes>
    <includes id="Vector3_8h" name="Vector3.h" local="yes" imported="no">Magnum/Math/Vector3.h</includes>
    <class kind="class">Magnum::CubeMapTextureArray</class>
    <namespace>Magnum</namespace>
  </compound>
  <compound kind="file">
    <name>DebugMessage.h</name>
    <path>/home/mosra/Code/magnum/src/Magnum/</path>
    <filename>DebugMessage_8h</filename>
    <includes id="DebugOutput_8h" name="DebugOutput.h" local="yes" imported="no">Magnum/DebugOutput.h</includes>
  </compound>
  <compound kind="file">
    <name>DebugOutput.h</name>
    <path>/home/mosra/Code/magnum/src/Magnum/</path>
    <filename>DebugOutput_8h</filename>
    <includes id="OpenGL_8h" name="OpenGL.h" local="yes" imported="no">Magnum/OpenGL.h</includes>
    <includes id="Magnum_8h" name="Magnum.h" local="yes" imported="no">Magnum/Magnum.h</includes>
    <class kind="class">Magnum::DebugOutput</class>
    <class kind="class">Magnum::DebugMessage</class>
    <class kind="class">Magnum::DebugGroup</class>
    <namespace>Magnum</namespace>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a8ebfbeb18914398a29b94bb905a2d27d</anchor>
      <arglist>(Debug &amp;debug, DebugOutput::Source value)</arglist>
    </member>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a46414fbbd0eb0fa569512e82d9ee9e22</anchor>
      <arglist>(Debug &amp;debug, DebugOutput::Type value)</arglist>
    </member>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a89d1fd21bfaa208055a8c0c9520776e2</anchor>
      <arglist>(Debug &amp;debug, DebugOutput::Severity value)</arglist>
    </member>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a757e23b71bfbb06869da1eba3b7d45da</anchor>
      <arglist>(Debug &amp;debug, DebugMessage::Source value)</arglist>
    </member>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>ab1f7b8a72a9a538560f8f0606ca1f4a8</anchor>
      <arglist>(Debug &amp;debug, DebugMessage::Type value)</arglist>
    </member>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>ac94d5fde25c824e3f7cafb1c0ff7cb13</anchor>
      <arglist>(Debug &amp;debug, DebugGroup::Source value)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>BufferData.h</name>
    <path>/home/mosra/Code/magnum/src/Magnum/DebugTools/</path>
    <filename>BufferData_8h</filename>
    <includes id="Buffer_8h" name="Buffer.h" local="yes" imported="no">Magnum/Buffer.h</includes>
    <namespace>Magnum</namespace>
    <namespace>Magnum::DebugTools</namespace>
    <member kind="function">
      <type>Containers::Array&lt; T &gt;</type>
      <name>bufferSubData</name>
      <anchorfile>namespaceMagnum_1_1DebugTools.html</anchorfile>
      <anchor>a89dba3f796030e917bc98b377790e247</anchor>
      <arglist>(Buffer &amp;buffer, GLintptr offset, GLsizeiptr size)</arglist>
    </member>
    <member kind="function">
      <type>Containers::Array&lt; T &gt;</type>
      <name>bufferData</name>
      <anchorfile>namespaceMagnum_1_1DebugTools.html</anchorfile>
      <anchor>a811ee8d2f20eddef70e4b926564f8cba</anchor>
      <arglist>(Buffer &amp;buffer)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>CompareImage.h</name>
    <path>/home/mosra/Code/magnum/src/Magnum/DebugTools/</path>
    <filename>CompareImage_8h</filename>
    <includes id="Magnum_8h" name="Magnum.h" local="yes" imported="no">Magnum/Magnum.h</includes>
    <includes id="Vector2_8h" name="Vector2.h" local="yes" imported="no">Magnum/Math/Vector2.h</includes>
    <class kind="class">Magnum::DebugTools::CompareImage</class>
    <namespace>Magnum</namespace>
    <namespace>Magnum::DebugTools</namespace>
  </compound>
  <compound kind="file">
    <name>DebugTools.h</name>
    <path>/home/mosra/Code/magnum/src/Magnum/DebugTools/</path>
    <filename>DebugTools_8h</filename>
    <includes id="Types_8h" name="Types.h" local="yes" imported="no">Magnum/Types.h</includes>
    <namespace>Magnum</namespace>
    <namespace>Magnum::DebugTools</namespace>
  </compound>
  <compound kind="file">
    <name>ForceRenderer.h</name>
    <path>/home/mosra/Code/magnum/src/Magnum/DebugTools/</path>
    <filename>ForceRenderer_8h</filename>
    <includes id="Resource_8h" name="Resource.h" local="yes" imported="no">Magnum/Resource.h</includes>
    <includes id="Math_2Color_8h" name="Color.h" local="yes" imported="no">Magnum/Math/Color.h</includes>
    <includes id="Drawable_8h" name="Drawable.h" local="yes" imported="no">Magnum/SceneGraph/Drawable.h</includes>
    <includes id="Shaders_8h" name="Shaders.h" local="yes" imported="no">Magnum/Shaders/Shaders.h</includes>
    <class kind="class">Magnum::DebugTools::ForceRendererOptions</class>
    <class kind="class">Magnum::DebugTools::ForceRenderer</class>
    <namespace>Magnum</namespace>
    <namespace>Magnum::DebugTools</namespace>
    <member kind="typedef">
      <type>ForceRenderer&lt; 2 &gt;</type>
      <name>ForceRenderer2D</name>
      <anchorfile>namespaceMagnum_1_1DebugTools.html</anchorfile>
      <anchor>ab424a866e4229e281823e583db39ad4c</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>ForceRenderer&lt; 3 &gt;</type>
      <name>ForceRenderer3D</name>
      <anchorfile>namespaceMagnum_1_1DebugTools.html</anchorfile>
      <anchor>a2071f737c8f9bf87b840e6c12609c281</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>ObjectRenderer.h</name>
    <path>/home/mosra/Code/magnum/src/Magnum/DebugTools/</path>
    <filename>ObjectRenderer_8h</filename>
    <includes id="Resource_8h" name="Resource.h" local="yes" imported="no">Magnum/Resource.h</includes>
    <includes id="Drawable_8h" name="Drawable.h" local="yes" imported="no">Magnum/SceneGraph/Drawable.h</includes>
    <includes id="Shaders_8h" name="Shaders.h" local="yes" imported="no">Magnum/Shaders/Shaders.h</includes>
    <class kind="class">Magnum::DebugTools::ObjectRendererOptions</class>
    <class kind="class">Magnum::DebugTools::ObjectRenderer</class>
    <namespace>Magnum</namespace>
    <namespace>Magnum::DebugTools</namespace>
    <member kind="typedef">
      <type>ObjectRenderer&lt; 2 &gt;</type>
      <name>ObjectRenderer2D</name>
      <anchorfile>namespaceMagnum_1_1DebugTools.html</anchorfile>
      <anchor>a15125d3c82e81b2ce5f8b30cf05b331d</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>ObjectRenderer&lt; 3 &gt;</type>
      <name>ObjectRenderer3D</name>
      <anchorfile>namespaceMagnum_1_1DebugTools.html</anchorfile>
      <anchor>a784fac03e2e3837cd90f088564eadc3c</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Profiler.h</name>
    <path>/home/mosra/Code/magnum/src/Magnum/DebugTools/</path>
    <filename>Profiler_8h</filename>
    <includes id="Types_8h" name="Types.h" local="yes" imported="no">Magnum/Types.h</includes>
    <class kind="class">Magnum::DebugTools::Profiler</class>
    <namespace>Magnum</namespace>
    <namespace>Magnum::DebugTools</namespace>
  </compound>
  <compound kind="file">
    <name>ResourceManager.h</name>
    <path>/home/mosra/Code/magnum/src/Magnum/DebugTools/</path>
    <filename>DebugTools_2ResourceManager_8h</filename>
    <includes id="ResourceManager_8h" name="ResourceManager.h" local="yes" imported="no">Magnum/ResourceManager.h</includes>
    <includes id="Magnum_8h" name="Magnum.h" local="yes" imported="no">Magnum/Magnum.h</includes>
    <includes id="DebugTools_8h" name="DebugTools.h" local="yes" imported="no">Magnum/DebugTools/DebugTools.h</includes>
    <includes id="SceneGraph_8h" name="SceneGraph.h" local="yes" imported="no">Magnum/SceneGraph/SceneGraph.h</includes>
    <includes id="Shapes_8h" name="Shapes.h" local="yes" imported="no">Magnum/Shapes/Shapes.h</includes>
    <class kind="class">Magnum::DebugTools::ResourceManager</class>
    <namespace>Magnum</namespace>
    <namespace>Magnum::DebugTools</namespace>
  </compound>
  <compound kind="file">
    <name>ResourceManager.h</name>
    <path>/home/mosra/Code/magnum/src/Magnum/</path>
    <filename>ResourceManager_8h</filename>
    <includes id="Resource_8h" name="Resource.h" local="yes" imported="no">Magnum/Resource.h</includes>
    <includes id="AbstractResourceLoader_8h" name="AbstractResourceLoader.h" local="yes" imported="no">AbstractResourceLoader.h</includes>
    <class kind="class">Magnum::AbstractResourceLoader</class>
    <class kind="class">Magnum::ResourceManager</class>
    <namespace>Magnum</namespace>
    <member kind="enumeration">
      <type></type>
      <name>ResourceDataState</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a3dfce2e738ef695a502966dcfaa2d615</anchor>
      <arglist></arglist>
      <enumvalue file="namespaceMagnum.html" anchor="a3dfce2e738ef695a502966dcfaa2d615a16bfbf9c462762cf1cba4134ec53c504">Loading</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a3dfce2e738ef695a502966dcfaa2d615a38c300f4fc9ce8a77aad4a30de05cad8">NotFound</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a3dfce2e738ef695a502966dcfaa2d615ad924522d30d6615e9f71e91504364a9d">Mutable</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a3dfce2e738ef695a502966dcfaa2d615abeae421a14a34f831c113f61323d1ab3">Final</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>ResourcePolicy</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>aabe552f4e54e32a9706638e6423af077</anchor>
      <arglist></arglist>
      <enumvalue file="namespaceMagnum.html" anchor="aabe552f4e54e32a9706638e6423af077abad08a863dfd6ade28fd8ef69b15005a">Resident</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="aabe552f4e54e32a9706638e6423af077ae1ba155a9f2e8c3be94020eef32a0301">Manual</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="aabe552f4e54e32a9706638e6423af077a3dbff95bbc40eaab0fb54197ff7f56c6">ReferenceCounted</enumvalue>
    </member>
  </compound>
  <compound kind="file">
    <name>ShapeRenderer.h</name>
    <path>/home/mosra/Code/magnum/src/Magnum/DebugTools/</path>
    <filename>ShapeRenderer_8h</filename>
    <includes id="Resource_8h" name="Resource.h" local="yes" imported="no">Magnum/Resource.h</includes>
    <includes id="Math_2Color_8h" name="Color.h" local="yes" imported="no">Magnum/Math/Color.h</includes>
    <includes id="Drawable_8h" name="Drawable.h" local="yes" imported="no">Magnum/SceneGraph/Drawable.h</includes>
    <includes id="Shapes_8h" name="Shapes.h" local="yes" imported="no">Magnum/Shapes/Shapes.h</includes>
    <class kind="class">Magnum::DebugTools::ShapeRenderer</class>
    <class kind="class">Magnum::DebugTools::ShapeRendererOptions</class>
    <class kind="class">Magnum::DebugTools::ShapeRenderer</class>
    <namespace>Magnum</namespace>
    <namespace>Magnum::DebugTools</namespace>
    <member kind="typedef">
      <type>ShapeRenderer&lt; 2 &gt;</type>
      <name>ShapeRenderer2D</name>
      <anchorfile>namespaceMagnum_1_1DebugTools.html</anchorfile>
      <anchor>ab0b120fd9a7cd20ab8692227d00d0dd4</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>ShapeRenderer&lt; 3 &gt;</type>
      <name>ShapeRenderer3D</name>
      <anchorfile>namespaceMagnum_1_1DebugTools.html</anchorfile>
      <anchor>a41482458e69f86bf0e21c3ea541df7d8</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>TextureImage.h</name>
    <path>/home/mosra/Code/magnum/src/Magnum/DebugTools/</path>
    <filename>TextureImage_8h</filename>
    <includes id="Magnum_8h" name="Magnum.h" local="yes" imported="no">Magnum/Magnum.h</includes>
    <namespace>Magnum</namespace>
    <namespace>Magnum::DebugTools</namespace>
    <member kind="function">
      <type>void</type>
      <name>textureSubImage</name>
      <anchorfile>namespaceMagnum_1_1DebugTools.html</anchorfile>
      <anchor>af68fbf2db8eba95b372ccd6d13969588</anchor>
      <arglist>(Texture2D &amp;texture, Int level, const Range2Di &amp;range, Image2D &amp;image)</arglist>
    </member>
    <member kind="function">
      <type>Image2D</type>
      <name>textureSubImage</name>
      <anchorfile>namespaceMagnum_1_1DebugTools.html</anchorfile>
      <anchor>ac2ac2e5b55487eb4059f71e7187c3fa9</anchor>
      <arglist>(Texture2D &amp;texture, Int level, const Range2Di &amp;range, Image2D &amp;&amp;image)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>textureSubImage</name>
      <anchorfile>namespaceMagnum_1_1DebugTools.html</anchorfile>
      <anchor>a1675724ae9211bca4daf9fb672937a39</anchor>
      <arglist>(CubeMapTexture &amp;texture, CubeMapCoordinate coordinate, Int level, const Range2Di &amp;range, Image2D &amp;image)</arglist>
    </member>
    <member kind="function">
      <type>Image2D</type>
      <name>textureSubImage</name>
      <anchorfile>namespaceMagnum_1_1DebugTools.html</anchorfile>
      <anchor>a04c253390589d6cbea708308fc202bcc</anchor>
      <arglist>(CubeMapTexture &amp;texture, CubeMapCoordinate coordinate, Int level, const Range2Di &amp;range, Image2D &amp;&amp;image)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>textureSubImage</name>
      <anchorfile>namespaceMagnum_1_1DebugTools.html</anchorfile>
      <anchor>a93c26ce85beda2ab84f16d405b64e1e4</anchor>
      <arglist>(Texture2D &amp;texture, Int level, const Range2Di &amp;range, BufferImage2D &amp;image, BufferUsage usage)</arglist>
    </member>
    <member kind="function">
      <type>BufferImage2D</type>
      <name>textureSubImage</name>
      <anchorfile>namespaceMagnum_1_1DebugTools.html</anchorfile>
      <anchor>a976366b87265d61b6953f4e1ed068492</anchor>
      <arglist>(Texture2D &amp;texture, Int level, const Range2Di &amp;range, BufferImage2D &amp;&amp;image, BufferUsage usage)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>textureSubImage</name>
      <anchorfile>namespaceMagnum_1_1DebugTools.html</anchorfile>
      <anchor>aa99c8216504843d232ee035f44dee17a</anchor>
      <arglist>(CubeMapTexture &amp;texture, CubeMapCoordinate coordinate, Int level, const Range2Di &amp;range, BufferImage2D &amp;image, BufferUsage usage)</arglist>
    </member>
    <member kind="function">
      <type>BufferImage2D</type>
      <name>textureSubImage</name>
      <anchorfile>namespaceMagnum_1_1DebugTools.html</anchorfile>
      <anchor>ad395035b14dca808916ee3199bc2a23c</anchor>
      <arglist>(CubeMapTexture &amp;texture, CubeMapCoordinate coordinate, Int level, const Range2Di &amp;range, BufferImage2D &amp;&amp;image, BufferUsage usage)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>DefaultFramebuffer.h</name>
    <path>/home/mosra/Code/magnum/src/Magnum/</path>
    <filename>DefaultFramebuffer_8h</filename>
    <includes id="AbstractFramebuffer_8h" name="AbstractFramebuffer.h" local="yes" imported="no">Magnum/AbstractFramebuffer.h</includes>
    <class kind="class">Magnum::DefaultFramebuffer</class>
    <namespace>Magnum</namespace>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a67c85d774decf9566ce34f0861b88198</anchor>
      <arglist>(Debug &amp;debug, DefaultFramebuffer::Status value)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>DimensionTraits.h</name>
    <path>/home/mosra/Code/magnum/src/Magnum/</path>
    <filename>DimensionTraits_8h</filename>
    <includes id="Math_8h" name="Math.h" local="yes" imported="no">Magnum/Math/Math.h</includes>
    <includes id="Types_8h" name="Types.h" local="yes" imported="no">Magnum/Types.h</includes>
    <class kind="struct">Magnum::DimensionTraits</class>
    <namespace>Magnum</namespace>
    <member kind="typedef">
      <type>typename DimensionTraits&lt; dimensions, T &gt;::VectorType</type>
      <name>VectorTypeFor</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a022aba204e515fbaa051f9ec7274b20c</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>typename DimensionTraits&lt; dimensions, T &gt;::RangeType</type>
      <name>RangeTypeFor</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a3a90a71567e8cb1174697e8607d7f854</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>typename DimensionTraits&lt; dimensions, T &gt;::MatrixType</type>
      <name>MatrixTypeFor</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a66bd8e5ed82475aaa74ae683a28875d5</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Framebuffer.h</name>
    <path>/home/mosra/Code/magnum/src/Magnum/</path>
    <filename>Framebuffer_8h</filename>
    <includes id="AbstractFramebuffer_8h" name="AbstractFramebuffer.h" local="yes" imported="no">Magnum/AbstractFramebuffer.h</includes>
    <includes id="Tags_8h" name="Tags.h" local="yes" imported="no">Magnum/Tags.h</includes>
    <class kind="class">Magnum::Framebuffer</class>
    <class kind="class">Magnum::Framebuffer::ColorAttachment</class>
    <class kind="class">Magnum::Framebuffer::DrawAttachment</class>
    <class kind="class">Magnum::Framebuffer::BufferAttachment</class>
    <class kind="class">Magnum::Framebuffer::InvalidationAttachment</class>
    <namespace>Magnum</namespace>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a969df0ccdd40303d80c983c3eda61ef8</anchor>
      <arglist>(Debug &amp;debug, Framebuffer::Status value)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Image.h</name>
    <path>/home/mosra/Code/magnum/src/Magnum/</path>
    <filename>Image_8h</filename>
    <includes id="ImageView_8h" name="ImageView.h" local="yes" imported="no">Magnum/ImageView.h</includes>
    <class kind="class">Magnum::Image</class>
    <class kind="class">Magnum::CompressedImage</class>
    <namespace>Magnum</namespace>
    <member kind="typedef">
      <type>Image&lt; 1 &gt;</type>
      <name>Image1D</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>ae1b8a158cc31e09cbe1fba24fec2fa9a</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Image&lt; 2 &gt;</type>
      <name>Image2D</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a99b46de11af429ac8c1af52f59602cee</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Image&lt; 3 &gt;</type>
      <name>Image3D</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a2388ee336623bf115b28b756a445931b</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>CompressedImage&lt; 1 &gt;</type>
      <name>CompressedImage1D</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>ae48c7bfe2c52754baf1d435592b79702</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>CompressedImage&lt; 2 &gt;</type>
      <name>CompressedImage2D</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>af2d28d2e31d7e620320c124c1e636207</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>CompressedImage&lt; 3 &gt;</type>
      <name>CompressedImage3D</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a0dddd7f6782f6c0047f712e4d50f938d</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>ImageFormat.h</name>
    <path>/home/mosra/Code/magnum/src/Magnum/</path>
    <filename>ImageFormat_8h</filename>
    <includes id="OpenGL_8h" name="OpenGL.h" local="no" imported="no">Magnum/OpenGL.h</includes>
    <namespace>Magnum</namespace>
    <member kind="enumeration">
      <type></type>
      <name>ImageAccess</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a2655a4d120e8e4b0b49f4f6da1d7a28e</anchor>
      <arglist></arglist>
      <enumvalue file="namespaceMagnum.html" anchor="a2655a4d120e8e4b0b49f4f6da1d7a28ea131fb182a881796e7606ed6da27f1197">ReadOnly</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a2655a4d120e8e4b0b49f4f6da1d7a28ea53dfe5089ae9e65887cb0215cb0098f5">WriteOnly</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a2655a4d120e8e4b0b49f4f6da1d7a28ea70a2a84088d405a2e3f1e3accaa16723">ReadWrite</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>ImageFormat</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>ad7077172558844b4537b6b5bebb3acf1</anchor>
      <arglist></arglist>
      <enumvalue file="namespaceMagnum.html" anchor="ad7077172558844b4537b6b5bebb3acf1acfff813d86d447fa2a9c858650ebbb90">R8</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="ad7077172558844b4537b6b5bebb3acf1a0367a93b9e3e7aa2fbe9802d80298e46">RG8</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="ad7077172558844b4537b6b5bebb3acf1ab4b279046a02077466fa26cabb00c642">RGBA8</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="ad7077172558844b4537b6b5bebb3acf1ae24128a61e28847e5cae93e146f3c396">R8Snorm</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="ad7077172558844b4537b6b5bebb3acf1a0c1bc4554d3ca92e8ed03fde8fb668fc">RG8Snorm</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="ad7077172558844b4537b6b5bebb3acf1a77b2290184a281692c88cea55f7e4709">RGBA8Snorm</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="ad7077172558844b4537b6b5bebb3acf1a9a486e1a3c543c7c58e1cc8086dc4239">R16</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="ad7077172558844b4537b6b5bebb3acf1a2b66caa416f0a28686ade3fc30ab223a">RG16</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="ad7077172558844b4537b6b5bebb3acf1a50989efe15b375dce8ba3a5714fe2543">RGBA16</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="ad7077172558844b4537b6b5bebb3acf1a3be85f3a039758c6edb91c91b7af98d2">R16Snorm</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="ad7077172558844b4537b6b5bebb3acf1a7e7693eb3b20e62d8af832c2fe116559">RG16Snorm</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="ad7077172558844b4537b6b5bebb3acf1a825f61116ed1837ab9125c3e1921d860">RGBA16Snorm</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="ad7077172558844b4537b6b5bebb3acf1a477722a31a67b4a8f4bdb09e796e343b">R8UI</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="ad7077172558844b4537b6b5bebb3acf1a65264dd5d010ab021cbec10f07f97ed5">RG8UI</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="ad7077172558844b4537b6b5bebb3acf1aeb843f86a572765b9be8a71bd9563bea">RGBA8UI</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="ad7077172558844b4537b6b5bebb3acf1a1ab8b9cd2509e2ccf930739d6d29ff35">R8I</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="ad7077172558844b4537b6b5bebb3acf1af16a55975b8a8daa365e5b3cb116a001">RG8I</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="ad7077172558844b4537b6b5bebb3acf1ab99d001604e415e4ea7f107daaffd6dd">RGBA8I</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="ad7077172558844b4537b6b5bebb3acf1ac13d06830e39e268be15adfae07d9eb0">R16UI</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="ad7077172558844b4537b6b5bebb3acf1a4475a780df31a86ece088a8aac082b12">RG16UI</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="ad7077172558844b4537b6b5bebb3acf1ae418a751a46186248578aecf3f30a26c">RGBA16UI</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="ad7077172558844b4537b6b5bebb3acf1a3bf53b9d9aca5ddf22161b4c9d362f3f">R16I</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="ad7077172558844b4537b6b5bebb3acf1af0c6bc16df3d36b62adc241a797148de">RG16I</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="ad7077172558844b4537b6b5bebb3acf1a3d8d82a913260a439bf38ed05d6d2f46">RGBA16I</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="ad7077172558844b4537b6b5bebb3acf1a2c102dbf18ef5770d3beb5385661c1c2">R32UI</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="ad7077172558844b4537b6b5bebb3acf1ac16ead63f9b07b5c97635edac05412cd">RG32UI</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="ad7077172558844b4537b6b5bebb3acf1ac050956335d883e2f6ed07cc6b0c90d8">RGBA32UI</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="ad7077172558844b4537b6b5bebb3acf1a88996871eb63291d92c2f9d83219648a">R32I</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="ad7077172558844b4537b6b5bebb3acf1a56014c7d6ebfadbff4d0d4d3c20a0243">RG32I</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="ad7077172558844b4537b6b5bebb3acf1a9f87275b4130dd118085dd75ee6a7ac1">RGBA32I</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="ad7077172558844b4537b6b5bebb3acf1a8dfbaada0d68227f5c299c2aa637df68">R16F</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="ad7077172558844b4537b6b5bebb3acf1ad28539b874a2bc4c5d40f49b375af474">RG16F</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="ad7077172558844b4537b6b5bebb3acf1aa29d843695056f9c171a9eb702d6910a">RGBA16F</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="ad7077172558844b4537b6b5bebb3acf1aca70b53fb0610461a2327973614a76ce">R32F</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="ad7077172558844b4537b6b5bebb3acf1ab968b93cd3c34fc9583050ce7e267394">RG32F</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="ad7077172558844b4537b6b5bebb3acf1a703a7a81e586669c930e3dcaf3e8c428">RGBA32F</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="ad7077172558844b4537b6b5bebb3acf1ac749b8eee74e3b7b60f8774178537dea">R11FG11FB10F</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="ad7077172558844b4537b6b5bebb3acf1a4cad8c5058101f0f527e306958b6641b">RGB10A2</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="ad7077172558844b4537b6b5bebb3acf1a1d8555f4846b8791e329e36dcd5239dc">RGB10A2UI</enumvalue>
    </member>
  </compound>
  <compound kind="file">
    <name>ImageReference.h</name>
    <path>/home/mosra/Code/magnum/src/Magnum/</path>
    <filename>ImageReference_8h</filename>
    <includes id="ImageView_8h" name="ImageView.h" local="yes" imported="no">Magnum/ImageView.h</includes>
    <namespace>Magnum</namespace>
    <member kind="typedef">
      <type>ImageView&lt; dimensions &gt;</type>
      <name>ImageReference</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a6ea32a8ad5e2ad148efa998850a57238</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>ImageView1D</type>
      <name>ImageReference1D</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a4d3f54574dccd2acfd2641281536459f</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>ImageView2D</type>
      <name>ImageReference2D</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>aea26cc140d2086ac5568a13e3985e1f2</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>ImageView3D</type>
      <name>ImageReference3D</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>ab2d0fda70f4df9050b81d40353491e45</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>ImageView.h</name>
    <path>/home/mosra/Code/magnum/src/Magnum/</path>
    <filename>ImageView_8h</filename>
    <includes id="DimensionTraits_8h" name="DimensionTraits.h" local="yes" imported="no">Magnum/DimensionTraits.h</includes>
    <includes id="PixelStorage_8h" name="PixelStorage.h" local="yes" imported="no">Magnum/PixelStorage.h</includes>
    <includes id="Vector4_8h" name="Vector4.h" local="yes" imported="no">Magnum/Math/Vector4.h</includes>
    <class kind="class">Magnum::ImageView</class>
    <class kind="class">Magnum::CompressedImageView</class>
    <namespace>Magnum</namespace>
    <member kind="typedef">
      <type>ImageView&lt; 1 &gt;</type>
      <name>ImageView1D</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a52c690705313e0dfde62d0f5315953be</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>ImageView&lt; 2 &gt;</type>
      <name>ImageView2D</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a4e378fbaa61814138523f9ee49e2c2c0</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>ImageView&lt; 3 &gt;</type>
      <name>ImageView3D</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a4f151ab2ce87b457b9dd503c3aa162c1</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>CompressedImageView&lt; 1 &gt;</type>
      <name>CompressedImageView1D</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a17f67f03d9d178db86121ea1385d3e33</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>CompressedImageView&lt; 2 &gt;</type>
      <name>CompressedImageView2D</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a7f75b72713e3d1f671354cbd0c261b7e</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>CompressedImageView&lt; 3 &gt;</type>
      <name>CompressedImageView3D</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>abb65097cc08025b36cae174ad55a7bff</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Magnum.h</name>
    <path>/home/mosra/Code/magnum/src/Magnum/</path>
    <filename>Magnum_8h</filename>
    <includes id="Types_8h" name="Types.h" local="yes" imported="no">Magnum/Types.h</includes>
    <includes id="Math_8h" name="Math.h" local="yes" imported="no">Magnum/Math/Math.h</includes>
    <namespace>Magnum</namespace>
    <namespace>Magnum::Math</namespace>
    <member kind="define">
      <type>#define</type>
      <name>MAGNUM_BUILD_DEPRECATED</name>
      <anchorfile>Magnum_8h.html</anchorfile>
      <anchor>a8fa4463a10327399ce45e0c89e4f5f2f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MAGNUM_BUILD_STATIC</name>
      <anchorfile>Magnum_8h.html</anchorfile>
      <anchor>ab3cb5d95ad0e97694869fb6119c3f9bf</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MAGNUM_BUILD_MULTITHREADED</name>
      <anchorfile>Magnum_8h.html</anchorfile>
      <anchor>af2d9ad7711f07880ba64835331927d64</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MAGNUM_TARGET_GLES</name>
      <anchorfile>Magnum_8h.html</anchorfile>
      <anchor>a040fc39521bf551ab8455bc4e9cb3bfb</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MAGNUM_TARGET_GLES2</name>
      <anchorfile>Magnum_8h.html</anchorfile>
      <anchor>a530537d116aa1a63e49fd0b51d4b074e</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MAGNUM_TARGET_GLES3</name>
      <anchorfile>Magnum_8h.html</anchorfile>
      <anchor>a245ca638b06571f87f3f94fd8d923b4a</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MAGNUM_TARGET_DESKTOP_GLES</name>
      <anchorfile>Magnum_8h.html</anchorfile>
      <anchor>af29c1321505940d85d292406c096f55e</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MAGNUM_TARGET_WEBGL</name>
      <anchorfile>Magnum_8h.html</anchorfile>
      <anchor>a324f5f592a801cf550cf2351a4136f0b</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MAGNUM_TARGET_HEADLESS</name>
      <anchorfile>Magnum_8h.html</anchorfile>
      <anchor>a6dfcd4b8f56a7775aa9fc87cb07e7f43</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::uint8_t</type>
      <name>UnsignedByte</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a07cf9231dbda5f296cc205ab7ecb770f</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::int8_t</type>
      <name>Byte</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>ab3326c49ec1ed9b0bb5e292c1ad81f82</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::uint16_t</type>
      <name>UnsignedShort</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a909e88e5e85c567e854bedac5ef40abf</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::int16_t</type>
      <name>Short</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a8a61fb6a9a4bb99d17c5501a668927f2</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::uint32_t</type>
      <name>UnsignedInt</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a8d47f9ac6d7ced811b3d355990a3732b</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::int32_t</type>
      <name>Int</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>aee42530d46e85ad0d60312c3526f4c50</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::uint64_t</type>
      <name>UnsignedLong</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a864ee326698465e20b52c19fd7044ac0</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::int64_t</type>
      <name>Long</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>aadaf2d260758705587a825d8c8907a7d</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>float</type>
      <name>Float</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a232af7e6fd9b88195fbc59fcec2155cb</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::Half</type>
      <name>Half</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>ae9ad232db78b650420d4a56d3d67f0e6</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::Vector2&lt; Float &gt;</type>
      <name>Vector2</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a867c5cc7c779e5f990bcfb4457eb81e8</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::Vector3&lt; Float &gt;</type>
      <name>Vector3</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a6949fa86a0af6ed632c90d4223baeb59</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::Vector4&lt; Float &gt;</type>
      <name>Vector4</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a3f4cac6ff006e4e32682ebb2b117d7bc</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::Vector2&lt; UnsignedInt &gt;</type>
      <name>Vector2ui</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a4506781bc0ae351534004ec20d64cf2d</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::Vector3&lt; UnsignedInt &gt;</type>
      <name>Vector3ui</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a26df486c6774622c92b881350d4876a7</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::Vector4&lt; UnsignedInt &gt;</type>
      <name>Vector4ui</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>aeabe8282965e92504504ce4eae543187</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::Vector2&lt; Int &gt;</type>
      <name>Vector2i</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>ae3ac51b4e18ff95be7dd874c1cc861f7</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::Vector3&lt; Int &gt;</type>
      <name>Vector3i</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a053340a86ab63e587ab3773ff1265784</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::Vector4&lt; Int &gt;</type>
      <name>Vector4i</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a9e0f4dfa754bf25f9a9f39f84ae8f396</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::Color3&lt; Float &gt;</type>
      <name>Color3</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a99bf0ab337b9ed6ff6ccfd8ea147a900</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::Color4&lt; Float &gt;</type>
      <name>Color4</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a5cb8f674ed695b93b434b44bd7c96805</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::Color3&lt; UnsignedByte &gt;</type>
      <name>Color3ub</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>afde3a07a49799b474c74f186f01cbc25</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::Color4&lt; UnsignedByte &gt;</type>
      <name>Color4ub</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a1444bc0c8960f51e682cc718331c3c5d</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::Matrix3&lt; Float &gt;</type>
      <name>Matrix3</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a7abac7ed657a50f2964d6b2c4a1f7677</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::Matrix4&lt; Float &gt;</type>
      <name>Matrix4</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a28cfaaad41fdc6b258092278ba4569d5</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::Matrix2x2&lt; Float &gt;</type>
      <name>Matrix2x2</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>ae1523b3078a9f2b0f6dd83daded9e970</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::Matrix3x3&lt; Float &gt;</type>
      <name>Matrix3x3</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a7ee135be46a327f352d01287579e2acf</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::Matrix4x4&lt; Float &gt;</type>
      <name>Matrix4x4</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a1beb3e75007fb50638fe5b25d513a688</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::Matrix2x3&lt; Float &gt;</type>
      <name>Matrix2x3</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>ab3dced70ba66525d9bbb6b44e6227188</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::Matrix3x2&lt; Float &gt;</type>
      <name>Matrix3x2</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a689baccbb9256e282d2d68e3486dcc80</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::Matrix2x4&lt; Float &gt;</type>
      <name>Matrix2x4</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a7533874fc2ef4af1118a1727d56ec7e1</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::Matrix4x2&lt; Float &gt;</type>
      <name>Matrix4x2</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a4b275037a57059729521813d5eff5afc</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::Matrix3x4&lt; Float &gt;</type>
      <name>Matrix3x4</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a007726fb14fe464a51d3f53970216df6</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::Matrix4x3&lt; Float &gt;</type>
      <name>Matrix4x3</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a15f5e8da966dbdb9ec0c47e6de9ccf3a</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::QuadraticBezier2D&lt; Float &gt;</type>
      <name>QuadraticBezier2D</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>aa076ea30523705e63fd29aa9a44a7924</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::QuadraticBezier3D&lt; Float &gt;</type>
      <name>QuadraticBezier3D</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>aab522cde6ba1d070df7ea26749f2faf0</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::CubicBezier2D&lt; Float &gt;</type>
      <name>CubicBezier2D</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a1deead2c643a2b9b053540b9c70202bd</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::CubicBezier3D&lt; Float &gt;</type>
      <name>CubicBezier3D</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a1153a483856bb774602a3df94c7d53b1</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::Complex&lt; Float &gt;</type>
      <name>Complex</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>af8f959fbcda212df03f4db0c0b4d8e38</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::DualComplex&lt; Float &gt;</type>
      <name>DualComplex</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a301eadaf85af10586dd8fee8a5c7f268</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::Quaternion&lt; Float &gt;</type>
      <name>Quaternion</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a2e3f956058db79a46099bd104b08eeb9</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::DualQuaternion&lt; Float &gt;</type>
      <name>DualQuaternion</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>ad64bf8f226da3f14dc0e88e2b5a6c251</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::Constants&lt; Float &gt;</type>
      <name>Constants</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a6c070a7b75b28d88915aa17af9b78c21</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::Deg&lt; Float &gt;</type>
      <name>Deg</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a35aafd6ffb9da9a9e7b3805141ecbbb3</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::Rad&lt; Float &gt;</type>
      <name>Rad</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a0471754d0b583682b2dd2cf4d99077af</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::Range1D&lt; Float &gt;</type>
      <name>Range1D</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>ad4ec1efaa47da1a4b7815950683fb225</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::Range2D&lt; Float &gt;</type>
      <name>Range2D</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a08b469227b1a8989c2c151d3a8899642</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::Range3D&lt; Float &gt;</type>
      <name>Range3D</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a7fbce9c90d2709f47e0d5f094f183208</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::Range1D&lt; Int &gt;</type>
      <name>Range1Di</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a78544ddd221d110240d3da598b3450c4</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::Range2D&lt; Int &gt;</type>
      <name>Range2Di</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>aca08a3fe2d57fd40fce6d3d577b43e86</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::Range3D&lt; Int &gt;</type>
      <name>Range3Di</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a055e641c454b6bfacd44c309c2c7aeb3</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::Frustum&lt; Float &gt;</type>
      <name>Frustum</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>aadbcb06e48ab10daaa2f6272b731194c</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>double</type>
      <name>Double</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a5f4cc6ae4658e5eee79148cf4738f789</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::Vector2&lt; Double &gt;</type>
      <name>Vector2d</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>aaff377299fc19849bfed2a64fa80ff7b</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::Vector3&lt; Double &gt;</type>
      <name>Vector3d</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a12999896f6eeea0c53b82f97886f32c9</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::Vector4&lt; Double &gt;</type>
      <name>Vector4d</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a7767801c66c95405c9c1ae3108f676d5</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::Matrix3&lt; Double &gt;</type>
      <name>Matrix3d</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>ad1a28945c4fe29ad91e5da1244c5669e</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::Matrix4&lt; Double &gt;</type>
      <name>Matrix4d</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>addbaa6dd74e1967ef70a15e7bfaaabb2</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::Matrix2x2&lt; Double &gt;</type>
      <name>Matrix2x2d</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>ac8b90a55a3ff885b42009b9f46cbc054</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::Matrix3x3&lt; Double &gt;</type>
      <name>Matrix3x3d</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a44a1a23ecbda7c6343c052535481f16e</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::Matrix4x4&lt; Double &gt;</type>
      <name>Matrix4x4d</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>aae9dc931fa1c545f2990891779fb665d</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::Matrix2x3&lt; Double &gt;</type>
      <name>Matrix2x3d</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>ae72831cf88f37efaf38129138d02a2b2</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::Matrix3x2&lt; Double &gt;</type>
      <name>Matrix3x2d</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a4e89a28c7b25d548658560d5651c8d36</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::Matrix2x4&lt; Double &gt;</type>
      <name>Matrix2x4d</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a4a2863ef1337008849345c9b8720dc59</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::Matrix4x2&lt; Double &gt;</type>
      <name>Matrix4x2d</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a502dadb2e648b9cb785124d8e57613ab</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::Matrix3x4&lt; Double &gt;</type>
      <name>Matrix3x4d</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a3a80fad794621611bf170e5bb818135d</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::Matrix4x3&lt; Double &gt;</type>
      <name>Matrix4x3d</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a55e335c75732e3a13b400a3a8837d16a</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::QuadraticBezier2D&lt; Float &gt;</type>
      <name>QuadraticBezier2Dd</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a28635f12b30809607b32ba90282735a3</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::QuadraticBezier3D&lt; Float &gt;</type>
      <name>QuadraticBezier3Dd</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a7a1745348e3df1b36f543a9fb143520f</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::CubicBezier2D&lt; Float &gt;</type>
      <name>CubicBezier2Dd</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a5b4862b5ded9c45b0eaa23c143147e5c</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::CubicBezier3D&lt; Float &gt;</type>
      <name>CubicBezier3Dd</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a85efadd97b72b331eee0912da21a433b</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::Complex&lt; Double &gt;</type>
      <name>Complexd</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a39c00aecf9014a896daa67ce80f588c2</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::DualComplex&lt; Double &gt;</type>
      <name>DualComplexd</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>af5caf88b9b32ea8f5839e1033b75f8fb</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::Quaternion&lt; Double &gt;</type>
      <name>Quaterniond</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a98a0b80388b8500611f9ac50ee5090d2</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::DualQuaternion&lt; Double &gt;</type>
      <name>DualQuaterniond</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>ab3389caa75ddcc24e1c17b1e47928451</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::Constants&lt; Double &gt;</type>
      <name>Constantsd</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a4b861df9ed0195727ce15b9499318c20</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::Deg&lt; Double &gt;</type>
      <name>Degd</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>abb6b2ed24bc5511b4d98fa6cdc446c02</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::Rad&lt; Double &gt;</type>
      <name>Radd</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a576be96b2eb268a0c84b7d8fbb5edf23</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::Range1D&lt; Double &gt;</type>
      <name>Range1Dd</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>ad0ade5e31406fc3dd7b85fb634c4a865</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::Range2D&lt; Double &gt;</type>
      <name>Range2Dd</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>ac7dcda0b7320b7377e0bdabe6a2d4649</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::Range3D&lt; Double &gt;</type>
      <name>Range3Dd</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>af69768f0c458043b7a6a030340456e6a</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::Frustum&lt; Double &gt;</type>
      <name>Frustumd</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>aaa52550cff11cf462303a5268fd42089</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::uint8_t</type>
      <name>UnsignedByte</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a07cf9231dbda5f296cc205ab7ecb770f</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::int8_t</type>
      <name>Byte</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>ab3326c49ec1ed9b0bb5e292c1ad81f82</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::uint16_t</type>
      <name>UnsignedShort</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a909e88e5e85c567e854bedac5ef40abf</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::int16_t</type>
      <name>Short</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a8a61fb6a9a4bb99d17c5501a668927f2</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::uint32_t</type>
      <name>UnsignedInt</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a8d47f9ac6d7ced811b3d355990a3732b</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::int32_t</type>
      <name>Int</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>aee42530d46e85ad0d60312c3526f4c50</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::uint64_t</type>
      <name>UnsignedLong</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a864ee326698465e20b52c19fd7044ac0</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::int64_t</type>
      <name>Long</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>aadaf2d260758705587a825d8c8907a7d</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>float</type>
      <name>Float</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a232af7e6fd9b88195fbc59fcec2155cb</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::Half</type>
      <name>Half</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>ae9ad232db78b650420d4a56d3d67f0e6</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::Vector2&lt; Float &gt;</type>
      <name>Vector2</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a867c5cc7c779e5f990bcfb4457eb81e8</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::Vector3&lt; Float &gt;</type>
      <name>Vector3</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a6949fa86a0af6ed632c90d4223baeb59</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::Vector4&lt; Float &gt;</type>
      <name>Vector4</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a3f4cac6ff006e4e32682ebb2b117d7bc</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::Vector2&lt; UnsignedInt &gt;</type>
      <name>Vector2ui</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a4506781bc0ae351534004ec20d64cf2d</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::Vector3&lt; UnsignedInt &gt;</type>
      <name>Vector3ui</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a26df486c6774622c92b881350d4876a7</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::Vector4&lt; UnsignedInt &gt;</type>
      <name>Vector4ui</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>aeabe8282965e92504504ce4eae543187</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::Vector2&lt; Int &gt;</type>
      <name>Vector2i</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>ae3ac51b4e18ff95be7dd874c1cc861f7</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::Vector3&lt; Int &gt;</type>
      <name>Vector3i</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a053340a86ab63e587ab3773ff1265784</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::Vector4&lt; Int &gt;</type>
      <name>Vector4i</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a9e0f4dfa754bf25f9a9f39f84ae8f396</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::Color3&lt; Float &gt;</type>
      <name>Color3</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a99bf0ab337b9ed6ff6ccfd8ea147a900</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::Color4&lt; Float &gt;</type>
      <name>Color4</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a5cb8f674ed695b93b434b44bd7c96805</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::Color3&lt; UnsignedByte &gt;</type>
      <name>Color3ub</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>afde3a07a49799b474c74f186f01cbc25</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::Color4&lt; UnsignedByte &gt;</type>
      <name>Color4ub</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a1444bc0c8960f51e682cc718331c3c5d</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::Matrix3&lt; Float &gt;</type>
      <name>Matrix3</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a7abac7ed657a50f2964d6b2c4a1f7677</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::Matrix4&lt; Float &gt;</type>
      <name>Matrix4</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a28cfaaad41fdc6b258092278ba4569d5</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::Matrix2x2&lt; Float &gt;</type>
      <name>Matrix2x2</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>ae1523b3078a9f2b0f6dd83daded9e970</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::Matrix3x3&lt; Float &gt;</type>
      <name>Matrix3x3</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a7ee135be46a327f352d01287579e2acf</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::Matrix4x4&lt; Float &gt;</type>
      <name>Matrix4x4</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a1beb3e75007fb50638fe5b25d513a688</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::Matrix2x3&lt; Float &gt;</type>
      <name>Matrix2x3</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>ab3dced70ba66525d9bbb6b44e6227188</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::Matrix3x2&lt; Float &gt;</type>
      <name>Matrix3x2</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a689baccbb9256e282d2d68e3486dcc80</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::Matrix2x4&lt; Float &gt;</type>
      <name>Matrix2x4</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a7533874fc2ef4af1118a1727d56ec7e1</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::Matrix4x2&lt; Float &gt;</type>
      <name>Matrix4x2</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a4b275037a57059729521813d5eff5afc</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::Matrix3x4&lt; Float &gt;</type>
      <name>Matrix3x4</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a007726fb14fe464a51d3f53970216df6</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::Matrix4x3&lt; Float &gt;</type>
      <name>Matrix4x3</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a15f5e8da966dbdb9ec0c47e6de9ccf3a</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::QuadraticBezier2D&lt; Float &gt;</type>
      <name>QuadraticBezier2D</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>aa076ea30523705e63fd29aa9a44a7924</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::QuadraticBezier3D&lt; Float &gt;</type>
      <name>QuadraticBezier3D</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>aab522cde6ba1d070df7ea26749f2faf0</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::CubicBezier2D&lt; Float &gt;</type>
      <name>CubicBezier2D</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a1deead2c643a2b9b053540b9c70202bd</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::CubicBezier3D&lt; Float &gt;</type>
      <name>CubicBezier3D</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a1153a483856bb774602a3df94c7d53b1</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::Complex&lt; Float &gt;</type>
      <name>Complex</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>af8f959fbcda212df03f4db0c0b4d8e38</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::DualComplex&lt; Float &gt;</type>
      <name>DualComplex</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a301eadaf85af10586dd8fee8a5c7f268</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::Quaternion&lt; Float &gt;</type>
      <name>Quaternion</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a2e3f956058db79a46099bd104b08eeb9</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::DualQuaternion&lt; Float &gt;</type>
      <name>DualQuaternion</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>ad64bf8f226da3f14dc0e88e2b5a6c251</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::Constants&lt; Float &gt;</type>
      <name>Constants</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a6c070a7b75b28d88915aa17af9b78c21</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::Deg&lt; Float &gt;</type>
      <name>Deg</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a35aafd6ffb9da9a9e7b3805141ecbbb3</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::Rad&lt; Float &gt;</type>
      <name>Rad</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a0471754d0b583682b2dd2cf4d99077af</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::Range1D&lt; Float &gt;</type>
      <name>Range1D</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>ad4ec1efaa47da1a4b7815950683fb225</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::Range2D&lt; Float &gt;</type>
      <name>Range2D</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a08b469227b1a8989c2c151d3a8899642</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::Range3D&lt; Float &gt;</type>
      <name>Range3D</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a7fbce9c90d2709f47e0d5f094f183208</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::Range1D&lt; Int &gt;</type>
      <name>Range1Di</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a78544ddd221d110240d3da598b3450c4</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::Range2D&lt; Int &gt;</type>
      <name>Range2Di</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>aca08a3fe2d57fd40fce6d3d577b43e86</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::Range3D&lt; Int &gt;</type>
      <name>Range3Di</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a055e641c454b6bfacd44c309c2c7aeb3</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::Frustum&lt; Float &gt;</type>
      <name>Frustum</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>aadbcb06e48ab10daaa2f6272b731194c</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>double</type>
      <name>Double</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a5f4cc6ae4658e5eee79148cf4738f789</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::Vector2&lt; Double &gt;</type>
      <name>Vector2d</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>aaff377299fc19849bfed2a64fa80ff7b</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::Vector3&lt; Double &gt;</type>
      <name>Vector3d</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a12999896f6eeea0c53b82f97886f32c9</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::Vector4&lt; Double &gt;</type>
      <name>Vector4d</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a7767801c66c95405c9c1ae3108f676d5</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::Matrix3&lt; Double &gt;</type>
      <name>Matrix3d</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>ad1a28945c4fe29ad91e5da1244c5669e</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::Matrix4&lt; Double &gt;</type>
      <name>Matrix4d</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>addbaa6dd74e1967ef70a15e7bfaaabb2</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::Matrix2x2&lt; Double &gt;</type>
      <name>Matrix2x2d</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>ac8b90a55a3ff885b42009b9f46cbc054</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::Matrix3x3&lt; Double &gt;</type>
      <name>Matrix3x3d</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a44a1a23ecbda7c6343c052535481f16e</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::Matrix4x4&lt; Double &gt;</type>
      <name>Matrix4x4d</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>aae9dc931fa1c545f2990891779fb665d</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::Matrix2x3&lt; Double &gt;</type>
      <name>Matrix2x3d</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>ae72831cf88f37efaf38129138d02a2b2</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::Matrix3x2&lt; Double &gt;</type>
      <name>Matrix3x2d</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a4e89a28c7b25d548658560d5651c8d36</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::Matrix2x4&lt; Double &gt;</type>
      <name>Matrix2x4d</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a4a2863ef1337008849345c9b8720dc59</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::Matrix4x2&lt; Double &gt;</type>
      <name>Matrix4x2d</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a502dadb2e648b9cb785124d8e57613ab</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::Matrix3x4&lt; Double &gt;</type>
      <name>Matrix3x4d</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a3a80fad794621611bf170e5bb818135d</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::Matrix4x3&lt; Double &gt;</type>
      <name>Matrix4x3d</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a55e335c75732e3a13b400a3a8837d16a</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::QuadraticBezier2D&lt; Float &gt;</type>
      <name>QuadraticBezier2Dd</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a28635f12b30809607b32ba90282735a3</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::QuadraticBezier3D&lt; Float &gt;</type>
      <name>QuadraticBezier3Dd</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a7a1745348e3df1b36f543a9fb143520f</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::CubicBezier2D&lt; Float &gt;</type>
      <name>CubicBezier2Dd</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a5b4862b5ded9c45b0eaa23c143147e5c</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::CubicBezier3D&lt; Float &gt;</type>
      <name>CubicBezier3Dd</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a85efadd97b72b331eee0912da21a433b</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::Complex&lt; Double &gt;</type>
      <name>Complexd</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a39c00aecf9014a896daa67ce80f588c2</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::DualComplex&lt; Double &gt;</type>
      <name>DualComplexd</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>af5caf88b9b32ea8f5839e1033b75f8fb</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::Quaternion&lt; Double &gt;</type>
      <name>Quaterniond</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a98a0b80388b8500611f9ac50ee5090d2</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::DualQuaternion&lt; Double &gt;</type>
      <name>DualQuaterniond</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>ab3389caa75ddcc24e1c17b1e47928451</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::Constants&lt; Double &gt;</type>
      <name>Constantsd</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a4b861df9ed0195727ce15b9499318c20</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::Deg&lt; Double &gt;</type>
      <name>Degd</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>abb6b2ed24bc5511b4d98fa6cdc446c02</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::Rad&lt; Double &gt;</type>
      <name>Radd</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a576be96b2eb268a0c84b7d8fbb5edf23</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::Range1D&lt; Double &gt;</type>
      <name>Range1Dd</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>ad0ade5e31406fc3dd7b85fb634c4a865</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::Range2D&lt; Double &gt;</type>
      <name>Range2Dd</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>ac7dcda0b7320b7377e0bdabe6a2d4649</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::Range3D&lt; Double &gt;</type>
      <name>Range3Dd</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>af69768f0c458043b7a6a030340456e6a</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::Frustum&lt; Double &gt;</type>
      <name>Frustumd</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>aaa52550cff11cf462303a5268fd42089</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>GaussJordan.h</name>
    <path>/home/mosra/Code/magnum/src/Magnum/Math/Algorithms/</path>
    <filename>GaussJordan_8h</filename>
    <includes id="Matrix_8h" name="Matrix.h" local="yes" imported="no">Magnum/Math/Matrix.h</includes>
    <namespace>Magnum</namespace>
    <namespace>Magnum::Math</namespace>
    <namespace>Magnum::Math::Algorithms</namespace>
    <member kind="function">
      <type>bool</type>
      <name>gaussJordanInPlaceTransposed</name>
      <anchorfile>namespaceMagnum_1_1Math_1_1Algorithms.html</anchorfile>
      <anchor>afd51c7cc16e65c7e76054f3894c968c1</anchor>
      <arglist>(RectangularMatrix&lt; size, size, T &gt; &amp;a, RectangularMatrix&lt; size, rows, T &gt; &amp;t)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>gaussJordanInPlace</name>
      <anchorfile>namespaceMagnum_1_1Math_1_1Algorithms.html</anchorfile>
      <anchor>a34eea735d7911e9ac472ed98cd7b9128</anchor>
      <arglist>(RectangularMatrix&lt; size, size, T &gt; &amp;a, RectangularMatrix&lt; cols, size, T &gt; &amp;t)</arglist>
    </member>
    <member kind="function">
      <type>Matrix&lt; size, T &gt;</type>
      <name>gaussJordanInverted</name>
      <anchorfile>namespaceMagnum_1_1Math_1_1Algorithms.html</anchorfile>
      <anchor>a8ec84b7776d70334669c6f11ad8253a1</anchor>
      <arglist>(Matrix&lt; size, T &gt; matrix)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>GramSchmidt.h</name>
    <path>/home/mosra/Code/magnum/src/Magnum/Math/Algorithms/</path>
    <filename>GramSchmidt_8h</filename>
    <includes id="RectangularMatrix_8h" name="RectangularMatrix.h" local="yes" imported="no">Magnum/Math/RectangularMatrix.h</includes>
    <namespace>Magnum</namespace>
    <namespace>Magnum::Math</namespace>
    <namespace>Magnum::Math::Algorithms</namespace>
    <member kind="function">
      <type>void</type>
      <name>gramSchmidtOrthogonalizeInPlace</name>
      <anchorfile>namespaceMagnum_1_1Math_1_1Algorithms.html</anchorfile>
      <anchor>a18d7248a3ee6e2a4edc1c850724ce488</anchor>
      <arglist>(RectangularMatrix&lt; cols, rows, T &gt; &amp;matrix)</arglist>
    </member>
    <member kind="function">
      <type>RectangularMatrix&lt; cols, rows, T &gt;</type>
      <name>gramSchmidtOrthogonalize</name>
      <anchorfile>namespaceMagnum_1_1Math_1_1Algorithms.html</anchorfile>
      <anchor>a65923466ad3890a5ef400f84940362d6</anchor>
      <arglist>(RectangularMatrix&lt; cols, rows, T &gt; matrix)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>gramSchmidtOrthonormalizeInPlace</name>
      <anchorfile>namespaceMagnum_1_1Math_1_1Algorithms.html</anchorfile>
      <anchor>a097b3bec336a94a7d12443e2ea517105</anchor>
      <arglist>(RectangularMatrix&lt; cols, rows, T &gt; &amp;matrix)</arglist>
    </member>
    <member kind="function">
      <type>RectangularMatrix&lt; cols, rows, T &gt;</type>
      <name>gramSchmidtOrthonormalize</name>
      <anchorfile>namespaceMagnum_1_1Math_1_1Algorithms.html</anchorfile>
      <anchor>a9acdde07b5c85594592c8032244e585b</anchor>
      <arglist>(RectangularMatrix&lt; cols, rows, T &gt; matrix)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>KahanSum.h</name>
    <path>/home/mosra/Code/magnum/src/Magnum/Math/Algorithms/</path>
    <filename>KahanSum_8h</filename>
    <namespace>Magnum</namespace>
    <namespace>Magnum::Math</namespace>
    <namespace>Magnum::Math::Algorithms</namespace>
    <member kind="function">
      <type>T</type>
      <name>kahanSum</name>
      <anchorfile>namespaceMagnum_1_1Math_1_1Algorithms.html</anchorfile>
      <anchor>aa4696c9d956d5c6bb1833a29533be545</anchor>
      <arglist>(Iterator begin, Iterator end, T sum=T(0), T *compensation=nullptr)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Qr.h</name>
    <path>/home/mosra/Code/magnum/src/Magnum/Math/Algorithms/</path>
    <filename>Qr_8h</filename>
    <includes id="Matrix_8h" name="Matrix.h" local="yes" imported="no">Magnum/Math/Matrix.h</includes>
    <namespace>Magnum</namespace>
    <namespace>Magnum::Math</namespace>
    <namespace>Magnum::Math::Algorithms</namespace>
    <member kind="function">
      <type>std::pair&lt; Matrix&lt; size, T &gt;, Matrix&lt; size, T &gt; &gt;</type>
      <name>qr</name>
      <anchorfile>namespaceMagnum_1_1Math_1_1Algorithms.html</anchorfile>
      <anchor>afa6848a3c35575e119f8b05a67822b43</anchor>
      <arglist>(const Matrix&lt; size, T &gt; &amp;matrix)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Svd.h</name>
    <path>/home/mosra/Code/magnum/src/Magnum/Math/Algorithms/</path>
    <filename>Svd_8h</filename>
    <includes id="Functions_8h" name="Functions.h" local="yes" imported="no">Magnum/Math/Functions.h</includes>
    <includes id="Matrix_8h" name="Matrix.h" local="yes" imported="no">Magnum/Math/Matrix.h</includes>
    <namespace>Magnum</namespace>
    <namespace>Magnum::Math</namespace>
    <namespace>Magnum::Math::Algorithms</namespace>
    <member kind="function">
      <type>std::tuple&lt; RectangularMatrix&lt; cols, rows, T &gt;, Vector&lt; cols, T &gt;, Matrix&lt; cols, T &gt; &gt;</type>
      <name>svd</name>
      <anchorfile>namespaceMagnum_1_1Math_1_1Algorithms.html</anchorfile>
      <anchor>abe54bd778b9c6fdb93ccc6b3ef82c0e3</anchor>
      <arglist>(RectangularMatrix&lt; cols, rows, T &gt; m)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Angle.h</name>
    <path>/home/mosra/Code/magnum/src/Magnum/Math/</path>
    <filename>Angle_8h</filename>
    <includes id="Constants_8h" name="Constants.h" local="yes" imported="no">Magnum/Math/Constants.h</includes>
    <includes id="Math_8h" name="Math.h" local="yes" imported="no">Magnum/Math/Math.h</includes>
    <includes id="Unit_8h" name="Unit.h" local="yes" imported="no">Magnum/Math/Unit.h</includes>
    <class kind="class">Magnum::Math::Deg</class>
    <class kind="class">Magnum::Math::Rad</class>
    <class kind="struct">Corrade::Utility::ConfigurationValue&lt; Magnum::Math::Deg&lt; T &gt; &gt;</class>
    <class kind="struct">Corrade::Utility::ConfigurationValue&lt; Magnum::Math::Rad&lt; T &gt; &gt;</class>
    <namespace>Magnum</namespace>
    <namespace>Magnum::Math</namespace>
    <namespace>Magnum::Math::Literals</namespace>
    <member kind="function">
      <type>constexpr Deg&lt; Double &gt;</type>
      <name>operator&quot;&quot;_deg</name>
      <anchorfile>namespaceMagnum_1_1Math_1_1Literals.html</anchorfile>
      <anchor>ad0f0411d4a58db406d968733715f782d</anchor>
      <arglist>(long double value)</arglist>
    </member>
    <member kind="function">
      <type>constexpr Deg&lt; Float &gt;</type>
      <name>operator&quot;&quot;_degf</name>
      <anchorfile>namespaceMagnum_1_1Math_1_1Literals.html</anchorfile>
      <anchor>ac3f64414df5978006e55682877e92736</anchor>
      <arglist>(long double value)</arglist>
    </member>
    <member kind="function">
      <type>constexpr Rad&lt; Double &gt;</type>
      <name>operator&quot;&quot;_rad</name>
      <anchorfile>namespaceMagnum_1_1Math_1_1Literals.html</anchorfile>
      <anchor>aa2e5542942a14d84870d860ec13056e2</anchor>
      <arglist>(long double value)</arglist>
    </member>
    <member kind="function">
      <type>constexpr Rad&lt; Float &gt;</type>
      <name>operator&quot;&quot;_radf</name>
      <anchorfile>namespaceMagnum_1_1Math_1_1Literals.html</anchorfile>
      <anchor>ab0143c89ebaa92da73ed5ba17426129b</anchor>
      <arglist>(long double value)</arglist>
    </member>
    <member kind="function">
      <type>Corrade::Utility::Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>a577c8c280a0b3753ef06a23b5b496a3a</anchor>
      <arglist>(Corrade::Utility::Debug &amp;debug, const Unit&lt; Rad, T &gt; &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>Corrade::Utility::Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>ac757572f15467c51569563ea991a2549</anchor>
      <arglist>(Corrade::Utility::Debug &amp;debug, const Unit&lt; Deg, T &gt; &amp;value)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Bezier.h</name>
    <path>/home/mosra/Code/magnum/src/Magnum/Math/</path>
    <filename>Bezier_8h</filename>
    <includes id="Math_2Vector_8h" name="Vector.h" local="yes" imported="no">Magnum/Math/Vector.h</includes>
    <class kind="class">Magnum::Math::Bezier</class>
    <class kind="struct">Corrade::Utility::ConfigurationValue&lt; Magnum::Math::Bezier&lt; order, dimensions, T &gt; &gt;</class>
    <namespace>Magnum</namespace>
    <namespace>Magnum::Math</namespace>
    <member kind="typedef">
      <type>Bezier&lt; 2, dimensions, T &gt;</type>
      <name>QuadraticBezier</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>a213eaf7e01a257c1eacf8a7184c2e5fc</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>QuadraticBezier&lt; 2, T &gt;</type>
      <name>QuadraticBezier2D</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>a52bbd5f3028c1607e6663f17f67a5d1f</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>QuadraticBezier&lt; 3, T &gt;</type>
      <name>QuadraticBezier3D</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>a9493d9a9d8df8d9723dcb4d844718726</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Bezier&lt; 3, dimensions, T &gt;</type>
      <name>CubicBezier</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>acfbcdbd3e79169d81307b31e575601aa</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>CubicBezier&lt; 2, T &gt;</type>
      <name>CubicBezier2D</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>ac11e0f5820b7c4dc9649e35106bdc49a</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>CubicBezier&lt; 3, T &gt;</type>
      <name>CubicBezier3D</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>addfd48e7102847b301863dedcc75a2e3</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>Corrade::Utility::Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>ab1001276d3083c0d6d035c9e343c1c3c</anchor>
      <arglist>(Corrade::Utility::Debug &amp;debug, const Bezier&lt; order, dimensions, T &gt; &amp;value)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>BoolVector.h</name>
    <path>/home/mosra/Code/magnum/src/Magnum/Math/</path>
    <filename>BoolVector_8h</filename>
    <includes id="Types_8h" name="Types.h" local="yes" imported="no">Magnum/Types.h</includes>
    <includes id="Math_2Tags_8h" name="Tags.h" local="yes" imported="no">Magnum/Math/Tags.h</includes>
    <class kind="class">Magnum::Math::BoolVector</class>
    <namespace>Magnum</namespace>
    <namespace>Magnum::Math</namespace>
    <member kind="function">
      <type>Corrade::Utility::Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>a05ecfedf1ed791f07d32b7d45d978432</anchor>
      <arglist>(Corrade::Utility::Debug &amp;debug, const BoolVector&lt; size &gt; &amp;value)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Complex.h</name>
    <path>/home/mosra/Code/magnum/src/Magnum/Math/</path>
    <filename>Complex_8h</filename>
    <includes id="Matrix_8h" name="Matrix.h" local="yes" imported="no">Magnum/Math/Matrix.h</includes>
    <includes id="Vector2_8h" name="Vector2.h" local="yes" imported="no">Magnum/Math/Vector2.h</includes>
    <class kind="class">Magnum::Math::Complex</class>
    <namespace>Magnum</namespace>
    <namespace>Magnum::Math</namespace>
    <member kind="function">
      <type>T</type>
      <name>dot</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>ae3d695a1794978f2aded487bc9e6e312</anchor>
      <arglist>(const Complex&lt; T &gt; &amp;a, const Complex&lt; T &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>Rad&lt; T &gt;</type>
      <name>angle</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>ab0d977c1e3f6a66dcdedcd261b758210</anchor>
      <arglist>(const Complex&lt; T &gt; &amp;normalizedA, const Complex&lt; T &gt; &amp;normalizedB)</arglist>
    </member>
    <member kind="function">
      <type>Corrade::Utility::Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>a673cbf89633bedbae0a30457b9bfaceb</anchor>
      <arglist>(Corrade::Utility::Debug &amp;debug, const Complex&lt; T &gt; &amp;value)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Constants.h</name>
    <path>/home/mosra/Code/magnum/src/Magnum/Math/</path>
    <filename>Constants_8h</filename>
    <includes id="Types_8h" name="Types.h" local="yes" imported="no">Magnum/Types.h</includes>
    <class kind="struct">Magnum::Math::Constants</class>
    <namespace>Magnum</namespace>
    <namespace>Magnum::Math</namespace>
  </compound>
  <compound kind="file">
    <name>Dual.h</name>
    <path>/home/mosra/Code/magnum/src/Magnum/Math/</path>
    <filename>Dual_8h</filename>
    <includes id="Angle_8h" name="Angle.h" local="yes" imported="no">Magnum/Math/Angle.h</includes>
    <includes id="Math_2Tags_8h" name="Tags.h" local="yes" imported="no">Magnum/Math/Tags.h</includes>
    <includes id="TypeTraits_8h" name="TypeTraits.h" local="yes" imported="no">Magnum/Math/TypeTraits.h</includes>
    <class kind="class">Magnum::Math::Dual</class>
    <namespace>Magnum</namespace>
    <namespace>Magnum::Math</namespace>
    <member kind="function">
      <type>Corrade::Utility::Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>a566f5ca101d2a3793843141980b2545e</anchor>
      <arglist>(Corrade::Utility::Debug &amp;debug, const Dual&lt; T &gt; &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>Dual&lt; T &gt;</type>
      <name>sqrt</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>a9f399ec60dc87478fcdbe6091e0b6783</anchor>
      <arglist>(const Dual&lt; T &gt; &amp;dual)</arglist>
    </member>
    <member kind="function">
      <type>std::pair&lt; Dual&lt; T &gt;, Dual&lt; T &gt; &gt;</type>
      <name>sincos</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>adf84b1bff280ad75079c8774ca25cbec</anchor>
      <arglist>(const Dual&lt; Rad&lt; T &gt;&gt; &amp;angle)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>DualComplex.h</name>
    <path>/home/mosra/Code/magnum/src/Magnum/Math/</path>
    <filename>DualComplex_8h</filename>
    <includes id="Complex_8h" name="Complex.h" local="yes" imported="no">Magnum/Math/Complex.h</includes>
    <includes id="Dual_8h" name="Dual.h" local="yes" imported="no">Magnum/Math/Dual.h</includes>
    <includes id="Matrix3_8h" name="Matrix3.h" local="yes" imported="no">Magnum/Math/Matrix3.h</includes>
    <class kind="class">Magnum::Math::DualComplex</class>
    <namespace>Magnum</namespace>
    <namespace>Magnum::Math</namespace>
    <member kind="function">
      <type>Corrade::Utility::Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>a59b3488a700c0d5fcaed8ce7d7e5b1fc</anchor>
      <arglist>(Corrade::Utility::Debug &amp;debug, const DualComplex&lt; T &gt; &amp;value)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>DualQuaternion.h</name>
    <path>/home/mosra/Code/magnum/src/Magnum/Math/</path>
    <filename>DualQuaternion_8h</filename>
    <includes id="Dual_8h" name="Dual.h" local="yes" imported="no">Magnum/Math/Dual.h</includes>
    <includes id="Functions_8h" name="Functions.h" local="yes" imported="no">Magnum/Math/Functions.h</includes>
    <includes id="Matrix4_8h" name="Matrix4.h" local="yes" imported="no">Magnum/Math/Matrix4.h</includes>
    <includes id="Quaternion_8h" name="Quaternion.h" local="yes" imported="no">Magnum/Math/Quaternion.h</includes>
    <class kind="class">Magnum::Math::DualQuaternion</class>
    <namespace>Magnum</namespace>
    <namespace>Magnum::Math</namespace>
    <member kind="function">
      <type>DualQuaternion&lt; T &gt;</type>
      <name>sclerp</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>a16a9790aad4406e49517818bd3fa632b</anchor>
      <arglist>(const DualQuaternion&lt; T &gt; &amp;normalizedA, const DualQuaternion&lt; T &gt; &amp;normalizedB, const T t)</arglist>
    </member>
    <member kind="function">
      <type>Corrade::Utility::Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>a827f6a5c6237137238f27a82aa9d1f4d</anchor>
      <arglist>(Corrade::Utility::Debug &amp;debug, const DualQuaternion&lt; T &gt; &amp;value)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Frustum.h</name>
    <path>/home/mosra/Code/magnum/src/Magnum/Math/</path>
    <filename>Frustum_8h</filename>
    <includes id="Matrix4_8h" name="Matrix4.h" local="yes" imported="no">Magnum/Math/Matrix4.h</includes>
    <includes id="Vector4_8h" name="Vector4.h" local="yes" imported="no">Magnum/Math/Vector4.h</includes>
    <class kind="class">Magnum::Math::Frustum</class>
    <namespace>Magnum</namespace>
    <namespace>Magnum::Math</namespace>
    <member kind="function">
      <type>Corrade::Utility::Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>aad6fdc9ca9b5bd751970733503de84ee</anchor>
      <arglist>(Corrade::Utility::Debug &amp;debug, const Frustum&lt; T &gt; &amp;value)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Functions.h</name>
    <path>/home/mosra/Code/magnum/src/Magnum/Math/</path>
    <filename>Functions_8h</filename>
    <includes id="Math_2Vector_8h" name="Vector.h" local="yes" imported="no">Magnum/Math/Vector.h</includes>
    <includes id="Packing_8h" name="Packing.h" local="yes" imported="no">Magnum/Math/Packing.h</includes>
    <namespace>Magnum</namespace>
    <namespace>Magnum::Math</namespace>
    <member kind="function">
      <type>UnsignedInt</type>
      <name>log</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>a0506f088194eafea3e7a4100f2c4ed2d</anchor>
      <arglist>(UnsignedInt base, UnsignedInt number)</arglist>
    </member>
    <member kind="function">
      <type>UnsignedInt</type>
      <name>log2</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>a0f41b7b73d96020cc88c28b09a229ab5</anchor>
      <arglist>(UnsignedInt number)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>log</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>a94c4d12ee57e7129651a9d9cd43c7c66</anchor>
      <arglist>(T number)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>exp</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>a54553867ca47a3e9ffada201a4c35ca3</anchor>
      <arglist>(T exponent)</arglist>
    </member>
    <member kind="function">
      <type>std::pair&lt; Integral, Integral &gt;</type>
      <name>div</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>ac26736b3814a1affa940a7ebd90d2c0c</anchor>
      <arglist>(Integral x, Integral y)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>sin</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>a6558da1eb5042764fae1640dcf99d0a8</anchor>
      <arglist>(Rad&lt; T &gt; angle)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>cos</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>a786b7203dac52e7b7a23965cac9ef127</anchor>
      <arglist>(Rad&lt; T &gt; angle)</arglist>
    </member>
    <member kind="function">
      <type>std::pair&lt; T, T &gt;</type>
      <name>sincos</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>aad0e3cf434e90f80d18860f775efe427</anchor>
      <arglist>(Rad&lt; T &gt; angle)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>tan</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>a5b75699b28dffa85a5d2c59b769c78b9</anchor>
      <arglist>(Rad&lt; T &gt; angle)</arglist>
    </member>
    <member kind="function">
      <type>Rad&lt; T &gt;</type>
      <name>asin</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>a5a0d14b2cdd605132c3fa408763e615a</anchor>
      <arglist>(T value)</arglist>
    </member>
    <member kind="function">
      <type>Rad&lt; T &gt;</type>
      <name>acos</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>a3b14d10e75ca21d34df11d7be0f6b616</anchor>
      <arglist>(T value)</arglist>
    </member>
    <member kind="function">
      <type>Rad&lt; T &gt;</type>
      <name>atan</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>a916c22b19c5c7bf191ec697eecab60b6</anchor>
      <arglist>(T value)</arglist>
    </member>
    <member kind="function">
      <type>constexpr T</type>
      <name>pow</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>a9083d7f09f7846b593aff7afd01d0122</anchor>
      <arglist>(T base)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>pow</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>a3f13a84c7a1c265727ec7c0c93908cf9</anchor>
      <arglist>(T base, T exponent)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>min</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>ae22ef0cb2a5a5e4c5e626a3df670be21</anchor>
      <arglist>(T value, T min)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, T &gt;</type>
      <name>min</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>a4bee14bf25158b6be1dc4afd70971fb8</anchor>
      <arglist>(const Vector&lt; size, T &gt; &amp;value, T min)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>min</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>a2d23039b9bd85f9c16274321ddf55d1d</anchor>
      <arglist>(Corrade::Containers::ArrayView&lt; const T &gt; range)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>min</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>ae9a92854975b2f250004249044e1bfcf</anchor>
      <arglist>(std::initializer_list&lt; T &gt; list)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>max</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>a1065191724e603162437b335db0c490d</anchor>
      <arglist>(T value, T max)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, T &gt;</type>
      <name>max</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>ad8719e1853a5c449106e63c776c9d72f</anchor>
      <arglist>(const Vector&lt; size, T &gt; &amp;value, T max)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>max</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>a6cab078020edfc1f5487665d4926ba2d</anchor>
      <arglist>(Corrade::Containers::ArrayView&lt; const T &gt; range)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>max</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>a37e8a2e2b6ce6a039cc6d41c1bc6ded1</anchor>
      <arglist>(std::initializer_list&lt; T &gt; list)</arglist>
    </member>
    <member kind="function">
      <type>std::pair&lt; T, T &gt;</type>
      <name>minmax</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>a160f3c051c7fee9a17f036ddd5fea320</anchor>
      <arglist>(const T &amp;a, const T &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>std::pair&lt; T, T &gt;</type>
      <name>minmax</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>afffc709fd33b5319addb8b0fec9e1254</anchor>
      <arglist>(Corrade::Containers::ArrayView&lt; const T &gt; range)</arglist>
    </member>
    <member kind="function">
      <type>std::pair&lt; T, T &gt;</type>
      <name>minmax</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>a31ca6cb241a516d8b652b0d39cb5909e</anchor>
      <arglist>(std::initializer_list&lt; T &gt; list)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>clamp</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>abdc5e18cf264ab1478e39d600a2ce273</anchor>
      <arglist>(const T &amp;value, const T &amp;min, const T &amp;max)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, T &gt;</type>
      <name>clamp</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>ad4a8b2ed74b85d7eead141ebd9b68ce7</anchor>
      <arglist>(const Vector&lt; size, T &gt; &amp;value, T min, T max)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>sign</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>a74cff9e1222e0f6a88d0240f8c06990e</anchor>
      <arglist>(const T scalar)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>abs</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>a0f12073f927ee1a1175ff2d2fccc56da</anchor>
      <arglist>(const T &amp;a)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>floor</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>a60949e5ab9a59d5106607e1f66d8678b</anchor>
      <arglist>(const T &amp;a)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>round</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>ad404b93c89d70a0263b37df4426dbfb4</anchor>
      <arglist>(const T &amp;a)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>ceil</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>a2c3aa8dc6e63e1412740b608cd82bfd4</anchor>
      <arglist>(const T &amp;a)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>sqrt</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>ad39349427c831b6ba7696a74ff05b97e</anchor>
      <arglist>(const T &amp;a)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>sqrtInverted</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>a347648f7f2faea0a7182f0d62ca6c2ed</anchor>
      <arglist>(const T &amp;a)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>lerp</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>a8d0cf4b89dfd92edf6cff3954adf7cf7</anchor>
      <arglist>(const T &amp;a, const T &amp;b, U t)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, T &gt;</type>
      <name>lerp</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>a442e12f313c209eb67dbfcbef05e2b5c</anchor>
      <arglist>(const Vector&lt; size, T &gt; &amp;a, const Vector&lt; size, T &gt; &amp;b, const BoolVector&lt; size &gt; &amp;t)</arglist>
    </member>
    <member kind="function">
      <type>BoolVector&lt; size &gt;</type>
      <name>lerp</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>a757985d96fb36e841322a3317c851304</anchor>
      <arglist>(const BoolVector&lt; size &gt; &amp;a, const BoolVector&lt; size &gt; &amp;b, const BoolVector&lt; size &gt; &amp;t)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>lerpInverted</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>a8f151ca0349b31e91882117ee43764dd</anchor>
      <arglist>(const T &amp;a, const T &amp;b, const T &amp;lerp)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>fma</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>a9a133d200079708110f9f8ae0c93a950</anchor>
      <arglist>(const T &amp;a, const T &amp;b, const T &amp;c)</arglist>
    </member>
    <member kind="function">
      <type>constexpr T</type>
      <name>pow</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>a9083d7f09f7846b593aff7afd01d0122</anchor>
      <arglist>(T base)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>pow</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>a3f13a84c7a1c265727ec7c0c93908cf9</anchor>
      <arglist>(T base, T exponent)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>min</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>ae22ef0cb2a5a5e4c5e626a3df670be21</anchor>
      <arglist>(T value, T min)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, T &gt;</type>
      <name>min</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>a4bee14bf25158b6be1dc4afd70971fb8</anchor>
      <arglist>(const Vector&lt; size, T &gt; &amp;value, T min)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>min</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>a2d23039b9bd85f9c16274321ddf55d1d</anchor>
      <arglist>(Corrade::Containers::ArrayView&lt; const T &gt; range)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>min</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>ae9a92854975b2f250004249044e1bfcf</anchor>
      <arglist>(std::initializer_list&lt; T &gt; list)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>max</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>a1065191724e603162437b335db0c490d</anchor>
      <arglist>(T value, T max)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, T &gt;</type>
      <name>max</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>ad8719e1853a5c449106e63c776c9d72f</anchor>
      <arglist>(const Vector&lt; size, T &gt; &amp;value, T max)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>max</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>a6cab078020edfc1f5487665d4926ba2d</anchor>
      <arglist>(Corrade::Containers::ArrayView&lt; const T &gt; range)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>max</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>a37e8a2e2b6ce6a039cc6d41c1bc6ded1</anchor>
      <arglist>(std::initializer_list&lt; T &gt; list)</arglist>
    </member>
    <member kind="function">
      <type>std::pair&lt; T, T &gt;</type>
      <name>minmax</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>a160f3c051c7fee9a17f036ddd5fea320</anchor>
      <arglist>(const T &amp;a, const T &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>std::pair&lt; T, T &gt;</type>
      <name>minmax</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>afffc709fd33b5319addb8b0fec9e1254</anchor>
      <arglist>(Corrade::Containers::ArrayView&lt; const T &gt; range)</arglist>
    </member>
    <member kind="function">
      <type>std::pair&lt; T, T &gt;</type>
      <name>minmax</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>a31ca6cb241a516d8b652b0d39cb5909e</anchor>
      <arglist>(std::initializer_list&lt; T &gt; list)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>clamp</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>abdc5e18cf264ab1478e39d600a2ce273</anchor>
      <arglist>(const T &amp;value, const T &amp;min, const T &amp;max)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, T &gt;</type>
      <name>clamp</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>ad4a8b2ed74b85d7eead141ebd9b68ce7</anchor>
      <arglist>(const Vector&lt; size, T &gt; &amp;value, T min, T max)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>sign</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>a74cff9e1222e0f6a88d0240f8c06990e</anchor>
      <arglist>(const T scalar)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>abs</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>a0f12073f927ee1a1175ff2d2fccc56da</anchor>
      <arglist>(const T &amp;a)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>floor</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>a60949e5ab9a59d5106607e1f66d8678b</anchor>
      <arglist>(const T &amp;a)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>round</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>ad404b93c89d70a0263b37df4426dbfb4</anchor>
      <arglist>(const T &amp;a)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>ceil</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>a2c3aa8dc6e63e1412740b608cd82bfd4</anchor>
      <arglist>(const T &amp;a)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>sqrt</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>ad39349427c831b6ba7696a74ff05b97e</anchor>
      <arglist>(const T &amp;a)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>sqrtInverted</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>a347648f7f2faea0a7182f0d62ca6c2ed</anchor>
      <arglist>(const T &amp;a)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>lerp</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>a8d0cf4b89dfd92edf6cff3954adf7cf7</anchor>
      <arglist>(const T &amp;a, const T &amp;b, U t)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, T &gt;</type>
      <name>lerp</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>a442e12f313c209eb67dbfcbef05e2b5c</anchor>
      <arglist>(const Vector&lt; size, T &gt; &amp;a, const Vector&lt; size, T &gt; &amp;b, const BoolVector&lt; size &gt; &amp;t)</arglist>
    </member>
    <member kind="function">
      <type>BoolVector&lt; size &gt;</type>
      <name>lerp</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>a757985d96fb36e841322a3317c851304</anchor>
      <arglist>(const BoolVector&lt; size &gt; &amp;a, const BoolVector&lt; size &gt; &amp;b, const BoolVector&lt; size &gt; &amp;t)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>lerpInverted</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>a8f151ca0349b31e91882117ee43764dd</anchor>
      <arglist>(const T &amp;a, const T &amp;b, const T &amp;lerp)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>fma</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>a9a133d200079708110f9f8ae0c93a950</anchor>
      <arglist>(const T &amp;a, const T &amp;b, const T &amp;c)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Distance.h</name>
    <path>/home/mosra/Code/magnum/src/Magnum/Math/Geometry/</path>
    <filename>Distance_8h</filename>
    <includes id="Functions_8h" name="Functions.h" local="yes" imported="no">Magnum/Math/Functions.h</includes>
    <includes id="Vector3_8h" name="Vector3.h" local="yes" imported="no">Magnum/Math/Vector3.h</includes>
    <includes id="Vector4_8h" name="Vector4.h" local="yes" imported="no">Magnum/Math/Vector4.h</includes>
    <namespace>Magnum</namespace>
    <namespace>Magnum::Math</namespace>
    <namespace>Magnum::Math::Geometry</namespace>
    <namespace>Magnum::Math::Geometry::Distance</namespace>
    <member kind="function">
      <type>T</type>
      <name>linePointSquared</name>
      <anchorfile>namespaceMagnum_1_1Math_1_1Geometry_1_1Distance.html</anchorfile>
      <anchor>ac33ebb71e4666f173823ebd439d4adfb</anchor>
      <arglist>(const Vector2&lt; T &gt; &amp;a, const Vector2&lt; T &gt; &amp;b, const Vector2&lt; T &gt; &amp;point)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>linePoint</name>
      <anchorfile>namespaceMagnum_1_1Math_1_1Geometry_1_1Distance.html</anchorfile>
      <anchor>a291224fca49a4d15806529e3e50d5eac</anchor>
      <arglist>(const Vector2&lt; T &gt; &amp;a, const Vector2&lt; T &gt; &amp;b, const Vector2&lt; T &gt; &amp;point)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>linePointSquared</name>
      <anchorfile>namespaceMagnum_1_1Math_1_1Geometry_1_1Distance.html</anchorfile>
      <anchor>a0050edf5b044dab7ffe51dd6faa6e01c</anchor>
      <arglist>(const Vector3&lt; T &gt; &amp;a, const Vector3&lt; T &gt; &amp;b, const Vector3&lt; T &gt; &amp;point)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>linePoint</name>
      <anchorfile>namespaceMagnum_1_1Math_1_1Geometry_1_1Distance.html</anchorfile>
      <anchor>a623565c0848d9889e6fce5e737f630c1</anchor>
      <arglist>(const Vector3&lt; T &gt; &amp;a, const Vector3&lt; T &gt; &amp;b, const Vector3&lt; T &gt; &amp;point)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>lineSegmentPointSquared</name>
      <anchorfile>namespaceMagnum_1_1Math_1_1Geometry_1_1Distance.html</anchorfile>
      <anchor>a96f5691b3830d0e07f8ec5733b2a6abf</anchor>
      <arglist>(const Vector2&lt; T &gt; &amp;a, const Vector2&lt; T &gt; &amp;b, const Vector2&lt; T &gt; &amp;point)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>lineSegmentPoint</name>
      <anchorfile>namespaceMagnum_1_1Math_1_1Geometry_1_1Distance.html</anchorfile>
      <anchor>a872fd7983a565eb1cb0b8258e1a12b50</anchor>
      <arglist>(const Vector2&lt; T &gt; &amp;a, const Vector2&lt; T &gt; &amp;b, const Vector2&lt; T &gt; &amp;point)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>lineSegmentPointSquared</name>
      <anchorfile>namespaceMagnum_1_1Math_1_1Geometry_1_1Distance.html</anchorfile>
      <anchor>adf13632b622b81cf2439e9bad953f832</anchor>
      <arglist>(const Vector3&lt; T &gt; &amp;a, const Vector3&lt; T &gt; &amp;b, const Vector3&lt; T &gt; &amp;point)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>lineSegmentPoint</name>
      <anchorfile>namespaceMagnum_1_1Math_1_1Geometry_1_1Distance.html</anchorfile>
      <anchor>a17c3fcb501900e9e035066b7bd4cad76</anchor>
      <arglist>(const Vector3&lt; T &gt; &amp;a, const Vector3&lt; T &gt; &amp;b, const Vector3&lt; T &gt; &amp;point)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>pointPlaneScaled</name>
      <anchorfile>namespaceMagnum_1_1Math_1_1Geometry_1_1Distance.html</anchorfile>
      <anchor>a68e706f79aa088970a87622b5f028d24</anchor>
      <arglist>(const Vector3&lt; T &gt; &amp;point, const Vector4&lt; T &gt; &amp;plane)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>pointPlane</name>
      <anchorfile>namespaceMagnum_1_1Math_1_1Geometry_1_1Distance.html</anchorfile>
      <anchor>a0d202b2ca5de7f3ecdd784c2cca8f98b</anchor>
      <arglist>(const Vector3&lt; T &gt; &amp;point, const Vector4&lt; T &gt; &amp;plane)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>pointPlaneNormalized</name>
      <anchorfile>namespaceMagnum_1_1Math_1_1Geometry_1_1Distance.html</anchorfile>
      <anchor>a1bb096c90b1f49dc1d997b7a042c0e57</anchor>
      <arglist>(const Vector3&lt; T &gt; &amp;point, const Vector4&lt; T &gt; &amp;plane)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Intersection.h</name>
    <path>/home/mosra/Code/magnum/src/Magnum/Math/Geometry/</path>
    <filename>Intersection_8h</filename>
    <includes id="Frustum_8h" name="Frustum.h" local="yes" imported="no">Magnum/Math/Frustum.h</includes>
    <includes id="Distance_8h" name="Distance.h" local="yes" imported="no">Magnum/Math/Geometry/Distance.h</includes>
    <includes id="Range_8h" name="Range.h" local="yes" imported="no">Magnum/Math/Range.h</includes>
    <includes id="Vector3_8h" name="Vector3.h" local="yes" imported="no">Magnum/Math/Vector3.h</includes>
    <namespace>Magnum</namespace>
    <namespace>Magnum::Math</namespace>
    <namespace>Magnum::Math::Geometry</namespace>
    <namespace>Magnum::Math::Geometry::Intersection</namespace>
    <member kind="function">
      <type>std::pair&lt; T, T &gt;</type>
      <name>lineSegmentLineSegment</name>
      <anchorfile>namespaceMagnum_1_1Math_1_1Geometry_1_1Intersection.html</anchorfile>
      <anchor>a9a70996eaa59f516e03a96ac9d2819f9</anchor>
      <arglist>(const Vector2&lt; T &gt; &amp;p, const Vector2&lt; T &gt; &amp;r, const Vector2&lt; T &gt; &amp;q, const Vector2&lt; T &gt; &amp;s)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>lineSegmentLine</name>
      <anchorfile>namespaceMagnum_1_1Math_1_1Geometry_1_1Intersection.html</anchorfile>
      <anchor>ace33bfa9669405ec56c962e326f7f801</anchor>
      <arglist>(const Vector2&lt; T &gt; &amp;p, const Vector2&lt; T &gt; &amp;r, const Vector2&lt; T &gt; &amp;q, const Vector2&lt; T &gt; &amp;s)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>planeLine</name>
      <anchorfile>namespaceMagnum_1_1Math_1_1Geometry_1_1Intersection.html</anchorfile>
      <anchor>ab066645bcadd013be325d879e12f66e6</anchor>
      <arglist>(const Vector3&lt; T &gt; &amp;planePosition, const Vector3&lt; T &gt; &amp;planeNormal, const Vector3&lt; T &gt; &amp;p, const Vector3&lt; T &gt; &amp;r)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>pointFrustum</name>
      <anchorfile>namespaceMagnum_1_1Math_1_1Geometry_1_1Intersection.html</anchorfile>
      <anchor>a5d15498a45ce78618e6af612c3007abe</anchor>
      <arglist>(const Vector3&lt; T &gt; &amp;point, const Frustum&lt; T &gt; &amp;frustum)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>boxFrustum</name>
      <anchorfile>namespaceMagnum_1_1Math_1_1Geometry_1_1Intersection.html</anchorfile>
      <anchor>a6402923659fb366fee8adf726ac4bbb6</anchor>
      <arglist>(const Range3D&lt; T &gt; &amp;box, const Frustum&lt; T &gt; &amp;frustum)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Half.h</name>
    <path>/home/mosra/Code/magnum/src/Magnum/Math/</path>
    <filename>Half_8h</filename>
    <includes id="Packing_8h" name="Packing.h" local="yes" imported="no">Magnum/Math/Packing.h</includes>
    <class kind="class">Magnum::Math::Half</class>
    <namespace>Magnum</namespace>
    <namespace>Magnum::Math</namespace>
    <namespace>Magnum::Math::Literals</namespace>
    <member kind="function">
      <type>Half</type>
      <name>operator&quot;&quot;_h</name>
      <anchorfile>namespaceMagnum_1_1Math_1_1Literals.html</anchorfile>
      <anchor>a3f29fbcf0c140ce4248c2ac8fa331767</anchor>
      <arglist>(long double value)</arglist>
    </member>
    <member kind="function">
      <type>Corrade::Utility::Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>a158798027e4c105796ba27c51b857848</anchor>
      <arglist>(Corrade::Utility::Debug &amp;debug, Half value)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Math.h</name>
    <path>/home/mosra/Code/magnum/src/Magnum/Math/</path>
    <filename>Math_8h</filename>
    <includes id="Types_8h" name="Types.h" local="yes" imported="no">Magnum/Types.h</includes>
    <namespace>Magnum</namespace>
    <namespace>Magnum::Math</namespace>
  </compound>
  <compound kind="file">
    <name>Matrix.h</name>
    <path>/home/mosra/Code/magnum/src/Magnum/Math/</path>
    <filename>Matrix_8h</filename>
    <includes id="RectangularMatrix_8h" name="RectangularMatrix.h" local="yes" imported="no">Magnum/Math/RectangularMatrix.h</includes>
    <class kind="class">Magnum::Math::Matrix</class>
    <class kind="struct">Corrade::Utility::ConfigurationValue&lt; Magnum::Math::Matrix&lt; size, T &gt; &gt;</class>
    <namespace>Magnum</namespace>
    <namespace>Magnum::Math</namespace>
    <member kind="typedef">
      <type>Matrix&lt; 2, T &gt;</type>
      <name>Matrix2x2</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>a652b81c9ddc63931b8965c5a88e8131f</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Matrix&lt; 3, T &gt;</type>
      <name>Matrix3x3</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>ac89eeb9dc2fad9807f0795ef9b292190</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Matrix&lt; 4, T &gt;</type>
      <name>Matrix4x4</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>a6cfef6a416e4d1166adfc1f19cb45ed7</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Matrix3.h</name>
    <path>/home/mosra/Code/magnum/src/Magnum/Math/</path>
    <filename>Matrix3_8h</filename>
    <includes id="Matrix_8h" name="Matrix.h" local="yes" imported="no">Magnum/Math/Matrix.h</includes>
    <includes id="Vector3_8h" name="Vector3.h" local="yes" imported="no">Magnum/Math/Vector3.h</includes>
    <class kind="class">Magnum::Math::Matrix3</class>
    <class kind="struct">Corrade::Utility::ConfigurationValue&lt; Magnum::Math::Matrix3&lt; T &gt; &gt;</class>
    <namespace>Magnum</namespace>
    <namespace>Magnum::Math</namespace>
  </compound>
  <compound kind="file">
    <name>Matrix4.h</name>
    <path>/home/mosra/Code/magnum/src/Magnum/Math/</path>
    <filename>Matrix4_8h</filename>
    <includes id="Matrix_8h" name="Matrix.h" local="yes" imported="no">Magnum/Math/Matrix.h</includes>
    <includes id="Vector4_8h" name="Vector4.h" local="yes" imported="no">Magnum/Math/Vector4.h</includes>
    <class kind="class">Magnum::Math::Matrix4</class>
    <class kind="struct">Corrade::Utility::ConfigurationValue&lt; Magnum::Math::Matrix4&lt; T &gt; &gt;</class>
    <namespace>Magnum</namespace>
    <namespace>Magnum::Math</namespace>
  </compound>
  <compound kind="file">
    <name>Packing.h</name>
    <path>/home/mosra/Code/magnum/src/Magnum/Math/</path>
    <filename>Packing_8h</filename>
    <includes id="Functions_8h" name="Functions.h" local="yes" imported="no">Magnum/Math/Functions.h</includes>
    <namespace>Magnum</namespace>
    <namespace>Magnum::Math</namespace>
    <member kind="function">
      <type>FloatingPoint</type>
      <name>unpack</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>ab69ab3369a85ccf59c87486b0e5a3dd9</anchor>
      <arglist>(const Integral &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>FloatingPoint</type>
      <name>unpack</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>a711947054a07023a401b47bda5b0d16b</anchor>
      <arglist>(const Integral &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>FloatingPoint</type>
      <name>normalize</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>a767c5cede6c4e244234055ed897fec84</anchor>
      <arglist>(const Integral &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>Integral</type>
      <name>pack</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>af491eb512c26e9d8ba0ab9646d5bb436</anchor>
      <arglist>(const FloatingPoint &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>Integral</type>
      <name>pack</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>ad41fc73d795a8f589b0502ef9f6a4a46</anchor>
      <arglist>(FloatingPoint value)</arglist>
    </member>
    <member kind="function">
      <type>Integral</type>
      <name>denormalize</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>a57105d9b014111a928efb3de6359c841</anchor>
      <arglist>(const FloatingPoint &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>UnsignedShort</type>
      <name>packHalf</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>a9655ce490778c81064c358754ea93aad</anchor>
      <arglist>(Float value)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, UnsignedShort &gt;</type>
      <name>packHalf</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>a9d2180063001e747188e2fd83d3a38bb</anchor>
      <arglist>(const Vector&lt; size, Float &gt; &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>Float</type>
      <name>unpackHalf</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>a42d97dba419c59474cd88f1770cf95a8</anchor>
      <arglist>(UnsignedShort value)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Float &gt;</type>
      <name>unpackHalf</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>a689b3e216755b7c12ea3ca482cb414f3</anchor>
      <arglist>(const Vector&lt; size, UnsignedShort &gt; &amp;value)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Quaternion.h</name>
    <path>/home/mosra/Code/magnum/src/Magnum/Math/</path>
    <filename>Quaternion_8h</filename>
    <includes id="Matrix_8h" name="Matrix.h" local="yes" imported="no">Magnum/Math/Matrix.h</includes>
    <includes id="TypeTraits_8h" name="TypeTraits.h" local="yes" imported="no">Magnum/Math/TypeTraits.h</includes>
    <includes id="Vector3_8h" name="Vector3.h" local="yes" imported="no">Magnum/Math/Vector3.h</includes>
    <class kind="class">Magnum::Math::Quaternion</class>
    <namespace>Magnum</namespace>
    <namespace>Magnum::Math</namespace>
    <member kind="function">
      <type>T</type>
      <name>dot</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>a24a478c9463275d440061899c3630a32</anchor>
      <arglist>(const Quaternion&lt; T &gt; &amp;a, const Quaternion&lt; T &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>Rad&lt; T &gt;</type>
      <name>angle</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>a77252a59dcbaf44761edc9213f0e5927</anchor>
      <arglist>(const Quaternion&lt; T &gt; &amp;normalizedA, const Quaternion&lt; T &gt; &amp;normalizedB)</arglist>
    </member>
    <member kind="function">
      <type>Quaternion&lt; T &gt;</type>
      <name>lerp</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>a702539c58371af1c8635c2bc60e3e0a5</anchor>
      <arglist>(const Quaternion&lt; T &gt; &amp;normalizedA, const Quaternion&lt; T &gt; &amp;normalizedB, T t)</arglist>
    </member>
    <member kind="function">
      <type>Quaternion&lt; T &gt;</type>
      <name>slerp</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>aa52d32b2fcb66f28a4330fb39fa50589</anchor>
      <arglist>(const Quaternion&lt; T &gt; &amp;normalizedA, const Quaternion&lt; T &gt; &amp;normalizedB, T t)</arglist>
    </member>
    <member kind="function">
      <type>Corrade::Utility::Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>a03f030af72160303a9934d7a9af40f37</anchor>
      <arglist>(Corrade::Utility::Debug &amp;debug, const Quaternion&lt; T &gt; &amp;value)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Range.h</name>
    <path>/home/mosra/Code/magnum/src/Magnum/Math/</path>
    <filename>Range_8h</filename>
    <includes id="Functions_8h" name="Functions.h" local="yes" imported="no">Magnum/Math/Functions.h</includes>
    <includes id="Vector3_8h" name="Vector3.h" local="yes" imported="no">Magnum/Math/Vector3.h</includes>
    <class kind="class">Magnum::Math::Range</class>
    <class kind="class">Magnum::Math::Range2D</class>
    <class kind="class">Magnum::Math::Range3D</class>
    <class kind="struct">Corrade::Utility::ConfigurationValue&lt; Magnum::Math::Range&lt; dimensions, T &gt; &gt;</class>
    <class kind="struct">Corrade::Utility::ConfigurationValue&lt; Magnum::Math::Range2D&lt; T &gt; &gt;</class>
    <class kind="struct">Corrade::Utility::ConfigurationValue&lt; Magnum::Math::Range3D&lt; T &gt; &gt;</class>
    <namespace>Magnum</namespace>
    <namespace>Magnum::Math</namespace>
    <member kind="typedef">
      <type>Range&lt; 1, T &gt;</type>
      <name>Range1D</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>ab8759a26a030f045b5217d93618e5300</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>Range&lt; dimensions, T &gt;</type>
      <name>join</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>ab1a605df6c5b25fe493c1ee83e2ae6d6</anchor>
      <arglist>(const Range&lt; dimensions, T &gt; &amp;a, const Range&lt; dimensions, T &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>Corrade::Utility::Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>a1f3385fec96840d6f57368596e7b8fe5</anchor>
      <arglist>(Corrade::Utility::Debug &amp;debug, const Range&lt; dimensions, T &gt; &amp;value)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>RectangularMatrix.h</name>
    <path>/home/mosra/Code/magnum/src/Magnum/Math/</path>
    <filename>RectangularMatrix_8h</filename>
    <includes id="Math_2Vector_8h" name="Vector.h" local="yes" imported="no">Magnum/Math/Vector.h</includes>
    <class kind="class">Magnum::Math::RectangularMatrix</class>
    <class kind="struct">Corrade::Utility::ConfigurationValue&lt; Magnum::Math::RectangularMatrix&lt; cols, rows, T &gt; &gt;</class>
    <namespace>Magnum</namespace>
    <namespace>Magnum::Math</namespace>
    <member kind="typedef">
      <type>RectangularMatrix&lt; 2, 3, T &gt;</type>
      <name>Matrix2x3</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>aeafdba32770167422563607a6d7a7763</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>RectangularMatrix&lt; 3, 2, T &gt;</type>
      <name>Matrix3x2</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>a6784a052ccad6a6f0b66121c6c2f270e</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>RectangularMatrix&lt; 2, 4, T &gt;</type>
      <name>Matrix2x4</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>a72b6951e0e464e5547906e6824f83fc8</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>RectangularMatrix&lt; 4, 2, T &gt;</type>
      <name>Matrix4x2</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>a84e3b41c8281378227a9250c2fc2abf9</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>RectangularMatrix&lt; 3, 4, T &gt;</type>
      <name>Matrix3x4</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>ab25028109475da01892b1e7b3e13a18b</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>RectangularMatrix&lt; 4, 3, T &gt;</type>
      <name>Matrix4x3</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>aebcc2ac26446bd06cc6e7e4bb1d57464</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>Corrade::Utility::Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>a2b4c9a90c6ef57998d88efe24b223a07</anchor>
      <arglist>(Corrade::Utility::Debug &amp;debug, const Magnum::Math::RectangularMatrix&lt; cols, rows, T &gt; &amp;value)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Swizzle.h</name>
    <path>/home/mosra/Code/magnum/src/Magnum/Math/</path>
    <filename>Swizzle_8h</filename>
    <includes id="Math_2Vector_8h" name="Vector.h" local="yes" imported="no">Magnum/Math/Vector.h</includes>
    <namespace>Magnum</namespace>
    <namespace>Magnum::Math</namespace>
    <member kind="function">
      <type>constexpr Implementation::TypeForSize&lt; sizeof...(components), T &gt;::Type</type>
      <name>swizzle</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>a0bfabe9a216b20e44f34d6258ae02756</anchor>
      <arglist>(const T &amp;vector)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Tags.h</name>
    <path>/home/mosra/Code/magnum/src/Magnum/Math/</path>
    <filename>Math_2Tags_8h</filename>
    <class kind="struct">Magnum::Math::ZeroInitT</class>
    <class kind="struct">Magnum::Math::IdentityInitT</class>
    <namespace>Magnum</namespace>
    <namespace>Magnum::Math</namespace>
    <member kind="typedef">
      <type>Corrade::Containers::NoInitT</type>
      <name>NoInitT</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>ae3fc2129ed8e84f3ed1cea8bd4a902ab</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>constexpr NoInitT</type>
      <name>NoInit</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>a09af7a367aa780ca2c682546085cafe2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>constexpr ZeroInitT</type>
      <name>ZeroInit</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>a1a3ef1a05ea090ef83dc89eed44ba8a6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>constexpr IdentityInitT</type>
      <name>IdentityInit</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>ab915b0885bc50909b7cb7838266715c0</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Tags.h</name>
    <path>/home/mosra/Code/magnum/src/Magnum/</path>
    <filename>Tags_8h</filename>
    <class kind="struct">Magnum::NoCreateT</class>
    <namespace>Magnum</namespace>
    <member kind="variable">
      <type>constexpr NoCreateT</type>
      <name>NoCreate</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>ae03d3fce3586ce1ff1e881f795bcd4a3</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>TypeTraits.h</name>
    <path>/home/mosra/Code/magnum/src/Magnum/Math/</path>
    <filename>TypeTraits_8h</filename>
    <includes id="Types_8h" name="Types.h" local="yes" imported="no">Magnum/Types.h</includes>
    <class kind="struct">Magnum::Math::TypeTraits</class>
    <namespace>Magnum</namespace>
    <namespace>Magnum::Math</namespace>
    <member kind="define">
      <type>#define</type>
      <name>FLOAT_EQUALITY_PRECISION</name>
      <anchorfile>TypeTraits_8h.html</anchorfile>
      <anchor>a5842b94b81bd00f224bf838ccbd10834</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DOUBLE_EQUALITY_PRECISION</name>
      <anchorfile>TypeTraits_8h.html</anchorfile>
      <anchor>a5be99d50f9cfa5d2a32f2a3fe1193975</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>LONG_DOUBLE_EQUALITY_PRECISION</name>
      <anchorfile>TypeTraits_8h.html</anchorfile>
      <anchor>ac923f2fad9aaefd0408c3240ad7b634d</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Unit.h</name>
    <path>/home/mosra/Code/magnum/src/Magnum/Math/</path>
    <filename>Unit_8h</filename>
    <includes id="TypeTraits_8h" name="TypeTraits.h" local="yes" imported="no">Magnum/Math/TypeTraits.h</includes>
    <includes id="Math_2Tags_8h" name="Tags.h" local="yes" imported="no">Magnum/Math/Tags.h</includes>
    <class kind="class">Magnum::Math::Unit</class>
    <namespace>Magnum</namespace>
    <namespace>Magnum::Math</namespace>
  </compound>
  <compound kind="file">
    <name>Vector.h</name>
    <path>/home/mosra/Code/magnum/src/Magnum/Math/</path>
    <filename>Math_2Vector_8h</filename>
    <includes id="Angle_8h" name="Angle.h" local="yes" imported="no">Magnum/Math/Angle.h</includes>
    <includes id="BoolVector_8h" name="BoolVector.h" local="yes" imported="no">Magnum/Math/BoolVector.h</includes>
    <includes id="TypeTraits_8h" name="TypeTraits.h" local="yes" imported="no">Magnum/Math/TypeTraits.h</includes>
    <class kind="class">Magnum::Math::Vector</class>
    <class kind="struct">Corrade::Utility::ConfigurationValue&lt; Magnum::Math::Vector&lt; size, T &gt; &gt;</class>
    <namespace>Magnum</namespace>
    <namespace>Magnum::Math</namespace>
    <member kind="function">
      <type>T</type>
      <name>dot</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>afcea7c945bee7d210d66d1a47d85944d</anchor>
      <arglist>(const Vector&lt; size, T &gt; &amp;a, const Vector&lt; size, T &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>Rad&lt; T &gt;</type>
      <name>angle</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>a754897e5423279be34bfaba81777e51c</anchor>
      <arglist>(const Vector&lt; size, T &gt; &amp;normalizedA, const Vector&lt; size, T &gt; &amp;normalizedB)</arglist>
    </member>
    <member kind="function">
      <type>Corrade::Utility::Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>a342462ce2d3144347242b0c1b0eb2613</anchor>
      <arglist>(Corrade::Utility::Debug &amp;debug, const Vector&lt; size, T &gt; &amp;value)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Vector.h</name>
    <path>/home/mosra/Code/magnum/src/Magnum/Shaders/</path>
    <filename>Shaders_2Vector_8h</filename>
    <includes id="DimensionTraits_8h" name="DimensionTraits.h" local="yes" imported="no">Magnum/DimensionTraits.h</includes>
    <includes id="Math_2Color_8h" name="Color.h" local="yes" imported="no">Magnum/Math/Color.h</includes>
    <includes id="Matrix3_8h" name="Matrix3.h" local="yes" imported="no">Magnum/Math/Matrix3.h</includes>
    <includes id="Matrix4_8h" name="Matrix4.h" local="yes" imported="no">Magnum/Math/Matrix4.h</includes>
    <includes id="AbstractVector_8h" name="AbstractVector.h" local="yes" imported="no">Magnum/Shaders/AbstractVector.h</includes>
    <class kind="class">Magnum::Shaders::Vector</class>
    <namespace>Magnum</namespace>
    <namespace>Magnum::Shaders</namespace>
    <member kind="typedef">
      <type>Vector&lt; 2 &gt;</type>
      <name>Vector2D</name>
      <anchorfile>namespaceMagnum_1_1Shaders.html</anchorfile>
      <anchor>a9da9270650198bf41711864da95433e3</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Vector&lt; 3 &gt;</type>
      <name>Vector3D</name>
      <anchorfile>namespaceMagnum_1_1Shaders.html</anchorfile>
      <anchor>ad52ea30fd146f95b5b98a8100f945776</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Vector2.h</name>
    <path>/home/mosra/Code/magnum/src/Magnum/Math/</path>
    <filename>Vector2_8h</filename>
    <includes id="Math_2Vector_8h" name="Vector.h" local="yes" imported="no">Magnum/Math/Vector.h</includes>
    <class kind="class">Magnum::Math::Vector2</class>
    <class kind="struct">Corrade::Utility::ConfigurationValue&lt; Magnum::Math::Vector2&lt; T &gt; &gt;</class>
    <namespace>Magnum</namespace>
    <namespace>Magnum::Math</namespace>
    <member kind="function">
      <type>T</type>
      <name>cross</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>a2058d3c2541d8b3556c861ef79c592d0</anchor>
      <arglist>(const Vector2&lt; T &gt; &amp;a, const Vector2&lt; T &gt; &amp;b)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Vector3.h</name>
    <path>/home/mosra/Code/magnum/src/Magnum/Math/</path>
    <filename>Vector3_8h</filename>
    <includes id="Vector2_8h" name="Vector2.h" local="yes" imported="no">Magnum/Math/Vector2.h</includes>
    <includes id="Swizzle_8h" name="Swizzle.h" local="yes" imported="no">Magnum/Math/Swizzle.h</includes>
    <class kind="class">Magnum::Math::Vector3</class>
    <class kind="struct">Corrade::Utility::ConfigurationValue&lt; Magnum::Math::Vector3&lt; T &gt; &gt;</class>
    <namespace>Magnum</namespace>
    <namespace>Magnum::Math</namespace>
    <member kind="function">
      <type>Vector3&lt; T &gt;</type>
      <name>cross</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>ad90024e1b2ca900d572042ccd0baba64</anchor>
      <arglist>(const Vector3&lt; T &gt; &amp;a, const Vector3&lt; T &gt; &amp;b)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Vector4.h</name>
    <path>/home/mosra/Code/magnum/src/Magnum/Math/</path>
    <filename>Vector4_8h</filename>
    <includes id="Vector3_8h" name="Vector3.h" local="yes" imported="no">Magnum/Math/Vector3.h</includes>
    <class kind="class">Magnum::Math::Vector4</class>
    <class kind="struct">Corrade::Utility::ConfigurationValue&lt; Magnum::Math::Vector4&lt; T &gt; &gt;</class>
    <namespace>Magnum</namespace>
    <namespace>Magnum::Math</namespace>
  </compound>
  <compound kind="file">
    <name>Mesh.h</name>
    <path>/home/mosra/Code/magnum/src/Magnum/</path>
    <filename>Mesh_8h</filename>
    <includes id="AbstractObject_8h" name="AbstractObject.h" local="yes" imported="no">Magnum/AbstractObject.h</includes>
    <includes id="Attribute_8h" name="Attribute.h" local="yes" imported="no">Magnum/Attribute.h</includes>
    <includes id="Tags_8h" name="Tags.h" local="yes" imported="no">Magnum/Tags.h</includes>
    <class kind="class">Magnum::Mesh</class>
    <class kind="struct">Corrade::Utility::ConfigurationValue&lt; Magnum::MeshPrimitive &gt;</class>
    <class kind="struct">Corrade::Utility::ConfigurationValue&lt; Magnum::Mesh::IndexType &gt;</class>
    <namespace>Magnum</namespace>
    <member kind="enumeration">
      <type></type>
      <name>MeshPrimitive</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a7af94041be77647bb639fa9fd94cd338</anchor>
      <arglist></arglist>
      <enumvalue file="namespaceMagnum.html" anchor="a7af94041be77647bb639fa9fd94cd338a75dd5f1160a3f02b6fae89c54361a1b3">Points</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a7af94041be77647bb639fa9fd94cd338ae7f9e73b8edd21f420a63b3ace5768a2">LineStrip</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a7af94041be77647bb639fa9fd94cd338a2ba065d2b3004087cc8f111bf56f134b">LineLoop</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a7af94041be77647bb639fa9fd94cd338aa0b0293a2db49f5f93c15a62e095c819">Lines</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a7af94041be77647bb639fa9fd94cd338a826457761e4d352b8f54d7d47b80dbaa">LineStripAdjacency</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a7af94041be77647bb639fa9fd94cd338a72ba2961719d09dc64d6088bb7b6e13a">LinesAdjacency</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a7af94041be77647bb639fa9fd94cd338a1da0b9ead8b051940a89214bae22831c">TriangleStrip</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a7af94041be77647bb639fa9fd94cd338a18d58fde618e4a30e2dfdc122e693047">TriangleFan</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a7af94041be77647bb639fa9fd94cd338a7ca66fdfaad3eb33fc65d7490178f856">Triangles</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a7af94041be77647bb639fa9fd94cd338a6b682fd6550f90f75722e4a7d38f3949">TriangleStripAdjacency</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a7af94041be77647bb639fa9fd94cd338a17eff3f9b5c0afdaacaeaf79238e36d5">TrianglesAdjacency</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a7af94041be77647bb639fa9fd94cd338ac4d283323af70979073f5cb6145f3a4b">Patches</enumvalue>
    </member>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a58c54ddbe369385b333026e6a47c9d8f</anchor>
      <arglist>(Debug &amp;debug, MeshPrimitive value)</arglist>
    </member>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a57501c2212f201d21f32303c9bfad36f</anchor>
      <arglist>(Debug &amp;debug, Mesh::IndexType value)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>CombineIndexedArrays.h</name>
    <path>/home/mosra/Code/magnum/src/Magnum/MeshTools/</path>
    <filename>CombineIndexedArrays_8h</filename>
    <includes id="Types_8h" name="Types.h" local="yes" imported="no">Magnum/Types.h</includes>
    <namespace>Magnum</namespace>
    <namespace>Magnum::MeshTools</namespace>
    <member kind="function">
      <type>std::vector&lt; UnsignedInt &gt;</type>
      <name>combineIndexArrays</name>
      <anchorfile>namespaceMagnum_1_1MeshTools.html</anchorfile>
      <anchor>a90e75eba0b7e4e9edb105db481e7992c</anchor>
      <arglist>(const std::vector&lt; std::reference_wrapper&lt; std::vector&lt; UnsignedInt &gt;&gt;&gt; &amp;arrays)</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; UnsignedInt &gt;</type>
      <name>combineIndexArrays</name>
      <anchorfile>namespaceMagnum_1_1MeshTools.html</anchorfile>
      <anchor>a1d768efd6cf17739c960ef5114d61492</anchor>
      <arglist>(std::initializer_list&lt; std::reference_wrapper&lt; std::vector&lt; UnsignedInt &gt;&gt;&gt; arrays)</arglist>
    </member>
    <member kind="function">
      <type>std::pair&lt; std::vector&lt; UnsignedInt &gt;, std::vector&lt; UnsignedInt &gt; &gt;</type>
      <name>combineIndexArrays</name>
      <anchorfile>namespaceMagnum_1_1MeshTools.html</anchorfile>
      <anchor>a17a53a7980104181355a5bc1b5fc89fb</anchor>
      <arglist>(const std::vector&lt; UnsignedInt &gt; &amp;interleavedArrays, UnsignedInt stride)</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; UnsignedInt &gt;</type>
      <name>combineIndexedArrays</name>
      <anchorfile>namespaceMagnum_1_1MeshTools.html</anchorfile>
      <anchor>a425eb14ea8166f1648bd0aef57010231</anchor>
      <arglist>(const std::pair&lt; const std::vector&lt; UnsignedInt &gt; &amp;, std::vector&lt; T &gt; &amp; &gt; &amp;...indexedArrays)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Compile.h</name>
    <path>/home/mosra/Code/magnum/src/Magnum/MeshTools/</path>
    <filename>Compile_8h</filename>
    <includes id="Magnum_8h" name="Magnum.h" local="yes" imported="no">Magnum/Magnum.h</includes>
    <includes id="Trade_8h" name="Trade.h" local="yes" imported="no">Magnum/Trade/Trade.h</includes>
    <namespace>Magnum</namespace>
    <namespace>Magnum::MeshTools</namespace>
    <member kind="function">
      <type>std::tuple&lt; Mesh, std::unique_ptr&lt; Buffer &gt;, std::unique_ptr&lt; Buffer &gt; &gt;</type>
      <name>compile</name>
      <anchorfile>namespaceMagnum_1_1MeshTools.html</anchorfile>
      <anchor>ab8f80ea4500e06c4ee390c071e07a5aa</anchor>
      <arglist>(const Trade::MeshData2D &amp;meshData, BufferUsage usage)</arglist>
    </member>
    <member kind="function">
      <type>std::tuple&lt; Mesh, std::unique_ptr&lt; Buffer &gt;, std::unique_ptr&lt; Buffer &gt; &gt;</type>
      <name>compile</name>
      <anchorfile>namespaceMagnum_1_1MeshTools.html</anchorfile>
      <anchor>a3ee040d8c3eabc7f9e4f3b0a892e4f08</anchor>
      <arglist>(const Trade::MeshData3D &amp;meshData, BufferUsage usage)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>CompressIndices.h</name>
    <path>/home/mosra/Code/magnum/src/Magnum/MeshTools/</path>
    <filename>CompressIndices_8h</filename>
    <includes id="Mesh_8h" name="Mesh.h" local="yes" imported="no">Magnum/Mesh.h</includes>
    <namespace>Magnum</namespace>
    <namespace>Magnum::MeshTools</namespace>
    <member kind="function">
      <type>std::tuple&lt; Containers::Array&lt; char &gt;, Mesh::IndexType, UnsignedInt, UnsignedInt &gt;</type>
      <name>compressIndices</name>
      <anchorfile>namespaceMagnum_1_1MeshTools.html</anchorfile>
      <anchor>a8d2355cf7b5fb740170bbe48f292b3d1</anchor>
      <arglist>(const std::vector&lt; UnsignedInt &gt; &amp;indices)</arglist>
    </member>
    <member kind="function">
      <type>Containers::Array&lt; T &gt;</type>
      <name>compressIndicesAs</name>
      <anchorfile>namespaceMagnum_1_1MeshTools.html</anchorfile>
      <anchor>abd142dbefa361afda5152d3008d3aaa0</anchor>
      <arglist>(const std::vector&lt; UnsignedInt &gt; &amp;indices)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Duplicate.h</name>
    <path>/home/mosra/Code/magnum/src/Magnum/MeshTools/</path>
    <filename>Duplicate_8h</filename>
    <includes id="Types_8h" name="Types.h" local="yes" imported="no">Magnum/Types.h</includes>
    <namespace>Magnum</namespace>
    <namespace>Magnum::MeshTools</namespace>
    <member kind="function">
      <type>std::vector&lt; T &gt;</type>
      <name>duplicate</name>
      <anchorfile>namespaceMagnum_1_1MeshTools.html</anchorfile>
      <anchor>a52e95bc7fa1a8b895d6b7095659086e2</anchor>
      <arglist>(const std::vector&lt; UnsignedInt &gt; &amp;indices, const std::vector&lt; T &gt; &amp;data)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>FlipNormals.h</name>
    <path>/home/mosra/Code/magnum/src/Magnum/MeshTools/</path>
    <filename>FlipNormals_8h</filename>
    <includes id="Magnum_8h" name="Magnum.h" local="yes" imported="no">Magnum/Magnum.h</includes>
    <namespace>Magnum</namespace>
    <namespace>Magnum::MeshTools</namespace>
    <member kind="function">
      <type>void</type>
      <name>flipFaceWinding</name>
      <anchorfile>namespaceMagnum_1_1MeshTools.html</anchorfile>
      <anchor>a42784996b61886a56da58a0361f7909a</anchor>
      <arglist>(std::vector&lt; UnsignedInt &gt; &amp;indices)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>flipNormals</name>
      <anchorfile>namespaceMagnum_1_1MeshTools.html</anchorfile>
      <anchor>ab2904cb96723d76bea8a6d7aa36cc81d</anchor>
      <arglist>(std::vector&lt; Vector3 &gt; &amp;normals)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>flipNormals</name>
      <anchorfile>namespaceMagnum_1_1MeshTools.html</anchorfile>
      <anchor>af4417b043b3de224d43edf1748f880fc</anchor>
      <arglist>(std::vector&lt; UnsignedInt &gt; &amp;indices, std::vector&lt; Vector3 &gt; &amp;normals)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>FullScreenTriangle.h</name>
    <path>/home/mosra/Code/magnum/src/Magnum/MeshTools/</path>
    <filename>FullScreenTriangle_8h</filename>
    <includes id="Magnum_8h" name="Magnum.h" local="yes" imported="no">Magnum/Magnum.h</includes>
    <namespace>Magnum</namespace>
    <namespace>Magnum::MeshTools</namespace>
    <member kind="function">
      <type>std::pair&lt; std::unique_ptr&lt; Buffer &gt;, Mesh &gt;</type>
      <name>fullScreenTriangle</name>
      <anchorfile>namespaceMagnum_1_1MeshTools.html</anchorfile>
      <anchor>af8233efe7125b1570de27733878e3939</anchor>
      <arglist>(Version version)</arglist>
    </member>
    <member kind="function">
      <type>std::pair&lt; std::unique_ptr&lt; Buffer &gt;, Mesh &gt;</type>
      <name>fullScreenTriangle</name>
      <anchorfile>namespaceMagnum_1_1MeshTools.html</anchorfile>
      <anchor>a1d8c735026d1cd2583565b95e881646a</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>GenerateFlatNormals.h</name>
    <path>/home/mosra/Code/magnum/src/Magnum/MeshTools/</path>
    <filename>GenerateFlatNormals_8h</filename>
    <includes id="Magnum_8h" name="Magnum.h" local="yes" imported="no">Magnum/Magnum.h</includes>
    <namespace>Magnum</namespace>
    <namespace>Magnum::MeshTools</namespace>
    <member kind="function">
      <type>std::tuple&lt; std::vector&lt; UnsignedInt &gt;, std::vector&lt; Vector3 &gt; &gt;</type>
      <name>generateFlatNormals</name>
      <anchorfile>namespaceMagnum_1_1MeshTools.html</anchorfile>
      <anchor>aa00eaeae99bb3c0c3712d37235866c96</anchor>
      <arglist>(const std::vector&lt; UnsignedInt &gt; &amp;indices, const std::vector&lt; Vector3 &gt; &amp;positions)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Interleave.h</name>
    <path>/home/mosra/Code/magnum/src/Magnum/MeshTools/</path>
    <filename>Interleave_8h</filename>
    <includes id="Magnum_8h" name="Magnum.h" local="yes" imported="no">Magnum/Magnum.h</includes>
    <namespace>Magnum</namespace>
    <namespace>Magnum::MeshTools</namespace>
    <member kind="function">
      <type>Containers::Array&lt; char &gt;</type>
      <name>interleave</name>
      <anchorfile>namespaceMagnum_1_1MeshTools.html</anchorfile>
      <anchor>a358bb624451eb90c0c3fa3e8bf5ffffe</anchor>
      <arglist>(const T &amp;first, const U &amp;...next)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>interleaveInto</name>
      <anchorfile>namespaceMagnum_1_1MeshTools.html</anchorfile>
      <anchor>a5de1c23f776e6923a61c8ba09fce6960</anchor>
      <arglist>(Containers::ArrayView&lt; char &gt; buffer, const T &amp;first, const U &amp;...next)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>RemoveDuplicates.h</name>
    <path>/home/mosra/Code/magnum/src/Magnum/MeshTools/</path>
    <filename>RemoveDuplicates_8h</filename>
    <includes id="Magnum_8h" name="Magnum.h" local="yes" imported="no">Magnum/Magnum.h</includes>
    <includes id="Functions_8h" name="Functions.h" local="yes" imported="no">Magnum/Math/Functions.h</includes>
    <namespace>Magnum</namespace>
    <namespace>Magnum::MeshTools</namespace>
    <member kind="function">
      <type>std::vector&lt; UnsignedInt &gt;</type>
      <name>removeDuplicates</name>
      <anchorfile>namespaceMagnum_1_1MeshTools.html</anchorfile>
      <anchor>a002865c3510bb6d2c12dca5b5fda7fa9</anchor>
      <arglist>(std::vector&lt; Vector &gt; &amp;data, typename Vector::Type epsilon=Math::TypeTraits&lt; typename Vector::Type &gt;::epsilon())</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Subdivide.h</name>
    <path>/home/mosra/Code/magnum/src/Magnum/MeshTools/</path>
    <filename>Subdivide_8h</filename>
    <namespace>Magnum</namespace>
    <namespace>Magnum::MeshTools</namespace>
    <member kind="function">
      <type>void</type>
      <name>subdivide</name>
      <anchorfile>namespaceMagnum_1_1MeshTools.html</anchorfile>
      <anchor>a365f7548fa611240bd2afc613c55c051</anchor>
      <arglist>(std::vector&lt; UnsignedInt &gt; &amp;indices, std::vector&lt; Vertex &gt; &amp;vertices, Interpolator interpolator)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Tipsify.h</name>
    <path>/home/mosra/Code/magnum/src/Magnum/MeshTools/</path>
    <filename>Tipsify_8h</filename>
    <includes id="Types_8h" name="Types.h" local="yes" imported="no">Magnum/Types.h</includes>
    <namespace>Magnum</namespace>
    <namespace>Magnum::MeshTools</namespace>
    <member kind="function">
      <type>void</type>
      <name>tipsify</name>
      <anchorfile>namespaceMagnum_1_1MeshTools.html</anchorfile>
      <anchor>adda6a399901fd1bae7e3cd9d04179d37</anchor>
      <arglist>(std::vector&lt; UnsignedInt &gt; &amp;indices, UnsignedInt vertexCount, std::size_t cacheSize)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Transform.h</name>
    <path>/home/mosra/Code/magnum/src/Magnum/MeshTools/</path>
    <filename>Transform_8h</filename>
    <includes id="DualQuaternion_8h" name="DualQuaternion.h" local="yes" imported="no">Magnum/Math/DualQuaternion.h</includes>
    <includes id="DualComplex_8h" name="DualComplex.h" local="yes" imported="no">Magnum/Math/DualComplex.h</includes>
    <namespace>Magnum</namespace>
    <namespace>Magnum::MeshTools</namespace>
    <member kind="function">
      <type>void</type>
      <name>transformVectorsInPlace</name>
      <anchorfile>namespaceMagnum_1_1MeshTools.html</anchorfile>
      <anchor>a608f59c896865a34b280e70b5e47ff04</anchor>
      <arglist>(const Math::Quaternion&lt; T &gt; &amp;normalizedQuaternion, U &amp;vectors)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>transformVectorsInPlace</name>
      <anchorfile>namespaceMagnum_1_1MeshTools.html</anchorfile>
      <anchor>a911f36841acac6ce2d13432cf2020286</anchor>
      <arglist>(const Math::Complex&lt; T &gt; &amp;complex, U &amp;vectors)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>transformVectorsInPlace</name>
      <anchorfile>namespaceMagnum_1_1MeshTools.html</anchorfile>
      <anchor>a4d7e07550ea88eb4e4b006a04a6d6670</anchor>
      <arglist>(const Math::Matrix3&lt; T &gt; &amp;matrix, U &amp;vectors)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>transformVectorsInPlace</name>
      <anchorfile>namespaceMagnum_1_1MeshTools.html</anchorfile>
      <anchor>a2d4bc525e4156de1df689eee44252ad3</anchor>
      <arglist>(const Math::Matrix4&lt; T &gt; &amp;matrix, U &amp;vectors)</arglist>
    </member>
    <member kind="function">
      <type>U</type>
      <name>transformVectors</name>
      <anchorfile>namespaceMagnum_1_1MeshTools.html</anchorfile>
      <anchor>add947f248aa8d07112060cc99ec31f42</anchor>
      <arglist>(const T &amp;transformation, U vectors)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>transformPointsInPlace</name>
      <anchorfile>namespaceMagnum_1_1MeshTools.html</anchorfile>
      <anchor>a8d746fd1952ce5402421ec652c8906ef</anchor>
      <arglist>(const Math::DualQuaternion&lt; T &gt; &amp;normalizedDualQuaternion, U &amp;points)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>transformPointsInPlace</name>
      <anchorfile>namespaceMagnum_1_1MeshTools.html</anchorfile>
      <anchor>ab401e4f628c575263ed997d01eb1ea8f</anchor>
      <arglist>(const Math::DualComplex&lt; T &gt; &amp;dualComplex, U &amp;points)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>transformPointsInPlace</name>
      <anchorfile>namespaceMagnum_1_1MeshTools.html</anchorfile>
      <anchor>a5fe0ab4c29ddd744feca85ee3c4e8bf0</anchor>
      <arglist>(const Math::Matrix3&lt; T &gt; &amp;matrix, U &amp;points)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>transformPointsInPlace</name>
      <anchorfile>namespaceMagnum_1_1MeshTools.html</anchorfile>
      <anchor>a740f09c1e6a3e8455541df16bf31556c</anchor>
      <arglist>(const Math::Matrix4&lt; T &gt; &amp;matrix, U &amp;points)</arglist>
    </member>
    <member kind="function">
      <type>U</type>
      <name>transformPoints</name>
      <anchorfile>namespaceMagnum_1_1MeshTools.html</anchorfile>
      <anchor>a6a35b6df2232d8cbf17f612b52244851</anchor>
      <arglist>(const T &amp;transformation, U vectors)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MeshView.h</name>
    <path>/home/mosra/Code/magnum/src/Magnum/</path>
    <filename>MeshView_8h</filename>
    <includes id="Magnum_8h" name="Magnum.h" local="yes" imported="no">Magnum/Magnum.h</includes>
    <includes id="OpenGL_8h" name="OpenGL.h" local="yes" imported="no">Magnum/OpenGL.h</includes>
    <class kind="class">Magnum::MeshView</class>
    <namespace>Magnum</namespace>
  </compound>
  <compound kind="file">
    <name>MultisampleTexture.h</name>
    <path>/home/mosra/Code/magnum/src/Magnum/</path>
    <filename>MultisampleTexture_8h</filename>
    <includes id="AbstractTexture_8h" name="AbstractTexture.h" local="yes" imported="no">Magnum/AbstractTexture.h</includes>
    <includes id="DimensionTraits_8h" name="DimensionTraits.h" local="yes" imported="no">Magnum/DimensionTraits.h</includes>
    <includes id="Vector3_8h" name="Vector3.h" local="yes" imported="no">Magnum/Math/Vector3.h</includes>
    <class kind="class">Magnum::MultisampleTexture</class>
    <namespace>Magnum</namespace>
    <member kind="typedef">
      <type>MultisampleTexture&lt; 2 &gt;</type>
      <name>MultisampleTexture2D</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a1cc12580b9d3489e8062d1027c6a3e09</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>MultisampleTexture&lt; 3 &gt;</type>
      <name>MultisampleTexture2DArray</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>ad1d2e57dbd2801667ba112f82a9d03d5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>MultisampleTextureSampleLocations</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>adb0ce1665649673250190e627ab8a6a5</anchor>
      <arglist></arglist>
      <enumvalue file="namespaceMagnum.html" anchor="adb0ce1665649673250190e627ab8a6a5ae4964d078936084e4df8afce581a2c7f">NotFixed</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="adb0ce1665649673250190e627ab8a6a5a4457d440870ad6d42bab9082d9bf9b61">Fixed</enumvalue>
    </member>
  </compound>
  <compound kind="file">
    <name>OpenGL.h</name>
    <path>/home/mosra/Code/magnum/src/Magnum/</path>
    <filename>OpenGL_8h</filename>
  </compound>
  <compound kind="file">
    <name>OpenGLTester.h</name>
    <path>/home/mosra/Code/magnum/src/Magnum/</path>
    <filename>OpenGLTester_8h</filename>
    <includes id="Renderer_8h" name="Renderer.h" local="yes" imported="no">Magnum/Renderer.h</includes>
    <includes id="TimeQuery_8h" name="TimeQuery.h" local="yes" imported="no">Magnum/TimeQuery.h</includes>
    <class kind="class">Magnum::OpenGLTester</class>
    <namespace>Magnum</namespace>
  </compound>
  <compound kind="file">
    <name>PixelFormat.h</name>
    <path>/home/mosra/Code/magnum/src/Magnum/</path>
    <filename>PixelFormat_8h</filename>
    <includes id="Magnum_8h" name="Magnum.h" local="yes" imported="no">Magnum/Magnum.h</includes>
    <includes id="OpenGL_8h" name="OpenGL.h" local="yes" imported="no">Magnum/OpenGL.h</includes>
    <namespace>Magnum</namespace>
    <member kind="enumeration">
      <type></type>
      <name>PixelFormat</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a19bc9ab632085a01f8a77119476dea9b</anchor>
      <arglist></arglist>
      <enumvalue file="namespaceMagnum.html" anchor="a19bc9ab632085a01f8a77119476dea9baee38e4d5dd68c4e440825018d549cb47">Red</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a19bc9ab632085a01f8a77119476dea9bad382816a3cbeed082c9e216e7392eed1">Green</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a19bc9ab632085a01f8a77119476dea9ba9594eec95be70e7b1710f730fdda33d9">Blue</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a19bc9ab632085a01f8a77119476dea9ba280f73691109aeaa235ffddd2d154d9b">Luminance</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a19bc9ab632085a01f8a77119476dea9babac953e88f6d79514b0b6fc42eb6f3b7">RG</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a19bc9ab632085a01f8a77119476dea9ba780701651d86fd20708e81e7ad48c078">LuminanceAlpha</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a19bc9ab632085a01f8a77119476dea9ba889574aebacda6bfd3e534e2b49b8028">RGB</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a19bc9ab632085a01f8a77119476dea9baea3495a278957dc58165e48a8945469f">RGBA</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a19bc9ab632085a01f8a77119476dea9ba2ad5640ebdec72fc79531d1778c6c2dc">BGR</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a19bc9ab632085a01f8a77119476dea9ba5a1fe3c61c9e2fd6dbbc823589f6e697">BGRA</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a19bc9ab632085a01f8a77119476dea9ba1f3f09bca5728eb7af4ea263ae84b9f1">SRGB</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a19bc9ab632085a01f8a77119476dea9ba5dfd728b3bee2ad053d22203c3e8f2b8">SRGBAlpha</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a19bc9ab632085a01f8a77119476dea9ba3774ed2915a508b6652a18b368a82a40">RedInteger</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a19bc9ab632085a01f8a77119476dea9ba108f898baf120f2b888ce842b430ad41">GreenInteger</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a19bc9ab632085a01f8a77119476dea9ba02f2197d037a51e8791768a670ea5ca9">BlueInteger</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a19bc9ab632085a01f8a77119476dea9bac614904b10b846a993192fd483fd0f8d">RGInteger</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a19bc9ab632085a01f8a77119476dea9ba893f9d29983ee73833f207885e688927">RGBInteger</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a19bc9ab632085a01f8a77119476dea9ba5beae36e40eb87168d14300e4b38a966">RGBAInteger</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a19bc9ab632085a01f8a77119476dea9bafc927856045b7f1d1bf641aeb660aa5f">BGRInteger</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a19bc9ab632085a01f8a77119476dea9ba29874b26b860b0ddc3f3b447fc96849f">BGRAInteger</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a19bc9ab632085a01f8a77119476dea9ba19c8f1ee3a700e77e87053eee47f6bc8">DepthComponent</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a19bc9ab632085a01f8a77119476dea9bac07ade4f9906db3ee8e4e7053dac1dee">StencilIndex</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a19bc9ab632085a01f8a77119476dea9ba2fa8076285272883c91e14402975a441">DepthStencil</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>PixelType</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a42cb1183f2da81e12553a28a196001e7</anchor>
      <arglist></arglist>
      <enumvalue file="namespaceMagnum.html" anchor="a42cb1183f2da81e12553a28a196001e7a8f0fb883eb5a52838534191513e365a2">UnsignedByte</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a42cb1183f2da81e12553a28a196001e7aa245c3230debe5c956484ecc6fa93877">Byte</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a42cb1183f2da81e12553a28a196001e7aeb51124277f3ec904a9af74d5de34e7b">UnsignedShort</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a42cb1183f2da81e12553a28a196001e7a30bb747c98bccdd11b3f89e644c4d0ad">Short</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a42cb1183f2da81e12553a28a196001e7ac93cff91b6b9a57fa32bbe1863150070">UnsignedInt</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a42cb1183f2da81e12553a28a196001e7a1686a6c336b71b36d77354cea19a8b52">Int</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a42cb1183f2da81e12553a28a196001e7ad35523d81610cee8b87cdac1853ad51f">HalfFloat</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a42cb1183f2da81e12553a28a196001e7a22ae0e2b89e5e3d477f988cc36d3272b">Float</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a42cb1183f2da81e12553a28a196001e7a131ebe9fa09dd81ada14f4d5ef22a5b2">UnsignedByte332</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a42cb1183f2da81e12553a28a196001e7aaf08cd4bda32cbbc17aa1f038787b49b">UnsignedByte233Rev</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a42cb1183f2da81e12553a28a196001e7a9d948d3fd54e7a0e9b0a7160d30e60bd">UnsignedShort565</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a42cb1183f2da81e12553a28a196001e7ad6ec07a536b4ddfa016eb3401cf15ea7">UnsignedShort565Rev</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a42cb1183f2da81e12553a28a196001e7a0ebf3ad4b14b5318b24eccbcb77ef881">UnsignedShort4444</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a42cb1183f2da81e12553a28a196001e7a49338e95b8a984e8ff863ba90cb6f25a">UnsignedShort4444Rev</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a42cb1183f2da81e12553a28a196001e7ad48678934f71e808d76d168449e41533">UnsignedShort5551</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a42cb1183f2da81e12553a28a196001e7a7529deae08b78021635e47e49463a94b">UnsignedShort1555Rev</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a42cb1183f2da81e12553a28a196001e7add65f4f231b5604c5866304f361d0b54">UnsignedInt8888</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a42cb1183f2da81e12553a28a196001e7a6fc9cc90f443b7408146a06802257ab0">UnsignedInt8888Rev</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a42cb1183f2da81e12553a28a196001e7a92660ebc482fda288d7b5c8a13995d55">UnsignedInt1010102</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a42cb1183f2da81e12553a28a196001e7af181e9b017ba4f6226f947aef3d86755">UnsignedInt2101010Rev</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a42cb1183f2da81e12553a28a196001e7ae90d4986e1e586a607c7a9bc906f0b34">UnsignedInt10F11F11FRev</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a42cb1183f2da81e12553a28a196001e7a15d9f69c3205d33007ca888cbf438f45">UnsignedInt5999Rev</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a42cb1183f2da81e12553a28a196001e7a97788b3aa5f586ee2e387dd091a80bb1">UnsignedInt248</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a42cb1183f2da81e12553a28a196001e7a492e9449323f9bf94ab4465e823a7b64">Float32UnsignedInt248Rev</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>CompressedPixelFormat</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a1b8f00e655665d01d53ab342b722db3c</anchor>
      <arglist></arglist>
      <enumvalue file="namespaceMagnum.html" anchor="a1b8f00e655665d01d53ab342b722db3caee38e4d5dd68c4e440825018d549cb47">Red</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a1b8f00e655665d01d53ab342b722db3cabac953e88f6d79514b0b6fc42eb6f3b7">RG</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a1b8f00e655665d01d53ab342b722db3ca889574aebacda6bfd3e534e2b49b8028">RGB</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a1b8f00e655665d01d53ab342b722db3caea3495a278957dc58165e48a8945469f">RGBA</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a1b8f00e655665d01d53ab342b722db3caa3bed52b596f3b91bee25aa10394d27f">RedRgtc1</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a1b8f00e655665d01d53ab342b722db3ca62a8382f8aa2f858c49e427277a50872">RGRgtc2</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a1b8f00e655665d01d53ab342b722db3ca75771c41918045589327f8283c8e352b">SignedRedRgtc1</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a1b8f00e655665d01d53ab342b722db3ca8fd2f045102ec87ada6ce64504fba872">SignedRGRgtc2</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a1b8f00e655665d01d53ab342b722db3cab7916cd38ad43474594d62f109fbf184">RGBBptcUnsignedFloat</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a1b8f00e655665d01d53ab342b722db3cac7dd302cf140a18d635bbc80e1d5e783">RGBBptcSignedFloat</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a1b8f00e655665d01d53ab342b722db3ca7dd6aed4d4b349a913acdf49d5152e6f">RGBABptcUnorm</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a1b8f00e655665d01d53ab342b722db3cae7dbe7b43bd444b07f3cb60d3bd85413">SRGBAlphaBptcUnorm</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a1b8f00e655665d01d53ab342b722db3ca2b383b452d4df4e2a7b7c749d5809f9f">RGB8Etc2</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a1b8f00e655665d01d53ab342b722db3ca8eab3b04a17e67eed15dc5ac8315dc08">SRGB8Etc2</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a1b8f00e655665d01d53ab342b722db3ca355cb5853c206ddfcf3fd3d27b91a9b1">RGB8PunchthroughAlpha1Etc2</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a1b8f00e655665d01d53ab342b722db3cace1e71dfb30dc15b2e56605daf8d0ce7">SRGB8PunchthroughAlpha1Etc2</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a1b8f00e655665d01d53ab342b722db3ca98348631c6532dca147ed76111c3ca13">RGBA8Etc2Eac</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a1b8f00e655665d01d53ab342b722db3ca0725b0958585442fa72335c352a4f31b">SRGB8Alpha8Etc2Eac</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a1b8f00e655665d01d53ab342b722db3ca1adfe9f5f9890951fdd91d9ed0f6d782">R11Eac</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a1b8f00e655665d01d53ab342b722db3cac30713a6d506c10c43c7bcaa69fcbac5">SignedR11Eac</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a1b8f00e655665d01d53ab342b722db3ca45ebf94b3877605e10852bcc28f4fcaa">RG11Eac</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a1b8f00e655665d01d53ab342b722db3cae7fb874dcd270f657787a2df8ca76fdf">SignedRG11Eac</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a1b8f00e655665d01d53ab342b722db3ca202cb4f41f66d0b27bfc6f968f5d4e64">RGBS3tcDxt1</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a1b8f00e655665d01d53ab342b722db3ca5651aff1d9255d714952c05ddc992f47">RGBAS3tcDxt1</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a1b8f00e655665d01d53ab342b722db3cab1b608a98cb05d81c057fb369922718d">RGBAS3tcDxt3</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a1b8f00e655665d01d53ab342b722db3ca2a3b16cfc97107c276f6d8e5d1f1f311">RGBAS3tcDxt5</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a1b8f00e655665d01d53ab342b722db3ca4d54b5762d22b6cccbde8ecd2fadcf45">RGBAAstc4x4</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a1b8f00e655665d01d53ab342b722db3caca48b83bf02a4c74f477b92c766ee7b0">SRGB8Alpha8Astc4x4</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a1b8f00e655665d01d53ab342b722db3caa2b69ce26a065fc75905a70d03829757">RGBAAstc5x4</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a1b8f00e655665d01d53ab342b722db3ca9b3927d698dd5349e8eb9f68e9c6c6a1">SRGB8Alpha8Astc5x4</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a1b8f00e655665d01d53ab342b722db3ca8867cb489f247c08bcfc0a5b42726414">RGBAAstc5x5</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a1b8f00e655665d01d53ab342b722db3ca1860eb6d1eb2911ba7f5e6afd715b1b2">SRGB8Alpha8Astc5x5</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a1b8f00e655665d01d53ab342b722db3cac905ed9f991dc301e8a713b9edc420bc">RGBAAstc6x5</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a1b8f00e655665d01d53ab342b722db3ca77632c655108204cc7496ce98fe192d8">SRGB8Alpha8Astc6x5</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a1b8f00e655665d01d53ab342b722db3ca6622396055bf65a5993a6cb9cf66265f">RGBAAstc6x6</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a1b8f00e655665d01d53ab342b722db3ca960bc98e3d2ceacfad471d1db50ffc76">SRGB8Alpha8Astc6x6</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a1b8f00e655665d01d53ab342b722db3caf7f012ccc372ef62e682256dbd93aefb">RGBAAstc8x5</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a1b8f00e655665d01d53ab342b722db3ca1d8b727d6330b5cd196d7197cbc2c626">SRGB8Alpha8Astc8x5</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a1b8f00e655665d01d53ab342b722db3caae5be3648e3d9ceb03d30b49251c0629">RGBAAstc8x6</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a1b8f00e655665d01d53ab342b722db3cafc2666906090246eefb829972ead8280">SRGB8Alpha8Astc8x6</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a1b8f00e655665d01d53ab342b722db3ca43204df6edcc8d05b25e7efb58934f46">RGBAAstc8x8</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a1b8f00e655665d01d53ab342b722db3caaef0fa49535ce0cfac9dc45cbf22dc6f">SRGB8Alpha8Astc8x8</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a1b8f00e655665d01d53ab342b722db3ca6d0c85423c4abf4c177c93447a4b7777">RGBAAstc10x5</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a1b8f00e655665d01d53ab342b722db3ca0f413861153fe70fc44eb26acf2eaa99">SRGB8Alpha8Astc10x5</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a1b8f00e655665d01d53ab342b722db3cad034ed7edf6c7208a351589ed2e5f17a">RGBAAstc10x6</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a1b8f00e655665d01d53ab342b722db3ca98ce333cbad0ca0b10b47673ba3c9610">SRGB8Alpha8Astc10x6</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a1b8f00e655665d01d53ab342b722db3ca5d145bbb1f4d7494d1ef3c2a554a2691">RGBAAstc10x8</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a1b8f00e655665d01d53ab342b722db3cacb5ca548816c10b8e9328ffdfe4c584a">SRGB8Alpha8Astc10x8</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a1b8f00e655665d01d53ab342b722db3ca01f17158c3d1005268197fdd4990749d">RGBAAstc10x10</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a1b8f00e655665d01d53ab342b722db3ca7db9b87a93dfa09f1bd47035f34028ce">SRGB8Alpha8Astc10x10</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a1b8f00e655665d01d53ab342b722db3ca939449aabd0a436676eb40d18dc2cd10">RGBAAstc12x10</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a1b8f00e655665d01d53ab342b722db3ca7b95d2f5ff8e629c4799a667d7b21fc9">SRGB8Alpha8Astc12x10</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a1b8f00e655665d01d53ab342b722db3ca202b3c29a027a3edfd8df16f1bc65544">RGBAAstc12x12</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a1b8f00e655665d01d53ab342b722db3ca2635212e4b84e4b77fd26175e564d013">SRGB8Alpha8Astc12x12</enumvalue>
    </member>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>ae2509f72eca955fc87ec575528155148</anchor>
      <arglist>(Debug &amp;debug, PixelFormat value)</arglist>
    </member>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a517acaf6f0b9aa2ce8d87f756c85de15</anchor>
      <arglist>(Debug &amp;debug, PixelType value)</arglist>
    </member>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a0c50432f4e10cb29a6cce20876fbb13a</anchor>
      <arglist>(Debug &amp;debug, CompressedPixelFormat value)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>PixelStorage.h</name>
    <path>/home/mosra/Code/magnum/src/Magnum/</path>
    <filename>PixelStorage_8h</filename>
    <includes id="Magnum_8h" name="Magnum.h" local="yes" imported="no">Magnum/Magnum.h</includes>
    <includes id="Vector3_8h" name="Vector3.h" local="yes" imported="no">Magnum/Math/Vector3.h</includes>
    <class kind="class">Magnum::PixelStorage</class>
    <class kind="class">Magnum::CompressedPixelStorage</class>
    <namespace>Magnum</namespace>
  </compound>
  <compound kind="file">
    <name>AbstractXApplication.h</name>
    <path>/home/mosra/Code/magnum/src/Magnum/Platform/</path>
    <filename>AbstractXApplication_8h</filename>
    <includes id="Magnum_8h" name="Magnum.h" local="yes" imported="no">Magnum/Magnum.h</includes>
    <includes id="Tags_8h" name="Tags.h" local="yes" imported="no">Magnum/Tags.h</includes>
    <includes id="Vector2_8h" name="Vector2.h" local="yes" imported="no">Magnum/Math/Vector2.h</includes>
    <includes id="Platform_8h" name="Platform.h" local="yes" imported="no">Magnum/Platform/Platform.h</includes>
    <class kind="class">Magnum::Platform::AbstractXApplication</class>
    <class kind="struct">Magnum::Platform::AbstractXApplication::Arguments</class>
    <class kind="class">Magnum::Platform::AbstractXApplication::Configuration</class>
    <class kind="class">Magnum::Platform::AbstractXApplication::InputEvent</class>
    <class kind="class">Magnum::Platform::AbstractXApplication::KeyEvent</class>
    <class kind="class">Magnum::Platform::AbstractXApplication::MouseEvent</class>
    <class kind="class">Magnum::Platform::AbstractXApplication::MouseMoveEvent</class>
    <namespace>Magnum</namespace>
    <namespace>Magnum::Platform</namespace>
  </compound>
  <compound kind="file">
    <name>AndroidApplication.h</name>
    <path>/home/mosra/Code/magnum/src/Magnum/Platform/</path>
    <filename>AndroidApplication_8h</filename>
    <includes id="Magnum_8h" name="Magnum.h" local="yes" imported="no">Magnum/Magnum.h</includes>
    <includes id="Tags_8h" name="Tags.h" local="yes" imported="no">Magnum/Tags.h</includes>
    <includes id="Vector2_8h" name="Vector2.h" local="yes" imported="no">Magnum/Math/Vector2.h</includes>
    <includes id="Platform_8h" name="Platform.h" local="yes" imported="no">Magnum/Platform/Platform.h</includes>
    <class kind="class">Magnum::Platform::AndroidApplication</class>
    <class kind="class">Magnum::Platform::AndroidApplication::Configuration</class>
    <class kind="class">Magnum::Platform::AndroidApplication::InputEvent</class>
    <class kind="class">Magnum::Platform::AndroidApplication::MouseEvent</class>
    <class kind="class">Magnum::Platform::AndroidApplication::MouseMoveEvent</class>
    <namespace>Magnum</namespace>
    <namespace>Magnum::Platform</namespace>
    <member kind="define">
      <type>#define</type>
      <name>MAGNUM_ANDROIDAPPLICATION_MAIN</name>
      <anchorfile>AndroidApplication_8h.html</anchorfile>
      <anchor>a3585092a27a7677a0339ad0a12be8231</anchor>
      <arglist>(className)                                                  </arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>GlfwApplication.h</name>
    <path>/home/mosra/Code/magnum/src/Magnum/Platform/</path>
    <filename>GlfwApplication_8h</filename>
    <includes id="Magnum_8h" name="Magnum.h" local="yes" imported="no">Magnum/Magnum.h</includes>
    <includes id="Tags_8h" name="Tags.h" local="yes" imported="no">Magnum/Tags.h</includes>
    <includes id="Vector2_8h" name="Vector2.h" local="yes" imported="no">Magnum/Math/Vector2.h</includes>
    <includes id="Platform_8h" name="Platform.h" local="yes" imported="no">Magnum/Platform/Platform.h</includes>
    <includes id="OpenGL_8h" name="OpenGL.h" local="yes" imported="no">Magnum/OpenGL.h</includes>
    <class kind="class">Magnum::Platform::GlfwApplication</class>
    <class kind="struct">Magnum::Platform::GlfwApplication::Arguments</class>
    <class kind="class">Magnum::Platform::GlfwApplication::Configuration</class>
    <class kind="class">Magnum::Platform::GlfwApplication::InputEvent</class>
    <class kind="class">Magnum::Platform::GlfwApplication::KeyEvent</class>
    <class kind="class">Magnum::Platform::GlfwApplication::MouseEvent</class>
    <class kind="class">Magnum::Platform::GlfwApplication::MouseMoveEvent</class>
    <class kind="class">Magnum::Platform::GlfwApplication::MouseScrollEvent</class>
    <class kind="class">Magnum::Platform::GlfwApplication::TextInputEvent</class>
    <namespace>Magnum</namespace>
    <namespace>Magnum::Platform</namespace>
    <member kind="define">
      <type>#define</type>
      <name>MAGNUM_GLFWAPPLICATION_MAIN</name>
      <anchorfile>GlfwApplication_8h.html</anchorfile>
      <anchor>ae485f01b4c5a0ea1b59c4a240cf17030</anchor>
      <arglist>(className)                                                        </arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>GlutApplication.h</name>
    <path>/home/mosra/Code/magnum/src/Magnum/Platform/</path>
    <filename>GlutApplication_8h</filename>
    <includes id="Magnum_8h" name="Magnum.h" local="yes" imported="no">Magnum/Magnum.h</includes>
    <includes id="Tags_8h" name="Tags.h" local="yes" imported="no">Magnum/Tags.h</includes>
    <includes id="Vector2_8h" name="Vector2.h" local="yes" imported="no">Magnum/Math/Vector2.h</includes>
    <includes id="Platform_8h" name="Platform.h" local="yes" imported="no">Magnum/Platform/Platform.h</includes>
    <includes id="OpenGL_8h" name="OpenGL.h" local="yes" imported="no">Magnum/OpenGL.h</includes>
    <class kind="class">Magnum::Platform::GlutApplication</class>
    <class kind="struct">Magnum::Platform::GlutApplication::Arguments</class>
    <class kind="class">Magnum::Platform::GlutApplication::Configuration</class>
    <class kind="class">Magnum::Platform::GlutApplication::InputEvent</class>
    <class kind="class">Magnum::Platform::GlutApplication::KeyEvent</class>
    <class kind="class">Magnum::Platform::GlutApplication::MouseEvent</class>
    <class kind="class">Magnum::Platform::GlutApplication::MouseMoveEvent</class>
    <namespace>Magnum</namespace>
    <namespace>Magnum::Platform</namespace>
    <member kind="define">
      <type>#define</type>
      <name>MAGNUM_GLUTAPPLICATION_MAIN</name>
      <anchorfile>GlutApplication_8h.html</anchorfile>
      <anchor>a2dadf96fd67956eb0c66dd6a9d6b6bf7</anchor>
      <arglist>(className)                                                        </arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>GlxApplication.h</name>
    <path>/home/mosra/Code/magnum/src/Magnum/Platform/</path>
    <filename>GlxApplication_8h</filename>
    <includes id="AbstractXApplication_8h" name="AbstractXApplication.h" local="yes" imported="no">Magnum/Platform/AbstractXApplication.h</includes>
    <includes id="Platform_8h" name="Platform.h" local="yes" imported="no">Magnum/Platform/Platform.h</includes>
    <class kind="class">Magnum::Platform::GlxApplication</class>
    <namespace>Magnum</namespace>
    <namespace>Magnum::Platform</namespace>
    <member kind="define">
      <type>#define</type>
      <name>MAGNUM_GLXAPPLICATION_MAIN</name>
      <anchorfile>GlxApplication_8h.html</anchorfile>
      <anchor>a9a4359467e2dfe9aba33b6b519dfe75e</anchor>
      <arglist>(className)                                                          </arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Platform.h</name>
    <path>/home/mosra/Code/magnum/src/Magnum/Platform/</path>
    <filename>Platform_8h</filename>
    <namespace>Magnum</namespace>
    <namespace>Magnum::Platform</namespace>
  </compound>
  <compound kind="file">
    <name>Screen.h</name>
    <path>/home/mosra/Code/magnum/src/Magnum/Platform/</path>
    <filename>Screen_8h</filename>
    <includes id="ScreenedApplication_8h" name="ScreenedApplication.h" local="yes" imported="no">Magnum/Platform/ScreenedApplication.h</includes>
    <class kind="class">Magnum::Platform::BasicScreen</class>
    <namespace>Magnum</namespace>
    <namespace>Magnum::Platform</namespace>
  </compound>
  <compound kind="file">
    <name>ScreenedApplication.h</name>
    <path>/home/mosra/Code/magnum/src/Magnum/Platform/</path>
    <filename>ScreenedApplication_8h</filename>
    <includes id="Magnum_8h" name="Magnum.h" local="yes" imported="no">Magnum/Magnum.h</includes>
    <includes id="Tags_8h" name="Tags.h" local="yes" imported="no">Magnum/Tags.h</includes>
    <includes id="Platform_8h" name="Platform.h" local="yes" imported="no">Magnum/Platform/Platform.h</includes>
    <class kind="class">Magnum::Platform::BasicScreenedApplication</class>
    <namespace>Magnum</namespace>
    <namespace>Magnum::Platform</namespace>
  </compound>
  <compound kind="file">
    <name>ScreenedApplication.hpp</name>
    <path>/home/mosra/Code/magnum/src/Magnum/Platform/</path>
    <filename>ScreenedApplication_8hpp</filename>
    <includes id="Screen_8h" name="Screen.h" local="yes" imported="no">Magnum/Platform/Screen.h</includes>
    <includes id="ScreenedApplication_8h" name="ScreenedApplication.h" local="yes" imported="no">Magnum/Platform/ScreenedApplication.h</includes>
    <namespace>Magnum</namespace>
    <namespace>Magnum::Platform</namespace>
  </compound>
  <compound kind="file">
    <name>Sdl2Application.h</name>
    <path>/home/mosra/Code/magnum/src/Magnum/Platform/</path>
    <filename>Sdl2Application_8h</filename>
    <includes id="Magnum_8h" name="Magnum.h" local="yes" imported="no">Magnum/Magnum.h</includes>
    <includes id="Tags_8h" name="Tags.h" local="yes" imported="no">Magnum/Tags.h</includes>
    <includes id="Vector2_8h" name="Vector2.h" local="yes" imported="no">Magnum/Math/Vector2.h</includes>
    <includes id="Platform_8h" name="Platform.h" local="yes" imported="no">Magnum/Platform/Platform.h</includes>
    <class kind="class">Magnum::Platform::Sdl2Application</class>
    <class kind="struct">Magnum::Platform::Sdl2Application::Arguments</class>
    <class kind="class">Magnum::Platform::Sdl2Application::Configuration</class>
    <class kind="class">Magnum::Platform::Sdl2Application::InputEvent</class>
    <class kind="class">Magnum::Platform::Sdl2Application::KeyEvent</class>
    <class kind="class">Magnum::Platform::Sdl2Application::MouseEvent</class>
    <class kind="class">Magnum::Platform::Sdl2Application::MouseMoveEvent</class>
    <class kind="class">Magnum::Platform::Sdl2Application::MouseScrollEvent</class>
    <class kind="class">Magnum::Platform::Sdl2Application::MultiGestureEvent</class>
    <class kind="class">Magnum::Platform::Sdl2Application::TextInputEvent</class>
    <class kind="class">Magnum::Platform::Sdl2Application::TextEditingEvent</class>
    <namespace>Magnum</namespace>
    <namespace>Magnum::Platform</namespace>
    <member kind="define">
      <type>#define</type>
      <name>MAGNUM_SDL2APPLICATION_MAIN</name>
      <anchorfile>Sdl2Application_8h.html</anchorfile>
      <anchor>a203982582d9e4d6014a207671236a042</anchor>
      <arglist>(className)                                                        </arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>WindowlessCglApplication.h</name>
    <path>/home/mosra/Code/magnum/src/Magnum/Platform/</path>
    <filename>WindowlessCglApplication_8h</filename>
    <includes id="OpenGL_8h" name="OpenGL.h" local="yes" imported="no">Magnum/OpenGL.h</includes>
    <includes id="Tags_8h" name="Tags.h" local="yes" imported="no">Magnum/Tags.h</includes>
    <includes id="Magnum_8h" name="Magnum.h" local="yes" imported="no">Magnum/Magnum.h</includes>
    <includes id="Platform_8h" name="Platform.h" local="yes" imported="no">Magnum/Platform/Platform.h</includes>
    <class kind="class">Magnum::Platform::WindowlessCglContext</class>
    <class kind="class">Magnum::Platform::WindowlessCglContext::Configuration</class>
    <class kind="class">Magnum::Platform::WindowlessCglApplication</class>
    <class kind="struct">Magnum::Platform::WindowlessCglApplication::Arguments</class>
    <namespace>Magnum</namespace>
    <namespace>Magnum::Platform</namespace>
    <member kind="define">
      <type>#define</type>
      <name>MAGNUM_WINDOWLESSCGLAPPLICATION_MAIN</name>
      <anchorfile>WindowlessCglApplication_8h.html</anchorfile>
      <anchor>a5dd0bcedbbaabea3f3606c40d306c6f8</anchor>
      <arglist>(className)                                      </arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>WindowlessEglApplication.h</name>
    <path>/home/mosra/Code/magnum/src/Magnum/Platform/</path>
    <filename>WindowlessEglApplication_8h</filename>
    <includes id="Magnum_8h" name="Magnum.h" local="yes" imported="no">Magnum/Magnum.h</includes>
    <includes id="OpenGL_8h" name="OpenGL.h" local="yes" imported="no">Magnum/OpenGL.h</includes>
    <includes id="Tags_8h" name="Tags.h" local="yes" imported="no">Magnum/Tags.h</includes>
    <includes id="Platform_8h" name="Platform.h" local="yes" imported="no">Magnum/Platform/Platform.h</includes>
    <class kind="class">Magnum::Platform::WindowlessEglContext</class>
    <class kind="class">Magnum::Platform::WindowlessEglContext::Configuration</class>
    <class kind="class">Magnum::Platform::WindowlessEglApplication</class>
    <class kind="struct">Magnum::Platform::WindowlessEglApplication::Arguments</class>
    <namespace>Magnum</namespace>
    <namespace>Magnum::Platform</namespace>
    <member kind="define">
      <type>#define</type>
      <name>MAGNUM_WINDOWLESSEGLAPPLICATION_MAIN</name>
      <anchorfile>WindowlessEglApplication_8h.html</anchorfile>
      <anchor>ad81eceb18bd3cef503d16f86f818b59f</anchor>
      <arglist>(className)                                      </arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>WindowlessGlxApplication.h</name>
    <path>/home/mosra/Code/magnum/src/Magnum/Platform/</path>
    <filename>WindowlessGlxApplication_8h</filename>
    <includes id="OpenGL_8h" name="OpenGL.h" local="yes" imported="no">Magnum/OpenGL.h</includes>
    <includes id="Magnum_8h" name="Magnum.h" local="yes" imported="no">Magnum/Magnum.h</includes>
    <includes id="Tags_8h" name="Tags.h" local="yes" imported="no">Magnum/Tags.h</includes>
    <includes id="Platform_8h" name="Platform.h" local="yes" imported="no">Magnum/Platform/Platform.h</includes>
    <class kind="class">Magnum::Platform::WindowlessGlxContext</class>
    <class kind="class">Magnum::Platform::WindowlessGlxContext::Configuration</class>
    <class kind="class">Magnum::Platform::WindowlessGlxApplication</class>
    <class kind="struct">Magnum::Platform::WindowlessGlxApplication::Arguments</class>
    <namespace>Magnum</namespace>
    <namespace>Magnum::Platform</namespace>
    <member kind="define">
      <type>#define</type>
      <name>MAGNUM_WINDOWLESSGLXAPPLICATION_MAIN</name>
      <anchorfile>WindowlessGlxApplication_8h.html</anchorfile>
      <anchor>aa162087ae54ffca58e0d610d7a2d184e</anchor>
      <arglist>(className)                                      </arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>WindowlessIosApplication.h</name>
    <path>/home/mosra/Code/magnum/src/Magnum/Platform/</path>
    <filename>WindowlessIosApplication_8h</filename>
    <includes id="Magnum_8h" name="Magnum.h" local="yes" imported="no">Magnum/Magnum.h</includes>
    <includes id="OpenGL_8h" name="OpenGL.h" local="yes" imported="no">Magnum/OpenGL.h</includes>
    <includes id="Tags_8h" name="Tags.h" local="yes" imported="no">Magnum/Tags.h</includes>
    <includes id="Platform_8h" name="Platform.h" local="yes" imported="no">Magnum/Platform/Platform.h</includes>
    <class kind="class">Magnum::Platform::WindowlessIosContext</class>
    <class kind="class">Magnum::Platform::WindowlessIosContext::Configuration</class>
    <class kind="class">Magnum::Platform::WindowlessIosApplication</class>
    <class kind="struct">Magnum::Platform::WindowlessIosApplication::Arguments</class>
    <namespace>Magnum</namespace>
    <namespace>Magnum::Platform</namespace>
    <member kind="define">
      <type>#define</type>
      <name>MAGNUM_WINDOWLESSIOSAPPLICATION_MAIN</name>
      <anchorfile>WindowlessIosApplication_8h.html</anchorfile>
      <anchor>a614b738e36c0a441da55d2334b6396ab</anchor>
      <arglist>(className)                                      </arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>WindowlessWglApplication.h</name>
    <path>/home/mosra/Code/magnum/src/Magnum/Platform/</path>
    <filename>WindowlessWglApplication_8h</filename>
    <includes id="Magnum_8h" name="Magnum.h" local="yes" imported="no">Magnum/Magnum.h</includes>
    <includes id="OpenGL_8h" name="OpenGL.h" local="yes" imported="no">Magnum/OpenGL.h</includes>
    <includes id="Tags_8h" name="Tags.h" local="yes" imported="no">Magnum/Tags.h</includes>
    <includes id="Platform_8h" name="Platform.h" local="yes" imported="no">Magnum/Platform/Platform.h</includes>
    <class kind="class">Magnum::Platform::WindowlessWglContext</class>
    <class kind="class">Magnum::Platform::WindowlessWglContext::Configuration</class>
    <class kind="class">Magnum::Platform::WindowlessWglApplication</class>
    <class kind="struct">Magnum::Platform::WindowlessWglApplication::Arguments</class>
    <namespace>Magnum</namespace>
    <namespace>Magnum::Platform</namespace>
    <member kind="define">
      <type>#define</type>
      <name>MAGNUM_WINDOWLESSWGLAPPLICATION_MAIN</name>
      <anchorfile>WindowlessWglApplication_8h.html</anchorfile>
      <anchor>a6c305bc84b5527abf0728c0e859da307</anchor>
      <arglist>(className)                                      </arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>WindowlessWindowsEglApplication.h</name>
    <path>/home/mosra/Code/magnum/src/Magnum/Platform/</path>
    <filename>WindowlessWindowsEglApplication_8h</filename>
    <includes id="Magnum_8h" name="Magnum.h" local="yes" imported="no">Magnum/Magnum.h</includes>
    <includes id="OpenGL_8h" name="OpenGL.h" local="yes" imported="no">Magnum/OpenGL.h</includes>
    <includes id="Tags_8h" name="Tags.h" local="yes" imported="no">Magnum/Tags.h</includes>
    <includes id="Platform_8h" name="Platform.h" local="yes" imported="no">Magnum/Platform/Platform.h</includes>
    <class kind="class">Magnum::Platform::WindowlessWindowsEglContext</class>
    <class kind="class">Magnum::Platform::WindowlessWindowsEglContext::Configuration</class>
    <class kind="class">Magnum::Platform::WindowlessWindowsEglApplication</class>
    <class kind="struct">Magnum::Platform::WindowlessWindowsEglApplication::Arguments</class>
    <namespace>Magnum</namespace>
    <namespace>Magnum::Platform</namespace>
    <member kind="define">
      <type>#define</type>
      <name>MAGNUM_WINDOWLESSWINDOWSEGLAPPLICATION_MAIN</name>
      <anchorfile>WindowlessWindowsEglApplication_8h.html</anchorfile>
      <anchor>ae54bd70dbd076f4d496e10fc6bc3b2fd</anchor>
      <arglist>(className)                        </arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>XEglApplication.h</name>
    <path>/home/mosra/Code/magnum/src/Magnum/Platform/</path>
    <filename>XEglApplication_8h</filename>
    <includes id="Platform_8h" name="Platform.h" local="yes" imported="no">Magnum/Platform/Platform.h</includes>
    <includes id="AbstractXApplication_8h" name="AbstractXApplication.h" local="yes" imported="no">Magnum/Platform/AbstractXApplication.h</includes>
    <class kind="class">Magnum::Platform::XEglApplication</class>
    <namespace>Magnum</namespace>
    <namespace>Magnum::Platform</namespace>
    <member kind="define">
      <type>#define</type>
      <name>MAGNUM_XEGLAPPLICATION_MAIN</name>
      <anchorfile>XEglApplication_8h.html</anchorfile>
      <anchor>a18fc7b8df7fd6100496108f9df27fea5</anchor>
      <arglist>(className)                                                        </arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>PrimitiveQuery.h</name>
    <path>/home/mosra/Code/magnum/src/Magnum/</path>
    <filename>PrimitiveQuery_8h</filename>
    <includes id="AbstractQuery_8h" name="AbstractQuery.h" local="yes" imported="no">Magnum/AbstractQuery.h</includes>
    <class kind="class">Magnum::PrimitiveQuery</class>
    <namespace>Magnum</namespace>
  </compound>
  <compound kind="file">
    <name>Axis.h</name>
    <path>/home/mosra/Code/magnum/src/Magnum/Primitives/</path>
    <filename>Axis_8h</filename>
    <includes id="Trade_8h" name="Trade.h" local="yes" imported="no">Magnum/Trade/Trade.h</includes>
    <namespace>Magnum</namespace>
    <namespace>Magnum::Primitives</namespace>
    <member kind="function">
      <type>Trade::MeshData2D</type>
      <name>axis2D</name>
      <anchorfile>namespaceMagnum_1_1Primitives.html</anchorfile>
      <anchor>ade115b7b48cb6379a7dcb2072d45c77d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Trade::MeshData3D</type>
      <name>axis3D</name>
      <anchorfile>namespaceMagnum_1_1Primitives.html</anchorfile>
      <anchor>ae6841afe470778bf0b2cf6af400141a2</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Capsule.h</name>
    <path>/home/mosra/Code/magnum/src/Magnum/Primitives/</path>
    <filename>Primitives_2Capsule_8h</filename>
    <includes id="Trade_8h" name="Trade.h" local="yes" imported="no">Magnum/Trade/Trade.h</includes>
    <class kind="class">Magnum::Primitives::Capsule2D</class>
    <class kind="class">Magnum::Primitives::Capsule3D</class>
    <namespace>Magnum</namespace>
    <namespace>Magnum::Primitives</namespace>
  </compound>
  <compound kind="file">
    <name>Capsule.h</name>
    <path>/home/mosra/Code/magnum/src/Magnum/Shapes/</path>
    <filename>Shapes_2Capsule_8h</filename>
    <includes id="DimensionTraits_8h" name="DimensionTraits.h" local="yes" imported="no">Magnum/DimensionTraits.h</includes>
    <includes id="Vector3_8h" name="Vector3.h" local="yes" imported="no">Magnum/Math/Vector3.h</includes>
    <includes id="Shapes_8h" name="Shapes.h" local="yes" imported="no">Magnum/Shapes/Shapes.h</includes>
    <class kind="class">Magnum::Shapes::Capsule</class>
    <namespace>Magnum</namespace>
    <namespace>Magnum::Shapes</namespace>
    <member kind="typedef">
      <type>Capsule&lt; 2 &gt;</type>
      <name>Capsule2D</name>
      <anchorfile>namespaceMagnum_1_1Shapes.html</anchorfile>
      <anchor>a49c72e6f71ae4286014afd8959554f8f</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Capsule&lt; 3 &gt;</type>
      <name>Capsule3D</name>
      <anchorfile>namespaceMagnum_1_1Shapes.html</anchorfile>
      <anchor>a8907faf93164878a8b75181845a72599</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator%</name>
      <anchorfile>namespaceMagnum_1_1Shapes.html</anchorfile>
      <anchor>afe98277240394e274783626ac4420be1</anchor>
      <arglist>(const Point&lt; dimensions &gt; &amp;a, const Capsule&lt; dimensions &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator%</name>
      <anchorfile>namespaceMagnum_1_1Shapes.html</anchorfile>
      <anchor>a839afd5e87c4726add6835ee314e16d0</anchor>
      <arglist>(const Sphere&lt; dimensions &gt; &amp;a, const Capsule&lt; dimensions &gt; &amp;b)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Circle.h</name>
    <path>/home/mosra/Code/magnum/src/Magnum/Primitives/</path>
    <filename>Circle_8h</filename>
    <includes id="Trade_8h" name="Trade.h" local="yes" imported="no">Magnum/Trade/Trade.h</includes>
    <class kind="class">Magnum::Primitives::Circle</class>
    <namespace>Magnum</namespace>
    <namespace>Magnum::Primitives</namespace>
  </compound>
  <compound kind="file">
    <name>Crosshair.h</name>
    <path>/home/mosra/Code/magnum/src/Magnum/Primitives/</path>
    <filename>Crosshair_8h</filename>
    <includes id="Trade_8h" name="Trade.h" local="yes" imported="no">Magnum/Trade/Trade.h</includes>
    <class kind="class">Magnum::Primitives::Crosshair2D</class>
    <class kind="class">Magnum::Primitives::Crosshair3D</class>
    <namespace>Magnum</namespace>
    <namespace>Magnum::Primitives</namespace>
  </compound>
  <compound kind="file">
    <name>Cube.h</name>
    <path>/home/mosra/Code/magnum/src/Magnum/Primitives/</path>
    <filename>Cube_8h</filename>
    <includes id="Trade_8h" name="Trade.h" local="yes" imported="no">Magnum/Trade/Trade.h</includes>
    <class kind="class">Magnum::Primitives::Cube</class>
    <namespace>Magnum</namespace>
    <namespace>Magnum::Primitives</namespace>
  </compound>
  <compound kind="file">
    <name>Cylinder.h</name>
    <path>/home/mosra/Code/magnum/src/Magnum/Primitives/</path>
    <filename>Primitives_2Cylinder_8h</filename>
    <includes id="Magnum_8h" name="Magnum.h" local="yes" imported="no">Magnum/Magnum.h</includes>
    <includes id="Trade_8h" name="Trade.h" local="yes" imported="no">Magnum/Trade/Trade.h</includes>
    <class kind="class">Magnum::Primitives::Cylinder</class>
    <namespace>Magnum</namespace>
    <namespace>Magnum::Primitives</namespace>
  </compound>
  <compound kind="file">
    <name>Cylinder.h</name>
    <path>/home/mosra/Code/magnum/src/Magnum/Shapes/</path>
    <filename>Shapes_2Cylinder_8h</filename>
    <includes id="DimensionTraits_8h" name="DimensionTraits.h" local="yes" imported="no">Magnum/DimensionTraits.h</includes>
    <includes id="Vector3_8h" name="Vector3.h" local="yes" imported="no">Magnum/Math/Vector3.h</includes>
    <includes id="Shapes_8h" name="Shapes.h" local="yes" imported="no">Magnum/Shapes/Shapes.h</includes>
    <class kind="class">Magnum::Shapes::Cylinder</class>
    <namespace>Magnum</namespace>
    <namespace>Magnum::Shapes</namespace>
    <member kind="typedef">
      <type>Cylinder&lt; 2 &gt;</type>
      <name>Cylinder2D</name>
      <anchorfile>namespaceMagnum_1_1Shapes.html</anchorfile>
      <anchor>a69e19df0c90bda9b3a8b94060d09b9e4</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Cylinder&lt; 3 &gt;</type>
      <name>Cylinder3D</name>
      <anchorfile>namespaceMagnum_1_1Shapes.html</anchorfile>
      <anchor>ae610d08005a9a849c13674cb039c0e6d</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator%</name>
      <anchorfile>namespaceMagnum_1_1Shapes.html</anchorfile>
      <anchor>a175327c41a1cf77afe589e9f75942a72</anchor>
      <arglist>(const Point&lt; dimensions &gt; &amp;a, const Cylinder&lt; dimensions &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator%</name>
      <anchorfile>namespaceMagnum_1_1Shapes.html</anchorfile>
      <anchor>a6a0f05766a099f0af8852618d356f970</anchor>
      <arglist>(const Sphere&lt; dimensions &gt; &amp;a, const Cylinder&lt; dimensions &gt; &amp;b)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Icosphere.h</name>
    <path>/home/mosra/Code/magnum/src/Magnum/Primitives/</path>
    <filename>Icosphere_8h</filename>
    <includes id="Trade_8h" name="Trade.h" local="yes" imported="no">Magnum/Trade/Trade.h</includes>
    <class kind="class">Magnum::Primitives::Icosphere</class>
    <namespace>Magnum</namespace>
    <namespace>Magnum::Primitives</namespace>
  </compound>
  <compound kind="file">
    <name>Line.h</name>
    <path>/home/mosra/Code/magnum/src/Magnum/Primitives/</path>
    <filename>Primitives_2Line_8h</filename>
    <includes id="Trade_8h" name="Trade.h" local="yes" imported="no">Magnum/Trade/Trade.h</includes>
    <class kind="class">Magnum::Primitives::Line2D</class>
    <class kind="class">Magnum::Primitives::Line3D</class>
    <namespace>Magnum</namespace>
    <namespace>Magnum::Primitives</namespace>
  </compound>
  <compound kind="file">
    <name>Line.h</name>
    <path>/home/mosra/Code/magnum/src/Magnum/Shapes/</path>
    <filename>Shapes_2Line_8h</filename>
    <includes id="DimensionTraits_8h" name="DimensionTraits.h" local="yes" imported="no">Magnum/DimensionTraits.h</includes>
    <includes id="Vector3_8h" name="Vector3.h" local="yes" imported="no">Magnum/Math/Vector3.h</includes>
    <class kind="class">Magnum::Shapes::Line</class>
    <namespace>Magnum</namespace>
    <namespace>Magnum::Shapes</namespace>
    <member kind="typedef">
      <type>Line&lt; 2 &gt;</type>
      <name>Line2D</name>
      <anchorfile>namespaceMagnum_1_1Shapes.html</anchorfile>
      <anchor>a95d1765b3254cb2ff8a8a947c7e5bd12</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Line&lt; 3 &gt;</type>
      <name>Line3D</name>
      <anchorfile>namespaceMagnum_1_1Shapes.html</anchorfile>
      <anchor>addab11a15ce16cba2e73cdc924d50ed1</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Plane.h</name>
    <path>/home/mosra/Code/magnum/src/Magnum/Primitives/</path>
    <filename>src_2Magnum_2Primitives_2Plane_8h</filename>
    <includes id="Trade_8h" name="Trade.h" local="yes" imported="no">Magnum/Trade/Trade.h</includes>
    <class kind="class">Magnum::Primitives::Plane</class>
    <namespace>Magnum</namespace>
    <namespace>Magnum::Primitives</namespace>
  </compound>
  <compound kind="file">
    <name>Plane.h</name>
    <path>/home/mosra/Code/magnum/src/Magnum/Shapes/</path>
    <filename>src_2Magnum_2Shapes_2Plane_8h</filename>
    <includes id="Magnum_8h" name="Magnum.h" local="yes" imported="no">Magnum/Magnum.h</includes>
    <includes id="Vector3_8h" name="Vector3.h" local="yes" imported="no">Magnum/Math/Vector3.h</includes>
    <includes id="Shapes_8h" name="Shapes.h" local="yes" imported="no">Magnum/Shapes/Shapes.h</includes>
    <class kind="class">Magnum::Shapes::Plane</class>
    <namespace>Magnum</namespace>
    <namespace>Magnum::Shapes</namespace>
    <member kind="function">
      <type>bool</type>
      <name>operator%</name>
      <anchorfile>namespaceMagnum_1_1Shapes.html</anchorfile>
      <anchor>a736526a5aefa690b865f94d7c245915d</anchor>
      <arglist>(const Line3D &amp;a, const Plane &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator%</name>
      <anchorfile>namespaceMagnum_1_1Shapes.html</anchorfile>
      <anchor>a0d75eb4350f0ba0ea4c338c3dccbedf7</anchor>
      <arglist>(const LineSegment3D &amp;a, const Plane &amp;b)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Plane.h</name>
    <path>/home/mosra/Code/magnum-extras/src/Magnum/Ui/</path>
    <filename>extras_2src_2Magnum_2Ui_2Plane_8h</filename>
    <includes id="Text_8h" name="Text.h" local="no" imported="no">Magnum/Text/Text.h</includes>
    <includes id="BasicPlane_8h" name="BasicPlane.h" local="yes" imported="no">Magnum/Ui/BasicPlane.h</includes>
    <includes id="BasicGLLayer_8h" name="BasicGLLayer.h" local="yes" imported="no">Magnum/Ui/BasicGLLayer.h</includes>
    <includes id="BasicInstancedGLLayer_8h" name="BasicInstancedGLLayer.h" local="yes" imported="no">Magnum/Ui/BasicInstancedGLLayer.h</includes>
    <includes id="Style_8h" name="Style.h" local="yes" imported="no">Magnum/Ui/Style.h</includes>
    <class kind="class">Magnum::Ui::Plane</class>
    <namespace>Magnum</namespace>
    <namespace>Magnum::Ui</namespace>
  </compound>
  <compound kind="file">
    <name>Square.h</name>
    <path>/home/mosra/Code/magnum/src/Magnum/Primitives/</path>
    <filename>Square_8h</filename>
    <includes id="Trade_8h" name="Trade.h" local="yes" imported="no">Magnum/Trade/Trade.h</includes>
    <class kind="class">Magnum::Primitives::Square</class>
    <namespace>Magnum</namespace>
    <namespace>Magnum::Primitives</namespace>
  </compound>
  <compound kind="file">
    <name>UVSphere.h</name>
    <path>/home/mosra/Code/magnum/src/Magnum/Primitives/</path>
    <filename>UVSphere_8h</filename>
    <includes id="Trade_8h" name="Trade.h" local="yes" imported="no">Magnum/Trade/Trade.h</includes>
    <class kind="class">Magnum::Primitives::UVSphere</class>
    <namespace>Magnum</namespace>
    <namespace>Magnum::Primitives</namespace>
  </compound>
  <compound kind="file">
    <name>Query.h</name>
    <path>/home/mosra/Code/magnum/src/Magnum/</path>
    <filename>Query_8h</filename>
    <includes id="PrimitiveQuery_8h" name="PrimitiveQuery.h" local="yes" imported="no">Magnum/PrimitiveQuery.h</includes>
    <includes id="SampleQuery_8h" name="SampleQuery.h" local="yes" imported="no">Magnum/SampleQuery.h</includes>
    <includes id="TimeQuery_8h" name="TimeQuery.h" local="yes" imported="no">Magnum/TimeQuery.h</includes>
  </compound>
  <compound kind="file">
    <name>RectangleTexture.h</name>
    <path>/home/mosra/Code/magnum/src/Magnum/</path>
    <filename>RectangleTexture_8h</filename>
    <includes id="AbstractTexture_8h" name="AbstractTexture.h" local="yes" imported="no">Magnum/AbstractTexture.h</includes>
    <includes id="Array_8h" name="Array.h" local="yes" imported="no">Magnum/Array.h</includes>
    <includes id="Vector2_8h" name="Vector2.h" local="yes" imported="no">Magnum/Math/Vector2.h</includes>
    <class kind="class">Magnum::RectangleTexture</class>
    <namespace>Magnum</namespace>
  </compound>
  <compound kind="file">
    <name>Renderbuffer.h</name>
    <path>/home/mosra/Code/magnum/src/Magnum/</path>
    <filename>Renderbuffer_8h</filename>
    <includes id="AbstractObject_8h" name="AbstractObject.h" local="yes" imported="no">Magnum/AbstractObject.h</includes>
    <includes id="Magnum_8h" name="Magnum.h" local="yes" imported="no">Magnum/Magnum.h</includes>
    <includes id="Tags_8h" name="Tags.h" local="yes" imported="no">Magnum/Tags.h</includes>
    <class kind="class">Magnum::Renderbuffer</class>
    <namespace>Magnum</namespace>
  </compound>
  <compound kind="file">
    <name>RenderbufferFormat.h</name>
    <path>/home/mosra/Code/magnum/src/Magnum/</path>
    <filename>RenderbufferFormat_8h</filename>
    <includes id="OpenGL_8h" name="OpenGL.h" local="yes" imported="no">Magnum/OpenGL.h</includes>
    <namespace>Magnum</namespace>
    <member kind="enumeration">
      <type></type>
      <name>RenderbufferFormat</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a8251455f053dfb72bc68e427219a7990</anchor>
      <arglist></arglist>
      <enumvalue file="namespaceMagnum.html" anchor="a8251455f053dfb72bc68e427219a7990aee38e4d5dd68c4e440825018d549cb47">Red</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a8251455f053dfb72bc68e427219a7990acfff813d86d447fa2a9c858650ebbb90">R8</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a8251455f053dfb72bc68e427219a7990abac953e88f6d79514b0b6fc42eb6f3b7">RG</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a8251455f053dfb72bc68e427219a7990a0367a93b9e3e7aa2fbe9802d80298e46">RG8</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a8251455f053dfb72bc68e427219a7990aea3495a278957dc58165e48a8945469f">RGBA</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a8251455f053dfb72bc68e427219a7990ab4b279046a02077466fa26cabb00c642">RGBA8</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a8251455f053dfb72bc68e427219a7990a9a486e1a3c543c7c58e1cc8086dc4239">R16</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a8251455f053dfb72bc68e427219a7990a2b66caa416f0a28686ade3fc30ab223a">RG16</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a8251455f053dfb72bc68e427219a7990a1cd42e2af35bdfb43d791f8cecdce4a4">RGB16</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a8251455f053dfb72bc68e427219a7990a50989efe15b375dce8ba3a5714fe2543">RGBA16</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a8251455f053dfb72bc68e427219a7990a477722a31a67b4a8f4bdb09e796e343b">R8UI</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a8251455f053dfb72bc68e427219a7990a65264dd5d010ab021cbec10f07f97ed5">RG8UI</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a8251455f053dfb72bc68e427219a7990aeb843f86a572765b9be8a71bd9563bea">RGBA8UI</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a8251455f053dfb72bc68e427219a7990a1ab8b9cd2509e2ccf930739d6d29ff35">R8I</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a8251455f053dfb72bc68e427219a7990af16a55975b8a8daa365e5b3cb116a001">RG8I</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a8251455f053dfb72bc68e427219a7990ab99d001604e415e4ea7f107daaffd6dd">RGBA8I</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a8251455f053dfb72bc68e427219a7990ac13d06830e39e268be15adfae07d9eb0">R16UI</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a8251455f053dfb72bc68e427219a7990a4475a780df31a86ece088a8aac082b12">RG16UI</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a8251455f053dfb72bc68e427219a7990ae418a751a46186248578aecf3f30a26c">RGBA16UI</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a8251455f053dfb72bc68e427219a7990a3bf53b9d9aca5ddf22161b4c9d362f3f">R16I</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a8251455f053dfb72bc68e427219a7990af0c6bc16df3d36b62adc241a797148de">RG16I</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a8251455f053dfb72bc68e427219a7990a3d8d82a913260a439bf38ed05d6d2f46">RGBA16I</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a8251455f053dfb72bc68e427219a7990a2c102dbf18ef5770d3beb5385661c1c2">R32UI</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a8251455f053dfb72bc68e427219a7990ac16ead63f9b07b5c97635edac05412cd">RG32UI</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a8251455f053dfb72bc68e427219a7990ac050956335d883e2f6ed07cc6b0c90d8">RGBA32UI</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a8251455f053dfb72bc68e427219a7990a88996871eb63291d92c2f9d83219648a">R32I</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a8251455f053dfb72bc68e427219a7990a56014c7d6ebfadbff4d0d4d3c20a0243">RG32I</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a8251455f053dfb72bc68e427219a7990a9f87275b4130dd118085dd75ee6a7ac1">RGBA32I</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a8251455f053dfb72bc68e427219a7990a8dfbaada0d68227f5c299c2aa637df68">R16F</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a8251455f053dfb72bc68e427219a7990ad28539b874a2bc4c5d40f49b375af474">RG16F</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a8251455f053dfb72bc68e427219a7990aa29d843695056f9c171a9eb702d6910a">RGBA16F</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a8251455f053dfb72bc68e427219a7990aca70b53fb0610461a2327973614a76ce">R32F</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a8251455f053dfb72bc68e427219a7990ab968b93cd3c34fc9583050ce7e267394">RG32F</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a8251455f053dfb72bc68e427219a7990a703a7a81e586669c930e3dcaf3e8c428">RGBA32F</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a8251455f053dfb72bc68e427219a7990a4cad8c5058101f0f527e306958b6641b">RGB10A2</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a8251455f053dfb72bc68e427219a7990a1d8555f4846b8791e329e36dcd5239dc">RGB10A2UI</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a8251455f053dfb72bc68e427219a7990a145a041c8e2080c43fa129fb5b17d8be">RGB5A1</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a8251455f053dfb72bc68e427219a7990ad0194ebb93fd86b15f194ef73f81a01f">RGBA4</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a8251455f053dfb72bc68e427219a7990ac749b8eee74e3b7b60f8774178537dea">R11FG11FB10F</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a8251455f053dfb72bc68e427219a7990a3b73e4d15701467ed72f157ffaff680a">RGB565</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a8251455f053dfb72bc68e427219a7990ad639700e92ceb4aaafdf02ebdb3e15a4">SRGB8Alpha8</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a8251455f053dfb72bc68e427219a7990a19c8f1ee3a700e77e87053eee47f6bc8">DepthComponent</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a8251455f053dfb72bc68e427219a7990ab5743b6194329afdf89a6a32bbcc4124">DepthComponent16</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a8251455f053dfb72bc68e427219a7990aedf2b17fc7b220c3b855af306c9f409d">DepthComponent24</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a8251455f053dfb72bc68e427219a7990a1f519142b59a9d4382c6aa004acd7dd2">DepthComponent32</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a8251455f053dfb72bc68e427219a7990a9e1081f1bca10bb12b11b81c23ccbdb2">DepthComponent32F</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a8251455f053dfb72bc68e427219a7990ac07ade4f9906db3ee8e4e7053dac1dee">StencilIndex</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a8251455f053dfb72bc68e427219a7990a560908539b7d178d0b9110e5f6fa2c88">StencilIndex1</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a8251455f053dfb72bc68e427219a7990a399d15fb10ce87fceba1c826ee904fba">StencilIndex4</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a8251455f053dfb72bc68e427219a7990a08af7fbfd260214add2e402d8427f0a8">StencilIndex8</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a8251455f053dfb72bc68e427219a7990a728c7335f0b2e511de1ccb95f67ad78f">StencilIndex16</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a8251455f053dfb72bc68e427219a7990a2fa8076285272883c91e14402975a441">DepthStencil</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a8251455f053dfb72bc68e427219a7990a78181d4f5d4b30baefed6c0da0de894f">Depth24Stencil8</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a8251455f053dfb72bc68e427219a7990abe0ddae1e70dc4233b16fc053a60e2fe">Depth32FStencil8</enumvalue>
    </member>
  </compound>
  <compound kind="file">
    <name>Resource.h</name>
    <path>/home/mosra/Code/magnum/src/Magnum/</path>
    <filename>Resource_8h</filename>
    <includes id="Magnum_8h" name="Magnum.h" local="yes" imported="no">Magnum/Magnum.h</includes>
    <includes id="ResourceManager_8h" name="ResourceManager.h" local="yes" imported="no">ResourceManager.h</includes>
    <class kind="class">Magnum::ResourceKey</class>
    <class kind="class">Magnum::Resource</class>
    <class kind="struct">std::hash&lt; Magnum::ResourceKey &gt;</class>
    <namespace>Magnum</namespace>
    <namespace>std</namespace>
    <member kind="enumeration">
      <type></type>
      <name>ResourceState</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a63e2340ca72c0086308a26c86b3268df</anchor>
      <arglist></arglist>
      <enumvalue file="namespaceMagnum.html" anchor="a63e2340ca72c0086308a26c86b3268dfa5111e24c1ecc6266ce0de4b4dc42033b">NotLoaded</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a63e2340ca72c0086308a26c86b3268dfa98029ed1c91fd6f14761ede80f916190">NotLoadedFallback</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a63e2340ca72c0086308a26c86b3268dfa16bfbf9c462762cf1cba4134ec53c504">Loading</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a63e2340ca72c0086308a26c86b3268dfa9d6fb043e63f3ff15df0d888f364b433">LoadingFallback</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a63e2340ca72c0086308a26c86b3268dfa38c300f4fc9ce8a77aad4a30de05cad8">NotFound</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a63e2340ca72c0086308a26c86b3268dfa58aa9ef9ce68a0381bf3acacd95b27d9">NotFoundFallback</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a63e2340ca72c0086308a26c86b3268dfad924522d30d6615e9f71e91504364a9d">Mutable</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a63e2340ca72c0086308a26c86b3268dfabeae421a14a34f831c113f61323d1ab3">Final</enumvalue>
    </member>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a9758329b50e17519e09b1fad67363cf7</anchor>
      <arglist>(Debug &amp;debug, ResourceState value)</arglist>
    </member>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>af79e3aa47905863e951ac3a2ea29e229</anchor>
      <arglist>(Debug &amp;debug, const ResourceKey &amp;value)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>SampleQuery.h</name>
    <path>/home/mosra/Code/magnum/src/Magnum/</path>
    <filename>SampleQuery_8h</filename>
    <includes id="AbstractQuery_8h" name="AbstractQuery.h" local="yes" imported="no">Magnum/AbstractQuery.h</includes>
    <class kind="class">Magnum::SampleQuery</class>
    <namespace>Magnum</namespace>
  </compound>
  <compound kind="file">
    <name>Sampler.h</name>
    <path>/home/mosra/Code/magnum/src/Magnum/</path>
    <filename>Sampler_8h</filename>
    <includes id="Magnum_8h" name="Magnum.h" local="yes" imported="no">Magnum/Magnum.h</includes>
    <includes id="OpenGL_8h" name="OpenGL.h" local="yes" imported="no">Magnum/OpenGL.h</includes>
    <class kind="class">Magnum::Sampler</class>
    <namespace>Magnum</namespace>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a5bca7b2fd3e0d6816c5652267f8079c1</anchor>
      <arglist>(Debug &amp;debug, Sampler::Filter value)</arglist>
    </member>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>ae5c6fc0d71ff3d74d3f4b90dbfef1d88</anchor>
      <arglist>(Debug &amp;debug, Sampler::Mipmap value)</arglist>
    </member>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>ace21573458a560752b4fb03849511f6b</anchor>
      <arglist>(Debug &amp;debug, Sampler::Wrapping value)</arglist>
    </member>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>ae45b4c75690c3eafb4c65c1874ef78ec</anchor>
      <arglist>(Debug &amp;debug, Sampler::CompareMode value)</arglist>
    </member>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a0e03d2522cbe925f70e0187d0658a9e6</anchor>
      <arglist>(Debug &amp;debug, Sampler::CompareFunction value)</arglist>
    </member>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a657ebfc7cc47efce2d5c377b1f9ec362</anchor>
      <arglist>(Debug &amp;debug, Sampler::DepthStencilMode value)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>AbstractCamera.h</name>
    <path>/home/mosra/Code/magnum/src/Magnum/SceneGraph/</path>
    <filename>AbstractCamera_8h</filename>
    <includes id="Camera_8h" name="Camera.h" local="yes" imported="no">Magnum/SceneGraph/Camera.h</includes>
    <namespace>Magnum</namespace>
    <namespace>Magnum::SceneGraph</namespace>
    <member kind="typedef">
      <type>Camera&lt; dimensions, T &gt;</type>
      <name>AbstractCamera</name>
      <anchorfile>namespaceMagnum_1_1SceneGraph.html</anchorfile>
      <anchor>a638c8a0da07c865f043c372f9bf5eea8</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>BasicCamera2D&lt; T &gt;</type>
      <name>AbstractBasicCamera2D</name>
      <anchorfile>namespaceMagnum_1_1SceneGraph.html</anchorfile>
      <anchor>a071469f209596142ec5d79ff8848669a</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Camera2D</type>
      <name>AbstractCamera2D</name>
      <anchorfile>namespaceMagnum_1_1SceneGraph.html</anchorfile>
      <anchor>a882e1113034938dcbd6eb08268183cd8</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>BasicCamera3D&lt; T &gt;</type>
      <name>AbstractBasicCamera3D</name>
      <anchorfile>namespaceMagnum_1_1SceneGraph.html</anchorfile>
      <anchor>a37820e7de739b0036a055588bb375a0e</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Camera3D</type>
      <name>AbstractCamera3D</name>
      <anchorfile>namespaceMagnum_1_1SceneGraph.html</anchorfile>
      <anchor>abba385b530e740748fc0afc81d784339</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>AbstractCamera.hpp</name>
    <path>/home/mosra/Code/magnum/src/Magnum/SceneGraph/</path>
    <filename>AbstractCamera_8hpp</filename>
    <includes id="Camera_8hpp" name="Camera.hpp" local="yes" imported="no">Magnum/SceneGraph/Camera.hpp</includes>
  </compound>
  <compound kind="file">
    <name>AbstractFeature.h</name>
    <path>/home/mosra/Code/magnum/src/Magnum/SceneGraph/</path>
    <filename>AbstractFeature_8h</filename>
    <includes id="Magnum_8h" name="Magnum.h" local="yes" imported="no">Magnum/Magnum.h</includes>
    <includes id="SceneGraph_2AbstractObject_8h" name="AbstractObject.h" local="yes" imported="no">Magnum/SceneGraph/AbstractObject.h</includes>
    <class kind="class">Magnum::SceneGraph::AbstractFeature</class>
    <namespace>Magnum</namespace>
    <namespace>Magnum::SceneGraph</namespace>
    <member kind="typedef">
      <type>Containers::EnumSet&lt; CachedTransformation &gt;</type>
      <name>CachedTransformations</name>
      <anchorfile>namespaceMagnum_1_1SceneGraph.html</anchorfile>
      <anchor>af9e8bdf2e2bab5a58cfc05e274225393</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>AbstractFeature&lt; 2, T &gt;</type>
      <name>AbstractBasicFeature2D</name>
      <anchorfile>namespaceMagnum_1_1SceneGraph.html</anchorfile>
      <anchor>a6efac1307c51ae050f83653c2bf29e06</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>AbstractBasicFeature2D&lt; Float &gt;</type>
      <name>AbstractFeature2D</name>
      <anchorfile>namespaceMagnum_1_1SceneGraph.html</anchorfile>
      <anchor>a80fc83e5625dfc7a52d778b5a20b7062</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>AbstractFeature&lt; 3, T &gt;</type>
      <name>AbstractBasicFeature3D</name>
      <anchorfile>namespaceMagnum_1_1SceneGraph.html</anchorfile>
      <anchor>a7add6ebdd4b5aecd49d9edd9d49486b8</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>AbstractBasicFeature3D&lt; Float &gt;</type>
      <name>AbstractFeature3D</name>
      <anchorfile>namespaceMagnum_1_1SceneGraph.html</anchorfile>
      <anchor>aed6f17d57d2ade33c8f93c725dadd724</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>CachedTransformation</name>
      <anchorfile>namespaceMagnum_1_1SceneGraph.html</anchorfile>
      <anchor>a86cf8735be255da54d15f5c6eff54078</anchor>
      <arglist></arglist>
      <enumvalue file="namespaceMagnum_1_1SceneGraph.html" anchor="a86cf8735be255da54d15f5c6eff54078ab51ca26c6c89cfc9bec338f7a0d3e0c8">Absolute</enumvalue>
      <enumvalue file="namespaceMagnum_1_1SceneGraph.html" anchor="a86cf8735be255da54d15f5c6eff54078ad0cf2589edf19b963da1550d2a26009b">InvertedAbsolute</enumvalue>
    </member>
  </compound>
  <compound kind="file">
    <name>AbstractFeature.hpp</name>
    <path>/home/mosra/Code/magnum/src/Magnum/SceneGraph/</path>
    <filename>AbstractFeature_8hpp</filename>
    <includes id="AbstractFeature_8h" name="AbstractFeature.h" local="yes" imported="no">Magnum/SceneGraph/AbstractFeature.h</includes>
    <namespace>Magnum</namespace>
    <namespace>Magnum::SceneGraph</namespace>
  </compound>
  <compound kind="file">
    <name>AbstractGroupedFeature.h</name>
    <path>/home/mosra/Code/magnum/src/Magnum/SceneGraph/</path>
    <filename>AbstractGroupedFeature_8h</filename>
    <includes id="AbstractFeature_8h" name="AbstractFeature.h" local="yes" imported="no">Magnum/SceneGraph/AbstractFeature.h</includes>
    <includes id="FeatureGroup_8h" name="FeatureGroup.h" local="yes" imported="no">Magnum/SceneGraph/FeatureGroup.h</includes>
    <class kind="class">Magnum::SceneGraph::AbstractGroupedFeature</class>
    <namespace>Magnum</namespace>
    <namespace>Magnum::SceneGraph</namespace>
    <member kind="typedef">
      <type>AbstractGroupedFeature&lt; 2, Derived, T &gt;</type>
      <name>AbstractBasicGroupedFeature2D</name>
      <anchorfile>namespaceMagnum_1_1SceneGraph.html</anchorfile>
      <anchor>ab7691a7938394382e821286ef7fa9ab9</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>AbstractBasicGroupedFeature2D&lt; Derived, Float &gt;</type>
      <name>AbstractGroupedFeature2D</name>
      <anchorfile>namespaceMagnum_1_1SceneGraph.html</anchorfile>
      <anchor>a5ec5d07043e93ec9fe40dbc8f0cbfc74</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>AbstractGroupedFeature&lt; 3, Derived, T &gt;</type>
      <name>AbstractBasicGroupedFeature3D</name>
      <anchorfile>namespaceMagnum_1_1SceneGraph.html</anchorfile>
      <anchor>a1b1dd3ce224e183c55ec13cb8643adb2</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>AbstractBasicGroupedFeature3D&lt; Derived, Float &gt;</type>
      <name>AbstractGroupedFeature3D</name>
      <anchorfile>namespaceMagnum_1_1SceneGraph.html</anchorfile>
      <anchor>ac93c4664dee5dc5d5d2661b34cd5533f</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>AbstractTransformation.h</name>
    <path>/home/mosra/Code/magnum/src/Magnum/SceneGraph/</path>
    <filename>AbstractTransformation_8h</filename>
    <includes id="SceneGraph_8h" name="SceneGraph.h" local="yes" imported="no">Magnum/SceneGraph/SceneGraph.h</includes>
    <class kind="class">Magnum::SceneGraph::AbstractTransformation</class>
    <namespace>Magnum</namespace>
    <namespace>Magnum::SceneGraph</namespace>
    <member kind="typedef">
      <type>AbstractTransformation&lt; 2, T &gt;</type>
      <name>AbstractBasicTransformation2D</name>
      <anchorfile>namespaceMagnum_1_1SceneGraph.html</anchorfile>
      <anchor>a65b3d0e7b1a414d7ac410513ef4798ee</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>AbstractBasicTransformation2D&lt; Float &gt;</type>
      <name>AbstractTransformation2D</name>
      <anchorfile>namespaceMagnum_1_1SceneGraph.html</anchorfile>
      <anchor>a1800f21d9f91b1e58cbe5308de5b092e</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>AbstractTransformation&lt; 3, T &gt;</type>
      <name>AbstractBasicTransformation3D</name>
      <anchorfile>namespaceMagnum_1_1SceneGraph.html</anchorfile>
      <anchor>ad5d334b1e544a9f8f1f5cdb3b7dbcc00</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>AbstractBasicTransformation3D&lt; Float &gt;</type>
      <name>AbstractTransformation3D</name>
      <anchorfile>namespaceMagnum_1_1SceneGraph.html</anchorfile>
      <anchor>a0701dfa4ff4ba88521d526036e86a04b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>TransformationType</name>
      <anchorfile>namespaceMagnum_1_1SceneGraph.html</anchorfile>
      <anchor>a7998dbf90728d0324d9e755c144e6ba2</anchor>
      <arglist></arglist>
      <enumvalue file="namespaceMagnum_1_1SceneGraph.html" anchor="a7998dbf90728d0324d9e755c144e6ba2a4cc6684df7b4a92b1dec6fce3264fac8">Global</enumvalue>
      <enumvalue file="namespaceMagnum_1_1SceneGraph.html" anchor="a7998dbf90728d0324d9e755c144e6ba2a509820290d57f333403f490dde7316f4">Local</enumvalue>
    </member>
  </compound>
  <compound kind="file">
    <name>AbstractTranslation.h</name>
    <path>/home/mosra/Code/magnum/src/Magnum/SceneGraph/</path>
    <filename>AbstractTranslation_8h</filename>
    <includes id="DimensionTraits_8h" name="DimensionTraits.h" local="yes" imported="no">Magnum/DimensionTraits.h</includes>
    <includes id="Vector3_8h" name="Vector3.h" local="yes" imported="no">Magnum/Math/Vector3.h</includes>
    <includes id="AbstractTransformation_8h" name="AbstractTransformation.h" local="yes" imported="no">Magnum/SceneGraph/AbstractTransformation.h</includes>
    <class kind="class">Magnum::SceneGraph::AbstractTranslation</class>
    <namespace>Magnum</namespace>
    <namespace>Magnum::SceneGraph</namespace>
    <member kind="typedef">
      <type>AbstractTranslation&lt; 2, T, TranslationType &gt;</type>
      <name>AbstractBasicTranslation2D</name>
      <anchorfile>namespaceMagnum_1_1SceneGraph.html</anchorfile>
      <anchor>afa2b93c31678db7e215fe91a996a9399</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>AbstractBasicTranslation2D&lt; Float &gt;</type>
      <name>AbstractTranslation2D</name>
      <anchorfile>namespaceMagnum_1_1SceneGraph.html</anchorfile>
      <anchor>a1ecd42490b0d1037158feea72e9377f9</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>AbstractTranslation&lt; 3, T, TranslationType &gt;</type>
      <name>AbstractBasicTranslation3D</name>
      <anchorfile>namespaceMagnum_1_1SceneGraph.html</anchorfile>
      <anchor>abf1c3f934c602108fe07d8ee2639ba70</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>AbstractBasicTranslation3D&lt; Float &gt;</type>
      <name>AbstractTranslation3D</name>
      <anchorfile>namespaceMagnum_1_1SceneGraph.html</anchorfile>
      <anchor>af6747f94f4a4dc7bd37cc73f28d31a83</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>AbstractTranslationRotation2D.h</name>
    <path>/home/mosra/Code/magnum/src/Magnum/SceneGraph/</path>
    <filename>AbstractTranslationRotation2D_8h</filename>
    <includes id="AbstractTranslation_8h" name="AbstractTranslation.h" local="yes" imported="no">Magnum/SceneGraph/AbstractTranslation.h</includes>
    <class kind="class">Magnum::SceneGraph::AbstractBasicTranslationRotation2D</class>
    <namespace>Magnum</namespace>
    <namespace>Magnum::SceneGraph</namespace>
    <member kind="typedef">
      <type>AbstractBasicTranslationRotation2D&lt; Float &gt;</type>
      <name>AbstractTranslationRotation2D</name>
      <anchorfile>namespaceMagnum_1_1SceneGraph.html</anchorfile>
      <anchor>a6598fdbed8b32af6f4b2381694cc507f</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>AbstractTranslationRotation3D.h</name>
    <path>/home/mosra/Code/magnum/src/Magnum/SceneGraph/</path>
    <filename>AbstractTranslationRotation3D_8h</filename>
    <includes id="AbstractTranslation_8h" name="AbstractTranslation.h" local="yes" imported="no">Magnum/SceneGraph/AbstractTranslation.h</includes>
    <class kind="class">Magnum::SceneGraph::AbstractBasicTranslationRotation3D</class>
    <namespace>Magnum</namespace>
    <namespace>Magnum::SceneGraph</namespace>
    <member kind="typedef">
      <type>AbstractBasicTranslationRotation3D&lt; Float &gt;</type>
      <name>AbstractTranslationRotation3D</name>
      <anchorfile>namespaceMagnum_1_1SceneGraph.html</anchorfile>
      <anchor>a8b9e42c74f3ebd9a6ce994d5c8c3128c</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>AbstractTranslationRotationScaling2D.h</name>
    <path>/home/mosra/Code/magnum/src/Magnum/SceneGraph/</path>
    <filename>AbstractTranslationRotationScaling2D_8h</filename>
    <includes id="AbstractTranslationRotation2D_8h" name="AbstractTranslationRotation2D.h" local="yes" imported="no">Magnum/SceneGraph/AbstractTranslationRotation2D.h</includes>
    <class kind="class">Magnum::SceneGraph::AbstractBasicTranslationRotationScaling2D</class>
    <namespace>Magnum</namespace>
    <namespace>Magnum::SceneGraph</namespace>
    <member kind="typedef">
      <type>AbstractBasicTranslationRotationScaling2D&lt; Float &gt;</type>
      <name>AbstractTranslationRotationScaling2D</name>
      <anchorfile>namespaceMagnum_1_1SceneGraph.html</anchorfile>
      <anchor>a8f9ce60d44dde9dee80e1a70b6a4e3f6</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>AbstractTranslationRotationScaling3D.h</name>
    <path>/home/mosra/Code/magnum/src/Magnum/SceneGraph/</path>
    <filename>AbstractTranslationRotationScaling3D_8h</filename>
    <includes id="AbstractTranslationRotation3D_8h" name="AbstractTranslationRotation3D.h" local="yes" imported="no">Magnum/SceneGraph/AbstractTranslationRotation3D.h</includes>
    <class kind="class">Magnum::SceneGraph::AbstractBasicTranslationRotationScaling3D</class>
    <namespace>Magnum</namespace>
    <namespace>Magnum::SceneGraph</namespace>
    <member kind="typedef">
      <type>AbstractBasicTranslationRotationScaling3D&lt; Float &gt;</type>
      <name>AbstractTranslationRotationScaling3D</name>
      <anchorfile>namespaceMagnum_1_1SceneGraph.html</anchorfile>
      <anchor>aa6ba8ecac0bb59927cd34182c0fd8968</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Animable.h</name>
    <path>/home/mosra/Code/magnum/src/Magnum/SceneGraph/</path>
    <filename>Animable_8h</filename>
    <includes id="AbstractGroupedFeature_8h" name="AbstractGroupedFeature.h" local="yes" imported="no">Magnum/SceneGraph/AbstractGroupedFeature.h</includes>
    <class kind="class">Magnum::SceneGraph::Animable</class>
    <namespace>Magnum</namespace>
    <namespace>Magnum::SceneGraph</namespace>
    <member kind="typedef">
      <type>Animable&lt; 2, T &gt;</type>
      <name>BasicAnimable2D</name>
      <anchorfile>namespaceMagnum_1_1SceneGraph.html</anchorfile>
      <anchor>af507ef77ec969a61d24f416fac00ec41</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>BasicAnimable2D&lt; Float &gt;</type>
      <name>Animable2D</name>
      <anchorfile>namespaceMagnum_1_1SceneGraph.html</anchorfile>
      <anchor>aee309216aa9fd6b5e622e17f53db835a</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Animable&lt; 3, T &gt;</type>
      <name>BasicAnimable3D</name>
      <anchorfile>namespaceMagnum_1_1SceneGraph.html</anchorfile>
      <anchor>a0d2fdb55f25032894b12f19cc48566c0</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>BasicAnimable3D&lt; Float &gt;</type>
      <name>Animable3D</name>
      <anchorfile>namespaceMagnum_1_1SceneGraph.html</anchorfile>
      <anchor>aa0f108ba69b680383c4352a65405453f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>AnimationState</name>
      <anchorfile>namespaceMagnum_1_1SceneGraph.html</anchorfile>
      <anchor>a94815106daa99f9642ee24afd40982e2</anchor>
      <arglist></arglist>
      <enumvalue file="namespaceMagnum_1_1SceneGraph.html" anchor="a94815106daa99f9642ee24afd40982e2ac23e2b09ebe6bf4cb5e2a9abe85c0be2">Stopped</enumvalue>
      <enumvalue file="namespaceMagnum_1_1SceneGraph.html" anchor="a94815106daa99f9642ee24afd40982e2ae99180abf47a8b3a856e0bcb2656990a">Paused</enumvalue>
      <enumvalue file="namespaceMagnum_1_1SceneGraph.html" anchor="a94815106daa99f9642ee24afd40982e2a5bda814c4aedb126839228f1a3d92f09">Running</enumvalue>
    </member>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceMagnum_1_1SceneGraph.html</anchorfile>
      <anchor>ab2553f73b3bea3c12ede8a39943e476b</anchor>
      <arglist>(Debug &amp;debug, AnimationState value)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Animable.hpp</name>
    <path>/home/mosra/Code/magnum/src/Magnum/SceneGraph/</path>
    <filename>Animable_8hpp</filename>
    <includes id="Timeline_8h" name="Timeline.h" local="yes" imported="no">Magnum/Timeline.h</includes>
    <includes id="Constants_8h" name="Constants.h" local="yes" imported="no">Magnum/Math/Constants.h</includes>
    <includes id="AnimableGroup_8h" name="AnimableGroup.h" local="yes" imported="no">Magnum/SceneGraph/AnimableGroup.h</includes>
    <includes id="Animable_8h" name="Animable.h" local="yes" imported="no">Magnum/SceneGraph/Animable.h</includes>
    <namespace>Magnum</namespace>
    <namespace>Magnum::SceneGraph</namespace>
  </compound>
  <compound kind="file">
    <name>AnimableGroup.h</name>
    <path>/home/mosra/Code/magnum/src/Magnum/SceneGraph/</path>
    <filename>AnimableGroup_8h</filename>
    <includes id="FeatureGroup_8h" name="FeatureGroup.h" local="yes" imported="no">Magnum/SceneGraph/FeatureGroup.h</includes>
    <class kind="class">Magnum::SceneGraph::AnimableGroup</class>
    <namespace>Magnum</namespace>
    <namespace>Magnum::SceneGraph</namespace>
    <member kind="typedef">
      <type>AnimableGroup&lt; 2, T &gt;</type>
      <name>BasicAnimableGroup2D</name>
      <anchorfile>namespaceMagnum_1_1SceneGraph.html</anchorfile>
      <anchor>aa2109eabf251858d7cb0b4520420ecf8</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>BasicAnimableGroup2D&lt; Float &gt;</type>
      <name>AnimableGroup2D</name>
      <anchorfile>namespaceMagnum_1_1SceneGraph.html</anchorfile>
      <anchor>a711874b097520d09e5c281122b03edcf</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>AnimableGroup&lt; 3, T &gt;</type>
      <name>BasicAnimableGroup3D</name>
      <anchorfile>namespaceMagnum_1_1SceneGraph.html</anchorfile>
      <anchor>abc62975ccc8fbb63942d506501a43a8b</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>BasicAnimableGroup3D&lt; Float &gt;</type>
      <name>AnimableGroup3D</name>
      <anchorfile>namespaceMagnum_1_1SceneGraph.html</anchorfile>
      <anchor>a89361d9c4cb88eb0bfdfbcaad04146b0</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Camera.h</name>
    <path>/home/mosra/Code/magnum/src/Magnum/SceneGraph/</path>
    <filename>Camera_8h</filename>
    <includes id="Matrix3_8h" name="Matrix3.h" local="yes" imported="no">Magnum/Math/Matrix3.h</includes>
    <includes id="Matrix4_8h" name="Matrix4.h" local="yes" imported="no">Magnum/Math/Matrix4.h</includes>
    <includes id="AbstractFeature_8h" name="AbstractFeature.h" local="yes" imported="no">Magnum/SceneGraph/AbstractFeature.h</includes>
    <class kind="class">Magnum::SceneGraph::Camera</class>
    <namespace>Magnum</namespace>
    <namespace>Magnum::SceneGraph</namespace>
    <member kind="typedef">
      <type>Camera&lt; 2, T &gt;</type>
      <name>BasicCamera2D</name>
      <anchorfile>namespaceMagnum_1_1SceneGraph.html</anchorfile>
      <anchor>a66914ceee1ef23ea459cedc8ab32ab01</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>BasicCamera2D&lt; Float &gt;</type>
      <name>Camera2D</name>
      <anchorfile>namespaceMagnum_1_1SceneGraph.html</anchorfile>
      <anchor>ad67b34a37740d83f11e40497efebb550</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Camera&lt; 3, T &gt;</type>
      <name>BasicCamera3D</name>
      <anchorfile>namespaceMagnum_1_1SceneGraph.html</anchorfile>
      <anchor>a1549f0fb851b0017f5cea510529215ce</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>BasicCamera3D&lt; Float &gt;</type>
      <name>Camera3D</name>
      <anchorfile>namespaceMagnum_1_1SceneGraph.html</anchorfile>
      <anchor>ac55e4b88d38c97efac6adff0d0d619e8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>AspectRatioPolicy</name>
      <anchorfile>namespaceMagnum_1_1SceneGraph.html</anchorfile>
      <anchor>ae75dff003c61f0268e0b108ea26db6a9</anchor>
      <arglist></arglist>
      <enumvalue file="namespaceMagnum_1_1SceneGraph.html" anchor="ae75dff003c61f0268e0b108ea26db6a9a98c2e7bea0117de839fdbbcfdedc9060">NotPreserved</enumvalue>
      <enumvalue file="namespaceMagnum_1_1SceneGraph.html" anchor="ae75dff003c61f0268e0b108ea26db6a9a3bc026b815790a05493fa56fc4b8d8bd">Extend</enumvalue>
      <enumvalue file="namespaceMagnum_1_1SceneGraph.html" anchor="ae75dff003c61f0268e0b108ea26db6a9a6adac929b615be2e0d213eb9d1ad15ba">Clip</enumvalue>
    </member>
  </compound>
  <compound kind="file">
    <name>Camera.hpp</name>
    <path>/home/mosra/Code/magnum/src/Magnum/SceneGraph/</path>
    <filename>Camera_8hpp</filename>
    <includes id="Functions_8h" name="Functions.h" local="yes" imported="no">Magnum/Math/Functions.h</includes>
    <includes id="Camera_8h" name="Camera.h" local="yes" imported="no">Magnum/SceneGraph/Camera.h</includes>
    <includes id="Drawable_8h" name="Drawable.h" local="yes" imported="no">Magnum/SceneGraph/Drawable.h</includes>
    <namespace>Magnum</namespace>
    <namespace>Magnum::SceneGraph</namespace>
  </compound>
  <compound kind="file">
    <name>Camera2D.h</name>
    <path>/home/mosra/Code/magnum/src/Magnum/SceneGraph/</path>
    <filename>Camera2D_8h</filename>
    <includes id="Camera_8h" name="Camera.h" local="yes" imported="no">Magnum/SceneGraph/Camera.h</includes>
  </compound>
  <compound kind="file">
    <name>Camera2D.hpp</name>
    <path>/home/mosra/Code/magnum/src/Magnum/SceneGraph/</path>
    <filename>Camera2D_8hpp</filename>
    <includes id="Camera_8hpp" name="Camera.hpp" local="yes" imported="no">Magnum/SceneGraph/Camera.hpp</includes>
  </compound>
  <compound kind="file">
    <name>Camera3D.h</name>
    <path>/home/mosra/Code/magnum/src/Magnum/SceneGraph/</path>
    <filename>Camera3D_8h</filename>
    <includes id="Camera_8h" name="Camera.h" local="yes" imported="no">Magnum/SceneGraph/Camera.h</includes>
  </compound>
  <compound kind="file">
    <name>Camera3D.hpp</name>
    <path>/home/mosra/Code/magnum/src/Magnum/SceneGraph/</path>
    <filename>Camera3D_8hpp</filename>
    <includes id="Camera_8hpp" name="Camera.hpp" local="yes" imported="no">Magnum/SceneGraph/Camera.hpp</includes>
  </compound>
  <compound kind="file">
    <name>Drawable.h</name>
    <path>/home/mosra/Code/magnum/src/Magnum/SceneGraph/</path>
    <filename>Drawable_8h</filename>
    <includes id="AbstractGroupedFeature_8h" name="AbstractGroupedFeature.h" local="yes" imported="no">Magnum/SceneGraph/AbstractGroupedFeature.h</includes>
    <class kind="class">Magnum::SceneGraph::Drawable</class>
    <namespace>Magnum</namespace>
    <namespace>Magnum::SceneGraph</namespace>
    <member kind="typedef">
      <type>Drawable&lt; 2, T &gt;</type>
      <name>BasicDrawable2D</name>
      <anchorfile>namespaceMagnum_1_1SceneGraph.html</anchorfile>
      <anchor>afd9e085ba01b246e3483e632ce3db6e0</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>BasicDrawable2D&lt; Float &gt;</type>
      <name>Drawable2D</name>
      <anchorfile>namespaceMagnum_1_1SceneGraph.html</anchorfile>
      <anchor>ae43f3318da2b84a600394fb0bc5c562e</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Drawable&lt; 3, T &gt;</type>
      <name>BasicDrawable3D</name>
      <anchorfile>namespaceMagnum_1_1SceneGraph.html</anchorfile>
      <anchor>ae102f6a45fd81072b42ae43a4ddc441d</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>BasicDrawable3D&lt; Float &gt;</type>
      <name>Drawable3D</name>
      <anchorfile>namespaceMagnum_1_1SceneGraph.html</anchorfile>
      <anchor>ab09a7cdf66c68b65728d2781312e6a63</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>FeatureGroup&lt; dimensions, Drawable&lt; dimensions, T &gt;, T &gt;</type>
      <name>DrawableGroup</name>
      <anchorfile>namespaceMagnum_1_1SceneGraph.html</anchorfile>
      <anchor>aab4b9fe25aa18fcb51f5b4d254784da8</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>DrawableGroup&lt; 2, T &gt;</type>
      <name>BasicDrawableGroup2D</name>
      <anchorfile>namespaceMagnum_1_1SceneGraph.html</anchorfile>
      <anchor>a3a864e18201ce23953ab813f8b251e10</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>BasicDrawableGroup2D&lt; Float &gt;</type>
      <name>DrawableGroup2D</name>
      <anchorfile>namespaceMagnum_1_1SceneGraph.html</anchorfile>
      <anchor>a1bc520b13eb6055504cb2d8ee805cb2c</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>DrawableGroup&lt; 3, T &gt;</type>
      <name>BasicDrawableGroup3D</name>
      <anchorfile>namespaceMagnum_1_1SceneGraph.html</anchorfile>
      <anchor>af290740590e7d443cc28552ca6ac1ffa</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>BasicDrawableGroup3D&lt; Float &gt;</type>
      <name>DrawableGroup3D</name>
      <anchorfile>namespaceMagnum_1_1SceneGraph.html</anchorfile>
      <anchor>a578886bc73264432278d65147faddee3</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Drawable.hpp</name>
    <path>/home/mosra/Code/magnum/src/Magnum/SceneGraph/</path>
    <filename>Drawable_8hpp</filename>
    <includes id="Drawable_8h" name="Drawable.h" local="yes" imported="no">Magnum/SceneGraph/Drawable.h</includes>
    <namespace>Magnum</namespace>
    <namespace>Magnum::SceneGraph</namespace>
  </compound>
  <compound kind="file">
    <name>DualComplexTransformation.h</name>
    <path>/home/mosra/Code/magnum/src/Magnum/SceneGraph/</path>
    <filename>DualComplexTransformation_8h</filename>
    <includes id="DualComplex_8h" name="DualComplex.h" local="yes" imported="no">Magnum/Math/DualComplex.h</includes>
    <includes id="AbstractTranslationRotation2D_8h" name="AbstractTranslationRotation2D.h" local="yes" imported="no">Magnum/SceneGraph/AbstractTranslationRotation2D.h</includes>
    <includes id="Object_8h" name="Object.h" local="yes" imported="no">Magnum/SceneGraph/Object.h</includes>
    <class kind="class">Magnum::SceneGraph::BasicDualComplexTransformation</class>
    <namespace>Magnum</namespace>
    <namespace>Magnum::SceneGraph</namespace>
    <member kind="typedef">
      <type>BasicDualComplexTransformation&lt; Float &gt;</type>
      <name>DualComplexTransformation</name>
      <anchorfile>namespaceMagnum_1_1SceneGraph.html</anchorfile>
      <anchor>ac9f4aaec12a825842009426a76092659</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>DualQuaternionTransformation.h</name>
    <path>/home/mosra/Code/magnum/src/Magnum/SceneGraph/</path>
    <filename>DualQuaternionTransformation_8h</filename>
    <includes id="DualQuaternion_8h" name="DualQuaternion.h" local="yes" imported="no">Magnum/Math/DualQuaternion.h</includes>
    <includes id="AbstractTranslationRotation3D_8h" name="AbstractTranslationRotation3D.h" local="yes" imported="no">Magnum/SceneGraph/AbstractTranslationRotation3D.h</includes>
    <includes id="Object_8h" name="Object.h" local="yes" imported="no">Magnum/SceneGraph/Object.h</includes>
    <class kind="class">Magnum::SceneGraph::BasicDualQuaternionTransformation</class>
    <namespace>Magnum</namespace>
    <namespace>Magnum::SceneGraph</namespace>
    <member kind="typedef">
      <type>BasicDualQuaternionTransformation&lt; Float &gt;</type>
      <name>DualQuaternionTransformation</name>
      <anchorfile>namespaceMagnum_1_1SceneGraph.html</anchorfile>
      <anchor>ace6339f6ce9e8983c8d02c7219419f3d</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>FeatureGroup.h</name>
    <path>/home/mosra/Code/magnum/src/Magnum/SceneGraph/</path>
    <filename>FeatureGroup_8h</filename>
    <includes id="SceneGraph_8h" name="SceneGraph.h" local="yes" imported="no">Magnum/SceneGraph/SceneGraph.h</includes>
    <class kind="class">Magnum::SceneGraph::AbstractFeatureGroup</class>
    <class kind="class">Magnum::SceneGraph::FeatureGroup</class>
    <namespace>Magnum</namespace>
    <namespace>Magnum::SceneGraph</namespace>
    <member kind="typedef">
      <type>FeatureGroup&lt; 2, Feature, T &gt;</type>
      <name>BasicFeatureGroup2D</name>
      <anchorfile>namespaceMagnum_1_1SceneGraph.html</anchorfile>
      <anchor>addfbae050115f381b9e80540547c579b</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>BasicFeatureGroup2D&lt; Feature, Float &gt;</type>
      <name>FeatureGroup2D</name>
      <anchorfile>namespaceMagnum_1_1SceneGraph.html</anchorfile>
      <anchor>aaac5484c4293df2de98534d4cf5d6faa</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>FeatureGroup&lt; 3, Feature, T &gt;</type>
      <name>BasicFeatureGroup3D</name>
      <anchorfile>namespaceMagnum_1_1SceneGraph.html</anchorfile>
      <anchor>a0664ea4967264026b00a3a5fe1af06c8</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>BasicFeatureGroup3D&lt; Feature, Float &gt;</type>
      <name>FeatureGroup3D</name>
      <anchorfile>namespaceMagnum_1_1SceneGraph.html</anchorfile>
      <anchor>a799a96fb4d84e3e6bd549a54e7b60816</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>FeatureGroup.hpp</name>
    <path>/home/mosra/Code/magnum/src/Magnum/SceneGraph/</path>
    <filename>FeatureGroup_8hpp</filename>
    <includes id="FeatureGroup_8h" name="FeatureGroup.h" local="yes" imported="no">Magnum/SceneGraph/FeatureGroup.h</includes>
    <namespace>Magnum</namespace>
    <namespace>Magnum::SceneGraph</namespace>
  </compound>
  <compound kind="file">
    <name>MatrixTransformation2D.h</name>
    <path>/home/mosra/Code/magnum/src/Magnum/SceneGraph/</path>
    <filename>MatrixTransformation2D_8h</filename>
    <includes id="Matrix3_8h" name="Matrix3.h" local="yes" imported="no">Magnum/Math/Matrix3.h</includes>
    <includes id="AbstractTranslationRotationScaling2D_8h" name="AbstractTranslationRotationScaling2D.h" local="yes" imported="no">Magnum/SceneGraph/AbstractTranslationRotationScaling2D.h</includes>
    <includes id="Object_8h" name="Object.h" local="yes" imported="no">Magnum/SceneGraph/Object.h</includes>
    <class kind="class">Magnum::SceneGraph::BasicMatrixTransformation2D</class>
    <namespace>Magnum</namespace>
    <namespace>Magnum::SceneGraph</namespace>
    <member kind="typedef">
      <type>BasicMatrixTransformation2D&lt; Float &gt;</type>
      <name>MatrixTransformation2D</name>
      <anchorfile>namespaceMagnum_1_1SceneGraph.html</anchorfile>
      <anchor>af0e9bde86c8d6acfa18111bb38eb9bda</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MatrixTransformation3D.h</name>
    <path>/home/mosra/Code/magnum/src/Magnum/SceneGraph/</path>
    <filename>MatrixTransformation3D_8h</filename>
    <includes id="Matrix4_8h" name="Matrix4.h" local="yes" imported="no">Magnum/Math/Matrix4.h</includes>
    <includes id="AbstractTranslationRotationScaling3D_8h" name="AbstractTranslationRotationScaling3D.h" local="yes" imported="no">Magnum/SceneGraph/AbstractTranslationRotationScaling3D.h</includes>
    <includes id="Object_8h" name="Object.h" local="yes" imported="no">Magnum/SceneGraph/Object.h</includes>
    <class kind="class">Magnum::SceneGraph::BasicMatrixTransformation3D</class>
    <namespace>Magnum</namespace>
    <namespace>Magnum::SceneGraph</namespace>
    <member kind="typedef">
      <type>BasicMatrixTransformation3D&lt; Float &gt;</type>
      <name>MatrixTransformation3D</name>
      <anchorfile>namespaceMagnum_1_1SceneGraph.html</anchorfile>
      <anchor>ae72540433b3a42ea312c5ec5c70abc6c</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Object.h</name>
    <path>/home/mosra/Code/magnum/src/Magnum/SceneGraph/</path>
    <filename>Object_8h</filename>
    <includes id="AbstractFeature_8h" name="AbstractFeature.h" local="yes" imported="no">Magnum/SceneGraph/AbstractFeature.h</includes>
    <includes id="SceneGraph_2AbstractObject_8h" name="AbstractObject.h" local="yes" imported="no">Magnum/SceneGraph/AbstractObject.h</includes>
    <class kind="class">Magnum::SceneGraph::Object</class>
    <namespace>Magnum</namespace>
    <namespace>Magnum::SceneGraph</namespace>
  </compound>
  <compound kind="file">
    <name>Object.hpp</name>
    <path>/home/mosra/Code/magnum/src/Magnum/SceneGraph/</path>
    <filename>Object_8hpp</filename>
    <includes id="AbstractTransformation_8h" name="AbstractTransformation.h" local="yes" imported="no">Magnum/SceneGraph/AbstractTransformation.h</includes>
    <includes id="Object_8h" name="Object.h" local="yes" imported="no">Magnum/SceneGraph/Object.h</includes>
    <includes id="Scene_8h" name="Scene.h" local="yes" imported="no">Magnum/SceneGraph/Scene.h</includes>
    <namespace>Magnum</namespace>
    <namespace>Magnum::SceneGraph</namespace>
  </compound>
  <compound kind="file">
    <name>RigidMatrixTransformation2D.h</name>
    <path>/home/mosra/Code/magnum/src/Magnum/SceneGraph/</path>
    <filename>RigidMatrixTransformation2D_8h</filename>
    <includes id="Matrix3_8h" name="Matrix3.h" local="yes" imported="no">Magnum/Math/Matrix3.h</includes>
    <includes id="GramSchmidt_8h" name="GramSchmidt.h" local="yes" imported="no">Magnum/Math/Algorithms/GramSchmidt.h</includes>
    <includes id="AbstractTranslationRotation2D_8h" name="AbstractTranslationRotation2D.h" local="yes" imported="no">Magnum/SceneGraph/AbstractTranslationRotation2D.h</includes>
    <includes id="Object_8h" name="Object.h" local="yes" imported="no">Magnum/SceneGraph/Object.h</includes>
    <class kind="class">Magnum::SceneGraph::BasicRigidMatrixTransformation2D</class>
    <namespace>Magnum</namespace>
    <namespace>Magnum::SceneGraph</namespace>
    <member kind="typedef">
      <type>BasicRigidMatrixTransformation2D&lt; Float &gt;</type>
      <name>RigidMatrixTransformation2D</name>
      <anchorfile>namespaceMagnum_1_1SceneGraph.html</anchorfile>
      <anchor>afea6d7bb24ebadabee2446a2ef48cdc3</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>RigidMatrixTransformation3D.h</name>
    <path>/home/mosra/Code/magnum/src/Magnum/SceneGraph/</path>
    <filename>RigidMatrixTransformation3D_8h</filename>
    <includes id="Matrix4_8h" name="Matrix4.h" local="yes" imported="no">Magnum/Math/Matrix4.h</includes>
    <includes id="GramSchmidt_8h" name="GramSchmidt.h" local="yes" imported="no">Magnum/Math/Algorithms/GramSchmidt.h</includes>
    <includes id="AbstractTranslationRotation3D_8h" name="AbstractTranslationRotation3D.h" local="yes" imported="no">Magnum/SceneGraph/AbstractTranslationRotation3D.h</includes>
    <includes id="Object_8h" name="Object.h" local="yes" imported="no">Magnum/SceneGraph/Object.h</includes>
    <class kind="class">Magnum::SceneGraph::BasicRigidMatrixTransformation3D</class>
    <namespace>Magnum</namespace>
    <namespace>Magnum::SceneGraph</namespace>
    <member kind="typedef">
      <type>BasicRigidMatrixTransformation3D&lt; Float &gt;</type>
      <name>RigidMatrixTransformation3D</name>
      <anchorfile>namespaceMagnum_1_1SceneGraph.html</anchorfile>
      <anchor>a3d123239f654f6cfe87cd3012f1686dc</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Scene.h</name>
    <path>/home/mosra/Code/magnum/src/Magnum/SceneGraph/</path>
    <filename>Scene_8h</filename>
    <includes id="Object_8h" name="Object.h" local="yes" imported="no">Magnum/SceneGraph/Object.h</includes>
    <class kind="class">Magnum::SceneGraph::Scene</class>
    <namespace>Magnum</namespace>
    <namespace>Magnum::SceneGraph</namespace>
  </compound>
  <compound kind="file">
    <name>SceneGraph.h</name>
    <path>/home/mosra/Code/magnum/src/Magnum/SceneGraph/</path>
    <filename>SceneGraph_8h</filename>
    <includes id="Types_8h" name="Types.h" local="yes" imported="no">Magnum/Types.h</includes>
    <namespace>Magnum</namespace>
    <namespace>Magnum::SceneGraph</namespace>
  </compound>
  <compound kind="file">
    <name>TranslationTransformation.h</name>
    <path>/home/mosra/Code/magnum/src/Magnum/SceneGraph/</path>
    <filename>TranslationTransformation_8h</filename>
    <includes id="Matrix3_8h" name="Matrix3.h" local="yes" imported="no">Magnum/Math/Matrix3.h</includes>
    <includes id="Matrix4_8h" name="Matrix4.h" local="yes" imported="no">Magnum/Math/Matrix4.h</includes>
    <includes id="AbstractTranslation_8h" name="AbstractTranslation.h" local="yes" imported="no">Magnum/SceneGraph/AbstractTranslation.h</includes>
    <includes id="Object_8h" name="Object.h" local="yes" imported="no">Magnum/SceneGraph/Object.h</includes>
    <class kind="class">Magnum::SceneGraph::TranslationTransformation</class>
    <namespace>Magnum</namespace>
    <namespace>Magnum::SceneGraph</namespace>
    <member kind="typedef">
      <type>TranslationTransformation&lt; 2, T, TranslationType &gt;</type>
      <name>BasicTranslationTransformation2D</name>
      <anchorfile>namespaceMagnum_1_1SceneGraph.html</anchorfile>
      <anchor>a768dfc3a71f8ce15d89126b17dbbcd4e</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>BasicTranslationTransformation2D&lt; Float &gt;</type>
      <name>TranslationTransformation2D</name>
      <anchorfile>namespaceMagnum_1_1SceneGraph.html</anchorfile>
      <anchor>a36feaa72147fd92f3d53923d95c2d69c</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>TranslationTransformation&lt; 3, T, TranslationType &gt;</type>
      <name>BasicTranslationTransformation3D</name>
      <anchorfile>namespaceMagnum_1_1SceneGraph.html</anchorfile>
      <anchor>a1f4a55c7b170b3f3245dbbbc1b136bee</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>BasicTranslationTransformation3D&lt; Float &gt;</type>
      <name>TranslationTransformation3D</name>
      <anchorfile>namespaceMagnum_1_1SceneGraph.html</anchorfile>
      <anchor>a8f23c88e7ff2cb5a2dd3d19f3e6790a2</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Shader.h</name>
    <path>/home/mosra/Code/magnum/src/Magnum/</path>
    <filename>Shader_8h</filename>
    <includes id="AbstractObject_8h" name="AbstractObject.h" local="yes" imported="no">Magnum/AbstractObject.h</includes>
    <includes id="Magnum_8h" name="Magnum.h" local="yes" imported="no">Magnum/Magnum.h</includes>
    <class kind="class">Magnum::Shader</class>
    <namespace>Magnum</namespace>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a7ade40fd2de1c917757f97dbd6c5ab11</anchor>
      <arglist>(Debug &amp;debug, Shader::Type value)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>AbstractVector.h</name>
    <path>/home/mosra/Code/magnum/src/Magnum/Shaders/</path>
    <filename>AbstractVector_8h</filename>
    <includes id="AbstractShaderProgram_8h" name="AbstractShaderProgram.h" local="yes" imported="no">Magnum/AbstractShaderProgram.h</includes>
    <includes id="Generic_8h" name="Generic.h" local="yes" imported="no">Magnum/Shaders/Generic.h</includes>
    <class kind="class">Magnum::Shaders::AbstractVector</class>
    <namespace>Magnum</namespace>
    <namespace>Magnum::Shaders</namespace>
    <member kind="typedef">
      <type>AbstractVector&lt; 2 &gt;</type>
      <name>AbstractVector2D</name>
      <anchorfile>namespaceMagnum_1_1Shaders.html</anchorfile>
      <anchor>a055a4b60fca99365039c226e3e7de622</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>AbstractVector&lt; 3 &gt;</type>
      <name>AbstractVector3D</name>
      <anchorfile>namespaceMagnum_1_1Shaders.html</anchorfile>
      <anchor>aa9e326f4cddc22d9724249d2c8634cfd</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>DistanceFieldVector.h</name>
    <path>/home/mosra/Code/magnum/src/Magnum/Shaders/</path>
    <filename>DistanceFieldVector_8h</filename>
    <includes id="DimensionTraits_8h" name="DimensionTraits.h" local="yes" imported="no">Magnum/DimensionTraits.h</includes>
    <includes id="Math_2Color_8h" name="Color.h" local="yes" imported="no">Magnum/Math/Color.h</includes>
    <includes id="Matrix3_8h" name="Matrix3.h" local="yes" imported="no">Magnum/Math/Matrix3.h</includes>
    <includes id="Matrix4_8h" name="Matrix4.h" local="yes" imported="no">Magnum/Math/Matrix4.h</includes>
    <includes id="AbstractVector_8h" name="AbstractVector.h" local="yes" imported="no">Magnum/Shaders/AbstractVector.h</includes>
    <class kind="class">Magnum::Shaders::DistanceFieldVector</class>
    <namespace>Magnum</namespace>
    <namespace>Magnum::Shaders</namespace>
    <member kind="typedef">
      <type>DistanceFieldVector&lt; 2 &gt;</type>
      <name>DistanceFieldVector2D</name>
      <anchorfile>namespaceMagnum_1_1Shaders.html</anchorfile>
      <anchor>a82d25087393b5cc2cdb0af02b930ffb7</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>DistanceFieldVector&lt; 3 &gt;</type>
      <name>DistanceFieldVector3D</name>
      <anchorfile>namespaceMagnum_1_1Shaders.html</anchorfile>
      <anchor>a516b8c2f61f5e9e610aedf7328e95cb7</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Flat.h</name>
    <path>/home/mosra/Code/magnum/src/Magnum/Shaders/</path>
    <filename>Flat_8h</filename>
    <includes id="AbstractShaderProgram_8h" name="AbstractShaderProgram.h" local="yes" imported="no">Magnum/AbstractShaderProgram.h</includes>
    <includes id="DimensionTraits_8h" name="DimensionTraits.h" local="yes" imported="no">Magnum/DimensionTraits.h</includes>
    <includes id="Math_2Color_8h" name="Color.h" local="yes" imported="no">Magnum/Math/Color.h</includes>
    <includes id="Matrix3_8h" name="Matrix3.h" local="yes" imported="no">Magnum/Math/Matrix3.h</includes>
    <includes id="Matrix4_8h" name="Matrix4.h" local="yes" imported="no">Magnum/Math/Matrix4.h</includes>
    <includes id="Generic_8h" name="Generic.h" local="yes" imported="no">Magnum/Shaders/Generic.h</includes>
    <class kind="class">Magnum::Shaders::Flat</class>
    <namespace>Magnum</namespace>
    <namespace>Magnum::Shaders</namespace>
    <member kind="typedef">
      <type>Flat&lt; 2 &gt;</type>
      <name>Flat2D</name>
      <anchorfile>namespaceMagnum_1_1Shaders.html</anchorfile>
      <anchor>ac2923bd6a72e0b094f2bf07131932169</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Flat&lt; 3 &gt;</type>
      <name>Flat3D</name>
      <anchorfile>namespaceMagnum_1_1Shaders.html</anchorfile>
      <anchor>aa6668d0744cbc4ef218d1df107aca861</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Generic.h</name>
    <path>/home/mosra/Code/magnum/src/Magnum/Shaders/</path>
    <filename>Generic_8h</filename>
    <includes id="Attribute_8h" name="Attribute.h" local="yes" imported="no">Magnum/Attribute.h</includes>
    <class kind="struct">Magnum::Shaders::Generic</class>
    <class kind="struct">Magnum::Shaders::Generic::Color</class>
    <namespace>Magnum</namespace>
    <namespace>Magnum::Shaders</namespace>
    <member kind="typedef">
      <type>Generic&lt; 2 &gt;</type>
      <name>Generic2D</name>
      <anchorfile>namespaceMagnum_1_1Shaders.html</anchorfile>
      <anchor>a11fcc97e4ebd48ee9038fefecccdf45c</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Generic&lt; 3 &gt;</type>
      <name>Generic3D</name>
      <anchorfile>namespaceMagnum_1_1Shaders.html</anchorfile>
      <anchor>adb3c39d719d87a10a28481df319797a8</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MeshVisualizer.h</name>
    <path>/home/mosra/Code/magnum/src/Magnum/Shaders/</path>
    <filename>MeshVisualizer_8h</filename>
    <includes id="AbstractShaderProgram_8h" name="AbstractShaderProgram.h" local="yes" imported="no">Magnum/AbstractShaderProgram.h</includes>
    <includes id="Math_2Color_8h" name="Color.h" local="yes" imported="no">Magnum/Math/Color.h</includes>
    <includes id="Matrix4_8h" name="Matrix4.h" local="yes" imported="no">Magnum/Math/Matrix4.h</includes>
    <class kind="class">Magnum::Shaders::MeshVisualizer</class>
    <namespace>Magnum</namespace>
    <namespace>Magnum::Shaders</namespace>
  </compound>
  <compound kind="file">
    <name>Phong.h</name>
    <path>/home/mosra/Code/magnum/src/Magnum/Shaders/</path>
    <filename>Phong_8h</filename>
    <includes id="AbstractShaderProgram_8h" name="AbstractShaderProgram.h" local="yes" imported="no">Magnum/AbstractShaderProgram.h</includes>
    <includes id="Math_2Color_8h" name="Color.h" local="yes" imported="no">Magnum/Math/Color.h</includes>
    <includes id="Matrix4_8h" name="Matrix4.h" local="yes" imported="no">Magnum/Math/Matrix4.h</includes>
    <includes id="Generic_8h" name="Generic.h" local="yes" imported="no">Magnum/Shaders/Generic.h</includes>
    <class kind="class">Magnum::Shaders::Phong</class>
    <namespace>Magnum</namespace>
    <namespace>Magnum::Shaders</namespace>
  </compound>
  <compound kind="file">
    <name>Shaders.h</name>
    <path>/home/mosra/Code/magnum/src/Magnum/Shaders/</path>
    <filename>Shaders_8h</filename>
    <includes id="Types_8h" name="Types.h" local="yes" imported="no">Magnum/Types.h</includes>
    <namespace>Magnum</namespace>
    <namespace>Magnum::Shaders</namespace>
  </compound>
  <compound kind="file">
    <name>VertexColor.h</name>
    <path>/home/mosra/Code/magnum/src/Magnum/Shaders/</path>
    <filename>VertexColor_8h</filename>
    <includes id="AbstractShaderProgram_8h" name="AbstractShaderProgram.h" local="yes" imported="no">Magnum/AbstractShaderProgram.h</includes>
    <includes id="DimensionTraits_8h" name="DimensionTraits.h" local="yes" imported="no">Magnum/DimensionTraits.h</includes>
    <includes id="Math_2Color_8h" name="Color.h" local="yes" imported="no">Magnum/Math/Color.h</includes>
    <includes id="Matrix3_8h" name="Matrix3.h" local="yes" imported="no">Magnum/Math/Matrix3.h</includes>
    <includes id="Matrix4_8h" name="Matrix4.h" local="yes" imported="no">Magnum/Math/Matrix4.h</includes>
    <includes id="Generic_8h" name="Generic.h" local="yes" imported="no">Magnum/Shaders/Generic.h</includes>
    <class kind="class">Magnum::Shaders::VertexColor</class>
    <namespace>Magnum</namespace>
    <namespace>Magnum::Shaders</namespace>
    <member kind="typedef">
      <type>VertexColor&lt; 2 &gt;</type>
      <name>VertexColor2D</name>
      <anchorfile>namespaceMagnum_1_1Shaders.html</anchorfile>
      <anchor>a2433f1de6a4cba48f5c7f2b8a6586b96</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>VertexColor&lt; 3 &gt;</type>
      <name>VertexColor3D</name>
      <anchorfile>namespaceMagnum_1_1Shaders.html</anchorfile>
      <anchor>a476d46cfe6e4a6287f3006f81922a858</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>AbstractShape.h</name>
    <path>/home/mosra/Code/magnum/src/Magnum/Shapes/</path>
    <filename>AbstractShape_8h</filename>
    <includes id="Magnum_8h" name="Magnum.h" local="yes" imported="no">Magnum/Magnum.h</includes>
    <includes id="DimensionTraits_8h" name="DimensionTraits.h" local="yes" imported="no">Magnum/DimensionTraits.h</includes>
    <includes id="AbstractGroupedFeature_8h" name="AbstractGroupedFeature.h" local="yes" imported="no">Magnum/SceneGraph/AbstractGroupedFeature.h</includes>
    <class kind="class">Magnum::Shapes::AbstractShape</class>
    <namespace>Magnum</namespace>
    <namespace>Magnum::Shapes</namespace>
    <member kind="typedef">
      <type>AbstractShape&lt; 2 &gt;</type>
      <name>AbstractShape2D</name>
      <anchorfile>namespaceMagnum_1_1Shapes.html</anchorfile>
      <anchor>a4e9bd6031c70fccf84a9661aaccb9c2a</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>AbstractShape&lt; 3 &gt;</type>
      <name>AbstractShape3D</name>
      <anchorfile>namespaceMagnum_1_1Shapes.html</anchorfile>
      <anchor>a589b851550fda74ad7592f9082b26faf</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>AxisAlignedBox.h</name>
    <path>/home/mosra/Code/magnum/src/Magnum/Shapes/</path>
    <filename>AxisAlignedBox_8h</filename>
    <includes id="DimensionTraits_8h" name="DimensionTraits.h" local="yes" imported="no">Magnum/DimensionTraits.h</includes>
    <includes id="Vector3_8h" name="Vector3.h" local="yes" imported="no">Magnum/Math/Vector3.h</includes>
    <includes id="Shapes_8h" name="Shapes.h" local="yes" imported="no">Magnum/Shapes/Shapes.h</includes>
    <class kind="class">Magnum::Shapes::AxisAlignedBox</class>
    <namespace>Magnum</namespace>
    <namespace>Magnum::Shapes</namespace>
    <member kind="typedef">
      <type>AxisAlignedBox&lt; 2 &gt;</type>
      <name>AxisAlignedBox2D</name>
      <anchorfile>namespaceMagnum_1_1Shapes.html</anchorfile>
      <anchor>af671fda1e375e094c0a1b50ff53827e3</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>AxisAlignedBox&lt; 3 &gt;</type>
      <name>AxisAlignedBox3D</name>
      <anchorfile>namespaceMagnum_1_1Shapes.html</anchorfile>
      <anchor>a6611bb4233c9ec6413a27dcb3e9a9edb</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator%</name>
      <anchorfile>namespaceMagnum_1_1Shapes.html</anchorfile>
      <anchor>aa36acc3128bae09e1d48650ea0cdf860</anchor>
      <arglist>(const Point&lt; dimensions &gt; &amp;a, const AxisAlignedBox&lt; dimensions &gt; &amp;b)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Box.h</name>
    <path>/home/mosra/Code/magnum/src/Magnum/Shapes/</path>
    <filename>Box_8h</filename>
    <includes id="DimensionTraits_8h" name="DimensionTraits.h" local="yes" imported="no">Magnum/DimensionTraits.h</includes>
    <includes id="Matrix3_8h" name="Matrix3.h" local="yes" imported="no">Magnum/Math/Matrix3.h</includes>
    <includes id="Matrix4_8h" name="Matrix4.h" local="yes" imported="no">Magnum/Math/Matrix4.h</includes>
    <class kind="class">Magnum::Shapes::Box</class>
    <namespace>Magnum</namespace>
    <namespace>Magnum::Shapes</namespace>
    <member kind="typedef">
      <type>Box&lt; 2 &gt;</type>
      <name>Box2D</name>
      <anchorfile>namespaceMagnum_1_1Shapes.html</anchorfile>
      <anchor>a7065289e32f576d8a0e95e928ba11ab7</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Box&lt; 3 &gt;</type>
      <name>Box3D</name>
      <anchorfile>namespaceMagnum_1_1Shapes.html</anchorfile>
      <anchor>ac2cbcad614385662ad4beb489103322c</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Collision.h</name>
    <path>/home/mosra/Code/magnum/src/Magnum/Shapes/</path>
    <filename>Collision_8h</filename>
    <includes id="DimensionTraits_8h" name="DimensionTraits.h" local="yes" imported="no">Magnum/DimensionTraits.h</includes>
    <includes id="Vector2_8h" name="Vector2.h" local="yes" imported="no">Magnum/Math/Vector2.h</includes>
    <includes id="Vector3_8h" name="Vector3.h" local="yes" imported="no">Magnum/Math/Vector3.h</includes>
    <class kind="class">Magnum::Shapes::Collision</class>
    <namespace>Magnum</namespace>
    <namespace>Magnum::Shapes</namespace>
    <member kind="typedef">
      <type>Collision&lt; 2 &gt;</type>
      <name>Collision2D</name>
      <anchorfile>namespaceMagnum_1_1Shapes.html</anchorfile>
      <anchor>ab42be56c2cbaa9fb9d853e1925cfc942</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Collision&lt; 3 &gt;</type>
      <name>Collision3D</name>
      <anchorfile>namespaceMagnum_1_1Shapes.html</anchorfile>
      <anchor>aad83dc8f52a9c5505a631895ccc783a7</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Composition.h</name>
    <path>/home/mosra/Code/magnum/src/Magnum/Shapes/</path>
    <filename>Composition_8h</filename>
    <includes id="DimensionTraits_8h" name="DimensionTraits.h" local="yes" imported="no">Magnum/DimensionTraits.h</includes>
    <includes id="Shapes_8h" name="Shapes.h" local="yes" imported="no">Magnum/Shapes/Shapes.h</includes>
    <class kind="class">Magnum::Shapes::Composition</class>
    <namespace>Magnum</namespace>
    <namespace>Magnum::Shapes</namespace>
    <member kind="typedef">
      <type>Composition&lt; 2 &gt;</type>
      <name>Composition2D</name>
      <anchorfile>namespaceMagnum_1_1Shapes.html</anchorfile>
      <anchor>aab6bffea5f17a4c03028ba6df318978f</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Composition&lt; 3 &gt;</type>
      <name>Composition3D</name>
      <anchorfile>namespaceMagnum_1_1Shapes.html</anchorfile>
      <anchor>afbbc5e4d464900be422ef093f835174f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>CompositionOperation</name>
      <anchorfile>namespaceMagnum_1_1Shapes.html</anchorfile>
      <anchor>ad8f610d090659171824e09764135758a</anchor>
      <arglist></arglist>
      <enumvalue file="namespaceMagnum_1_1Shapes.html" anchor="ad8f610d090659171824e09764135758aaa74c05d080620f087c4e523977230666">Not</enumvalue>
      <enumvalue file="namespaceMagnum_1_1Shapes.html" anchor="ad8f610d090659171824e09764135758aac33315685a0cba3ce53be378b3c7874b">And</enumvalue>
      <enumvalue file="namespaceMagnum_1_1Shapes.html" anchor="ad8f610d090659171824e09764135758aa3a2d5fe857d8f9541136a124c2edec6c">Or</enumvalue>
    </member>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceMagnum_1_1Shapes.html</anchorfile>
      <anchor>aa9ee062abdca1154e74d91f50647abab</anchor>
      <arglist>(Debug &amp;debug, typename Composition&lt; dimensions &gt;::Type value)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>LineSegment.h</name>
    <path>/home/mosra/Code/magnum/src/Magnum/Shapes/</path>
    <filename>LineSegment_8h</filename>
    <includes id="Shapes_2Line_8h" name="Line.h" local="yes" imported="no">Magnum/Shapes/Line.h</includes>
    <class kind="class">Magnum::Shapes::LineSegment</class>
    <namespace>Magnum</namespace>
    <namespace>Magnum::Shapes</namespace>
    <member kind="typedef">
      <type>LineSegment&lt; 2 &gt;</type>
      <name>LineSegment2D</name>
      <anchorfile>namespaceMagnum_1_1Shapes.html</anchorfile>
      <anchor>a73a4ce53fdcd2df8d86e3ebcd7290155</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>LineSegment&lt; 3 &gt;</type>
      <name>LineSegment3D</name>
      <anchorfile>namespaceMagnum_1_1Shapes.html</anchorfile>
      <anchor>a1db64426401b7bf7cf8953324625fd79</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Point.h</name>
    <path>/home/mosra/Code/magnum/src/Magnum/Shapes/</path>
    <filename>Point_8h</filename>
    <includes id="DimensionTraits_8h" name="DimensionTraits.h" local="yes" imported="no">Magnum/DimensionTraits.h</includes>
    <includes id="Vector3_8h" name="Vector3.h" local="yes" imported="no">Magnum/Math/Vector3.h</includes>
    <class kind="class">Magnum::Shapes::Point</class>
    <namespace>Magnum</namespace>
    <namespace>Magnum::Shapes</namespace>
    <member kind="typedef">
      <type>Point&lt; 2 &gt;</type>
      <name>Point2D</name>
      <anchorfile>namespaceMagnum_1_1Shapes.html</anchorfile>
      <anchor>a0f6c4e41cbb0354048a669cd8e08d93c</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Point&lt; 3 &gt;</type>
      <name>Point3D</name>
      <anchorfile>namespaceMagnum_1_1Shapes.html</anchorfile>
      <anchor>a5f04d8003aaee50f746fdcfada20c2d5</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Shape.h</name>
    <path>/home/mosra/Code/magnum/src/Magnum/Shapes/</path>
    <filename>Shape_8h</filename>
    <includes id="AbstractShape_8h" name="AbstractShape.h" local="yes" imported="no">Magnum/Shapes/AbstractShape.h</includes>
    <includes id="Shapes_8h" name="Shapes.h" local="yes" imported="no">Magnum/Shapes/Shapes.h</includes>
    <class kind="class">Magnum::Shapes::Shape</class>
    <namespace>Magnum</namespace>
    <namespace>Magnum::Shapes</namespace>
  </compound>
  <compound kind="file">
    <name>ShapeGroup.h</name>
    <path>/home/mosra/Code/magnum/src/Magnum/Shapes/</path>
    <filename>ShapeGroup_8h</filename>
    <includes id="FeatureGroup_8h" name="FeatureGroup.h" local="yes" imported="no">Magnum/SceneGraph/FeatureGroup.h</includes>
    <includes id="AbstractShape_8h" name="AbstractShape.h" local="yes" imported="no">Magnum/Shapes/AbstractShape.h</includes>
    <class kind="class">Magnum::Shapes::ShapeGroup</class>
    <namespace>Magnum</namespace>
    <namespace>Magnum::Shapes</namespace>
    <member kind="typedef">
      <type>ShapeGroup&lt; 2 &gt;</type>
      <name>ShapeGroup2D</name>
      <anchorfile>namespaceMagnum_1_1Shapes.html</anchorfile>
      <anchor>abf008c2731d6a6746882143df020136b</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>ShapeGroup&lt; 3 &gt;</type>
      <name>ShapeGroup3D</name>
      <anchorfile>namespaceMagnum_1_1Shapes.html</anchorfile>
      <anchor>ab1ff04fca24ca9c36a1ee80b80fc0489</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Shapes.h</name>
    <path>/home/mosra/Code/magnum/src/Magnum/Shapes/</path>
    <filename>Shapes_8h</filename>
    <includes id="Types_8h" name="Types.h" local="yes" imported="no">Magnum/Types.h</includes>
    <namespace>Magnum</namespace>
    <namespace>Magnum::Shapes</namespace>
  </compound>
  <compound kind="file">
    <name>Sphere.h</name>
    <path>/home/mosra/Code/magnum/src/Magnum/Shapes/</path>
    <filename>Sphere_8h</filename>
    <includes id="DimensionTraits_8h" name="DimensionTraits.h" local="yes" imported="no">Magnum/DimensionTraits.h</includes>
    <includes id="Vector3_8h" name="Vector3.h" local="yes" imported="no">Magnum/Math/Vector3.h</includes>
    <includes id="Collision_8h" name="Collision.h" local="yes" imported="no">Magnum/Shapes/Collision.h</includes>
    <includes id="Shapes_8h" name="Shapes.h" local="yes" imported="no">Magnum/Shapes/Shapes.h</includes>
    <class kind="class">Magnum::Shapes::Sphere</class>
    <class kind="class">Magnum::Shapes::InvertedSphere</class>
    <namespace>Magnum</namespace>
    <namespace>Magnum::Shapes</namespace>
    <member kind="typedef">
      <type>Sphere&lt; 2 &gt;</type>
      <name>Sphere2D</name>
      <anchorfile>namespaceMagnum_1_1Shapes.html</anchorfile>
      <anchor>a08c1fd6379b146defeb4d94568596c06</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Sphere&lt; 3 &gt;</type>
      <name>Sphere3D</name>
      <anchorfile>namespaceMagnum_1_1Shapes.html</anchorfile>
      <anchor>a21ba78b6c1e081d95f2a294f0731ee64</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>InvertedSphere&lt; 2 &gt;</type>
      <name>InvertedSphere2D</name>
      <anchorfile>namespaceMagnum_1_1Shapes.html</anchorfile>
      <anchor>a626326e606fd477e0d17423c241a5424</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>InvertedSphere&lt; 3 &gt;</type>
      <name>InvertedSphere3D</name>
      <anchorfile>namespaceMagnum_1_1Shapes.html</anchorfile>
      <anchor>a6ed406193adc0e3cea8d58aaea086bd4</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator%</name>
      <anchorfile>namespaceMagnum_1_1Shapes.html</anchorfile>
      <anchor>a8b92f87abd7091bb18db7d2a588bd554</anchor>
      <arglist>(const Point&lt; dimensions &gt; &amp;a, const Sphere&lt; dimensions &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator%</name>
      <anchorfile>namespaceMagnum_1_1Shapes.html</anchorfile>
      <anchor>a661f9284aa5c40e8252ac116f7eea984</anchor>
      <arglist>(const Point&lt; dimensions &gt; &amp;a, const InvertedSphere&lt; dimensions &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>Collision&lt; dimensions &gt;</type>
      <name>operator/</name>
      <anchorfile>namespaceMagnum_1_1Shapes.html</anchorfile>
      <anchor>ae83451d613cff0466b2781b751864d3f</anchor>
      <arglist>(const Point&lt; dimensions &gt; &amp;a, const Sphere&lt; dimensions &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>Collision&lt; dimensions &gt;</type>
      <name>operator/</name>
      <anchorfile>namespaceMagnum_1_1Shapes.html</anchorfile>
      <anchor>add309ac34f5949efeb8a3cc4a8c21b84</anchor>
      <arglist>(const Point&lt; dimensions &gt; &amp;a, const InvertedSphere&lt; dimensions &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator%</name>
      <anchorfile>namespaceMagnum_1_1Shapes.html</anchorfile>
      <anchor>adbea395f5e0ca3c22cdac2afbb7e7735</anchor>
      <arglist>(const Line&lt; dimensions &gt; &amp;a, const Sphere&lt; dimensions &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator%</name>
      <anchorfile>namespaceMagnum_1_1Shapes.html</anchorfile>
      <anchor>aadd405df874fc45add6de71c650de5a4</anchor>
      <arglist>(const LineSegment&lt; dimensions &gt; &amp;a, const Sphere&lt; dimensions &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator%</name>
      <anchorfile>namespaceMagnum_1_1Shapes.html</anchorfile>
      <anchor>ac7f0f50e112678da6e80ba5c5eef3e51</anchor>
      <arglist>(const Sphere&lt; dimensions &gt; &amp;a, const InvertedSphere&lt; dimensions &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>Collision&lt; dimensions &gt;</type>
      <name>operator/</name>
      <anchorfile>namespaceMagnum_1_1Shapes.html</anchorfile>
      <anchor>ae54fc2987b79b7716f336df639814933</anchor>
      <arglist>(const Sphere&lt; dimensions &gt; &amp;a, const InvertedSphere&lt; dimensions &gt; &amp;b)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>AbstractFont.h</name>
    <path>/home/mosra/Code/magnum/src/Magnum/Text/</path>
    <filename>AbstractFont_8h</filename>
    <includes id="Magnum_8h" name="Magnum.h" local="yes" imported="no">Magnum/Magnum.h</includes>
    <includes id="Texture_8h" name="Texture.h" local="yes" imported="no">Magnum/Texture.h</includes>
    <includes id="Text_8h" name="Text.h" local="yes" imported="no">Magnum/Text/Text.h</includes>
    <class kind="class">Magnum::Text::AbstractFont</class>
    <class kind="struct">Magnum::Text::AbstractFont::Metrics</class>
    <class kind="class">Magnum::Text::AbstractLayouter</class>
    <namespace>Magnum</namespace>
    <namespace>Magnum::Text</namespace>
  </compound>
  <compound kind="file">
    <name>AbstractFontConverter.h</name>
    <path>/home/mosra/Code/magnum/src/Magnum/Text/</path>
    <filename>AbstractFontConverter_8h</filename>
    <includes id="Magnum_8h" name="Magnum.h" local="yes" imported="no">Magnum/Magnum.h</includes>
    <includes id="Text_8h" name="Text.h" local="yes" imported="no">Magnum/Text/Text.h</includes>
    <class kind="class">Magnum::Text::AbstractFontConverter</class>
    <namespace>Magnum</namespace>
    <namespace>Magnum::Text</namespace>
  </compound>
  <compound kind="file">
    <name>Alignment.h</name>
    <path>/home/mosra/Code/magnum/src/Magnum/Text/</path>
    <filename>Alignment_8h</filename>
    <includes id="Types_8h" name="Types.h" local="yes" imported="no">Magnum/Types.h</includes>
    <namespace>Magnum</namespace>
    <namespace>Magnum::Text</namespace>
    <member kind="enumeration">
      <type></type>
      <name>Alignment</name>
      <anchorfile>namespaceMagnum_1_1Text.html</anchorfile>
      <anchor>afe5ab4c9617fdc70eefe5b871e5ee81b</anchor>
      <arglist></arglist>
      <enumvalue file="namespaceMagnum_1_1Text.html" anchor="afe5ab4c9617fdc70eefe5b871e5ee81ba648fc4cad5ac4a6e2741b3983bbf942c">LineLeft</enumvalue>
      <enumvalue file="namespaceMagnum_1_1Text.html" anchor="afe5ab4c9617fdc70eefe5b871e5ee81bae184e1933ff72b6ac41649f71eb9fcac">LineCenter</enumvalue>
      <enumvalue file="namespaceMagnum_1_1Text.html" anchor="afe5ab4c9617fdc70eefe5b871e5ee81ba71d87665cdb4e7a2ac51d1a80f591939">LineRight</enumvalue>
      <enumvalue file="namespaceMagnum_1_1Text.html" anchor="afe5ab4c9617fdc70eefe5b871e5ee81ba1d536cb49605c6a39292c33cfc5e872a">MiddleLeft</enumvalue>
      <enumvalue file="namespaceMagnum_1_1Text.html" anchor="afe5ab4c9617fdc70eefe5b871e5ee81ba2096d77a6ee8ef295acbdc276773dd81">MiddleCenter</enumvalue>
      <enumvalue file="namespaceMagnum_1_1Text.html" anchor="afe5ab4c9617fdc70eefe5b871e5ee81ba3b9c2b3657981eb77a10390aa0e8c156">MiddleRight</enumvalue>
      <enumvalue file="namespaceMagnum_1_1Text.html" anchor="afe5ab4c9617fdc70eefe5b871e5ee81bab32beb056fbfe36afbabc6c88c81ab36">TopLeft</enumvalue>
      <enumvalue file="namespaceMagnum_1_1Text.html" anchor="afe5ab4c9617fdc70eefe5b871e5ee81ba91b8ede24b7f93a98ae4dcaade15d468">TopCenter</enumvalue>
      <enumvalue file="namespaceMagnum_1_1Text.html" anchor="afe5ab4c9617fdc70eefe5b871e5ee81ba1d85a557894c340c318493f33bfa8efb">TopRight</enumvalue>
      <enumvalue file="namespaceMagnum_1_1Text.html" anchor="afe5ab4c9617fdc70eefe5b871e5ee81ba77e7c1e9341efec9ff6b0fc8e5c8deda">LineCenterIntegral</enumvalue>
      <enumvalue file="namespaceMagnum_1_1Text.html" anchor="afe5ab4c9617fdc70eefe5b871e5ee81baef3f989c5b8b37ec01e0d588d00db0f3">MiddleLeftIntegral</enumvalue>
      <enumvalue file="namespaceMagnum_1_1Text.html" anchor="afe5ab4c9617fdc70eefe5b871e5ee81bafc989b7f4c3942a8d586054d11e9bf29">MiddleCenterIntegral</enumvalue>
      <enumvalue file="namespaceMagnum_1_1Text.html" anchor="afe5ab4c9617fdc70eefe5b871e5ee81baf4e3acd109cd0c34ceed8ed3e6b73846">MiddleRightIntegral</enumvalue>
    </member>
  </compound>
  <compound kind="file">
    <name>DistanceFieldGlyphCache.h</name>
    <path>/home/mosra/Code/magnum/src/Magnum/Text/</path>
    <filename>DistanceFieldGlyphCache_8h</filename>
    <includes id="GlyphCache_8h" name="GlyphCache.h" local="yes" imported="no">Magnum/Text/GlyphCache.h</includes>
    <class kind="class">Magnum::Text::DistanceFieldGlyphCache</class>
    <namespace>Magnum</namespace>
    <namespace>Magnum::Text</namespace>
  </compound>
  <compound kind="file">
    <name>GlyphCache.h</name>
    <path>/home/mosra/Code/magnum/src/Magnum/Text/</path>
    <filename>GlyphCache_8h</filename>
    <includes id="Range_8h" name="Range.h" local="yes" imported="no">Magnum/Math/Range.h</includes>
    <includes id="Texture_8h" name="Texture.h" local="yes" imported="no">Magnum/Texture.h</includes>
    <class kind="class">Magnum::Text::GlyphCache</class>
    <namespace>Magnum</namespace>
    <namespace>Magnum::Text</namespace>
  </compound>
  <compound kind="file">
    <name>Text.h</name>
    <path>/home/mosra/Code/magnum/src/Magnum/Text/</path>
    <filename>Text_8h</filename>
    <includes id="Types_8h" name="Types.h" local="yes" imported="no">Magnum/Types.h</includes>
    <namespace>Magnum</namespace>
    <namespace>Magnum::Text</namespace>
  </compound>
  <compound kind="file">
    <name>Texture.h</name>
    <path>/home/mosra/Code/magnum/src/Magnum/</path>
    <filename>Texture_8h</filename>
    <includes id="AbstractTexture_8h" name="AbstractTexture.h" local="yes" imported="no">Magnum/AbstractTexture.h</includes>
    <includes id="Array_8h" name="Array.h" local="yes" imported="no">Magnum/Array.h</includes>
    <includes id="DimensionTraits_8h" name="DimensionTraits.h" local="yes" imported="no">Magnum/DimensionTraits.h</includes>
    <includes id="Vector3_8h" name="Vector3.h" local="yes" imported="no">Magnum/Math/Vector3.h</includes>
    <class kind="class">Magnum::Texture</class>
    <namespace>Magnum</namespace>
    <member kind="typedef">
      <type>Texture&lt; 1 &gt;</type>
      <name>Texture1D</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a8643254636648c1fb2b257be46a1feff</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Texture&lt; 2 &gt;</type>
      <name>Texture2D</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a3bcd8943395834a6dda0b1208090e79e</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Texture&lt; 3 &gt;</type>
      <name>Texture3D</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>ac5ed6a84a4e83f97a89cec55411764c3</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>TextureArray.h</name>
    <path>/home/mosra/Code/magnum/src/Magnum/</path>
    <filename>TextureArray_8h</filename>
    <includes id="AbstractTexture_8h" name="AbstractTexture.h" local="yes" imported="no">Magnum/AbstractTexture.h</includes>
    <includes id="Array_8h" name="Array.h" local="yes" imported="no">Magnum/Array.h</includes>
    <includes id="DimensionTraits_8h" name="DimensionTraits.h" local="yes" imported="no">Magnum/DimensionTraits.h</includes>
    <includes id="Vector3_8h" name="Vector3.h" local="yes" imported="no">Magnum/Math/Vector3.h</includes>
    <class kind="class">Magnum::TextureArray</class>
    <namespace>Magnum</namespace>
    <member kind="typedef">
      <type>TextureArray&lt; 1 &gt;</type>
      <name>Texture1DArray</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a2d5ee2b3ae709cbe6c8fa3dcba7ad4b1</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>TextureArray&lt; 2 &gt;</type>
      <name>Texture2DArray</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a0f63b4868fddc2708eb98e2350463f3a</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>TextureFormat.h</name>
    <path>/home/mosra/Code/magnum/src/Magnum/</path>
    <filename>TextureFormat_8h</filename>
    <includes id="OpenGL_8h" name="OpenGL.h" local="yes" imported="no">Magnum/OpenGL.h</includes>
    <namespace>Magnum</namespace>
    <member kind="enumeration">
      <type></type>
      <name>TextureFormat</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a0d31e9826f048e5fdacae2a2c655d564</anchor>
      <arglist></arglist>
      <enumvalue file="namespaceMagnum.html" anchor="a0d31e9826f048e5fdacae2a2c655d564aee38e4d5dd68c4e440825018d549cb47">Red</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a0d31e9826f048e5fdacae2a2c655d564acfff813d86d447fa2a9c858650ebbb90">R8</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a0d31e9826f048e5fdacae2a2c655d564abac953e88f6d79514b0b6fc42eb6f3b7">RG</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a0d31e9826f048e5fdacae2a2c655d564a0367a93b9e3e7aa2fbe9802d80298e46">RG8</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a0d31e9826f048e5fdacae2a2c655d564a889574aebacda6bfd3e534e2b49b8028">RGB</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a0d31e9826f048e5fdacae2a2c655d564a165c6379d01617e12de274a3952efa63">RGB8</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a0d31e9826f048e5fdacae2a2c655d564aea3495a278957dc58165e48a8945469f">RGBA</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a0d31e9826f048e5fdacae2a2c655d564ab4b279046a02077466fa26cabb00c642">RGBA8</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a0d31e9826f048e5fdacae2a2c655d564ae24128a61e28847e5cae93e146f3c396">R8Snorm</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a0d31e9826f048e5fdacae2a2c655d564a0c1bc4554d3ca92e8ed03fde8fb668fc">RG8Snorm</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a0d31e9826f048e5fdacae2a2c655d564a0ed70c0ecaf24c9abe9b121dd6fbc7be">RGB8Snorm</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a0d31e9826f048e5fdacae2a2c655d564a77b2290184a281692c88cea55f7e4709">RGBA8Snorm</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a0d31e9826f048e5fdacae2a2c655d564a9a486e1a3c543c7c58e1cc8086dc4239">R16</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a0d31e9826f048e5fdacae2a2c655d564a2b66caa416f0a28686ade3fc30ab223a">RG16</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a0d31e9826f048e5fdacae2a2c655d564a1cd42e2af35bdfb43d791f8cecdce4a4">RGB16</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a0d31e9826f048e5fdacae2a2c655d564a50989efe15b375dce8ba3a5714fe2543">RGBA16</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a0d31e9826f048e5fdacae2a2c655d564a3be85f3a039758c6edb91c91b7af98d2">R16Snorm</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a0d31e9826f048e5fdacae2a2c655d564a7e7693eb3b20e62d8af832c2fe116559">RG16Snorm</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a0d31e9826f048e5fdacae2a2c655d564a31fe77f7173ed54fdc96a4f752083205">RGB16Snorm</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a0d31e9826f048e5fdacae2a2c655d564a825f61116ed1837ab9125c3e1921d860">RGBA16Snorm</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a0d31e9826f048e5fdacae2a2c655d564a477722a31a67b4a8f4bdb09e796e343b">R8UI</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a0d31e9826f048e5fdacae2a2c655d564a65264dd5d010ab021cbec10f07f97ed5">RG8UI</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a0d31e9826f048e5fdacae2a2c655d564afc5e2f0963f0ce3529e8aee36d827bbd">RGB8UI</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a0d31e9826f048e5fdacae2a2c655d564aeb843f86a572765b9be8a71bd9563bea">RGBA8UI</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a0d31e9826f048e5fdacae2a2c655d564a1ab8b9cd2509e2ccf930739d6d29ff35">R8I</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a0d31e9826f048e5fdacae2a2c655d564af16a55975b8a8daa365e5b3cb116a001">RG8I</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a0d31e9826f048e5fdacae2a2c655d564a57a36f0c89bfa81cdd9a69e2ad2df08b">RGB8I</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a0d31e9826f048e5fdacae2a2c655d564ab99d001604e415e4ea7f107daaffd6dd">RGBA8I</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a0d31e9826f048e5fdacae2a2c655d564ac13d06830e39e268be15adfae07d9eb0">R16UI</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a0d31e9826f048e5fdacae2a2c655d564a4475a780df31a86ece088a8aac082b12">RG16UI</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a0d31e9826f048e5fdacae2a2c655d564adfb1f628557b0014586b94400f06777b">RGB16UI</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a0d31e9826f048e5fdacae2a2c655d564ae418a751a46186248578aecf3f30a26c">RGBA16UI</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a0d31e9826f048e5fdacae2a2c655d564a3bf53b9d9aca5ddf22161b4c9d362f3f">R16I</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a0d31e9826f048e5fdacae2a2c655d564af0c6bc16df3d36b62adc241a797148de">RG16I</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a0d31e9826f048e5fdacae2a2c655d564aff7632ef49d4bbe6b35050ac957a04c8">RGB16I</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a0d31e9826f048e5fdacae2a2c655d564a3d8d82a913260a439bf38ed05d6d2f46">RGBA16I</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a0d31e9826f048e5fdacae2a2c655d564a2c102dbf18ef5770d3beb5385661c1c2">R32UI</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a0d31e9826f048e5fdacae2a2c655d564ac16ead63f9b07b5c97635edac05412cd">RG32UI</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a0d31e9826f048e5fdacae2a2c655d564ae240d3e394b6a7cfa467efe512e96bb4">RGB32UI</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a0d31e9826f048e5fdacae2a2c655d564ac050956335d883e2f6ed07cc6b0c90d8">RGBA32UI</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a0d31e9826f048e5fdacae2a2c655d564a88996871eb63291d92c2f9d83219648a">R32I</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a0d31e9826f048e5fdacae2a2c655d564a56014c7d6ebfadbff4d0d4d3c20a0243">RG32I</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a0d31e9826f048e5fdacae2a2c655d564a8305c7f5432d31774cceb858c966b22e">RGB32I</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a0d31e9826f048e5fdacae2a2c655d564a9f87275b4130dd118085dd75ee6a7ac1">RGBA32I</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a0d31e9826f048e5fdacae2a2c655d564a8dfbaada0d68227f5c299c2aa637df68">R16F</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a0d31e9826f048e5fdacae2a2c655d564ad28539b874a2bc4c5d40f49b375af474">RG16F</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a0d31e9826f048e5fdacae2a2c655d564a25cd126670bd567a899c64c4e6e8ca7d">RGB16F</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a0d31e9826f048e5fdacae2a2c655d564aa29d843695056f9c171a9eb702d6910a">RGBA16F</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a0d31e9826f048e5fdacae2a2c655d564aca70b53fb0610461a2327973614a76ce">R32F</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a0d31e9826f048e5fdacae2a2c655d564ab968b93cd3c34fc9583050ce7e267394">RG32F</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a0d31e9826f048e5fdacae2a2c655d564ad8936cc7055546f79128b9dbfb8c8bbb">RGB32F</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a0d31e9826f048e5fdacae2a2c655d564a703a7a81e586669c930e3dcaf3e8c428">RGBA32F</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a0d31e9826f048e5fdacae2a2c655d564a280f73691109aeaa235ffddd2d154d9b">Luminance</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a0d31e9826f048e5fdacae2a2c655d564a780701651d86fd20708e81e7ad48c078">LuminanceAlpha</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a0d31e9826f048e5fdacae2a2c655d564a95e4ca1fe4603b39d7e7a4686446d9be">R3B3G2</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a0d31e9826f048e5fdacae2a2c655d564a988777bd9406d465bdf7d81a36b26749">RGB4</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a0d31e9826f048e5fdacae2a2c655d564a51e72bb0b91ea20485e3ad7657b9a60e">RGB5</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a0d31e9826f048e5fdacae2a2c655d564a3b73e4d15701467ed72f157ffaff680a">RGB565</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a0d31e9826f048e5fdacae2a2c655d564aa3ac59ae1fad21561752e23c2bebc6b8">RGB10</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a0d31e9826f048e5fdacae2a2c655d564ac65abdcc9466868b293bfb11179fedc5">RGB12</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a0d31e9826f048e5fdacae2a2c655d564ac749b8eee74e3b7b60f8774178537dea">R11FG11FB10F</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a0d31e9826f048e5fdacae2a2c655d564a02f40147ece0d4ef4c1ec76a56e22224">RGB9E5</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a0d31e9826f048e5fdacae2a2c655d564a1f3f09bca5728eb7af4ea263ae84b9f1">SRGB</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a0d31e9826f048e5fdacae2a2c655d564ab71c01d7fab5970416ff1c79c675dc15">SRGB8</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a0d31e9826f048e5fdacae2a2c655d564a6d3435115853ddb0d9c1711d182ad6ac">RGBA2</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a0d31e9826f048e5fdacae2a2c655d564ad0194ebb93fd86b15f194ef73f81a01f">RGBA4</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a0d31e9826f048e5fdacae2a2c655d564a145a041c8e2080c43fa129fb5b17d8be">RGB5A1</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a0d31e9826f048e5fdacae2a2c655d564a4cad8c5058101f0f527e306958b6641b">RGB10A2</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a0d31e9826f048e5fdacae2a2c655d564a1d8555f4846b8791e329e36dcd5239dc">RGB10A2UI</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a0d31e9826f048e5fdacae2a2c655d564afb9e3f60db71f694d22e9013646d38f5">RGBA12</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a0d31e9826f048e5fdacae2a2c655d564a5dfd728b3bee2ad053d22203c3e8f2b8">SRGBAlpha</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a0d31e9826f048e5fdacae2a2c655d564ad639700e92ceb4aaafdf02ebdb3e15a4">SRGB8Alpha8</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a0d31e9826f048e5fdacae2a2c655d564a625185c9ec2ed5f455d19f1ca6a00773">CompressedRed</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a0d31e9826f048e5fdacae2a2c655d564a772bc5e58449cef708b6156078f3f5d8">CompressedRG</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a0d31e9826f048e5fdacae2a2c655d564ad0031186aeaf9a67a1eeb17f56dce93b">CompressedRGB</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a0d31e9826f048e5fdacae2a2c655d564aa1adbdbb4c32dcd365caa018b1f4c2ab">CompressedRGBA</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a0d31e9826f048e5fdacae2a2c655d564aae5c87496dd401b101d970d2be2d675d">CompressedRedRgtc1</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a0d31e9826f048e5fdacae2a2c655d564aa00895171c7061e57b500fee14a937a8">CompressedRGRgtc2</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a0d31e9826f048e5fdacae2a2c655d564a1c0cc46455d26a44fb5bbfcc773e6caa">CompressedSignedRedRgtc1</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a0d31e9826f048e5fdacae2a2c655d564a7d767450de41e4ad6f8a95fb4515e161">CompressedSignedRGRgtc2</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a0d31e9826f048e5fdacae2a2c655d564a863402c422be61e85e34a2e554b0a63c">CompressedRGBBptcUnsignedFloat</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a0d31e9826f048e5fdacae2a2c655d564ab0ecb340d273932cde6de1fb444f3cb3">CompressedRGBBptcSignedFloat</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a0d31e9826f048e5fdacae2a2c655d564aa245d27842b07f4ae9516d04fde441d1">CompressedRGBABptcUnorm</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a0d31e9826f048e5fdacae2a2c655d564a366916eda1a3218ad315dde357e5204a">CompressedSRGBAlphaBptcUnorm</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a0d31e9826f048e5fdacae2a2c655d564a14250c0d7728ef90e996ae03bf7489fa">CompressedRGB8Etc2</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a0d31e9826f048e5fdacae2a2c655d564a95d73b2acfa5cd90584226c70269f2e8">CompressedSRGB8Etc2</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a0d31e9826f048e5fdacae2a2c655d564ade54b50cd1b16008d3a617f80a34e2eb">CompressedRGB8PunchthroughAlpha1Etc2</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a0d31e9826f048e5fdacae2a2c655d564a6c4a43ca22963e72ff03d842afe8a0a2">CompressedSRGB8PunchthroughAlpha1Etc2</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a0d31e9826f048e5fdacae2a2c655d564a922c03efed4659f37f28437176325647">CompressedRGBA8Etc2Eac</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a0d31e9826f048e5fdacae2a2c655d564a742b4f2e5cd4402729b02ec23a1025f9">CompressedSRGB8Alpha8Etc2Eac</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a0d31e9826f048e5fdacae2a2c655d564adb569da6b6f5e127591d8730ea79cb80">CompressedR11Eac</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a0d31e9826f048e5fdacae2a2c655d564a6806ab0fb22fda8987dc1c44a10c36ad">CompressedSignedR11Eac</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a0d31e9826f048e5fdacae2a2c655d564a45184ba1be0c480b35013d48e23474e6">CompressedRG11Eac</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a0d31e9826f048e5fdacae2a2c655d564a5243d34520a11c285cb37e5a5cffd122">CompressedSignedRG11Eac</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a0d31e9826f048e5fdacae2a2c655d564a85f12a3af9a3a4a4c39e15bc125705e2">CompressedRGBS3tcDxt1</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a0d31e9826f048e5fdacae2a2c655d564a05dd6df6676af88937f4dacc52fd7f6d">CompressedRGBAS3tcDxt1</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a0d31e9826f048e5fdacae2a2c655d564a414690e758599d93ae1083830f33b187">CompressedRGBAS3tcDxt3</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a0d31e9826f048e5fdacae2a2c655d564a3701300f3409e2b208ab0786ccf8a782">CompressedRGBAS3tcDxt5</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a0d31e9826f048e5fdacae2a2c655d564aa1ce82ea6c38485be618682112e539df">CompressedRGBAAstc4x4</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a0d31e9826f048e5fdacae2a2c655d564a28c4d91f38360c0d861795f0ef838681">CompressedSRGB8Alpha8Astc4x4</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a0d31e9826f048e5fdacae2a2c655d564ab0c113c2534fc0708128e5f7176dd70a">CompressedRGBAAstc5x4</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a0d31e9826f048e5fdacae2a2c655d564a51613f53b2a8518f5c88fea1162db2b2">CompressedSRGB8Alpha8Astc5x4</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a0d31e9826f048e5fdacae2a2c655d564ad69c5b046d1173bee3e3f037f0751e89">CompressedRGBAAstc5x5</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a0d31e9826f048e5fdacae2a2c655d564aa763331ac876a25410af5ca632b6db7d">CompressedSRGB8Alpha8Astc5x5</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a0d31e9826f048e5fdacae2a2c655d564ab2684ddc399d9e8dc07bcfaa0852546a">CompressedRGBAAstc6x5</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a0d31e9826f048e5fdacae2a2c655d564a18060e31caa5f53be3dd9d524ece7dfb">CompressedSRGB8Alpha8Astc6x5</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a0d31e9826f048e5fdacae2a2c655d564a84f136529809b4b46a0735c95cd1dcc1">CompressedRGBAAstc6x6</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a0d31e9826f048e5fdacae2a2c655d564a3635c9d4ed5d3e7c2911aacc8e3ba08f">CompressedSRGB8Alpha8Astc6x6</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a0d31e9826f048e5fdacae2a2c655d564a41e0cbb1620e2f5f0a37785cfae3b152">CompressedRGBAAstc8x5</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a0d31e9826f048e5fdacae2a2c655d564a64c722ef1f0d0a1e09ecedaa7b939067">CompressedSRGB8Alpha8Astc8x5</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a0d31e9826f048e5fdacae2a2c655d564ac2c952a6cdd1c104e808fa5ce5f5d43e">CompressedRGBAAstc8x6</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a0d31e9826f048e5fdacae2a2c655d564a350a4a5331d25e3ee726b841381ed9f8">CompressedSRGB8Alpha8Astc8x6</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a0d31e9826f048e5fdacae2a2c655d564ade4424b334ae908d6259c6c8137793c8">CompressedRGBAAstc8x8</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a0d31e9826f048e5fdacae2a2c655d564ab555414f12cc6348809920b4ae02ac2d">CompressedSRGB8Alpha8Astc8x8</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a0d31e9826f048e5fdacae2a2c655d564a1bd7a9fc8fbe546d83daa0c1b41cc9c4">CompressedRGBAAstc10x5</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a0d31e9826f048e5fdacae2a2c655d564a3710b3e0d2eceb116d22c776f4841020">CompressedSRGB8Alpha8Astc10x5</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a0d31e9826f048e5fdacae2a2c655d564ac0052d00bbb4992139980926903db7df">CompressedRGBAAstc10x6</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a0d31e9826f048e5fdacae2a2c655d564a9e81ac0b2ce7a2295475d2e60c80907a">CompressedSRGB8Alpha8Astc10x6</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a0d31e9826f048e5fdacae2a2c655d564abc1f2059e849224ea01d85db0048b4b8">CompressedRGBAAstc10x8</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a0d31e9826f048e5fdacae2a2c655d564aa7d98a3596e139da1d5e7ed2f9a2d3cf">CompressedSRGB8Alpha8Astc10x8</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a0d31e9826f048e5fdacae2a2c655d564a355d96c9193731337720859439453df9">CompressedRGBAAstc10x10</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a0d31e9826f048e5fdacae2a2c655d564ae8127849086ce85af225624ef25f19b4">CompressedSRGB8Alpha8Astc10x10</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a0d31e9826f048e5fdacae2a2c655d564a66524e68a55780a6f3457f20e8e6ace8">CompressedRGBAAstc12x10</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a0d31e9826f048e5fdacae2a2c655d564aad9de1fda6e81b47fe595f0377eaf688">CompressedSRGB8Alpha8Astc12x10</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a0d31e9826f048e5fdacae2a2c655d564adde421f8ef9da00a961c291fa112d226">CompressedRGBAAstc12x12</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a0d31e9826f048e5fdacae2a2c655d564a076dbe24a47429ccef59ae197475c50a">CompressedSRGB8Alpha8Astc12x12</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a0d31e9826f048e5fdacae2a2c655d564a19c8f1ee3a700e77e87053eee47f6bc8">DepthComponent</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a0d31e9826f048e5fdacae2a2c655d564ab5743b6194329afdf89a6a32bbcc4124">DepthComponent16</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a0d31e9826f048e5fdacae2a2c655d564aedf2b17fc7b220c3b855af306c9f409d">DepthComponent24</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a0d31e9826f048e5fdacae2a2c655d564a1f519142b59a9d4382c6aa004acd7dd2">DepthComponent32</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a0d31e9826f048e5fdacae2a2c655d564a9e1081f1bca10bb12b11b81c23ccbdb2">DepthComponent32F</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a0d31e9826f048e5fdacae2a2c655d564a08af7fbfd260214add2e402d8427f0a8">StencilIndex8</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a0d31e9826f048e5fdacae2a2c655d564a2fa8076285272883c91e14402975a441">DepthStencil</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a0d31e9826f048e5fdacae2a2c655d564a78181d4f5d4b30baefed6c0da0de894f">Depth24Stencil8</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a0d31e9826f048e5fdacae2a2c655d564abe0ddae1e70dc4233b16fc053a60e2fe">Depth32FStencil8</enumvalue>
    </member>
  </compound>
  <compound kind="file">
    <name>Atlas.h</name>
    <path>/home/mosra/Code/magnum/src/Magnum/TextureTools/</path>
    <filename>Atlas_8h</filename>
    <includes id="Magnum_8h" name="Magnum.h" local="yes" imported="no">Magnum/Magnum.h</includes>
    <includes id="Vector2_8h" name="Vector2.h" local="yes" imported="no">Magnum/Math/Vector2.h</includes>
    <namespace>Magnum</namespace>
    <namespace>Magnum::TextureTools</namespace>
    <member kind="function">
      <type>std::vector&lt; Range2Di &gt;</type>
      <name>atlas</name>
      <anchorfile>namespaceMagnum_1_1TextureTools.html</anchorfile>
      <anchor>af76cb9fcfc002d17f8ef57825015ba0e</anchor>
      <arglist>(const Vector2i &amp;atlasSize, const std::vector&lt; Vector2i &gt; &amp;sizes, const Vector2i &amp;padding=Vector2i())</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>DistanceField.h</name>
    <path>/home/mosra/Code/magnum/src/Magnum/TextureTools/</path>
    <filename>DistanceField_8h</filename>
    <includes id="Vector2_8h" name="Vector2.h" local="yes" imported="no">Magnum/Math/Vector2.h</includes>
    <includes id="Magnum_8h" name="Magnum.h" local="yes" imported="no">Magnum/Magnum.h</includes>
    <namespace>Magnum</namespace>
    <namespace>Magnum::TextureTools</namespace>
    <member kind="function">
      <type>void</type>
      <name>distanceField</name>
      <anchorfile>namespaceMagnum_1_1TextureTools.html</anchorfile>
      <anchor>a91c52a5c8cd23540f80e8b153f51caeb</anchor>
      <arglist>(Texture2D &amp;input, Texture2D &amp;output, const Range2Di &amp;rectangle, Int radius, const Vector2i &amp;imageSize=Vector2i())</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Timeline.h</name>
    <path>/home/mosra/Code/magnum/src/Magnum/</path>
    <filename>Timeline_8h</filename>
    <includes id="Types_8h" name="Types.h" local="yes" imported="no">Magnum/Types.h</includes>
    <class kind="class">Magnum::Timeline</class>
    <namespace>Magnum</namespace>
  </compound>
  <compound kind="file">
    <name>TimeQuery.h</name>
    <path>/home/mosra/Code/magnum/src/Magnum/</path>
    <filename>TimeQuery_8h</filename>
    <includes id="AbstractQuery_8h" name="AbstractQuery.h" local="yes" imported="no">Magnum/AbstractQuery.h</includes>
    <class kind="class">Magnum::TimeQuery</class>
    <namespace>Magnum</namespace>
  </compound>
  <compound kind="file">
    <name>AbstractImageConverter.h</name>
    <path>/home/mosra/Code/magnum/src/Magnum/Trade/</path>
    <filename>AbstractImageConverter_8h</filename>
    <includes id="Magnum_8h" name="Magnum.h" local="yes" imported="no">Magnum/Magnum.h</includes>
    <includes id="Trade_8h" name="Trade.h" local="yes" imported="no">Magnum/Trade/Trade.h</includes>
    <class kind="class">Magnum::Trade::AbstractImageConverter</class>
    <namespace>Magnum</namespace>
    <namespace>Magnum::Trade</namespace>
  </compound>
  <compound kind="file">
    <name>AbstractMaterialData.h</name>
    <path>/home/mosra/Code/magnum/src/Magnum/Trade/</path>
    <filename>AbstractMaterialData_8h</filename>
    <includes id="Magnum_8h" name="Magnum.h" local="yes" imported="no">Magnum/Magnum.h</includes>
    <class kind="class">Magnum::Trade::AbstractMaterialData</class>
    <namespace>Magnum</namespace>
    <namespace>Magnum::Trade</namespace>
    <member kind="enumeration">
      <type></type>
      <name>MaterialType</name>
      <anchorfile>namespaceMagnum_1_1Trade.html</anchorfile>
      <anchor>a9e426ccb00311a951abde7d18ace1b7e</anchor>
      <arglist></arglist>
      <enumvalue file="namespaceMagnum_1_1Trade.html" anchor="a9e426ccb00311a951abde7d18ace1b7ea568fb6d547b4449c90057f8d4f76a838">Phong</enumvalue>
    </member>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceMagnum_1_1Trade.html</anchorfile>
      <anchor>aa496c4bdc948dbfd58efa04b130f0f52</anchor>
      <arglist>(Debug &amp;debug, MaterialType value)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>CameraData.h</name>
    <path>/home/mosra/Code/magnum/src/Magnum/Trade/</path>
    <filename>CameraData_8h</filename>
    <includes id="Angle_8h" name="Angle.h" local="yes" imported="no">Magnum/Math/Angle.h</includes>
    <includes id="Magnum_8h" name="Magnum.h" local="yes" imported="no">Magnum/Magnum.h</includes>
    <class kind="class">Magnum::Trade::CameraData</class>
    <namespace>Magnum</namespace>
    <namespace>Magnum::Trade</namespace>
  </compound>
  <compound kind="file">
    <name>ImageData.h</name>
    <path>/home/mosra/Code/magnum/src/Magnum/Trade/</path>
    <filename>ImageData_8h</filename>
    <includes id="ImageView_8h" name="ImageView.h" local="yes" imported="no">Magnum/ImageView.h</includes>
    <class kind="class">Magnum::Trade::ImageData</class>
    <namespace>Magnum</namespace>
    <namespace>Magnum::Trade</namespace>
    <member kind="typedef">
      <type>ImageData&lt; 1 &gt;</type>
      <name>ImageData1D</name>
      <anchorfile>namespaceMagnum_1_1Trade.html</anchorfile>
      <anchor>a000f4964aae4b1a8f17a0f22709c6b12</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>ImageData&lt; 2 &gt;</type>
      <name>ImageData2D</name>
      <anchorfile>namespaceMagnum_1_1Trade.html</anchorfile>
      <anchor>a45555303e00cf9d64cf942326bc6cbf6</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>ImageData&lt; 3 &gt;</type>
      <name>ImageData3D</name>
      <anchorfile>namespaceMagnum_1_1Trade.html</anchorfile>
      <anchor>a1b42de4e1c79ca544279bc36da5739d1</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>LightData.h</name>
    <path>/home/mosra/Code/magnum/src/Magnum/Trade/</path>
    <filename>LightData_8h</filename>
    <includes id="Magnum_8h" name="Magnum.h" local="yes" imported="no">Magnum/Magnum.h</includes>
    <includes id="Math_2Color_8h" name="Color.h" local="yes" imported="no">Magnum/Math/Color.h</includes>
    <class kind="class">Magnum::Trade::LightData</class>
    <namespace>Magnum</namespace>
    <namespace>Magnum::Trade</namespace>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceMagnum_1_1Trade.html</anchorfile>
      <anchor>a5d80f322fdf875dc5083443fad96e23c</anchor>
      <arglist>(Debug &amp;debug, LightData::Type value)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MeshData2D.h</name>
    <path>/home/mosra/Code/magnum/src/Magnum/Trade/</path>
    <filename>MeshData2D_8h</filename>
    <includes id="Magnum_8h" name="Magnum.h" local="yes" imported="no">Magnum/Magnum.h</includes>
    <class kind="class">Magnum::Trade::MeshData2D</class>
    <namespace>Magnum</namespace>
    <namespace>Magnum::Trade</namespace>
  </compound>
  <compound kind="file">
    <name>MeshData3D.h</name>
    <path>/home/mosra/Code/magnum/src/Magnum/Trade/</path>
    <filename>MeshData3D_8h</filename>
    <includes id="Magnum_8h" name="Magnum.h" local="yes" imported="no">Magnum/Magnum.h</includes>
    <class kind="class">Magnum::Trade::MeshData3D</class>
    <namespace>Magnum</namespace>
    <namespace>Magnum::Trade</namespace>
  </compound>
  <compound kind="file">
    <name>MeshObjectData2D.h</name>
    <path>/home/mosra/Code/magnum/src/Magnum/Trade/</path>
    <filename>MeshObjectData2D_8h</filename>
    <includes id="ObjectData2D_8h" name="ObjectData2D.h" local="yes" imported="no">Magnum/Trade/ObjectData2D.h</includes>
    <class kind="class">Magnum::Trade::MeshObjectData2D</class>
    <namespace>Magnum</namespace>
    <namespace>Magnum::Trade</namespace>
  </compound>
  <compound kind="file">
    <name>MeshObjectData3D.h</name>
    <path>/home/mosra/Code/magnum/src/Magnum/Trade/</path>
    <filename>MeshObjectData3D_8h</filename>
    <includes id="ObjectData3D_8h" name="ObjectData3D.h" local="yes" imported="no">Magnum/Trade/ObjectData3D.h</includes>
    <class kind="class">Magnum::Trade::MeshObjectData3D</class>
    <namespace>Magnum</namespace>
    <namespace>Magnum::Trade</namespace>
  </compound>
  <compound kind="file">
    <name>ObjectData2D.h</name>
    <path>/home/mosra/Code/magnum/src/Magnum/Trade/</path>
    <filename>ObjectData2D_8h</filename>
    <includes id="Magnum_8h" name="Magnum.h" local="yes" imported="no">Magnum/Magnum.h</includes>
    <includes id="Matrix3_8h" name="Matrix3.h" local="yes" imported="no">Magnum/Math/Matrix3.h</includes>
    <class kind="class">Magnum::Trade::ObjectData2D</class>
    <namespace>Magnum</namespace>
    <namespace>Magnum::Trade</namespace>
    <member kind="enumeration">
      <type></type>
      <name>ObjectInstanceType2D</name>
      <anchorfile>namespaceMagnum_1_1Trade.html</anchorfile>
      <anchor>aa708f15a256073a2edc089736614fb55</anchor>
      <arglist></arglist>
      <enumvalue file="namespaceMagnum_1_1Trade.html" anchor="aa708f15a256073a2edc089736614fb55a967d35e40f3f95b1f538bd248640bf3b">Camera</enumvalue>
      <enumvalue file="namespaceMagnum_1_1Trade.html" anchor="aa708f15a256073a2edc089736614fb55a710fdb6adb881b408116ef95335e1961">Mesh</enumvalue>
      <enumvalue file="namespaceMagnum_1_1Trade.html" anchor="aa708f15a256073a2edc089736614fb55ace2c8aed9c2fa0cfbed56cbda4d8bf07">Empty</enumvalue>
    </member>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceMagnum_1_1Trade.html</anchorfile>
      <anchor>ae19c01b4e1bd6788833d78b25099ac94</anchor>
      <arglist>(Debug &amp;debug, ObjectInstanceType2D value)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>ObjectData3D.h</name>
    <path>/home/mosra/Code/magnum/src/Magnum/Trade/</path>
    <filename>ObjectData3D_8h</filename>
    <includes id="Magnum_8h" name="Magnum.h" local="yes" imported="no">Magnum/Magnum.h</includes>
    <includes id="Matrix4_8h" name="Matrix4.h" local="yes" imported="no">Magnum/Math/Matrix4.h</includes>
    <class kind="class">Magnum::Trade::ObjectData3D</class>
    <namespace>Magnum</namespace>
    <namespace>Magnum::Trade</namespace>
    <member kind="enumeration">
      <type></type>
      <name>ObjectInstanceType3D</name>
      <anchorfile>namespaceMagnum_1_1Trade.html</anchorfile>
      <anchor>a69823207d6668a086926bcdc5d1f4085</anchor>
      <arglist></arglist>
      <enumvalue file="namespaceMagnum_1_1Trade.html" anchor="a69823207d6668a086926bcdc5d1f4085a967d35e40f3f95b1f538bd248640bf3b">Camera</enumvalue>
      <enumvalue file="namespaceMagnum_1_1Trade.html" anchor="a69823207d6668a086926bcdc5d1f4085a9914a0ce04a7b7b6a8e39bec55064b82">Light</enumvalue>
      <enumvalue file="namespaceMagnum_1_1Trade.html" anchor="a69823207d6668a086926bcdc5d1f4085a710fdb6adb881b408116ef95335e1961">Mesh</enumvalue>
      <enumvalue file="namespaceMagnum_1_1Trade.html" anchor="a69823207d6668a086926bcdc5d1f4085ace2c8aed9c2fa0cfbed56cbda4d8bf07">Empty</enumvalue>
    </member>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceMagnum_1_1Trade.html</anchorfile>
      <anchor>ab281f59369e4880eeea1a482fd5eefa6</anchor>
      <arglist>(Debug &amp;debug, ObjectInstanceType3D value)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>PhongMaterialData.h</name>
    <path>/home/mosra/Code/magnum/src/Magnum/Trade/</path>
    <filename>PhongMaterialData_8h</filename>
    <includes id="Magnum_8h" name="Magnum.h" local="yes" imported="no">Magnum/Magnum.h</includes>
    <includes id="Math_2Color_8h" name="Color.h" local="yes" imported="no">Magnum/Math/Color.h</includes>
    <includes id="AbstractMaterialData_8h" name="AbstractMaterialData.h" local="yes" imported="no">Magnum/Trade/AbstractMaterialData.h</includes>
    <class kind="class">Magnum::Trade::PhongMaterialData</class>
    <namespace>Magnum</namespace>
    <namespace>Magnum::Trade</namespace>
  </compound>
  <compound kind="file">
    <name>SceneData.h</name>
    <path>/home/mosra/Code/magnum/src/Magnum/Trade/</path>
    <filename>SceneData_8h</filename>
    <includes id="Types_8h" name="Types.h" local="yes" imported="no">Magnum/Types.h</includes>
    <class kind="class">Magnum::Trade::SceneData</class>
    <namespace>Magnum</namespace>
    <namespace>Magnum::Trade</namespace>
  </compound>
  <compound kind="file">
    <name>TextureData.h</name>
    <path>/home/mosra/Code/magnum/src/Magnum/Trade/</path>
    <filename>TextureData_8h</filename>
    <includes id="Array_8h" name="Array.h" local="yes" imported="no">Magnum/Array.h</includes>
    <includes id="Sampler_8h" name="Sampler.h" local="yes" imported="no">Magnum/Sampler.h</includes>
    <class kind="class">Magnum::Trade::TextureData</class>
    <namespace>Magnum</namespace>
    <namespace>Magnum::Trade</namespace>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceMagnum_1_1Trade.html</anchorfile>
      <anchor>a5fb39c5f1a765358446a9ef3caa31682</anchor>
      <arglist>(Debug &amp;debug, TextureData::Type value)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Trade.h</name>
    <path>/home/mosra/Code/magnum/src/Magnum/Trade/</path>
    <filename>Trade_8h</filename>
    <includes id="Types_8h" name="Types.h" local="yes" imported="no">Magnum/Types.h</includes>
    <namespace>Magnum</namespace>
    <namespace>Magnum::Trade</namespace>
  </compound>
  <compound kind="file">
    <name>TransformFeedback.h</name>
    <path>/home/mosra/Code/magnum/src/Magnum/</path>
    <filename>TransformFeedback_8h</filename>
    <includes id="AbstractObject_8h" name="AbstractObject.h" local="yes" imported="no">Magnum/AbstractObject.h</includes>
    <includes id="Tags_8h" name="Tags.h" local="yes" imported="no">Magnum/Tags.h</includes>
    <class kind="class">Magnum::TransformFeedback</class>
    <namespace>Magnum</namespace>
  </compound>
  <compound kind="file">
    <name>Types.h</name>
    <path>/home/mosra/Code/magnum/src/Magnum/</path>
    <filename>Types_8h</filename>
    <namespace>Magnum</namespace>
  </compound>
  <compound kind="file">
    <name>Version.h</name>
    <path>/home/mosra/Code/magnum/src/Magnum/</path>
    <filename>Version_8h</filename>
    <includes id="Magnum_8h" name="Magnum.h" local="yes" imported="no">Magnum/Magnum.h</includes>
    <namespace>Magnum</namespace>
    <member kind="enumeration">
      <type></type>
      <name>Version</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>aa110d058c14fad83dd23b1986aa9f5f1</anchor>
      <arglist></arglist>
      <enumvalue file="namespaceMagnum.html" anchor="aa110d058c14fad83dd23b1986aa9f5f1a6adf97f83acf6453d4a6a4b1070f3754">None</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="aa110d058c14fad83dd23b1986aa9f5f1a6f87fc2156f6b7da4cafba3714fb3c09">GL210</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="aa110d058c14fad83dd23b1986aa9f5f1ae32fe21dd789983eb99064a11c84c00a">GL300</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="aa110d058c14fad83dd23b1986aa9f5f1a0631a35644b3a4a74bec3151f6c9b031">GL310</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="aa110d058c14fad83dd23b1986aa9f5f1a2cd64d0051d11e3c1442d67813886d86">GL320</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="aa110d058c14fad83dd23b1986aa9f5f1ad957a7f239a0bf7df56130c678f6396c">GL330</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="aa110d058c14fad83dd23b1986aa9f5f1a369c4ba0fc139d909ee94a5cc4ddb531">GL400</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="aa110d058c14fad83dd23b1986aa9f5f1ab81b89342b5f32260e52b2105382a298">GL410</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="aa110d058c14fad83dd23b1986aa9f5f1a30a393172e9cfa2c36ba8c6036692fad">GL420</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="aa110d058c14fad83dd23b1986aa9f5f1aa895d16b1ad08894fb826ac79f710f3c">GL430</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="aa110d058c14fad83dd23b1986aa9f5f1ac616f63c50e83d49ca399eb7a5252ca4">GL440</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="aa110d058c14fad83dd23b1986aa9f5f1a232d8bc0d273cd67fa1d295fc3c8a944">GL450</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="aa110d058c14fad83dd23b1986aa9f5f1a2d3e1e712d28ed030790b46222941235">GLES200</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="aa110d058c14fad83dd23b1986aa9f5f1a94d9b97253a36a124f91d9e70153e989">GLES300</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="aa110d058c14fad83dd23b1986aa9f5f1aeee309b0c4a4eddcdaed74228d9443c2">GLES310</enumvalue>
    </member>
    <member kind="function">
      <type>constexpr Version</type>
      <name>version</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a95f280589df516031693cb2d11d52c06</anchor>
      <arglist>(Int major, Int minor)</arglist>
    </member>
    <member kind="function">
      <type>std::pair&lt; Int, Int &gt;</type>
      <name>version</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a89df9b2d0140798498ddc59410e4e00e</anchor>
      <arglist>(Version version)</arglist>
    </member>
    <member kind="function">
      <type>constexpr bool</type>
      <name>isVersionES</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>aaab44a279254190c51a48982998b7e03</anchor>
      <arglist>(Version version)</arglist>
    </member>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>adb0ac5462046fffd543c86ce6d595463</anchor>
      <arglist>(Debug &amp;debug, Version value)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MagnumFont.h</name>
    <path>/home/mosra/Code/magnum/src/MagnumPlugins/MagnumFont/</path>
    <filename>MagnumFont_8h</filename>
    <includes id="AbstractFont_8h" name="AbstractFont.h" local="yes" imported="no">Magnum/Text/AbstractFont.h</includes>
    <includes id="Trade_8h" name="Trade.h" local="yes" imported="no">Magnum/Trade/Trade.h</includes>
    <class kind="class">Magnum::Text::MagnumFont</class>
    <namespace>Magnum</namespace>
    <namespace>Magnum::Text</namespace>
  </compound>
  <compound kind="file">
    <name>MagnumFontConverter.h</name>
    <path>/home/mosra/Code/magnum/src/MagnumPlugins/MagnumFontConverter/</path>
    <filename>MagnumFontConverter_8h</filename>
    <includes id="AbstractFontConverter_8h" name="AbstractFontConverter.h" local="yes" imported="no">Magnum/Text/AbstractFontConverter.h</includes>
    <class kind="class">Magnum::Text::MagnumFontConverter</class>
    <namespace>Magnum</namespace>
    <namespace>Magnum::Text</namespace>
  </compound>
  <compound kind="file">
    <name>ObjImporter.h</name>
    <path>/home/mosra/Code/magnum/src/MagnumPlugins/ObjImporter/</path>
    <filename>ObjImporter_8h</filename>
    <includes id="Trade_2AbstractImporter_8h" name="AbstractImporter.h" local="yes" imported="no">Magnum/Trade/AbstractImporter.h</includes>
    <class kind="class">Magnum::Trade::ObjImporter</class>
    <namespace>Magnum</namespace>
    <namespace>Magnum::Trade</namespace>
  </compound>
  <compound kind="file">
    <name>TgaImageConverter.h</name>
    <path>/home/mosra/Code/magnum/src/MagnumPlugins/TgaImageConverter/</path>
    <filename>TgaImageConverter_8h</filename>
    <includes id="AbstractImageConverter_8h" name="AbstractImageConverter.h" local="yes" imported="no">Magnum/Trade/AbstractImageConverter.h</includes>
    <class kind="class">Magnum::Trade::TgaImageConverter</class>
    <namespace>Magnum</namespace>
    <namespace>Magnum::Trade</namespace>
  </compound>
  <compound kind="file">
    <name>TgaHeader.h</name>
    <path>/home/mosra/Code/magnum/src/MagnumPlugins/TgaImporter/</path>
    <filename>TgaHeader_8h</filename>
    <includes id="Types_8h" name="Types.h" local="yes" imported="no">Magnum/Types.h</includes>
    <class kind="struct">Magnum::Trade::TgaHeader</class>
    <namespace>Magnum</namespace>
    <namespace>Magnum::Trade</namespace>
  </compound>
  <compound kind="file">
    <name>TgaImporter.h</name>
    <path>/home/mosra/Code/magnum/src/MagnumPlugins/TgaImporter/</path>
    <filename>TgaImporter_8h</filename>
    <includes id="Trade_2AbstractImporter_8h" name="AbstractImporter.h" local="yes" imported="no">Magnum/Trade/AbstractImporter.h</includes>
    <class kind="class">Magnum::Trade::TgaImporter</class>
    <namespace>Magnum</namespace>
    <namespace>Magnum::Trade</namespace>
  </compound>
  <compound kind="file">
    <name>WavHeader.h</name>
    <path>/home/mosra/Code/magnum/src/MagnumPlugins/WavAudioImporter/</path>
    <filename>WavHeader_8h</filename>
    <includes id="WavImporter_8h" name="WavImporter.h" local="yes" imported="no">MagnumPlugins/WavAudioImporter/WavImporter.h</includes>
    <class kind="struct">Magnum::Audio::RiffChunk</class>
    <class kind="struct">Magnum::Audio::WavHeaderChunk</class>
    <class kind="struct">Magnum::Audio::WavFormatChunk</class>
    <namespace>Magnum</namespace>
    <namespace>Magnum::Audio</namespace>
    <member kind="enumeration">
      <type></type>
      <name>WavAudioFormat</name>
      <anchorfile>namespaceMagnum_1_1Audio.html</anchorfile>
      <anchor>a4815cf29b938deb1289a7b3da48d9a32</anchor>
      <arglist></arglist>
      <enumvalue file="namespaceMagnum_1_1Audio.html" anchor="a4815cf29b938deb1289a7b3da48d9a32a88183b946cc5f0e8c96b2e66e1c74a7e">Unknown</enumvalue>
      <enumvalue file="namespaceMagnum_1_1Audio.html" anchor="a4815cf29b938deb1289a7b3da48d9a32a52461f094ac3952b9f67ec9562fd69d3">Pcm</enumvalue>
      <enumvalue file="namespaceMagnum_1_1Audio.html" anchor="a4815cf29b938deb1289a7b3da48d9a32a10ffce258b606414a30069a7385035a5">AdPcm</enumvalue>
      <enumvalue file="namespaceMagnum_1_1Audio.html" anchor="a4815cf29b938deb1289a7b3da48d9a32a9dcf79cfa6b3d22821e3992bcbf96354">IeeeFloat</enumvalue>
      <enumvalue file="namespaceMagnum_1_1Audio.html" anchor="a4815cf29b938deb1289a7b3da48d9a32aabd77aee2c10d743732ccff67c190069">ALaw</enumvalue>
      <enumvalue file="namespaceMagnum_1_1Audio.html" anchor="a4815cf29b938deb1289a7b3da48d9a32a2c93ec3305b0f0862cf45521ee021dcc">MuLaw</enumvalue>
      <enumvalue file="namespaceMagnum_1_1Audio.html" anchor="a4815cf29b938deb1289a7b3da48d9a32acb9e3624404af6e2ec52e3a39d5358a7">Extensible</enumvalue>
    </member>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceMagnum_1_1Audio.html</anchorfile>
      <anchor>a6dbcdc8c1c4e6d46220e4475b66d3bdb</anchor>
      <arglist>(Debug &amp;debug, WavAudioFormat value)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>WavImporter.h</name>
    <path>/home/mosra/Code/magnum/src/MagnumPlugins/WavAudioImporter/</path>
    <filename>WavImporter_8h</filename>
    <includes id="Audio_2AbstractImporter_8h" name="AbstractImporter.h" local="yes" imported="no">Magnum/Audio/AbstractImporter.h</includes>
    <class kind="class">Magnum::Audio::WavImporter</class>
    <namespace>Magnum</namespace>
    <namespace>Magnum::Audio</namespace>
  </compound>
  <compound kind="class">
    <name>AbstractBasicTranslationRotation3D&lt; btScalar &gt;</name>
    <filename>classMagnum_1_1SceneGraph_1_1AbstractBasicTranslationRotation3D.html</filename>
    <base>Magnum::SceneGraph::AbstractTranslation</base>
    <member kind="function">
      <type>AbstractBasicTranslationRotation3D&lt; btScalar &gt; &amp;</type>
      <name>rotate</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1AbstractBasicTranslationRotation3D.html</anchorfile>
      <anchor>a0bd51880d3a81804056476390a0a6107</anchor>
      <arglist>(Math::Rad&lt; btScalar &gt; angle, const Math::Vector3&lt; btScalar &gt; &amp;normalizedAxis)</arglist>
    </member>
    <member kind="function">
      <type>AbstractBasicTranslationRotation3D&lt; btScalar &gt; &amp;</type>
      <name>rotate</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1AbstractBasicTranslationRotation3D.html</anchorfile>
      <anchor>a2d2398d9b6c1bc62bd17025cfa25923d</anchor>
      <arglist>(Math::Rad&lt; btScalar &gt; angle, const Math::Vector3&lt; btScalar &gt; &amp;normalizedAxis, TransformationType type)</arglist>
    </member>
    <member kind="function">
      <type>AbstractBasicTranslationRotation3D&lt; btScalar &gt; &amp;</type>
      <name>rotateLocal</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1AbstractBasicTranslationRotation3D.html</anchorfile>
      <anchor>a82e9eb5eef081b6c8456185c0f3a2cf9</anchor>
      <arglist>(Math::Rad&lt; btScalar &gt; angle, const Math::Vector3&lt; btScalar &gt; &amp;normalizedAxis)</arglist>
    </member>
    <member kind="function">
      <type>AbstractBasicTranslationRotation3D&lt; btScalar &gt; &amp;</type>
      <name>rotateX</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1AbstractBasicTranslationRotation3D.html</anchorfile>
      <anchor>a64f7281a7cf5a346bdd17c361462149a</anchor>
      <arglist>(Math::Rad&lt; btScalar &gt; angle)</arglist>
    </member>
    <member kind="function">
      <type>AbstractBasicTranslationRotation3D&lt; btScalar &gt; &amp;</type>
      <name>rotateX</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1AbstractBasicTranslationRotation3D.html</anchorfile>
      <anchor>a2cca30e9632d9d56b71de76b13df47b7</anchor>
      <arglist>(Math::Rad&lt; btScalar &gt; angle, TransformationType type)</arglist>
    </member>
    <member kind="function">
      <type>AbstractBasicTranslationRotation3D&lt; btScalar &gt; &amp;</type>
      <name>rotateXLocal</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1AbstractBasicTranslationRotation3D.html</anchorfile>
      <anchor>aa474a071ab087ea66f66e05534467af2</anchor>
      <arglist>(Math::Rad&lt; btScalar &gt; angle)</arglist>
    </member>
    <member kind="function">
      <type>AbstractBasicTranslationRotation3D&lt; btScalar &gt; &amp;</type>
      <name>rotateY</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1AbstractBasicTranslationRotation3D.html</anchorfile>
      <anchor>a173e0633663b8b735042b2937e12b0c3</anchor>
      <arglist>(Math::Rad&lt; btScalar &gt; angle)</arglist>
    </member>
    <member kind="function">
      <type>AbstractBasicTranslationRotation3D&lt; btScalar &gt; &amp;</type>
      <name>rotateY</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1AbstractBasicTranslationRotation3D.html</anchorfile>
      <anchor>a36d705dcfbc546dd79791373a5bdd848</anchor>
      <arglist>(Math::Rad&lt; btScalar &gt; angle, TransformationType type)</arglist>
    </member>
    <member kind="function">
      <type>AbstractBasicTranslationRotation3D&lt; btScalar &gt; &amp;</type>
      <name>rotateYLocal</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1AbstractBasicTranslationRotation3D.html</anchorfile>
      <anchor>ad80f968e497178612267004c0873235b</anchor>
      <arglist>(Math::Rad&lt; btScalar &gt; angle)</arglist>
    </member>
    <member kind="function">
      <type>AbstractBasicTranslationRotation3D&lt; btScalar &gt; &amp;</type>
      <name>rotateZ</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1AbstractBasicTranslationRotation3D.html</anchorfile>
      <anchor>a3d8f9942fcba8fb49ea2ea7d928d6422</anchor>
      <arglist>(Math::Rad&lt; btScalar &gt; angle)</arglist>
    </member>
    <member kind="function">
      <type>AbstractBasicTranslationRotation3D&lt; btScalar &gt; &amp;</type>
      <name>rotateZ</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1AbstractBasicTranslationRotation3D.html</anchorfile>
      <anchor>aed51880474fd556821f99231e49b8bc6</anchor>
      <arglist>(Math::Rad&lt; btScalar &gt; angle, TransformationType type)</arglist>
    </member>
    <member kind="function">
      <type>AbstractBasicTranslationRotation3D&lt; btScalar &gt; &amp;</type>
      <name>rotateZLocal</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1AbstractBasicTranslationRotation3D.html</anchorfile>
      <anchor>a82fe5b472338a31166abdbcd47e2bd5e</anchor>
      <arglist>(Math::Rad&lt; btScalar &gt; angle)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual void</type>
      <name>doRotate</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1AbstractBasicTranslationRotation3D.html</anchorfile>
      <anchor>ad0a53ace7dace831a04645b506e38b3b</anchor>
      <arglist>(Math::Rad&lt; btScalar &gt; angle, const Math::Vector3&lt; btScalar &gt; &amp;normalizedAxis)=0</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual void</type>
      <name>doRotateLocal</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1AbstractBasicTranslationRotation3D.html</anchorfile>
      <anchor>ad1fd68194dd06f6eca323ccc01356914</anchor>
      <arglist>(Math::Rad&lt; btScalar &gt; angle, const Math::Vector3&lt; btScalar &gt; &amp;normalizedAxis)=0</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>doRotateX</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1AbstractBasicTranslationRotation3D.html</anchorfile>
      <anchor>ad1c6934dbd6184e051cdf68ecc7bff9d</anchor>
      <arglist>(Math::Rad&lt; btScalar &gt; angle)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>doRotateXLocal</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1AbstractBasicTranslationRotation3D.html</anchorfile>
      <anchor>ae178eb9da782ad4dd49dfae458919c65</anchor>
      <arglist>(Math::Rad&lt; btScalar &gt; angle)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>doRotateY</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1AbstractBasicTranslationRotation3D.html</anchorfile>
      <anchor>a5029eaa35ec05d318f49af5aa7226494</anchor>
      <arglist>(Math::Rad&lt; btScalar &gt; angle)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>doRotateYLocal</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1AbstractBasicTranslationRotation3D.html</anchorfile>
      <anchor>a731255196c113375304ac8f668da2efe</anchor>
      <arglist>(Math::Rad&lt; btScalar &gt; angle)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>doRotateZ</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1AbstractBasicTranslationRotation3D.html</anchorfile>
      <anchor>a87ca173ab4afe918be59544ca749d41d</anchor>
      <arglist>(Math::Rad&lt; btScalar &gt; angle)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>doRotateZLocal</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1AbstractBasicTranslationRotation3D.html</anchorfile>
      <anchor>aa72727d90a1e236694992d65c6f88012</anchor>
      <arglist>(Math::Rad&lt; btScalar &gt; angle)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>AbstractFeature&lt; dimensions, Float &gt;</name>
    <filename>classMagnum_1_1SceneGraph_1_1AbstractFeature.html</filename>
    <member kind="function">
      <type></type>
      <name>AbstractFeature</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1AbstractFeature.html</anchorfile>
      <anchor>a78a530462af23b21680c6aa75685c252</anchor>
      <arglist>(AbstractObject&lt; dimensions, Float &gt; &amp;object)</arglist>
    </member>
    <member kind="function">
      <type>AbstractObject&lt; dimensions, Float &gt; &amp;</type>
      <name>object</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1AbstractFeature.html</anchorfile>
      <anchor>adc44a031112415d9cd010380fc670b6f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const AbstractObject&lt; dimensions, Float &gt; &amp;</type>
      <name>object</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1AbstractFeature.html</anchorfile>
      <anchor>a525e96b63f8e0ad224f7d8f9ed7059cb</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>AbstractFeature&lt; dimensions, Float &gt; *</type>
      <name>previousFeature</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1AbstractFeature.html</anchorfile>
      <anchor>abe61d4c55eda93fdb415a3734b9a45d4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const AbstractFeature&lt; dimensions, Float &gt; *</type>
      <name>previousFeature</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1AbstractFeature.html</anchorfile>
      <anchor>a76aea9de17b4af7d0e8d5b9452d03677</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>AbstractFeature&lt; dimensions, Float &gt; *</type>
      <name>nextFeature</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1AbstractFeature.html</anchorfile>
      <anchor>a1647868b435f6b609f26bccecf38194a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const AbstractFeature&lt; dimensions, Float &gt; *</type>
      <name>nextFeature</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1AbstractFeature.html</anchorfile>
      <anchor>ab4fd5c13cf364305908a4809f412eab2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>CachedTransformations</type>
      <name>cachedTransformations</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1AbstractFeature.html</anchorfile>
      <anchor>ae9738f358e3822026145969b2f76dbe0</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>setCachedTransformations</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1AbstractFeature.html</anchorfile>
      <anchor>a4b357ec06a582d0eef270eca88134a33</anchor>
      <arglist>(CachedTransformations transformations)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>markDirty</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1AbstractFeature.html</anchorfile>
      <anchor>af0c9721f8f2614db3364575d58695263</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>clean</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1AbstractFeature.html</anchorfile>
      <anchor>ac7f9f08cd976bc728589cc5eb607b814</anchor>
      <arglist>(const MatrixTypeFor&lt; dimensions, Float &gt; &amp;absoluteTransformationMatrix)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>cleanInverted</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1AbstractFeature.html</anchorfile>
      <anchor>a38a4e3c18ff8a2636a533af17f6f79db</anchor>
      <arglist>(const MatrixTypeFor&lt; dimensions, Float &gt; &amp;invertedAbsoluteTransformationMatrix)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>AbstractFeatureGroup&lt; dimensions, Float &gt;</name>
    <filename>classMagnum_1_1SceneGraph_1_1AbstractFeatureGroup.html</filename>
  </compound>
  <compound kind="class">
    <name>AbstractGroupedFeature&lt; dimensions, AbstractShape&lt; dimensions &gt;, Float &gt;</name>
    <filename>classMagnum_1_1SceneGraph_1_1AbstractGroupedFeature.html</filename>
    <base>AbstractFeature&lt; dimensions, Float &gt;</base>
    <member kind="function">
      <type></type>
      <name>AbstractGroupedFeature</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1AbstractGroupedFeature.html</anchorfile>
      <anchor>a2c0d4b144aea6e54c7a12fb0a8965827</anchor>
      <arglist>(AbstractObject&lt; dimensions, Float &gt; &amp;object, FeatureGroup&lt; dimensions, AbstractShape&lt; dimensions &gt;, Float &gt; *group=nullptr)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~AbstractGroupedFeature</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1AbstractGroupedFeature.html</anchorfile>
      <anchor>ad05374ec9886805cd53d6f32f0a2dedd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>FeatureGroup&lt; dimensions, AbstractShape&lt; dimensions &gt;, Float &gt; *</type>
      <name>group</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1AbstractGroupedFeature.html</anchorfile>
      <anchor>a670e9a5ed8e81ed9ea5b819e3af01ee6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const FeatureGroup&lt; dimensions, AbstractShape&lt; dimensions &gt;, Float &gt; *</type>
      <name>group</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1AbstractGroupedFeature.html</anchorfile>
      <anchor>aef1a64d67e5ca02b3424cd380b398fb6</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>AbstractGroupedFeature&lt; dimensions, Animable&lt; dimensions, T &gt;, T &gt;</name>
    <filename>classMagnum_1_1SceneGraph_1_1AbstractGroupedFeature.html</filename>
    <base>Magnum::SceneGraph::AbstractFeature</base>
    <member kind="function">
      <type></type>
      <name>AbstractGroupedFeature</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1AbstractGroupedFeature.html</anchorfile>
      <anchor>a2c0d4b144aea6e54c7a12fb0a8965827</anchor>
      <arglist>(AbstractObject&lt; dimensions, T &gt; &amp;object, FeatureGroup&lt; dimensions, Animable&lt; dimensions, T &gt;, T &gt; *group=nullptr)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~AbstractGroupedFeature</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1AbstractGroupedFeature.html</anchorfile>
      <anchor>ad05374ec9886805cd53d6f32f0a2dedd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>FeatureGroup&lt; dimensions, Animable&lt; dimensions, T &gt;, T &gt; *</type>
      <name>group</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1AbstractGroupedFeature.html</anchorfile>
      <anchor>a670e9a5ed8e81ed9ea5b819e3af01ee6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const FeatureGroup&lt; dimensions, Animable&lt; dimensions, T &gt;, T &gt; *</type>
      <name>group</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1AbstractGroupedFeature.html</anchorfile>
      <anchor>aef1a64d67e5ca02b3424cd380b398fb6</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>AbstractGroupedFeature&lt; dimensions, Drawable&lt; dimensions, Float &gt;, Float &gt;</name>
    <filename>classMagnum_1_1SceneGraph_1_1AbstractGroupedFeature.html</filename>
    <base>AbstractFeature&lt; dimensions, Float &gt;</base>
    <member kind="function">
      <type></type>
      <name>AbstractGroupedFeature</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1AbstractGroupedFeature.html</anchorfile>
      <anchor>a2c0d4b144aea6e54c7a12fb0a8965827</anchor>
      <arglist>(AbstractObject&lt; dimensions, Float &gt; &amp;object, FeatureGroup&lt; dimensions, Drawable&lt; dimensions, Float &gt;, Float &gt; *group=nullptr)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~AbstractGroupedFeature</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1AbstractGroupedFeature.html</anchorfile>
      <anchor>ad05374ec9886805cd53d6f32f0a2dedd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>FeatureGroup&lt; dimensions, Drawable&lt; dimensions, Float &gt;, Float &gt; *</type>
      <name>group</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1AbstractGroupedFeature.html</anchorfile>
      <anchor>a670e9a5ed8e81ed9ea5b819e3af01ee6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const FeatureGroup&lt; dimensions, Drawable&lt; dimensions, Float &gt;, Float &gt; *</type>
      <name>group</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1AbstractGroupedFeature.html</anchorfile>
      <anchor>aef1a64d67e5ca02b3424cd380b398fb6</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>AbstractGroupedFeature&lt; dimensions, Drawable&lt; dimensions, T &gt;, T &gt;</name>
    <filename>classMagnum_1_1SceneGraph_1_1AbstractGroupedFeature.html</filename>
    <base>Magnum::SceneGraph::AbstractFeature</base>
    <member kind="function">
      <type></type>
      <name>AbstractGroupedFeature</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1AbstractGroupedFeature.html</anchorfile>
      <anchor>a2c0d4b144aea6e54c7a12fb0a8965827</anchor>
      <arglist>(AbstractObject&lt; dimensions, T &gt; &amp;object, FeatureGroup&lt; dimensions, Drawable&lt; dimensions, T &gt;, T &gt; *group=nullptr)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~AbstractGroupedFeature</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1AbstractGroupedFeature.html</anchorfile>
      <anchor>ad05374ec9886805cd53d6f32f0a2dedd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>FeatureGroup&lt; dimensions, Drawable&lt; dimensions, T &gt;, T &gt; *</type>
      <name>group</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1AbstractGroupedFeature.html</anchorfile>
      <anchor>a670e9a5ed8e81ed9ea5b819e3af01ee6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const FeatureGroup&lt; dimensions, Drawable&lt; dimensions, T &gt;, T &gt; *</type>
      <name>group</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1AbstractGroupedFeature.html</anchorfile>
      <anchor>aef1a64d67e5ca02b3424cd380b398fb6</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>AbstractGroupedFeature&lt; dimensions, Playable&lt; dimensions &gt;, Float &gt;</name>
    <filename>classMagnum_1_1SceneGraph_1_1AbstractGroupedFeature.html</filename>
    <base>AbstractFeature&lt; dimensions, Float &gt;</base>
    <member kind="function">
      <type></type>
      <name>AbstractGroupedFeature</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1AbstractGroupedFeature.html</anchorfile>
      <anchor>a2c0d4b144aea6e54c7a12fb0a8965827</anchor>
      <arglist>(AbstractObject&lt; dimensions, Float &gt; &amp;object, FeatureGroup&lt; dimensions, Playable&lt; dimensions &gt;, Float &gt; *group=nullptr)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~AbstractGroupedFeature</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1AbstractGroupedFeature.html</anchorfile>
      <anchor>ad05374ec9886805cd53d6f32f0a2dedd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>FeatureGroup&lt; dimensions, Playable&lt; dimensions &gt;, Float &gt; *</type>
      <name>group</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1AbstractGroupedFeature.html</anchorfile>
      <anchor>a670e9a5ed8e81ed9ea5b819e3af01ee6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const FeatureGroup&lt; dimensions, Playable&lt; dimensions &gt;, Float &gt; *</type>
      <name>group</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1AbstractGroupedFeature.html</anchorfile>
      <anchor>aef1a64d67e5ca02b3424cd380b398fb6</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>AbstractObject&lt; Transformation::Dimensions, Transformation::Type &gt;</name>
    <filename>classMagnum_1_1SceneGraph_1_1AbstractObject.html</filename>
    <member kind="typedef">
      <type>MatrixTypeFor&lt; dimensions, Transformation::Type &gt;</type>
      <name>MatrixType</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1AbstractObject.html</anchorfile>
      <anchor>aea88321960cf363a0b35952364d1ab3c</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>AbstractFeature&lt; dimensions, Transformation::Type &gt;</type>
      <name>FeatureType</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1AbstractObject.html</anchorfile>
      <anchor>ae8eb1f97426f2316226d1977ac762664</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>Containers::LinkedList&lt; AbstractFeature&lt; dimensions, Transformation::Type &gt; &gt; &amp;</type>
      <name>features</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1AbstractObject.html</anchorfile>
      <anchor>aa663eab19821dcb91e48d2f09eb4661f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const Containers::LinkedList&lt; AbstractFeature&lt; dimensions, Transformation::Type &gt; &gt; &amp;</type>
      <name>features</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1AbstractObject.html</anchorfile>
      <anchor>a0a50acca5095237046e0e122eee49ecd</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>hasFeatures</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1AbstractObject.html</anchorfile>
      <anchor>a99e1045b5871bf9cb4025a2218a0eccf</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>FeatureType *</type>
      <name>firstFeature</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1AbstractObject.html</anchorfile>
      <anchor>a12a5fc6a9dbba55dee974da1f2c5246a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const FeatureType *</type>
      <name>firstFeature</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1AbstractObject.html</anchorfile>
      <anchor>a9a0bd06208c6e79b542d1abaa7fffd91</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>FeatureType *</type>
      <name>lastFeature</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1AbstractObject.html</anchorfile>
      <anchor>a53945f3ebd1275eceee089760a1b5e7c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const FeatureType *</type>
      <name>lastFeature</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1AbstractObject.html</anchorfile>
      <anchor>a5f90364be104b60297d864f3274a5d21</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>U &amp;</type>
      <name>addFeature</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1AbstractObject.html</anchorfile>
      <anchor>afdf207c77155b474cabb615dfefaa55b</anchor>
      <arglist>(Args...args)</arglist>
    </member>
    <member kind="function">
      <type>AbstractObject&lt; dimensions, Transformation::Type &gt; *</type>
      <name>scene</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1AbstractObject.html</anchorfile>
      <anchor>aa456e847f56bd37b21307b7867e7498e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const AbstractObject&lt; dimensions, Transformation::Type &gt; *</type>
      <name>scene</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1AbstractObject.html</anchorfile>
      <anchor>a1195fa78a772da4dca22abd516a4cd93</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>AbstractObject&lt; dimensions, Transformation::Type &gt; *</type>
      <name>parent</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1AbstractObject.html</anchorfile>
      <anchor>ac52e5679ebdb34c4639dddeaad14be8a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const AbstractObject&lt; dimensions, Transformation::Type &gt; *</type>
      <name>parent</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1AbstractObject.html</anchorfile>
      <anchor>a2e1322ac186484652fb4397ba9204a4b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>MatrixType</type>
      <name>transformationMatrix</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1AbstractObject.html</anchorfile>
      <anchor>ab02e1c4ce34f19bb423bd24f801e0415</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>MatrixType</type>
      <name>absoluteTransformationMatrix</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1AbstractObject.html</anchorfile>
      <anchor>a7f71da8e25a8af4460e76b8418425771</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; MatrixType &gt;</type>
      <name>transformationMatrices</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1AbstractObject.html</anchorfile>
      <anchor>a158ba36b0e80a3f5fdad281edfb114fe</anchor>
      <arglist>(const std::vector&lt; std::reference_wrapper&lt; AbstractObject&lt; dimensions, Transformation::Type &gt;&gt;&gt; &amp;objects, const MatrixType &amp;initialTransformationMatrix=MatrixType()) const</arglist>
    </member>
    <member kind="function">
      <type>MatrixType</type>
      <name>transformationMatrix</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1AbstractObject.html</anchorfile>
      <anchor>ab02e1c4ce34f19bb423bd24f801e0415</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>MatrixType</type>
      <name>absoluteTransformationMatrix</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1AbstractObject.html</anchorfile>
      <anchor>a7f71da8e25a8af4460e76b8418425771</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; MatrixType &gt;</type>
      <name>transformationMatrices</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1AbstractObject.html</anchorfile>
      <anchor>a158ba36b0e80a3f5fdad281edfb114fe</anchor>
      <arglist>(const std::vector&lt; std::reference_wrapper&lt; AbstractObject&lt; dimensions, Transformation::Type &gt;&gt;&gt; &amp;objects, const MatrixType &amp;initialTransformationMatrix=MatrixType()) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setClean</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1AbstractObject.html</anchorfile>
      <anchor>aed9299e2b1248ad3fdd9e06c0b9297af</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isDirty</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1AbstractObject.html</anchorfile>
      <anchor>ae1577787aa21165255049d230bcd8dc5</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setDirty</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1AbstractObject.html</anchorfile>
      <anchor>a5c3d16b95cb6955188cd710cd01faca5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>setClean</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1AbstractObject.html</anchorfile>
      <anchor>a355409a5a8fb73443fbced50092462dd</anchor>
      <arglist>(const std::vector&lt; std::reference_wrapper&lt; AbstractObject&lt; dimensions, Transformation::Type &gt;&gt;&gt; &amp;objects)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>AbstractShape&lt; T::Dimensions &gt;</name>
    <filename>classMagnum_1_1Shapes_1_1AbstractShape.html</filename>
    <base>AbstractGroupedFeature&lt; dimensions, AbstractShape&lt; dimensions &gt;, Float &gt;</base>
    <member kind="enumeration">
      <type></type>
      <name>Type</name>
      <anchorfile>classMagnum_1_1Shapes_1_1AbstractShape.html</anchorfile>
      <anchor>a5326f2287b1c17a9bd8a2058a4011e77</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Dimensions</name>
      <anchorfile>classMagnum_1_1Shapes_1_1AbstractShape.html</anchorfile>
      <anchor>a936080bbab3fcf10333655f11c90f2b2af4c9b50d1bb4cd079845d57b0eac27f4</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AbstractShape</name>
      <anchorfile>classMagnum_1_1Shapes_1_1AbstractShape.html</anchorfile>
      <anchor>a5e329f672734a57ebdc07e92e9198871</anchor>
      <arglist>(SceneGraph::AbstractObject&lt; dimensions, Float &gt; &amp;object, ShapeGroup&lt; dimensions &gt; *group=nullptr)</arglist>
    </member>
    <member kind="function">
      <type>ShapeGroup&lt; dimensions &gt; *</type>
      <name>group</name>
      <anchorfile>classMagnum_1_1Shapes_1_1AbstractShape.html</anchorfile>
      <anchor>a60203f20d8f2814ffcb8d82a7e231a37</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const ShapeGroup&lt; dimensions &gt; *</type>
      <name>group</name>
      <anchorfile>classMagnum_1_1Shapes_1_1AbstractShape.html</anchorfile>
      <anchor>acc092202b05599f4b38e1feda2b23ad0</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Type</type>
      <name>type</name>
      <anchorfile>classMagnum_1_1Shapes_1_1AbstractShape.html</anchorfile>
      <anchor>a83df4c714220b4f198dab8388caa30ce</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>collides</name>
      <anchorfile>classMagnum_1_1Shapes_1_1AbstractShape.html</anchorfile>
      <anchor>a2b14a05ab21370222631d39d1c28ca71</anchor>
      <arglist>(const AbstractShape&lt; dimensions &gt; &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>Collision&lt; dimensions &gt;</type>
      <name>collision</name>
      <anchorfile>classMagnum_1_1Shapes_1_1AbstractShape.html</anchorfile>
      <anchor>a8b8401129edb86d71aee1802b58329dd</anchor>
      <arglist>(const AbstractShape&lt; dimensions &gt; &amp;other) const</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>markDirty</name>
      <anchorfile>classMagnum_1_1Shapes_1_1AbstractShape.html</anchorfile>
      <anchor>a95c1ecf29ab5c338141a2dbb2672f3d3</anchor>
      <arglist>() override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Array3D&lt; Sampler::Wrapping &gt;</name>
    <filename>classMagnum_1_1Array3D.html</filename>
    <base>Array&lt; 3, Sampler::Wrapping &gt;</base>
    <member kind="function">
      <type>constexpr</type>
      <name>Array3D</name>
      <anchorfile>classMagnum_1_1Array3D.html</anchorfile>
      <anchor>a0ad730b1a5c83d6ed76733ff6f88efd8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Array3D</name>
      <anchorfile>classMagnum_1_1Array3D.html</anchorfile>
      <anchor>abcde5d5b0866569d72e1d8c32b55a0e6</anchor>
      <arglist>(Sampler::Wrapping x, Sampler::Wrapping y, Sampler::Wrapping z)</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Array3D</name>
      <anchorfile>classMagnum_1_1Array3D.html</anchorfile>
      <anchor>a2939e8a313c4525eb29978a1fc00e82b</anchor>
      <arglist>(Sampler::Wrapping value)</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Array3D</name>
      <anchorfile>classMagnum_1_1Array3D.html</anchorfile>
      <anchor>a5ecdf537fdbff58b291c4e579250d3a5</anchor>
      <arglist>(const Array&lt; 3, Sampler::Wrapping &gt; &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>Sampler::Wrapping &amp;</type>
      <name>x</name>
      <anchorfile>classMagnum_1_1Array3D.html</anchorfile>
      <anchor>aefb47d61179ebec5bb4c00f47269fd76</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>constexpr Sampler::Wrapping</type>
      <name>x</name>
      <anchorfile>classMagnum_1_1Array3D.html</anchorfile>
      <anchor>a257e64664cf168e3d3bec38c37865abf</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Sampler::Wrapping &amp;</type>
      <name>y</name>
      <anchorfile>classMagnum_1_1Array3D.html</anchorfile>
      <anchor>af1853b7cdbcc3004d995972e26a49265</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>constexpr Sampler::Wrapping</type>
      <name>y</name>
      <anchorfile>classMagnum_1_1Array3D.html</anchorfile>
      <anchor>a128027f44f3d34edfc43e9319ab0e24d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Sampler::Wrapping &amp;</type>
      <name>z</name>
      <anchorfile>classMagnum_1_1Array3D.html</anchorfile>
      <anchor>a250a0dd7eabb1ddb78124b745c7b316a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>constexpr Sampler::Wrapping</type>
      <name>z</name>
      <anchorfile>classMagnum_1_1Array3D.html</anchorfile>
      <anchor>acaa7f102b4c44e4b3728ccd8bfa1319d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Array2D&lt; Sampler::Wrapping &gt; &amp;</type>
      <name>xy</name>
      <anchorfile>classMagnum_1_1Array3D.html</anchorfile>
      <anchor>acb8a90e0c35f28e8ed6e01dc6657216b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>constexpr Array2D&lt; Sampler::Wrapping &gt;</type>
      <name>xy</name>
      <anchorfile>classMagnum_1_1Array3D.html</anchorfile>
      <anchor>a8fd74a226e6d6e622a6c35155d3f9680</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>classMagnum_1_1Array3D.html</anchorfile>
      <anchor>ac95c370506ed1052ae50af8d3ab81fd1</anchor>
      <arglist>(Debug &amp;debug, const Array3D&lt; Sampler::Wrapping &gt; &amp;value)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Array&lt; 1, T &gt;</name>
    <filename>classMagnum_1_1Array.html</filename>
    <member kind="typedef">
      <type>T</type>
      <name>Type</name>
      <anchorfile>classMagnum_1_1Array.html</anchorfile>
      <anchor>a5d842ed4765a588e0682657c4d679c7b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Dimensions</name>
      <anchorfile>classMagnum_1_1Array.html</anchorfile>
      <anchor>a79f9c3a0f12ed372220a2243c22ad8e5a02e765ef0586f2a00aa3e8d8b6b6f54e</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Array</name>
      <anchorfile>classMagnum_1_1Array.html</anchorfile>
      <anchor>a013f4528a641a0f8027c2bc1e3f55c43</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Array</name>
      <anchorfile>classMagnum_1_1Array.html</anchorfile>
      <anchor>aa7a5c3f5e210d8266b6f1c06b2a520e1</anchor>
      <arglist>(T first, U...next)</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Array</name>
      <anchorfile>classMagnum_1_1Array.html</anchorfile>
      <anchor>ad49a96a54105662266219595c8aee9d6</anchor>
      <arglist>(T value)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classMagnum_1_1Array.html</anchorfile>
      <anchor>ae4a43630b5e94160b75e47d7a95e29a6</anchor>
      <arglist>(const Array&lt; dimensions, T &gt; &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>classMagnum_1_1Array.html</anchorfile>
      <anchor>a7e982c4c3b6fa1a4124e8dbf44996c72</anchor>
      <arglist>(const Array&lt; dimensions, T &gt; &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>T &amp;</type>
      <name>operator[]</name>
      <anchorfile>classMagnum_1_1Array.html</anchorfile>
      <anchor>a041cec7d0a7725649be58bf9bb6d4ecf</anchor>
      <arglist>(UnsignedInt pos)</arglist>
    </member>
    <member kind="function">
      <type>constexpr T</type>
      <name>operator[]</name>
      <anchorfile>classMagnum_1_1Array.html</anchorfile>
      <anchor>aa8a712aff167c11f9e279783ef93a7b1</anchor>
      <arglist>(UnsignedInt pos) const</arglist>
    </member>
    <member kind="function">
      <type>T *</type>
      <name>data</name>
      <anchorfile>classMagnum_1_1Array.html</anchorfile>
      <anchor>aeb8e629eca2e0c1e43562ba7479070c3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>constexpr const T *</type>
      <name>data</name>
      <anchorfile>classMagnum_1_1Array.html</anchorfile>
      <anchor>a80fa9e8d50e3439b732a052b410b5ae0</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>classMagnum_1_1Array.html</anchorfile>
      <anchor>a2c022de6a506d510afb76bef6f382f10</anchor>
      <arglist>(Debug &amp;debug, const Array&lt; dimensions, T &gt; &amp;value)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Array&lt; 2, T &gt;</name>
    <filename>classMagnum_1_1Array.html</filename>
    <member kind="typedef">
      <type>T</type>
      <name>Type</name>
      <anchorfile>classMagnum_1_1Array.html</anchorfile>
      <anchor>a5d842ed4765a588e0682657c4d679c7b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Dimensions</name>
      <anchorfile>classMagnum_1_1Array.html</anchorfile>
      <anchor>a79f9c3a0f12ed372220a2243c22ad8e5a02e765ef0586f2a00aa3e8d8b6b6f54e</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Array</name>
      <anchorfile>classMagnum_1_1Array.html</anchorfile>
      <anchor>a013f4528a641a0f8027c2bc1e3f55c43</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Array</name>
      <anchorfile>classMagnum_1_1Array.html</anchorfile>
      <anchor>aa7a5c3f5e210d8266b6f1c06b2a520e1</anchor>
      <arglist>(T first, U...next)</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Array</name>
      <anchorfile>classMagnum_1_1Array.html</anchorfile>
      <anchor>ad49a96a54105662266219595c8aee9d6</anchor>
      <arglist>(T value)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classMagnum_1_1Array.html</anchorfile>
      <anchor>ae4a43630b5e94160b75e47d7a95e29a6</anchor>
      <arglist>(const Array&lt; dimensions, T &gt; &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>classMagnum_1_1Array.html</anchorfile>
      <anchor>a7e982c4c3b6fa1a4124e8dbf44996c72</anchor>
      <arglist>(const Array&lt; dimensions, T &gt; &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>T &amp;</type>
      <name>operator[]</name>
      <anchorfile>classMagnum_1_1Array.html</anchorfile>
      <anchor>a041cec7d0a7725649be58bf9bb6d4ecf</anchor>
      <arglist>(UnsignedInt pos)</arglist>
    </member>
    <member kind="function">
      <type>constexpr T</type>
      <name>operator[]</name>
      <anchorfile>classMagnum_1_1Array.html</anchorfile>
      <anchor>aa8a712aff167c11f9e279783ef93a7b1</anchor>
      <arglist>(UnsignedInt pos) const</arglist>
    </member>
    <member kind="function">
      <type>T *</type>
      <name>data</name>
      <anchorfile>classMagnum_1_1Array.html</anchorfile>
      <anchor>aeb8e629eca2e0c1e43562ba7479070c3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>constexpr const T *</type>
      <name>data</name>
      <anchorfile>classMagnum_1_1Array.html</anchorfile>
      <anchor>a80fa9e8d50e3439b732a052b410b5ae0</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>classMagnum_1_1Array.html</anchorfile>
      <anchor>a2c022de6a506d510afb76bef6f382f10</anchor>
      <arglist>(Debug &amp;debug, const Array&lt; dimensions, T &gt; &amp;value)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Array&lt; 3, Sampler::Wrapping &gt;</name>
    <filename>classMagnum_1_1Array.html</filename>
    <member kind="typedef">
      <type>Sampler::Wrapping</type>
      <name>Type</name>
      <anchorfile>classMagnum_1_1Array.html</anchorfile>
      <anchor>a5d842ed4765a588e0682657c4d679c7b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Dimensions</name>
      <anchorfile>classMagnum_1_1Array.html</anchorfile>
      <anchor>a79f9c3a0f12ed372220a2243c22ad8e5a02e765ef0586f2a00aa3e8d8b6b6f54e</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Array</name>
      <anchorfile>classMagnum_1_1Array.html</anchorfile>
      <anchor>a013f4528a641a0f8027c2bc1e3f55c43</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Array</name>
      <anchorfile>classMagnum_1_1Array.html</anchorfile>
      <anchor>aa7a5c3f5e210d8266b6f1c06b2a520e1</anchor>
      <arglist>(Sampler::Wrapping first, U...next)</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Array</name>
      <anchorfile>classMagnum_1_1Array.html</anchorfile>
      <anchor>ad49a96a54105662266219595c8aee9d6</anchor>
      <arglist>(Sampler::Wrapping value)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classMagnum_1_1Array.html</anchorfile>
      <anchor>ae4a43630b5e94160b75e47d7a95e29a6</anchor>
      <arglist>(const Array&lt; dimensions, Sampler::Wrapping &gt; &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>classMagnum_1_1Array.html</anchorfile>
      <anchor>a7e982c4c3b6fa1a4124e8dbf44996c72</anchor>
      <arglist>(const Array&lt; dimensions, Sampler::Wrapping &gt; &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>Sampler::Wrapping &amp;</type>
      <name>operator[]</name>
      <anchorfile>classMagnum_1_1Array.html</anchorfile>
      <anchor>a041cec7d0a7725649be58bf9bb6d4ecf</anchor>
      <arglist>(UnsignedInt pos)</arglist>
    </member>
    <member kind="function">
      <type>constexpr Sampler::Wrapping</type>
      <name>operator[]</name>
      <anchorfile>classMagnum_1_1Array.html</anchorfile>
      <anchor>aa8a712aff167c11f9e279783ef93a7b1</anchor>
      <arglist>(UnsignedInt pos) const</arglist>
    </member>
    <member kind="function">
      <type>Sampler::Wrapping *</type>
      <name>data</name>
      <anchorfile>classMagnum_1_1Array.html</anchorfile>
      <anchor>aeb8e629eca2e0c1e43562ba7479070c3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>constexpr const Sampler::Wrapping *</type>
      <name>data</name>
      <anchorfile>classMagnum_1_1Array.html</anchorfile>
      <anchor>a80fa9e8d50e3439b732a052b410b5ae0</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>classMagnum_1_1Array.html</anchorfile>
      <anchor>a2c022de6a506d510afb76bef6f382f10</anchor>
      <arglist>(Debug &amp;debug, const Array&lt; dimensions, Sampler::Wrapping &gt; &amp;value)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Array&lt; 3, T &gt;</name>
    <filename>classMagnum_1_1Array.html</filename>
    <member kind="typedef">
      <type>T</type>
      <name>Type</name>
      <anchorfile>classMagnum_1_1Array.html</anchorfile>
      <anchor>a5d842ed4765a588e0682657c4d679c7b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Dimensions</name>
      <anchorfile>classMagnum_1_1Array.html</anchorfile>
      <anchor>a79f9c3a0f12ed372220a2243c22ad8e5a02e765ef0586f2a00aa3e8d8b6b6f54e</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Array</name>
      <anchorfile>classMagnum_1_1Array.html</anchorfile>
      <anchor>a013f4528a641a0f8027c2bc1e3f55c43</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Array</name>
      <anchorfile>classMagnum_1_1Array.html</anchorfile>
      <anchor>aa7a5c3f5e210d8266b6f1c06b2a520e1</anchor>
      <arglist>(T first, U...next)</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Array</name>
      <anchorfile>classMagnum_1_1Array.html</anchorfile>
      <anchor>ad49a96a54105662266219595c8aee9d6</anchor>
      <arglist>(T value)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classMagnum_1_1Array.html</anchorfile>
      <anchor>ae4a43630b5e94160b75e47d7a95e29a6</anchor>
      <arglist>(const Array&lt; dimensions, T &gt; &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>classMagnum_1_1Array.html</anchorfile>
      <anchor>a7e982c4c3b6fa1a4124e8dbf44996c72</anchor>
      <arglist>(const Array&lt; dimensions, T &gt; &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>T &amp;</type>
      <name>operator[]</name>
      <anchorfile>classMagnum_1_1Array.html</anchorfile>
      <anchor>a041cec7d0a7725649be58bf9bb6d4ecf</anchor>
      <arglist>(UnsignedInt pos)</arglist>
    </member>
    <member kind="function">
      <type>constexpr T</type>
      <name>operator[]</name>
      <anchorfile>classMagnum_1_1Array.html</anchorfile>
      <anchor>aa8a712aff167c11f9e279783ef93a7b1</anchor>
      <arglist>(UnsignedInt pos) const</arglist>
    </member>
    <member kind="function">
      <type>T *</type>
      <name>data</name>
      <anchorfile>classMagnum_1_1Array.html</anchorfile>
      <anchor>aeb8e629eca2e0c1e43562ba7479070c3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>constexpr const T *</type>
      <name>data</name>
      <anchorfile>classMagnum_1_1Array.html</anchorfile>
      <anchor>a80fa9e8d50e3439b732a052b410b5ae0</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>classMagnum_1_1Array.html</anchorfile>
      <anchor>a2c022de6a506d510afb76bef6f382f10</anchor>
      <arglist>(Debug &amp;debug, const Array&lt; dimensions, T &gt; &amp;value)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Attribute&lt; 3, Color4 &gt;</name>
    <filename>classMagnum_1_1Attribute.html</filename>
    <member kind="enumeration">
      <type></type>
      <name>Components</name>
      <anchorfile>classMagnum_1_1Attribute.html</anchorfile>
      <anchor>a316ab4b8289132fb176f672d432c0e03</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>DataType</name>
      <anchorfile>classMagnum_1_1Attribute.html</anchorfile>
      <anchor>aeb363c7aece399e3779c50406b474dce</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>DataOption</name>
      <anchorfile>classMagnum_1_1Attribute.html</anchorfile>
      <anchor>a3f4665e160a58e89f74f16a51f279c99</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Color4</type>
      <name>Type</name>
      <anchorfile>classMagnum_1_1Attribute.html</anchorfile>
      <anchor>ad710a6f887f33a108c47f23f7f6ab0fe</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Implementation::Attribute&lt; Color4 &gt;::ScalarType</type>
      <name>ScalarType</name>
      <anchorfile>classMagnum_1_1Attribute.html</anchorfile>
      <anchor>a214d003dfa0a4234e65b7d3a54f3e0d3</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Containers::EnumSet&lt; DataOption &gt;</type>
      <name>DataOptions</name>
      <anchorfile>classMagnum_1_1Attribute.html</anchorfile>
      <anchor>a2116a3e4fc3cd74796d3de5c584c24d8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Location</name>
      <anchorfile>classMagnum_1_1Attribute.html</anchorfile>
      <anchor>ae94a8a985bd4483f5585cad85d8f6bfca9c96ce49a103a993630344df60fdc546</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>VectorCount</name>
      <anchorfile>classMagnum_1_1Attribute.html</anchorfile>
      <anchor>ae94a8a985bd4483f5585cad85d8f6bfca85e83db6f246a1a4929895531efc97b1</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Attribute</name>
      <anchorfile>classMagnum_1_1Attribute.html</anchorfile>
      <anchor>a81342d247df6a7a527c907892d79df58</anchor>
      <arglist>(Components components, DataType dataType=Implementation::Attribute&lt; Color4 &gt;::DefaultDataType, DataOptions dataOptions=DataOptions())</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Attribute</name>
      <anchorfile>classMagnum_1_1Attribute.html</anchorfile>
      <anchor>a6ab66c56a167214c981e2646bbad0bb3</anchor>
      <arglist>(DataType dataType=Implementation::Attribute&lt; Color4 &gt;::DefaultDataType, DataOptions dataOptions=DataOptions())</arglist>
    </member>
    <member kind="function">
      <type>constexpr Components</type>
      <name>components</name>
      <anchorfile>classMagnum_1_1Attribute.html</anchorfile>
      <anchor>abcd7c84011c4db683c7d4c236a36d3ef</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>constexpr DataType</type>
      <name>dataType</name>
      <anchorfile>classMagnum_1_1Attribute.html</anchorfile>
      <anchor>a0f41ef26332b5772f635b6b06faeeee0</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>UnsignedInt</type>
      <name>vectorSize</name>
      <anchorfile>classMagnum_1_1Attribute.html</anchorfile>
      <anchor>a996c99eeafcfa8638b32f17aadab27cb</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>constexpr DataOptions</type>
      <name>dataOptions</name>
      <anchorfile>classMagnum_1_1Attribute.html</anchorfile>
      <anchor>a664fd08ea5084e35bb4f9e0d76ef47ea</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>classMagnum_1_1Attribute.html</anchorfile>
      <anchor>a0eb7a0597aa54dac06f74058f7591913</anchor>
      <arglist>(Debug &amp;debug, Attribute&lt; Color4 &gt;::Components)</arglist>
    </member>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>classMagnum_1_1Attribute.html</anchorfile>
      <anchor>a74a95cad0d549a952ac6a097e5c92b0b</anchor>
      <arglist>(Debug &amp;debug, Attribute&lt; Color4 &gt;::DataType)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>BasicGLLayer&lt; TextVertex &gt;</name>
    <filename>classMagnum_1_1Ui_1_1BasicGLLayer.html</filename>
    <base>Magnum::Ui::BasicLayer</base>
    <member kind="function">
      <type>Buffer &amp;</type>
      <name>buffer</name>
      <anchorfile>classMagnum_1_1Ui_1_1BasicGLLayer.html</anchorfile>
      <anchor>a350a949e9fdf518aaf787a0d1c9fd6a1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Mesh &amp;</type>
      <name>mesh</name>
      <anchorfile>classMagnum_1_1Ui_1_1BasicGLLayer.html</anchorfile>
      <anchor>a835778d2ba1f56f31f76503385389585</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reset</name>
      <anchorfile>classMagnum_1_1Ui_1_1BasicGLLayer.html</anchorfile>
      <anchor>aaf58c60adbc177fb921a1046198047dc</anchor>
      <arglist>(std::size_t elementCapacity, std::size_t dataCapacity, BufferUsage usage)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>update</name>
      <anchorfile>classMagnum_1_1Ui_1_1BasicGLLayer.html</anchorfile>
      <anchor>ae0cb956dbed82c1fc7cabcd67d31a35e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>draw</name>
      <anchorfile>classMagnum_1_1Ui_1_1BasicGLLayer.html</anchorfile>
      <anchor>a4a3a47a9d5f8fd9e235b646066fd11e7</anchor>
      <arglist>(AbstractUiShader &amp;shader)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>BasicInstancedGLLayer&lt; QuadInstance &gt;</name>
    <filename>classMagnum_1_1Ui_1_1BasicInstancedGLLayer.html</filename>
    <base>Magnum::Ui::BasicInstancedLayer</base>
    <member kind="function">
      <type>Buffer &amp;</type>
      <name>buffer</name>
      <anchorfile>classMagnum_1_1Ui_1_1BasicInstancedGLLayer.html</anchorfile>
      <anchor>add1f2513a9386f24bd3c947a85f73b67</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Mesh &amp;</type>
      <name>mesh</name>
      <anchorfile>classMagnum_1_1Ui_1_1BasicInstancedGLLayer.html</anchorfile>
      <anchor>acc5a99df11f33ebdc8e9ff7ceae0ba4f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reset</name>
      <anchorfile>classMagnum_1_1Ui_1_1BasicInstancedGLLayer.html</anchorfile>
      <anchor>a011954671078ca02b4b5a698e93c7633</anchor>
      <arglist>(std::size_t capacity, BufferUsage usage)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>update</name>
      <anchorfile>classMagnum_1_1Ui_1_1BasicInstancedGLLayer.html</anchorfile>
      <anchor>ab44ea3d731a8fef5d8b23a968263ff4f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>draw</name>
      <anchorfile>classMagnum_1_1Ui_1_1BasicInstancedGLLayer.html</anchorfile>
      <anchor>a32c8efb389dbe7b2113590a76ae5f143</anchor>
      <arglist>(AbstractUiShader &amp;shader)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>BasicPlane&lt; Implementation::QuadLayer, Implementation::QuadLayer, Implementation::TextLayer &gt;</name>
    <filename>classMagnum_1_1Ui_1_1BasicPlane.html</filename>
    <base>Magnum::Ui::AbstractPlane</base>
    <member kind="function">
      <type></type>
      <name>BasicPlane</name>
      <anchorfile>classMagnum_1_1Ui_1_1BasicPlane.html</anchorfile>
      <anchor>ab1910883c3200c2885f3568746523dab</anchor>
      <arglist>(BasicUserInterface&lt; Layers... &gt; &amp;ui, const Anchor &amp;anchor, const Range2D &amp;padding, const Vector2 &amp;margin, Layers &amp;...layers)</arglist>
    </member>
    <member kind="function">
      <type>BasicUserInterface&lt; Layers... &gt; &amp;</type>
      <name>ui</name>
      <anchorfile>classMagnum_1_1Ui_1_1BasicPlane.html</anchorfile>
      <anchor>ac37549266429d56219fe2d06b86d4402</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const BasicUserInterface&lt; Layers... &gt; &amp;</type>
      <name>ui</name>
      <anchorfile>classMagnum_1_1Ui_1_1BasicPlane.html</anchorfile>
      <anchor>a2654f0cbeea22764828287747bbd2a42</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>BasicPlane&lt; Layers... &gt; *</type>
      <name>previousActivePlane</name>
      <anchorfile>classMagnum_1_1Ui_1_1BasicPlane.html</anchorfile>
      <anchor>aae0d2e027c159d7fa0aa86f716a97bc8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const BasicPlane&lt; Layers... &gt; *</type>
      <name>previousActivePlane</name>
      <anchorfile>classMagnum_1_1Ui_1_1BasicPlane.html</anchorfile>
      <anchor>a060ee802d53fcb3a275131d7cf6c5c8d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>BasicPlane&lt; Layers... &gt; *</type>
      <name>nextActivePlane</name>
      <anchorfile>classMagnum_1_1Ui_1_1BasicPlane.html</anchorfile>
      <anchor>a95bc95e91201688786836544dd21bee0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const BasicPlane&lt; Layers... &gt; *</type>
      <name>nextActivePlane</name>
      <anchorfile>classMagnum_1_1Ui_1_1BasicPlane.html</anchorfile>
      <anchor>a8bf263e173964ed1203014ebb43f555f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>update</name>
      <anchorfile>classMagnum_1_1Ui_1_1BasicPlane.html</anchorfile>
      <anchor>a7ba55309488e42143106e09c6ec3655a</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>BasicUserInterface&lt; Implementation::QuadLayer, Implementation::QuadLayer, Implementation::TextLayer &gt;</name>
    <filename>classMagnum_1_1Ui_1_1BasicUserInterface.html</filename>
    <base>Magnum::Ui::AbstractUserInterface</base>
    <member kind="function">
      <type></type>
      <name>BasicUserInterface</name>
      <anchorfile>classMagnum_1_1Ui_1_1BasicUserInterface.html</anchorfile>
      <anchor>a92215736a625a8ae1441ca5ec8544cd6</anchor>
      <arglist>(const Vector2 &amp;size, const Vector2i &amp;screenSize)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>update</name>
      <anchorfile>classMagnum_1_1Ui_1_1BasicUserInterface.html</anchorfile>
      <anchor>a96b8eb29dd07c4a1b04c771513f852ea</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>draw</name>
      <anchorfile>classMagnum_1_1Ui_1_1BasicUserInterface.html</anchorfile>
      <anchor>aac072592ef4cf82350f3d169e1caf7c6</anchor>
      <arglist>(const std::array&lt; std::reference_wrapper&lt; AbstractUiShader &gt;, sizeof...(Layers)&gt; &amp;shaders)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Color3&lt; Float &gt;</name>
    <filename>classMagnum_1_1Math_1_1Color3.html</filename>
    <base>Vector3&lt; Float &gt;</base>
    <member kind="typedef">
      <type>TypeTraits&lt; Float &gt;::FloatingPointType</type>
      <name>FloatingPointType</name>
      <anchorfile>classMagnum_1_1Math_1_1Color3.html</anchorfile>
      <anchor>a86a0a40b43b75d5b79b96bcb8cfc4465</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::tuple&lt; Deg&lt; FloatingPointType &gt;, FloatingPointType, FloatingPointType &gt;</type>
      <name>Hsv</name>
      <anchorfile>classMagnum_1_1Math_1_1Color3.html</anchorfile>
      <anchor>a6cf345a849a99e6138cb7d5763c0f636</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Hsv</type>
      <name>HSV</name>
      <anchorfile>classMagnum_1_1Math_1_1Color3.html</anchorfile>
      <anchor>a7df623235df8fb83cea5c9accc3eca30</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Color3</name>
      <anchorfile>classMagnum_1_1Math_1_1Color3.html</anchorfile>
      <anchor>a2a6a972bfe445ca702bcfd7beee1981b</anchor>
      <arglist>(ZeroInitT=ZeroInit) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Color3</name>
      <anchorfile>classMagnum_1_1Math_1_1Color3.html</anchorfile>
      <anchor>a8ae83d7e3fbf51bf85eee05b60cc1047</anchor>
      <arglist>(NoInitT) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Color3</name>
      <anchorfile>classMagnum_1_1Math_1_1Color3.html</anchorfile>
      <anchor>aafb96a0def60bc6169f565c6565c5d5c</anchor>
      <arglist>(Float rgb) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Color3</name>
      <anchorfile>classMagnum_1_1Math_1_1Color3.html</anchorfile>
      <anchor>aa051703cbe236f31bdebc0285d45edea</anchor>
      <arglist>(Float r, Float g, Float b) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Color3</name>
      <anchorfile>classMagnum_1_1Math_1_1Color3.html</anchorfile>
      <anchor>a757e4d7a08c4948a11d9b2f951342645</anchor>
      <arglist>(const Vector&lt; 3, U &gt; &amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Color3</name>
      <anchorfile>classMagnum_1_1Math_1_1Color3.html</anchorfile>
      <anchor>ab8db848acaf2c503fb74f54eb2774504</anchor>
      <arglist>(const U &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Color3</name>
      <anchorfile>classMagnum_1_1Math_1_1Color3.html</anchorfile>
      <anchor>a7137df615641f011e6eb6d782355acae</anchor>
      <arglist>(const Vector&lt; 3, Float &gt; &amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type>Hsv</type>
      <name>toHsv</name>
      <anchorfile>classMagnum_1_1Math_1_1Color3.html</anchorfile>
      <anchor>a67e83f11e3d4473201ee05d4a141fe35</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Hsv</type>
      <name>toHSV</name>
      <anchorfile>classMagnum_1_1Math_1_1Color3.html</anchorfile>
      <anchor>a34f7912009871b309c5324d7a37d92ed</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Deg&lt; FloatingPointType &gt;</type>
      <name>hue</name>
      <anchorfile>classMagnum_1_1Math_1_1Color3.html</anchorfile>
      <anchor>a5e0a434df3ca8ded2610b1f2ca9e125a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>FloatingPointType</type>
      <name>saturation</name>
      <anchorfile>classMagnum_1_1Math_1_1Color3.html</anchorfile>
      <anchor>a0f6704ba252e30a4a8377b536bf7405e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>FloatingPointType</type>
      <name>value</name>
      <anchorfile>classMagnum_1_1Math_1_1Color3.html</anchorfile>
      <anchor>a8be137a579518a765e2f4318d234e223</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector3&lt; FloatingPointType &gt;</type>
      <name>toSrgb</name>
      <anchorfile>classMagnum_1_1Math_1_1Color3.html</anchorfile>
      <anchor>ac1bbf489253bdd8eaad0da56983aa9b9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector3&lt; Integral &gt;</type>
      <name>toSrgb</name>
      <anchorfile>classMagnum_1_1Math_1_1Color3.html</anchorfile>
      <anchor>a4d3f172b7c26ffee3606bfa3610c2151</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector3&lt; FloatingPointType &gt;</type>
      <name>toXyz</name>
      <anchorfile>classMagnum_1_1Math_1_1Color3.html</anchorfile>
      <anchor>a6160795d25fce0400ff4401298a8c8ae</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static constexpr Color3&lt; Float &gt;</type>
      <name>red</name>
      <anchorfile>classMagnum_1_1Math_1_1Color3.html</anchorfile>
      <anchor>a7be92cdfd9820b995d17a919edff1b4c</anchor>
      <arglist>(Float red=Implementation::fullChannel&lt; Float &gt;())</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static constexpr Color3&lt; Float &gt;</type>
      <name>green</name>
      <anchorfile>classMagnum_1_1Math_1_1Color3.html</anchorfile>
      <anchor>a0f2c3b68a89395fdf84d5b3dcc684fb3</anchor>
      <arglist>(Float green=Implementation::fullChannel&lt; Float &gt;())</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static constexpr Color3&lt; Float &gt;</type>
      <name>blue</name>
      <anchorfile>classMagnum_1_1Math_1_1Color3.html</anchorfile>
      <anchor>a99d3728fd643515067dbff11465b1b2e</anchor>
      <arglist>(Float blue=Implementation::fullChannel&lt; Float &gt;())</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static constexpr Color3&lt; Float &gt;</type>
      <name>cyan</name>
      <anchorfile>classMagnum_1_1Math_1_1Color3.html</anchorfile>
      <anchor>a6c460f6e2a1774afa92e81c970728eee</anchor>
      <arglist>(Float red=Float(0))</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static constexpr Color3&lt; Float &gt;</type>
      <name>magenta</name>
      <anchorfile>classMagnum_1_1Math_1_1Color3.html</anchorfile>
      <anchor>a784887d433a871fbed66e83f37805fc8</anchor>
      <arglist>(Float green=Float(0))</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static constexpr Color3&lt; Float &gt;</type>
      <name>yellow</name>
      <anchorfile>classMagnum_1_1Math_1_1Color3.html</anchorfile>
      <anchor>af61b7b73cdddc3e58dac3b7806f9b575</anchor>
      <arglist>(Float blue=Float(0))</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Color3&lt; Float &gt;</type>
      <name>fromHsv</name>
      <anchorfile>classMagnum_1_1Math_1_1Color3.html</anchorfile>
      <anchor>a23f0c1a7e9c2b7252e20f3ed3afed952</anchor>
      <arglist>(const Hsv &amp;hsv)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Color3&lt; Float &gt;</type>
      <name>fromHsv</name>
      <anchorfile>classMagnum_1_1Math_1_1Color3.html</anchorfile>
      <anchor>acb8828a8260e38cd9a3c52163c15b1bf</anchor>
      <arglist>(Deg&lt; FloatingPointType &gt; hue, FloatingPointType saturation, FloatingPointType value)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Color3&lt; Float &gt;</type>
      <name>fromHSV</name>
      <anchorfile>classMagnum_1_1Math_1_1Color3.html</anchorfile>
      <anchor>a9286b5d23a93cb92aaa15ecfb2cf85d8</anchor>
      <arglist>(const Hsv &amp;hsv)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Color3&lt; Float &gt;</type>
      <name>fromHSV</name>
      <anchorfile>classMagnum_1_1Math_1_1Color3.html</anchorfile>
      <anchor>a9563621212c346a40401e4e67cac70e3</anchor>
      <arglist>(Deg&lt; FloatingPointType &gt; hue, FloatingPointType saturation, FloatingPointType value)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Color3&lt; Float &gt;</type>
      <name>fromSrgb</name>
      <anchorfile>classMagnum_1_1Math_1_1Color3.html</anchorfile>
      <anchor>ad96e9d1d54d587cb94c1fee199c8ccfd</anchor>
      <arglist>(const Vector3&lt; FloatingPointType &gt; &amp;srgb)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Color3&lt; Float &gt;</type>
      <name>fromSrgb</name>
      <anchorfile>classMagnum_1_1Math_1_1Color3.html</anchorfile>
      <anchor>af7ce280a2514f8e974b59439af0081b6</anchor>
      <arglist>(const Vector3&lt; Integral &gt; &amp;srgb)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Color3&lt; Float &gt;</type>
      <name>fromXyz</name>
      <anchorfile>classMagnum_1_1Math_1_1Color3.html</anchorfile>
      <anchor>a63548a8d5b5b672b031e3a5cc4de74ef</anchor>
      <arglist>(const Vector3&lt; FloatingPointType &gt; &amp;xyz)</arglist>
    </member>
    <member kind="function">
      <type>Vector3&lt; Float &gt;</type>
      <name>xyYToXyz</name>
      <anchorfile>classMagnum_1_1Math_1_1Color3.html</anchorfile>
      <anchor>a4fc7e7145d373b085fe34b3492b12b88</anchor>
      <arglist>(const Vector3&lt; Float &gt; &amp;xyY)</arglist>
    </member>
    <member kind="function">
      <type>Vector3&lt; Float &gt;</type>
      <name>xyzToXyY</name>
      <anchorfile>classMagnum_1_1Math_1_1Color3.html</anchorfile>
      <anchor>a95bff66ce9604939340d44686f857aa6</anchor>
      <arglist>(const Vector3&lt; Float &gt; &amp;xyz)</arglist>
    </member>
    <member kind="function">
      <type>constexpr Color3&lt; UnsignedByte &gt;</type>
      <name>operator&quot;&quot;_rgb</name>
      <anchorfile>classMagnum_1_1Math_1_1Color3.html</anchorfile>
      <anchor>a3d234669d966a01ca22618dcd9dabc7e</anchor>
      <arglist>(unsigned long long value)</arglist>
    </member>
    <member kind="function">
      <type>constexpr Vector3&lt; UnsignedByte &gt;</type>
      <name>operator&quot;&quot;_srgb</name>
      <anchorfile>classMagnum_1_1Math_1_1Color3.html</anchorfile>
      <anchor>a411d16876bfb22e418e80ad779355b3e</anchor>
      <arglist>(unsigned long long value)</arglist>
    </member>
    <member kind="function">
      <type>Color3&lt; Float &gt;</type>
      <name>operator&quot;&quot;_rgbf</name>
      <anchorfile>classMagnum_1_1Math_1_1Color3.html</anchorfile>
      <anchor>ad78e022530fcb6bdeb0baa17287a6492</anchor>
      <arglist>(unsigned long long value)</arglist>
    </member>
    <member kind="function">
      <type>Color3&lt; Float &gt;</type>
      <name>operator&quot;&quot;_srgbf</name>
      <anchorfile>classMagnum_1_1Math_1_1Color3.html</anchorfile>
      <anchor>a8ce737bc231dc4fb12acb250712a3693</anchor>
      <arglist>(unsigned long long value)</arglist>
    </member>
    <member kind="function">
      <type>Corrade::Utility::Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>classMagnum_1_1Math_1_1Color3.html</anchorfile>
      <anchor>afae5b383b9623a3b56c4fae43a16b9ca</anchor>
      <arglist>(Corrade::Utility::Debug &amp;debug, const Color3&lt; UnsignedByte &gt; &amp;value)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Color4&lt; Float &gt;</name>
    <filename>classMagnum_1_1Math_1_1Color4.html</filename>
    <base>Vector4&lt; Float &gt;</base>
    <member kind="typedef">
      <type>Color3&lt; Float &gt;::FloatingPointType</type>
      <name>FloatingPointType</name>
      <anchorfile>classMagnum_1_1Math_1_1Color4.html</anchorfile>
      <anchor>a5b3e32cd0f193133504ccef2dfb5dc61</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Color3&lt; Float &gt;::Hsv</type>
      <name>Hsv</name>
      <anchorfile>classMagnum_1_1Math_1_1Color4.html</anchorfile>
      <anchor>a816c7e5d93d8763b4499d8b83ce14cfa</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Hsv</type>
      <name>HSV</name>
      <anchorfile>classMagnum_1_1Math_1_1Color4.html</anchorfile>
      <anchor>a4342b3ce52c4fc52494cd5888cc0bdfa</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Color4</name>
      <anchorfile>classMagnum_1_1Math_1_1Color4.html</anchorfile>
      <anchor>a3e73d9d3abc4b033bbb38ee1ea642bab</anchor>
      <arglist>() noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Color4</name>
      <anchorfile>classMagnum_1_1Math_1_1Color4.html</anchorfile>
      <anchor>a9c5f1880e7062cf7e0027470aa1761f6</anchor>
      <arglist>(ZeroInitT) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Color4</name>
      <anchorfile>classMagnum_1_1Math_1_1Color4.html</anchorfile>
      <anchor>a796009a7631e5d687e40ab9ef26b7b3d</anchor>
      <arglist>(NoInitT) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Color4</name>
      <anchorfile>classMagnum_1_1Math_1_1Color4.html</anchorfile>
      <anchor>a99c1f739fab793c9e4c0f65255e28b3b</anchor>
      <arglist>(Float rgb, Float alpha=Implementation::fullChannel&lt; Float &gt;()) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Color4</name>
      <anchorfile>classMagnum_1_1Math_1_1Color4.html</anchorfile>
      <anchor>a9317e9cebea34f140b4cb3662447d0c8</anchor>
      <arglist>(Float r, Float g, Float b, Float a=Implementation::fullChannel&lt; Float &gt;()) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Color4</name>
      <anchorfile>classMagnum_1_1Math_1_1Color4.html</anchorfile>
      <anchor>a640e8d95a9faa7564c40597ada282ab4</anchor>
      <arglist>(const Vector3&lt; Float &gt; &amp;rgb, Float a=Implementation::fullChannel&lt; Float &gt;()) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Color4</name>
      <anchorfile>classMagnum_1_1Math_1_1Color4.html</anchorfile>
      <anchor>a5803e017a8019fe2d7755166b99de4ae</anchor>
      <arglist>(const Vector&lt; 4, U &gt; &amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Color4</name>
      <anchorfile>classMagnum_1_1Math_1_1Color4.html</anchorfile>
      <anchor>ae1417108d82b436e60166f28bd51a4dc</anchor>
      <arglist>(const U &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Color4</name>
      <anchorfile>classMagnum_1_1Math_1_1Color4.html</anchorfile>
      <anchor>a40b0075a9217c25fd7bfa32340a5a211</anchor>
      <arglist>(const Vector&lt; 4, Float &gt; &amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type>Hsv</type>
      <name>toHsv</name>
      <anchorfile>classMagnum_1_1Math_1_1Color4.html</anchorfile>
      <anchor>ad36a6558c2e69729b8f45d9b8a69fef0</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Hsv</type>
      <name>toHSV</name>
      <anchorfile>classMagnum_1_1Math_1_1Color4.html</anchorfile>
      <anchor>af249aa59a5e4d29c1eef4878fea0d88b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Deg&lt; FloatingPointType &gt;</type>
      <name>hue</name>
      <anchorfile>classMagnum_1_1Math_1_1Color4.html</anchorfile>
      <anchor>af3c2d5980836ee1505a73fc6eefb906e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>FloatingPointType</type>
      <name>saturation</name>
      <anchorfile>classMagnum_1_1Math_1_1Color4.html</anchorfile>
      <anchor>a8a1a1a461f542098d6d5c361742ab07a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>FloatingPointType</type>
      <name>value</name>
      <anchorfile>classMagnum_1_1Math_1_1Color4.html</anchorfile>
      <anchor>a760a981f0f0ccc0c613175a29c35042a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4&lt; FloatingPointType &gt;</type>
      <name>toSrgbAlpha</name>
      <anchorfile>classMagnum_1_1Math_1_1Color4.html</anchorfile>
      <anchor>aa216b2ffa39b9cecca96cdd4770fda13</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4&lt; Integral &gt;</type>
      <name>toSrgbAlpha</name>
      <anchorfile>classMagnum_1_1Math_1_1Color4.html</anchorfile>
      <anchor>a03fcc5dfba415c34c3df67d1440f9f89</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector3&lt; FloatingPointType &gt;</type>
      <name>toXyz</name>
      <anchorfile>classMagnum_1_1Math_1_1Color4.html</anchorfile>
      <anchor>a7579d09b5d305dc7362b2b42aca30d88</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static constexpr Color4&lt; Float &gt;</type>
      <name>red</name>
      <anchorfile>classMagnum_1_1Math_1_1Color4.html</anchorfile>
      <anchor>a784b2314a5f960bb91e11baadccd8ca7</anchor>
      <arglist>(Float red=Implementation::fullChannel&lt; Float &gt;(), Float alpha=Implementation::fullChannel&lt; Float &gt;())</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static constexpr Color4&lt; Float &gt;</type>
      <name>green</name>
      <anchorfile>classMagnum_1_1Math_1_1Color4.html</anchorfile>
      <anchor>a8a5429704f834f4375371e620109b4f8</anchor>
      <arglist>(Float green=Implementation::fullChannel&lt; Float &gt;(), Float alpha=Implementation::fullChannel&lt; Float &gt;())</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static constexpr Color4&lt; Float &gt;</type>
      <name>blue</name>
      <anchorfile>classMagnum_1_1Math_1_1Color4.html</anchorfile>
      <anchor>ae0ce831e82daa97a2a694c16ecb20d07</anchor>
      <arglist>(Float blue=Implementation::fullChannel&lt; Float &gt;(), Float alpha=Implementation::fullChannel&lt; Float &gt;())</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static constexpr Color4&lt; Float &gt;</type>
      <name>cyan</name>
      <anchorfile>classMagnum_1_1Math_1_1Color4.html</anchorfile>
      <anchor>a489b6778ff29a17b4d8f60c0b9b4c97c</anchor>
      <arglist>(Float red=Float(0), Float alpha=Implementation::fullChannel&lt; Float &gt;())</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static constexpr Color4&lt; Float &gt;</type>
      <name>magenta</name>
      <anchorfile>classMagnum_1_1Math_1_1Color4.html</anchorfile>
      <anchor>a14f58e1fcfdee9fc6a045e5a58570f3e</anchor>
      <arglist>(Float green=Float(0), Float alpha=Implementation::fullChannel&lt; Float &gt;())</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static constexpr Color4&lt; Float &gt;</type>
      <name>yellow</name>
      <anchorfile>classMagnum_1_1Math_1_1Color4.html</anchorfile>
      <anchor>af88b6d80684a9f068eed07133a48f0dc</anchor>
      <arglist>(Float blue=Float(0), Float alpha=Implementation::fullChannel&lt; Float &gt;())</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Color4&lt; Float &gt;</type>
      <name>fromHsv</name>
      <anchorfile>classMagnum_1_1Math_1_1Color4.html</anchorfile>
      <anchor>a8febf22ced9cd7338e3ddf6dc95e3b10</anchor>
      <arglist>(const Hsv &amp;hsv, Float a=Implementation::fullChannel&lt; Float &gt;())</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Color4&lt; Float &gt;</type>
      <name>fromHsv</name>
      <anchorfile>classMagnum_1_1Math_1_1Color4.html</anchorfile>
      <anchor>a83a5c010d34fe1f490406d757441c57d</anchor>
      <arglist>(Deg&lt; FloatingPointType &gt; hue, FloatingPointType saturation, FloatingPointType value, Float alpha=Implementation::fullChannel&lt; Float &gt;())</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Color4&lt; Float &gt;</type>
      <name>fromHSV</name>
      <anchorfile>classMagnum_1_1Math_1_1Color4.html</anchorfile>
      <anchor>a617d015bac06a9e646ca93b112fca2e5</anchor>
      <arglist>(const Hsv &amp;hsv, Float a=Implementation::fullChannel&lt; Float &gt;())</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Color4&lt; Float &gt;</type>
      <name>fromHSV</name>
      <anchorfile>classMagnum_1_1Math_1_1Color4.html</anchorfile>
      <anchor>a4d6f81cfad69d7d42c3aa95ec8b8d1e1</anchor>
      <arglist>(Deg&lt; FloatingPointType &gt; hue, FloatingPointType saturation, FloatingPointType value, Float a=Implementation::fullChannel&lt; Float &gt;())</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Color4&lt; Float &gt;</type>
      <name>fromSrgbAlpha</name>
      <anchorfile>classMagnum_1_1Math_1_1Color4.html</anchorfile>
      <anchor>a84c259d66eac3166fa9134f8f15eb785</anchor>
      <arglist>(const Vector4&lt; FloatingPointType &gt; &amp;srgbAlpha)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Color4&lt; Float &gt;</type>
      <name>fromSrgbAlpha</name>
      <anchorfile>classMagnum_1_1Math_1_1Color4.html</anchorfile>
      <anchor>a66c193208074fe92e65243ee4e162f8b</anchor>
      <arglist>(const Vector4&lt; Integral &gt; &amp;srgbAlpha)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Color4&lt; Float &gt;</type>
      <name>fromSrgb</name>
      <anchorfile>classMagnum_1_1Math_1_1Color4.html</anchorfile>
      <anchor>a97b5b2df8675f86d199c56ada8be27b2</anchor>
      <arglist>(const Vector3&lt; FloatingPointType &gt; &amp;srgb, Float a=Implementation::fullChannel&lt; Float &gt;())</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Color4&lt; Float &gt;</type>
      <name>fromSrgb</name>
      <anchorfile>classMagnum_1_1Math_1_1Color4.html</anchorfile>
      <anchor>a75a9d660a17cf6f974b8b29085d798ad</anchor>
      <arglist>(const Vector3&lt; Integral &gt; &amp;srgb, Float a=Implementation::fullChannel&lt; Float &gt;())</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Color4&lt; Float &gt;</type>
      <name>fromXyz</name>
      <anchorfile>classMagnum_1_1Math_1_1Color4.html</anchorfile>
      <anchor>a6a23a77cf0f2d9fee7c53b79163c9646</anchor>
      <arglist>(const Vector3&lt; FloatingPointType &gt; xyz, Float a=Implementation::fullChannel&lt; Float &gt;())</arglist>
    </member>
    <member kind="function">
      <type>constexpr Color4&lt; UnsignedByte &gt;</type>
      <name>operator&quot;&quot;_rgba</name>
      <anchorfile>classMagnum_1_1Math_1_1Color4.html</anchorfile>
      <anchor>a33bb6e4470bbebf78e05c434ceabec43</anchor>
      <arglist>(unsigned long long value)</arglist>
    </member>
    <member kind="function">
      <type>constexpr Vector4&lt; UnsignedByte &gt;</type>
      <name>operator&quot;&quot;_srgba</name>
      <anchorfile>classMagnum_1_1Math_1_1Color4.html</anchorfile>
      <anchor>a88197216abf20bf0d1bd7c5699ec519c</anchor>
      <arglist>(unsigned long long value)</arglist>
    </member>
    <member kind="function">
      <type>Color4&lt; Float &gt;</type>
      <name>operator&quot;&quot;_rgbaf</name>
      <anchorfile>classMagnum_1_1Math_1_1Color4.html</anchorfile>
      <anchor>a827104fe7653f4bde5966f8ae5b0913a</anchor>
      <arglist>(unsigned long long value)</arglist>
    </member>
    <member kind="function">
      <type>Color4&lt; Float &gt;</type>
      <name>operator&quot;&quot;_srgbaf</name>
      <anchorfile>classMagnum_1_1Math_1_1Color4.html</anchorfile>
      <anchor>a7cc23ef04fa621c95f3ec3a28638edcc</anchor>
      <arglist>(unsigned long long value)</arglist>
    </member>
    <member kind="function">
      <type>Corrade::Utility::Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>classMagnum_1_1Math_1_1Color4.html</anchorfile>
      <anchor>a338890901a6aa2d1e80e689f9b2532a4</anchor>
      <arglist>(Corrade::Utility::Debug &amp;debug, const Color4&lt; UnsignedByte &gt; &amp;value)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Corrade::Utility::ConfigurationValue&lt; Magnum::Math::Bezier&lt; order, dimensions, T &gt; &gt;</name>
    <filename>structCorrade_1_1Utility_1_1ConfigurationValue_3_01Magnum_1_1Math_1_1Bezier_3_01order_00_01dimensions_00_01T_01_4_01_4.html</filename>
    <templarg>order</templarg>
    <templarg>dimensions</templarg>
    <templarg></templarg>
    <member kind="function" static="yes">
      <type>static std::string</type>
      <name>toString</name>
      <anchorfile>structCorrade_1_1Utility_1_1ConfigurationValue_3_01Magnum_1_1Math_1_1Bezier_3_01order_00_01dimensions_00_01T_01_4_01_4.html</anchorfile>
      <anchor>ae04c253f9a3ff725a8e7b9c3c9b2c223</anchor>
      <arglist>(const Magnum::Math::Bezier&lt; order, dimensions, T &gt; &amp;value, ConfigurationValueFlags flags)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Magnum::Math::Bezier&lt; order, dimensions, T &gt;</type>
      <name>fromString</name>
      <anchorfile>structCorrade_1_1Utility_1_1ConfigurationValue_3_01Magnum_1_1Math_1_1Bezier_3_01order_00_01dimensions_00_01T_01_4_01_4.html</anchorfile>
      <anchor>a5375dafcb15d6797d3b1e04c38d269ec</anchor>
      <arglist>(const std::string &amp;stringValue, ConfigurationValueFlags flags)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Corrade::Utility::ConfigurationValue&lt; Magnum::Math::Color3&lt; T &gt; &gt;</name>
    <filename>structCorrade_1_1Utility_1_1ConfigurationValue_3_01Magnum_1_1Math_1_1Color3_3_01T_01_4_01_4.html</filename>
    <templarg></templarg>
    <base>ConfigurationValue&lt; Magnum::Math::Vector&lt; 3, T &gt; &gt;</base>
  </compound>
  <compound kind="struct">
    <name>Corrade::Utility::ConfigurationValue&lt; Magnum::Math::Color4&lt; T &gt; &gt;</name>
    <filename>structCorrade_1_1Utility_1_1ConfigurationValue_3_01Magnum_1_1Math_1_1Color4_3_01T_01_4_01_4.html</filename>
    <templarg></templarg>
    <base>ConfigurationValue&lt; Magnum::Math::Vector&lt; 4, T &gt; &gt;</base>
  </compound>
  <compound kind="struct">
    <name>Corrade::Utility::ConfigurationValue&lt; Magnum::Math::Deg&lt; T &gt; &gt;</name>
    <filename>structCorrade_1_1Utility_1_1ConfigurationValue_3_01Magnum_1_1Math_1_1Deg_3_01T_01_4_01_4.html</filename>
    <templarg></templarg>
    <member kind="function" static="yes">
      <type>static std::string</type>
      <name>toString</name>
      <anchorfile>structCorrade_1_1Utility_1_1ConfigurationValue_3_01Magnum_1_1Math_1_1Deg_3_01T_01_4_01_4.html</anchorfile>
      <anchor>a0295bd650c95a2282b9fa9ee09d23990</anchor>
      <arglist>(const Magnum::Math::Deg&lt; T &gt; &amp;value, ConfigurationValueFlags flags)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Magnum::Math::Deg&lt; T &gt;</type>
      <name>fromString</name>
      <anchorfile>structCorrade_1_1Utility_1_1ConfigurationValue_3_01Magnum_1_1Math_1_1Deg_3_01T_01_4_01_4.html</anchorfile>
      <anchor>a9b51d9cc994a033d8610d92599a0f638</anchor>
      <arglist>(const std::string &amp;stringValue, ConfigurationValueFlags flags)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Corrade::Utility::ConfigurationValue&lt; Magnum::Math::Matrix3&lt; T &gt; &gt;</name>
    <filename>structCorrade_1_1Utility_1_1ConfigurationValue_3_01Magnum_1_1Math_1_1Matrix3_3_01T_01_4_01_4.html</filename>
    <templarg></templarg>
    <base>ConfigurationValue&lt; Magnum::Math::Matrix3x3&lt; T &gt; &gt;</base>
  </compound>
  <compound kind="struct">
    <name>Corrade::Utility::ConfigurationValue&lt; Magnum::Math::Matrix4&lt; T &gt; &gt;</name>
    <filename>structCorrade_1_1Utility_1_1ConfigurationValue_3_01Magnum_1_1Math_1_1Matrix4_3_01T_01_4_01_4.html</filename>
    <templarg></templarg>
    <base>ConfigurationValue&lt; Magnum::Math::Matrix4x4&lt; T &gt; &gt;</base>
  </compound>
  <compound kind="struct">
    <name>Corrade::Utility::ConfigurationValue&lt; Magnum::Math::Matrix&lt; size, T &gt; &gt;</name>
    <filename>structCorrade_1_1Utility_1_1ConfigurationValue_3_01Magnum_1_1Math_1_1Matrix_3_01size_00_01T_01_4_01_4.html</filename>
    <templarg>size</templarg>
    <templarg></templarg>
    <base>ConfigurationValue&lt; Magnum::Math::RectangularMatrix&lt; size, size, T &gt; &gt;</base>
  </compound>
  <compound kind="struct">
    <name>Corrade::Utility::ConfigurationValue&lt; Magnum::Math::Rad&lt; T &gt; &gt;</name>
    <filename>structCorrade_1_1Utility_1_1ConfigurationValue_3_01Magnum_1_1Math_1_1Rad_3_01T_01_4_01_4.html</filename>
    <templarg></templarg>
    <member kind="function" static="yes">
      <type>static std::string</type>
      <name>toString</name>
      <anchorfile>structCorrade_1_1Utility_1_1ConfigurationValue_3_01Magnum_1_1Math_1_1Rad_3_01T_01_4_01_4.html</anchorfile>
      <anchor>ac6dcfbef0ddeb93c3f42f3a7b9e024b1</anchor>
      <arglist>(const Magnum::Math::Rad&lt; T &gt; &amp;value, ConfigurationValueFlags flags)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Magnum::Math::Rad&lt; T &gt;</type>
      <name>fromString</name>
      <anchorfile>structCorrade_1_1Utility_1_1ConfigurationValue_3_01Magnum_1_1Math_1_1Rad_3_01T_01_4_01_4.html</anchorfile>
      <anchor>a70b14c105472c4fd74dabe31adca603a</anchor>
      <arglist>(const std::string &amp;stringValue, ConfigurationValueFlags flags)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Corrade::Utility::ConfigurationValue&lt; Magnum::Math::Range2D&lt; T &gt; &gt;</name>
    <filename>structCorrade_1_1Utility_1_1ConfigurationValue_3_01Magnum_1_1Math_1_1Range2D_3_01T_01_4_01_4.html</filename>
    <templarg></templarg>
    <base>ConfigurationValue&lt; Magnum::Math::Range&lt; 2, T &gt; &gt;</base>
  </compound>
  <compound kind="struct">
    <name>Corrade::Utility::ConfigurationValue&lt; Magnum::Math::Range3D&lt; T &gt; &gt;</name>
    <filename>structCorrade_1_1Utility_1_1ConfigurationValue_3_01Magnum_1_1Math_1_1Range3D_3_01T_01_4_01_4.html</filename>
    <templarg></templarg>
    <base>ConfigurationValue&lt; Magnum::Math::Range&lt; 3, T &gt; &gt;</base>
  </compound>
  <compound kind="struct">
    <name>Corrade::Utility::ConfigurationValue&lt; Magnum::Math::Range&lt; dimensions, T &gt; &gt;</name>
    <filename>structCorrade_1_1Utility_1_1ConfigurationValue_3_01Magnum_1_1Math_1_1Range_3_01dimensions_00_01T_01_4_01_4.html</filename>
    <templarg>dimensions</templarg>
    <templarg></templarg>
    <member kind="function" static="yes">
      <type>static std::string</type>
      <name>toString</name>
      <anchorfile>structCorrade_1_1Utility_1_1ConfigurationValue_3_01Magnum_1_1Math_1_1Range_3_01dimensions_00_01T_01_4_01_4.html</anchorfile>
      <anchor>a2a340656bc624d3ad0fd2c7cd65d90ba</anchor>
      <arglist>(const Magnum::Math::Range&lt; dimensions, T &gt; &amp;value, const ConfigurationValueFlags flags)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Magnum::Math::Range&lt; dimensions, T &gt;</type>
      <name>fromString</name>
      <anchorfile>structCorrade_1_1Utility_1_1ConfigurationValue_3_01Magnum_1_1Math_1_1Range_3_01dimensions_00_01T_01_4_01_4.html</anchorfile>
      <anchor>acb84439a7af9fa9779b205785e765dcd</anchor>
      <arglist>(const std::string &amp;stringValue, const ConfigurationValueFlags flags)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Corrade::Utility::ConfigurationValue&lt; Magnum::Math::RectangularMatrix&lt; cols, rows, T &gt; &gt;</name>
    <filename>structCorrade_1_1Utility_1_1ConfigurationValue_3_01Magnum_1_1Math_1_1RectangularMatrix_3_01cols_00_01rows_00_01T_01_4_01_4.html</filename>
    <templarg>cols</templarg>
    <templarg>rows</templarg>
    <templarg></templarg>
    <member kind="function" static="yes">
      <type>static std::string</type>
      <name>toString</name>
      <anchorfile>structCorrade_1_1Utility_1_1ConfigurationValue_3_01Magnum_1_1Math_1_1RectangularMatrix_3_01cols_00_01rows_00_01T_01_4_01_4.html</anchorfile>
      <anchor>a10f2dfad912a398a9577b0feafff210f</anchor>
      <arglist>(const Magnum::Math::RectangularMatrix&lt; cols, rows, T &gt; &amp;value, ConfigurationValueFlags flags)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Magnum::Math::RectangularMatrix&lt; cols, rows, T &gt;</type>
      <name>fromString</name>
      <anchorfile>structCorrade_1_1Utility_1_1ConfigurationValue_3_01Magnum_1_1Math_1_1RectangularMatrix_3_01cols_00_01rows_00_01T_01_4_01_4.html</anchorfile>
      <anchor>aa70987478d58d60cf5344cd5d9d48396</anchor>
      <arglist>(const std::string &amp;stringValue, ConfigurationValueFlags flags)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Corrade::Utility::ConfigurationValue&lt; Magnum::Math::Vector2&lt; T &gt; &gt;</name>
    <filename>structCorrade_1_1Utility_1_1ConfigurationValue_3_01Magnum_1_1Math_1_1Vector2_3_01T_01_4_01_4.html</filename>
    <templarg></templarg>
    <base>ConfigurationValue&lt; Magnum::Math::Vector&lt; 2, T &gt; &gt;</base>
  </compound>
  <compound kind="struct">
    <name>Corrade::Utility::ConfigurationValue&lt; Magnum::Math::Vector3&lt; T &gt; &gt;</name>
    <filename>structCorrade_1_1Utility_1_1ConfigurationValue_3_01Magnum_1_1Math_1_1Vector3_3_01T_01_4_01_4.html</filename>
    <templarg></templarg>
    <base>ConfigurationValue&lt; Magnum::Math::Vector&lt; 3, T &gt; &gt;</base>
  </compound>
  <compound kind="struct">
    <name>Corrade::Utility::ConfigurationValue&lt; Magnum::Math::Vector4&lt; T &gt; &gt;</name>
    <filename>structCorrade_1_1Utility_1_1ConfigurationValue_3_01Magnum_1_1Math_1_1Vector4_3_01T_01_4_01_4.html</filename>
    <templarg></templarg>
    <base>ConfigurationValue&lt; Magnum::Math::Vector&lt; 4, T &gt; &gt;</base>
  </compound>
  <compound kind="struct">
    <name>Corrade::Utility::ConfigurationValue&lt; Magnum::Math::Vector&lt; size, T &gt; &gt;</name>
    <filename>structCorrade_1_1Utility_1_1ConfigurationValue_3_01Magnum_1_1Math_1_1Vector_3_01size_00_01T_01_4_01_4.html</filename>
    <templarg>size</templarg>
    <templarg></templarg>
    <member kind="function" static="yes">
      <type>static std::string</type>
      <name>toString</name>
      <anchorfile>structCorrade_1_1Utility_1_1ConfigurationValue_3_01Magnum_1_1Math_1_1Vector_3_01size_00_01T_01_4_01_4.html</anchorfile>
      <anchor>a602cf7cb4cdc42d201a3a11ab7bb736b</anchor>
      <arglist>(const Magnum::Math::Vector&lt; size, T &gt; &amp;value, ConfigurationValueFlags flags)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Magnum::Math::Vector&lt; size, T &gt;</type>
      <name>fromString</name>
      <anchorfile>structCorrade_1_1Utility_1_1ConfigurationValue_3_01Magnum_1_1Math_1_1Vector_3_01size_00_01T_01_4_01_4.html</anchorfile>
      <anchor>ad58c642263c9f2a81f874e1581785330</anchor>
      <arglist>(const std::string &amp;stringValue, ConfigurationValueFlags flags)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Corrade::Utility::ConfigurationValue&lt; Magnum::Mesh::IndexType &gt;</name>
    <filename>structCorrade_1_1Utility_1_1ConfigurationValue_3_01Magnum_1_1Mesh_1_1IndexType_01_4.html</filename>
    <member kind="function" static="yes">
      <type>static std::string</type>
      <name>toString</name>
      <anchorfile>structCorrade_1_1Utility_1_1ConfigurationValue_3_01Magnum_1_1Mesh_1_1IndexType_01_4.html</anchorfile>
      <anchor>aab81c34af17de11c63a41f588c668cc7</anchor>
      <arglist>(Magnum::Mesh::IndexType value, ConfigurationValueFlags)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Magnum::Mesh::IndexType</type>
      <name>fromString</name>
      <anchorfile>structCorrade_1_1Utility_1_1ConfigurationValue_3_01Magnum_1_1Mesh_1_1IndexType_01_4.html</anchorfile>
      <anchor>ae84af5eba114735f82e8d522cb0c328f</anchor>
      <arglist>(const std::string &amp;stringValue, ConfigurationValueFlags)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Corrade::Utility::ConfigurationValue&lt; Magnum::MeshPrimitive &gt;</name>
    <filename>structCorrade_1_1Utility_1_1ConfigurationValue_3_01Magnum_1_1MeshPrimitive_01_4.html</filename>
    <member kind="function" static="yes">
      <type>static std::string</type>
      <name>toString</name>
      <anchorfile>structCorrade_1_1Utility_1_1ConfigurationValue_3_01Magnum_1_1MeshPrimitive_01_4.html</anchorfile>
      <anchor>a101a3cab40405c250b1043ed3f8fe878</anchor>
      <arglist>(Magnum::MeshPrimitive value, ConfigurationValueFlags)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Magnum::MeshPrimitive</type>
      <name>fromString</name>
      <anchorfile>structCorrade_1_1Utility_1_1ConfigurationValue_3_01Magnum_1_1MeshPrimitive_01_4.html</anchorfile>
      <anchor>a28646e175c248e12acabacf6c6e33972</anchor>
      <arglist>(const std::string &amp;stringValue, ConfigurationValueFlags)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Drawable&lt; dimensions, Float &gt;</name>
    <filename>classMagnum_1_1SceneGraph_1_1Drawable.html</filename>
    <base>AbstractGroupedFeature&lt; dimensions, Drawable&lt; dimensions, Float &gt;, Float &gt;</base>
    <member kind="function">
      <type></type>
      <name>Drawable</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1Drawable.html</anchorfile>
      <anchor>adaca26dbdfd13c56651a7287936bfea5</anchor>
      <arglist>(AbstractObject&lt; dimensions, Float &gt; &amp;object, DrawableGroup&lt; dimensions, Float &gt; *drawables=nullptr)</arglist>
    </member>
    <member kind="function">
      <type>DrawableGroup&lt; dimensions, Float &gt; *</type>
      <name>drawables</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1Drawable.html</anchorfile>
      <anchor>a032ddbc32002122cc6af40eaa30136cf</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const DrawableGroup&lt; dimensions, Float &gt; *</type>
      <name>drawables</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1Drawable.html</anchorfile>
      <anchor>acc8c44d5fd0c5255f260f3a5e340b1d9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>draw</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1Drawable.html</anchorfile>
      <anchor>aca0d0a219aa4d7712316de55d67f2134</anchor>
      <arglist>(const MatrixTypeFor&lt; dimensions, Float &gt; &amp;transformationMatrix, Camera&lt; dimensions, Float &gt; &amp;camera)=0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Dual&lt; Complex&lt; T &gt; &gt;</name>
    <filename>classMagnum_1_1Math_1_1Dual.html</filename>
    <member kind="typedef">
      <type>Complex&lt; T &gt;</type>
      <name>Type</name>
      <anchorfile>classMagnum_1_1Math_1_1Dual.html</anchorfile>
      <anchor>a3be18c964dc9a31a5adef067790a37d2</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Dual</name>
      <anchorfile>classMagnum_1_1Math_1_1Dual.html</anchorfile>
      <anchor>a1510f9f641c2dfd00ca7b01834cde0fd</anchor>
      <arglist>() noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Dual</name>
      <anchorfile>classMagnum_1_1Math_1_1Dual.html</anchorfile>
      <anchor>ae1030ae3f17f87e504c1bca6bb4512f4</anchor>
      <arglist>(ZeroInitT) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Dual</name>
      <anchorfile>classMagnum_1_1Math_1_1Dual.html</anchorfile>
      <anchor>aa778161aca036a8f91f1416484c0f3e4</anchor>
      <arglist>(NoInitT) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Dual</name>
      <anchorfile>classMagnum_1_1Math_1_1Dual.html</anchorfile>
      <anchor>a145bf8a971711d63b11cce2cdbf60401</anchor>
      <arglist>(const Complex&lt; T &gt; &amp;real, const Complex&lt; T &gt; &amp;dual=Complex&lt; T &gt;()) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Dual</name>
      <anchorfile>classMagnum_1_1Math_1_1Dual.html</anchorfile>
      <anchor>aa69830829a6d39af13c7c0a36ce8d4e9</anchor>
      <arglist>(const Dual&lt; U &gt; &amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Dual</name>
      <anchorfile>classMagnum_1_1Math_1_1Dual.html</anchorfile>
      <anchor>a3547ae5040344880683a611501a4eb3a</anchor>
      <arglist>(const Dual&lt; Complex&lt; T &gt; &gt; &amp;) noexcept=default</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classMagnum_1_1Math_1_1Dual.html</anchorfile>
      <anchor>a738e797156efbe5c52f4793750a259fc</anchor>
      <arglist>(const Dual&lt; Complex&lt; T &gt; &gt; &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>classMagnum_1_1Math_1_1Dual.html</anchorfile>
      <anchor>aad743cb853987de2d36c32d16d2fde9b</anchor>
      <arglist>(const Dual&lt; Complex&lt; T &gt; &gt; &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>Complex&lt; T &gt; &amp;</type>
      <name>real</name>
      <anchorfile>classMagnum_1_1Math_1_1Dual.html</anchorfile>
      <anchor>a8f653e88c741b4a2adad75bca3bddf6b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>constexpr Complex&lt; T &gt;</type>
      <name>real</name>
      <anchorfile>classMagnum_1_1Math_1_1Dual.html</anchorfile>
      <anchor>acf023b20b6d04b85e663e5419752e4b0</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Complex&lt; T &gt; &amp;</type>
      <name>dual</name>
      <anchorfile>classMagnum_1_1Math_1_1Dual.html</anchorfile>
      <anchor>af66cf3b6fb28b6c2979191ac95b3b492</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>constexpr Complex&lt; T &gt;</type>
      <name>dual</name>
      <anchorfile>classMagnum_1_1Math_1_1Dual.html</anchorfile>
      <anchor>af659aa1f2e80a2ed16e254c096078071</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Dual&lt; Complex&lt; T &gt; &gt; &amp;</type>
      <name>operator+=</name>
      <anchorfile>classMagnum_1_1Math_1_1Dual.html</anchorfile>
      <anchor>aa696c4eb5da36892502a712ee0031f3c</anchor>
      <arglist>(const Dual&lt; Complex&lt; T &gt; &gt; &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>Dual&lt; Complex&lt; T &gt; &gt;</type>
      <name>operator+</name>
      <anchorfile>classMagnum_1_1Math_1_1Dual.html</anchorfile>
      <anchor>a7338137ec4cf94c5482422028138dfd4</anchor>
      <arglist>(const Dual&lt; Complex&lt; T &gt; &gt; &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>Dual&lt; Complex&lt; T &gt; &gt;</type>
      <name>operator-</name>
      <anchorfile>classMagnum_1_1Math_1_1Dual.html</anchorfile>
      <anchor>a4a2d34b1e1dbbebd2796bc641bc8cb2f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Dual&lt; Complex&lt; T &gt; &gt;</type>
      <name>operator-</name>
      <anchorfile>classMagnum_1_1Math_1_1Dual.html</anchorfile>
      <anchor>af6711ac675c94d967f1f2715f80132a9</anchor>
      <arglist>(const Dual&lt; Complex&lt; T &gt; &gt; &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>Dual&lt; Complex&lt; T &gt; &gt; &amp;</type>
      <name>operator-=</name>
      <anchorfile>classMagnum_1_1Math_1_1Dual.html</anchorfile>
      <anchor>a27a849b0e8599549e6f1bc1372411109</anchor>
      <arglist>(const Dual&lt; Complex&lt; T &gt; &gt; &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>auto</type>
      <name>operator*</name>
      <anchorfile>classMagnum_1_1Math_1_1Dual.html</anchorfile>
      <anchor>af4790856d51350f4115bafed6f1af2f9</anchor>
      <arglist>(const Dual&lt; U &gt; &amp;other) const  -&gt; Dual&lt; decltype(std::declval&lt; Complex&lt; T &gt; &gt;()*std::declval&lt; U &gt;())&gt;</arglist>
    </member>
    <member kind="function">
      <type>Dual&lt; decltype(std::declval&lt; Complex&lt; T &gt; &gt;)*std::declval&lt; U &gt;))&gt;</type>
      <name>operator*</name>
      <anchorfile>classMagnum_1_1Math_1_1Dual.html</anchorfile>
      <anchor>aa79977248c42b193ffac4c19758f2c78</anchor>
      <arglist>(const U &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>auto</type>
      <name>operator/</name>
      <anchorfile>classMagnum_1_1Math_1_1Dual.html</anchorfile>
      <anchor>af0fe85e768571b581addceb7f0828cb2</anchor>
      <arglist>(const Dual&lt; U &gt; &amp;other) const  -&gt; Dual&lt; decltype(std::declval&lt; Complex&lt; T &gt; &gt;()/std::declval&lt; U &gt;())&gt;</arglist>
    </member>
    <member kind="function">
      <type>V</type>
      <name>operator/</name>
      <anchorfile>classMagnum_1_1Math_1_1Dual.html</anchorfile>
      <anchor>ab58d36ebdd2f9e96101e38dbafd0b8cb</anchor>
      <arglist>(const U &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>Dual&lt; Complex&lt; T &gt; &gt;</type>
      <name>conjugated</name>
      <anchorfile>classMagnum_1_1Math_1_1Dual.html</anchorfile>
      <anchor>a868bd943cd93912b32c6acfc8ade9479</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>V</type>
      <name>operator*</name>
      <anchorfile>classMagnum_1_1Math_1_1Dual.html</anchorfile>
      <anchor>a6a273cd9fda37078db42173ffc586404</anchor>
      <arglist>(const Complex&lt; T &gt; &amp;a, const Dual&lt; U &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>Corrade::Utility::Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>classMagnum_1_1Math_1_1Dual.html</anchorfile>
      <anchor>a566f5ca101d2a3793843141980b2545e</anchor>
      <arglist>(Corrade::Utility::Debug &amp;debug, const Dual&lt; Complex&lt; T &gt; &gt; &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>Dual&lt; Complex&lt; T &gt; &gt;</type>
      <name>sqrt</name>
      <anchorfile>classMagnum_1_1Math_1_1Dual.html</anchorfile>
      <anchor>a9f399ec60dc87478fcdbe6091e0b6783</anchor>
      <arglist>(const Dual&lt; Complex&lt; T &gt; &gt; &amp;dual)</arglist>
    </member>
    <member kind="function">
      <type>std::pair&lt; Dual&lt; Complex&lt; T &gt; &gt;, Dual&lt; Complex&lt; T &gt; &gt; &gt;</type>
      <name>sincos</name>
      <anchorfile>classMagnum_1_1Math_1_1Dual.html</anchorfile>
      <anchor>adf84b1bff280ad75079c8774ca25cbec</anchor>
      <arglist>(const Dual&lt; Rad&lt; Complex&lt; T &gt; &gt;&gt; &amp;angle)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Dual&lt; Quaternion&lt; T &gt; &gt;</name>
    <filename>classMagnum_1_1Math_1_1Dual.html</filename>
    <member kind="typedef">
      <type>Quaternion&lt; T &gt;</type>
      <name>Type</name>
      <anchorfile>classMagnum_1_1Math_1_1Dual.html</anchorfile>
      <anchor>a3be18c964dc9a31a5adef067790a37d2</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Dual</name>
      <anchorfile>classMagnum_1_1Math_1_1Dual.html</anchorfile>
      <anchor>a1510f9f641c2dfd00ca7b01834cde0fd</anchor>
      <arglist>() noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Dual</name>
      <anchorfile>classMagnum_1_1Math_1_1Dual.html</anchorfile>
      <anchor>ae1030ae3f17f87e504c1bca6bb4512f4</anchor>
      <arglist>(ZeroInitT) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Dual</name>
      <anchorfile>classMagnum_1_1Math_1_1Dual.html</anchorfile>
      <anchor>aa778161aca036a8f91f1416484c0f3e4</anchor>
      <arglist>(NoInitT) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Dual</name>
      <anchorfile>classMagnum_1_1Math_1_1Dual.html</anchorfile>
      <anchor>a145bf8a971711d63b11cce2cdbf60401</anchor>
      <arglist>(const Quaternion&lt; T &gt; &amp;real, const Quaternion&lt; T &gt; &amp;dual=Quaternion&lt; T &gt;()) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Dual</name>
      <anchorfile>classMagnum_1_1Math_1_1Dual.html</anchorfile>
      <anchor>aa69830829a6d39af13c7c0a36ce8d4e9</anchor>
      <arglist>(const Dual&lt; U &gt; &amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Dual</name>
      <anchorfile>classMagnum_1_1Math_1_1Dual.html</anchorfile>
      <anchor>a3547ae5040344880683a611501a4eb3a</anchor>
      <arglist>(const Dual&lt; Quaternion&lt; T &gt; &gt; &amp;) noexcept=default</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classMagnum_1_1Math_1_1Dual.html</anchorfile>
      <anchor>a738e797156efbe5c52f4793750a259fc</anchor>
      <arglist>(const Dual&lt; Quaternion&lt; T &gt; &gt; &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>classMagnum_1_1Math_1_1Dual.html</anchorfile>
      <anchor>aad743cb853987de2d36c32d16d2fde9b</anchor>
      <arglist>(const Dual&lt; Quaternion&lt; T &gt; &gt; &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>Quaternion&lt; T &gt; &amp;</type>
      <name>real</name>
      <anchorfile>classMagnum_1_1Math_1_1Dual.html</anchorfile>
      <anchor>a8f653e88c741b4a2adad75bca3bddf6b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>constexpr Quaternion&lt; T &gt;</type>
      <name>real</name>
      <anchorfile>classMagnum_1_1Math_1_1Dual.html</anchorfile>
      <anchor>acf023b20b6d04b85e663e5419752e4b0</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Quaternion&lt; T &gt; &amp;</type>
      <name>dual</name>
      <anchorfile>classMagnum_1_1Math_1_1Dual.html</anchorfile>
      <anchor>af66cf3b6fb28b6c2979191ac95b3b492</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>constexpr Quaternion&lt; T &gt;</type>
      <name>dual</name>
      <anchorfile>classMagnum_1_1Math_1_1Dual.html</anchorfile>
      <anchor>af659aa1f2e80a2ed16e254c096078071</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Dual&lt; Quaternion&lt; T &gt; &gt; &amp;</type>
      <name>operator+=</name>
      <anchorfile>classMagnum_1_1Math_1_1Dual.html</anchorfile>
      <anchor>aa696c4eb5da36892502a712ee0031f3c</anchor>
      <arglist>(const Dual&lt; Quaternion&lt; T &gt; &gt; &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>Dual&lt; Quaternion&lt; T &gt; &gt;</type>
      <name>operator+</name>
      <anchorfile>classMagnum_1_1Math_1_1Dual.html</anchorfile>
      <anchor>a7338137ec4cf94c5482422028138dfd4</anchor>
      <arglist>(const Dual&lt; Quaternion&lt; T &gt; &gt; &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>Dual&lt; Quaternion&lt; T &gt; &gt;</type>
      <name>operator-</name>
      <anchorfile>classMagnum_1_1Math_1_1Dual.html</anchorfile>
      <anchor>a4a2d34b1e1dbbebd2796bc641bc8cb2f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Dual&lt; Quaternion&lt; T &gt; &gt;</type>
      <name>operator-</name>
      <anchorfile>classMagnum_1_1Math_1_1Dual.html</anchorfile>
      <anchor>af6711ac675c94d967f1f2715f80132a9</anchor>
      <arglist>(const Dual&lt; Quaternion&lt; T &gt; &gt; &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>Dual&lt; Quaternion&lt; T &gt; &gt; &amp;</type>
      <name>operator-=</name>
      <anchorfile>classMagnum_1_1Math_1_1Dual.html</anchorfile>
      <anchor>a27a849b0e8599549e6f1bc1372411109</anchor>
      <arglist>(const Dual&lt; Quaternion&lt; T &gt; &gt; &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>auto</type>
      <name>operator*</name>
      <anchorfile>classMagnum_1_1Math_1_1Dual.html</anchorfile>
      <anchor>af4790856d51350f4115bafed6f1af2f9</anchor>
      <arglist>(const Dual&lt; U &gt; &amp;other) const  -&gt; Dual&lt; decltype(std::declval&lt; Quaternion&lt; T &gt; &gt;()*std::declval&lt; U &gt;())&gt;</arglist>
    </member>
    <member kind="function">
      <type>Dual&lt; decltype(std::declval&lt; Quaternion&lt; T &gt; &gt;)*std::declval&lt; U &gt;))&gt;</type>
      <name>operator*</name>
      <anchorfile>classMagnum_1_1Math_1_1Dual.html</anchorfile>
      <anchor>aa79977248c42b193ffac4c19758f2c78</anchor>
      <arglist>(const U &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>auto</type>
      <name>operator/</name>
      <anchorfile>classMagnum_1_1Math_1_1Dual.html</anchorfile>
      <anchor>af0fe85e768571b581addceb7f0828cb2</anchor>
      <arglist>(const Dual&lt; U &gt; &amp;other) const  -&gt; Dual&lt; decltype(std::declval&lt; Quaternion&lt; T &gt; &gt;()/std::declval&lt; U &gt;())&gt;</arglist>
    </member>
    <member kind="function">
      <type>V</type>
      <name>operator/</name>
      <anchorfile>classMagnum_1_1Math_1_1Dual.html</anchorfile>
      <anchor>ab58d36ebdd2f9e96101e38dbafd0b8cb</anchor>
      <arglist>(const U &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>Dual&lt; Quaternion&lt; T &gt; &gt;</type>
      <name>conjugated</name>
      <anchorfile>classMagnum_1_1Math_1_1Dual.html</anchorfile>
      <anchor>a868bd943cd93912b32c6acfc8ade9479</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>V</type>
      <name>operator*</name>
      <anchorfile>classMagnum_1_1Math_1_1Dual.html</anchorfile>
      <anchor>a6a273cd9fda37078db42173ffc586404</anchor>
      <arglist>(const Quaternion&lt; T &gt; &amp;a, const Dual&lt; U &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>Corrade::Utility::Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>classMagnum_1_1Math_1_1Dual.html</anchorfile>
      <anchor>a566f5ca101d2a3793843141980b2545e</anchor>
      <arglist>(Corrade::Utility::Debug &amp;debug, const Dual&lt; Quaternion&lt; T &gt; &gt; &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>Dual&lt; Quaternion&lt; T &gt; &gt;</type>
      <name>sqrt</name>
      <anchorfile>classMagnum_1_1Math_1_1Dual.html</anchorfile>
      <anchor>a9f399ec60dc87478fcdbe6091e0b6783</anchor>
      <arglist>(const Dual&lt; Quaternion&lt; T &gt; &gt; &amp;dual)</arglist>
    </member>
    <member kind="function">
      <type>std::pair&lt; Dual&lt; Quaternion&lt; T &gt; &gt;, Dual&lt; Quaternion&lt; T &gt; &gt; &gt;</type>
      <name>sincos</name>
      <anchorfile>classMagnum_1_1Math_1_1Dual.html</anchorfile>
      <anchor>adf84b1bff280ad75079c8774ca25cbec</anchor>
      <arglist>(const Dual&lt; Rad&lt; Quaternion&lt; T &gt; &gt;&gt; &amp;angle)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>FeatureGroup&lt; dimensions, AbstractShape&lt; dimensions &gt;, Float &gt;</name>
    <filename>classMagnum_1_1SceneGraph_1_1FeatureGroup.html</filename>
    <base>AbstractFeatureGroup&lt; dimensions, Float &gt;</base>
    <member kind="function">
      <type></type>
      <name>~FeatureGroup</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1FeatureGroup.html</anchorfile>
      <anchor>a352fd0f8f6d4a53a5780773a16e00b09</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isEmpty</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1FeatureGroup.html</anchorfile>
      <anchor>a4aabdf6cb5903acff7240fe766415315</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::size_t</type>
      <name>size</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1FeatureGroup.html</anchorfile>
      <anchor>acd03a60e7677bcd97e5b6a73ea4d08c8</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>AbstractShape&lt; dimensions &gt; &amp;</type>
      <name>operator[]</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1FeatureGroup.html</anchorfile>
      <anchor>a2da5b140149a69381b8e252f606ed232</anchor>
      <arglist>(std::size_t index)</arglist>
    </member>
    <member kind="function">
      <type>const AbstractShape&lt; dimensions &gt; &amp;</type>
      <name>operator[]</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1FeatureGroup.html</anchorfile>
      <anchor>af5afd6cbff67483b326c4e06679331ea</anchor>
      <arglist>(std::size_t index) const</arglist>
    </member>
    <member kind="function">
      <type>FeatureGroup&lt; dimensions, AbstractShape&lt; dimensions &gt;, Float &gt; &amp;</type>
      <name>add</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1FeatureGroup.html</anchorfile>
      <anchor>a2091e5d70dde6675b31a52527ce9513b</anchor>
      <arglist>(AbstractShape&lt; dimensions &gt; &amp;feature)</arglist>
    </member>
    <member kind="function">
      <type>FeatureGroup&lt; dimensions, AbstractShape&lt; dimensions &gt;, Float &gt; &amp;</type>
      <name>remove</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1FeatureGroup.html</anchorfile>
      <anchor>a527ccb9c991144fc37fada509aaf4901</anchor>
      <arglist>(AbstractShape&lt; dimensions &gt; &amp;feature)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>FeatureGroup&lt; dimensions, Animable&lt; dimensions, T &gt;, T &gt;</name>
    <filename>classMagnum_1_1SceneGraph_1_1FeatureGroup.html</filename>
    <base>Magnum::SceneGraph::AbstractFeatureGroup</base>
    <member kind="function">
      <type></type>
      <name>~FeatureGroup</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1FeatureGroup.html</anchorfile>
      <anchor>a352fd0f8f6d4a53a5780773a16e00b09</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isEmpty</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1FeatureGroup.html</anchorfile>
      <anchor>a4aabdf6cb5903acff7240fe766415315</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::size_t</type>
      <name>size</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1FeatureGroup.html</anchorfile>
      <anchor>acd03a60e7677bcd97e5b6a73ea4d08c8</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Animable&lt; dimensions, T &gt; &amp;</type>
      <name>operator[]</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1FeatureGroup.html</anchorfile>
      <anchor>a2da5b140149a69381b8e252f606ed232</anchor>
      <arglist>(std::size_t index)</arglist>
    </member>
    <member kind="function">
      <type>const Animable&lt; dimensions, T &gt; &amp;</type>
      <name>operator[]</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1FeatureGroup.html</anchorfile>
      <anchor>af5afd6cbff67483b326c4e06679331ea</anchor>
      <arglist>(std::size_t index) const</arglist>
    </member>
    <member kind="function">
      <type>FeatureGroup&lt; dimensions, Animable&lt; dimensions, T &gt;, T &gt; &amp;</type>
      <name>add</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1FeatureGroup.html</anchorfile>
      <anchor>a2091e5d70dde6675b31a52527ce9513b</anchor>
      <arglist>(Animable&lt; dimensions, T &gt; &amp;feature)</arglist>
    </member>
    <member kind="function">
      <type>FeatureGroup&lt; dimensions, Animable&lt; dimensions, T &gt;, T &gt; &amp;</type>
      <name>remove</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1FeatureGroup.html</anchorfile>
      <anchor>a527ccb9c991144fc37fada509aaf4901</anchor>
      <arglist>(Animable&lt; dimensions, T &gt; &amp;feature)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>FeatureGroup&lt; dimensions, Derived, T &gt;</name>
    <filename>classMagnum_1_1SceneGraph_1_1FeatureGroup.html</filename>
    <base>Magnum::SceneGraph::AbstractFeatureGroup</base>
    <member kind="function">
      <type></type>
      <name>~FeatureGroup</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1FeatureGroup.html</anchorfile>
      <anchor>a352fd0f8f6d4a53a5780773a16e00b09</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isEmpty</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1FeatureGroup.html</anchorfile>
      <anchor>a4aabdf6cb5903acff7240fe766415315</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::size_t</type>
      <name>size</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1FeatureGroup.html</anchorfile>
      <anchor>acd03a60e7677bcd97e5b6a73ea4d08c8</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Derived &amp;</type>
      <name>operator[]</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1FeatureGroup.html</anchorfile>
      <anchor>a2da5b140149a69381b8e252f606ed232</anchor>
      <arglist>(std::size_t index)</arglist>
    </member>
    <member kind="function">
      <type>const Derived &amp;</type>
      <name>operator[]</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1FeatureGroup.html</anchorfile>
      <anchor>af5afd6cbff67483b326c4e06679331ea</anchor>
      <arglist>(std::size_t index) const</arglist>
    </member>
    <member kind="function">
      <type>FeatureGroup&lt; dimensions, Derived, T &gt; &amp;</type>
      <name>add</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1FeatureGroup.html</anchorfile>
      <anchor>a2091e5d70dde6675b31a52527ce9513b</anchor>
      <arglist>(Derived &amp;feature)</arglist>
    </member>
    <member kind="function">
      <type>FeatureGroup&lt; dimensions, Derived, T &gt; &amp;</type>
      <name>remove</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1FeatureGroup.html</anchorfile>
      <anchor>a527ccb9c991144fc37fada509aaf4901</anchor>
      <arglist>(Derived &amp;feature)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>FeatureGroup&lt; dimensions, Drawable&lt; dimensions, Float &gt;, Float &gt;</name>
    <filename>classMagnum_1_1SceneGraph_1_1FeatureGroup.html</filename>
    <base>AbstractFeatureGroup&lt; dimensions, Float &gt;</base>
    <member kind="function">
      <type></type>
      <name>~FeatureGroup</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1FeatureGroup.html</anchorfile>
      <anchor>a352fd0f8f6d4a53a5780773a16e00b09</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isEmpty</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1FeatureGroup.html</anchorfile>
      <anchor>a4aabdf6cb5903acff7240fe766415315</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::size_t</type>
      <name>size</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1FeatureGroup.html</anchorfile>
      <anchor>acd03a60e7677bcd97e5b6a73ea4d08c8</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Drawable&lt; dimensions, Float &gt; &amp;</type>
      <name>operator[]</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1FeatureGroup.html</anchorfile>
      <anchor>a2da5b140149a69381b8e252f606ed232</anchor>
      <arglist>(std::size_t index)</arglist>
    </member>
    <member kind="function">
      <type>const Drawable&lt; dimensions, Float &gt; &amp;</type>
      <name>operator[]</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1FeatureGroup.html</anchorfile>
      <anchor>af5afd6cbff67483b326c4e06679331ea</anchor>
      <arglist>(std::size_t index) const</arglist>
    </member>
    <member kind="function">
      <type>FeatureGroup&lt; dimensions, Drawable&lt; dimensions, Float &gt;, Float &gt; &amp;</type>
      <name>add</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1FeatureGroup.html</anchorfile>
      <anchor>a2091e5d70dde6675b31a52527ce9513b</anchor>
      <arglist>(Drawable&lt; dimensions, Float &gt; &amp;feature)</arglist>
    </member>
    <member kind="function">
      <type>FeatureGroup&lt; dimensions, Drawable&lt; dimensions, Float &gt;, Float &gt; &amp;</type>
      <name>remove</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1FeatureGroup.html</anchorfile>
      <anchor>a527ccb9c991144fc37fada509aaf4901</anchor>
      <arglist>(Drawable&lt; dimensions, Float &gt; &amp;feature)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>FeatureGroup&lt; dimensions, Drawable&lt; dimensions, T &gt;, T &gt;</name>
    <filename>classMagnum_1_1SceneGraph_1_1FeatureGroup.html</filename>
    <base>Magnum::SceneGraph::AbstractFeatureGroup</base>
    <member kind="function">
      <type></type>
      <name>~FeatureGroup</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1FeatureGroup.html</anchorfile>
      <anchor>a352fd0f8f6d4a53a5780773a16e00b09</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isEmpty</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1FeatureGroup.html</anchorfile>
      <anchor>a4aabdf6cb5903acff7240fe766415315</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::size_t</type>
      <name>size</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1FeatureGroup.html</anchorfile>
      <anchor>acd03a60e7677bcd97e5b6a73ea4d08c8</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Drawable&lt; dimensions, T &gt; &amp;</type>
      <name>operator[]</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1FeatureGroup.html</anchorfile>
      <anchor>a2da5b140149a69381b8e252f606ed232</anchor>
      <arglist>(std::size_t index)</arglist>
    </member>
    <member kind="function">
      <type>const Drawable&lt; dimensions, T &gt; &amp;</type>
      <name>operator[]</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1FeatureGroup.html</anchorfile>
      <anchor>af5afd6cbff67483b326c4e06679331ea</anchor>
      <arglist>(std::size_t index) const</arglist>
    </member>
    <member kind="function">
      <type>FeatureGroup&lt; dimensions, Drawable&lt; dimensions, T &gt;, T &gt; &amp;</type>
      <name>add</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1FeatureGroup.html</anchorfile>
      <anchor>a2091e5d70dde6675b31a52527ce9513b</anchor>
      <arglist>(Drawable&lt; dimensions, T &gt; &amp;feature)</arglist>
    </member>
    <member kind="function">
      <type>FeatureGroup&lt; dimensions, Drawable&lt; dimensions, T &gt;, T &gt; &amp;</type>
      <name>remove</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1FeatureGroup.html</anchorfile>
      <anchor>a527ccb9c991144fc37fada509aaf4901</anchor>
      <arglist>(Drawable&lt; dimensions, T &gt; &amp;feature)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>FeatureGroup&lt; dimensions, Playable&lt; dimensions &gt;, Float &gt;</name>
    <filename>classMagnum_1_1SceneGraph_1_1FeatureGroup.html</filename>
    <base>AbstractFeatureGroup&lt; dimensions, Float &gt;</base>
    <member kind="function">
      <type></type>
      <name>~FeatureGroup</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1FeatureGroup.html</anchorfile>
      <anchor>a352fd0f8f6d4a53a5780773a16e00b09</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isEmpty</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1FeatureGroup.html</anchorfile>
      <anchor>a4aabdf6cb5903acff7240fe766415315</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::size_t</type>
      <name>size</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1FeatureGroup.html</anchorfile>
      <anchor>acd03a60e7677bcd97e5b6a73ea4d08c8</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Playable&lt; dimensions &gt; &amp;</type>
      <name>operator[]</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1FeatureGroup.html</anchorfile>
      <anchor>a2da5b140149a69381b8e252f606ed232</anchor>
      <arglist>(std::size_t index)</arglist>
    </member>
    <member kind="function">
      <type>const Playable&lt; dimensions &gt; &amp;</type>
      <name>operator[]</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1FeatureGroup.html</anchorfile>
      <anchor>af5afd6cbff67483b326c4e06679331ea</anchor>
      <arglist>(std::size_t index) const</arglist>
    </member>
    <member kind="function">
      <type>FeatureGroup&lt; dimensions, Playable&lt; dimensions &gt;, Float &gt; &amp;</type>
      <name>add</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1FeatureGroup.html</anchorfile>
      <anchor>a2091e5d70dde6675b31a52527ce9513b</anchor>
      <arglist>(Playable&lt; dimensions &gt; &amp;feature)</arglist>
    </member>
    <member kind="function">
      <type>FeatureGroup&lt; dimensions, Playable&lt; dimensions &gt;, Float &gt; &amp;</type>
      <name>remove</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1FeatureGroup.html</anchorfile>
      <anchor>a527ccb9c991144fc37fada509aaf4901</anchor>
      <arglist>(Playable&lt; dimensions &gt; &amp;feature)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Magnum::AbstractFramebuffer</name>
    <filename>classMagnum_1_1AbstractFramebuffer.html</filename>
    <member kind="function">
      <type>void</type>
      <name>bind</name>
      <anchorfile>classMagnum_1_1AbstractFramebuffer.html</anchorfile>
      <anchor>a870648d94e30d1437314bc3ce8ebfcbc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>bind</name>
      <anchorfile>classMagnum_1_1AbstractFramebuffer.html</anchorfile>
      <anchor>a9b9ad2efbdf1529e002d412f0a6b6347</anchor>
      <arglist>(FramebufferTarget)</arglist>
    </member>
    <member kind="function">
      <type>Range2Di</type>
      <name>viewport</name>
      <anchorfile>classMagnum_1_1AbstractFramebuffer.html</anchorfile>
      <anchor>a3137e6aa44d0b8e38ca4af61493dcaa2</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>AbstractFramebuffer &amp;</type>
      <name>setViewport</name>
      <anchorfile>classMagnum_1_1AbstractFramebuffer.html</anchorfile>
      <anchor>a9baa7a1dc3d6a1fed99591ace5df07b1</anchor>
      <arglist>(const Range2Di &amp;rectangle)</arglist>
    </member>
    <member kind="function">
      <type>AbstractFramebuffer &amp;</type>
      <name>clear</name>
      <anchorfile>classMagnum_1_1AbstractFramebuffer.html</anchorfile>
      <anchor>ac1b95e3c2af274d23e893887600f2b26</anchor>
      <arglist>(FramebufferClearMask mask)</arglist>
    </member>
    <member kind="function">
      <type>AbstractFramebuffer &amp;</type>
      <name>clearDepth</name>
      <anchorfile>classMagnum_1_1AbstractFramebuffer.html</anchorfile>
      <anchor>a60a06b9328165db71cdffb7878e6cf79</anchor>
      <arglist>(Float depth)</arglist>
    </member>
    <member kind="function">
      <type>AbstractFramebuffer &amp;</type>
      <name>clearStencil</name>
      <anchorfile>classMagnum_1_1AbstractFramebuffer.html</anchorfile>
      <anchor>a189a56a415a21f654cc30354725d4092</anchor>
      <arglist>(Int stencil)</arglist>
    </member>
    <member kind="function">
      <type>AbstractFramebuffer &amp;</type>
      <name>clearDepthStencil</name>
      <anchorfile>classMagnum_1_1AbstractFramebuffer.html</anchorfile>
      <anchor>aa37781d0a4931e7aff603160da83ca1f</anchor>
      <arglist>(Float depth, Int stencil)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>read</name>
      <anchorfile>classMagnum_1_1AbstractFramebuffer.html</anchorfile>
      <anchor>a01e5e16334f42acbb5c1fffd3f8319d8</anchor>
      <arglist>(const Range2Di &amp;rectangle, Image2D &amp;image)</arglist>
    </member>
    <member kind="function">
      <type>Image2D</type>
      <name>read</name>
      <anchorfile>classMagnum_1_1AbstractFramebuffer.html</anchorfile>
      <anchor>ac40fd01f7080a79b5cdb09bb63ca9329</anchor>
      <arglist>(const Range2Di &amp;rectangle, Image2D &amp;&amp;image)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>read</name>
      <anchorfile>classMagnum_1_1AbstractFramebuffer.html</anchorfile>
      <anchor>ac697b6e2ccab2c06a65e3118bcbc2d24</anchor>
      <arglist>(const Vector2i &amp;offset, const Vector2i &amp;size, Image2D &amp;image)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>read</name>
      <anchorfile>classMagnum_1_1AbstractFramebuffer.html</anchorfile>
      <anchor>ad947d9b06a0e8d906ce5d0337d7927cb</anchor>
      <arglist>(const Range2Di &amp;rectangle, BufferImage2D &amp;image, BufferUsage usage)</arglist>
    </member>
    <member kind="function">
      <type>BufferImage2D</type>
      <name>read</name>
      <anchorfile>classMagnum_1_1AbstractFramebuffer.html</anchorfile>
      <anchor>a2613a46f4c08a923786d3c72309dab9d</anchor>
      <arglist>(const Range2Di &amp;rectangle, BufferImage2D &amp;&amp;image, BufferUsage usage)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>read</name>
      <anchorfile>classMagnum_1_1AbstractFramebuffer.html</anchorfile>
      <anchor>ae830f10860ef6689ad2888f70683f476</anchor>
      <arglist>(const Vector2i &amp;offset, const Vector2i &amp;size, BufferImage2D &amp;image, BufferUsage usage)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>copyImage</name>
      <anchorfile>classMagnum_1_1AbstractFramebuffer.html</anchorfile>
      <anchor>a7fe702917f10f8ab716089dce7fc0214</anchor>
      <arglist>(const Range2Di &amp;rectangle, Texture1D &amp;texture, Int level, TextureFormat internalFormat)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>copyImage</name>
      <anchorfile>classMagnum_1_1AbstractFramebuffer.html</anchorfile>
      <anchor>a41a5e6e47c404302b3cfed1c4d60a895</anchor>
      <arglist>(const Range2Di &amp;rectangle, Texture2D &amp;texture, Int level, TextureFormat internalFormat)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>copyImage</name>
      <anchorfile>classMagnum_1_1AbstractFramebuffer.html</anchorfile>
      <anchor>ab7cb91fbef6b674b87a1c911cc6e0542</anchor>
      <arglist>(const Range2Di &amp;rectangle, RectangleTexture &amp;texture, TextureFormat internalFormat)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>copyImage</name>
      <anchorfile>classMagnum_1_1AbstractFramebuffer.html</anchorfile>
      <anchor>aed497d2e568296a1b42d67a9efc9fbc3</anchor>
      <arglist>(const Range2Di &amp;rectangle, CubeMapTexture &amp;texture, CubeMapCoordinate coordinate, Int level, TextureFormat internalFormat)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>copyImage</name>
      <anchorfile>classMagnum_1_1AbstractFramebuffer.html</anchorfile>
      <anchor>a802bedc35f504f0a2252923c8a49576b</anchor>
      <arglist>(const Range2Di &amp;rectangle, Texture1DArray &amp;texture, Int level, TextureFormat internalFormat)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>copySubImage</name>
      <anchorfile>classMagnum_1_1AbstractFramebuffer.html</anchorfile>
      <anchor>a70a78c85c5e63749057a6bd9ac3be9f2</anchor>
      <arglist>(const Range2Di &amp;rectangle, Texture1D &amp;texture, Int level, Int offset)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>copySubImage</name>
      <anchorfile>classMagnum_1_1AbstractFramebuffer.html</anchorfile>
      <anchor>a217474f2965806678c3962b56a81a86b</anchor>
      <arglist>(const Range2Di &amp;rectangle, Texture2D &amp;texture, Int level, const Vector2i &amp;offset)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>copySubImage</name>
      <anchorfile>classMagnum_1_1AbstractFramebuffer.html</anchorfile>
      <anchor>aa1e871aaa4463d464e29a34c440fb66e</anchor>
      <arglist>(const Range2Di &amp;rectangle, RectangleTexture &amp;texture, const Vector2i &amp;offset)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>copySubImage</name>
      <anchorfile>classMagnum_1_1AbstractFramebuffer.html</anchorfile>
      <anchor>ad9f6e0f91483555009af3ba505b3d14a</anchor>
      <arglist>(const Range2Di &amp;rectangle, CubeMapTexture &amp;texture, Int level, const Vector3i &amp;offset)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>copySubImage</name>
      <anchorfile>classMagnum_1_1AbstractFramebuffer.html</anchorfile>
      <anchor>a599e59ff8c9921ebec4bcd3bf438e90b</anchor>
      <arglist>(const Range2Di &amp;rectangle, Texture3D &amp;texture, Int level, const Vector3i &amp;offset)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>copySubImage</name>
      <anchorfile>classMagnum_1_1AbstractFramebuffer.html</anchorfile>
      <anchor>a2ee40f57cfa97347984b0f508831710f</anchor>
      <arglist>(const Range2Di &amp;rectangle, Texture1DArray &amp;texture, Int level, const Vector2i &amp;offset)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>copySubImage</name>
      <anchorfile>classMagnum_1_1AbstractFramebuffer.html</anchorfile>
      <anchor>a5e1a9b4213d830059b48458001f55126</anchor>
      <arglist>(const Range2Di &amp;rectangle, Texture2DArray &amp;texture, Int level, const Vector3i &amp;offset)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>copySubImage</name>
      <anchorfile>classMagnum_1_1AbstractFramebuffer.html</anchorfile>
      <anchor>ad4447fc7c88d574c363d76aeecc39b0f</anchor>
      <arglist>(const Range2Di &amp;rectangle, CubeMapTextureArray &amp;texture, Int level, const Vector3i &amp;offset)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Vector2i</type>
      <name>maxViewportSize</name>
      <anchorfile>classMagnum_1_1AbstractFramebuffer.html</anchorfile>
      <anchor>ab7dc9799b06e1f9aebd57797fd345e03</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Int</type>
      <name>maxDrawBuffers</name>
      <anchorfile>classMagnum_1_1AbstractFramebuffer.html</anchorfile>
      <anchor>aa1bde53a1d9b7ad71b754caa90fe85e9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Int</type>
      <name>maxDualSourceDrawBuffers</name>
      <anchorfile>classMagnum_1_1AbstractFramebuffer.html</anchorfile>
      <anchor>a8c03ea07ac57bc45164b59c0074d67df</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>blit</name>
      <anchorfile>classMagnum_1_1AbstractFramebuffer.html</anchorfile>
      <anchor>a670ab0f2337106fea849ff6fe9ff574b</anchor>
      <arglist>(AbstractFramebuffer &amp;source, AbstractFramebuffer &amp;destination, const Range2Di &amp;sourceRectangle, const Range2Di &amp;destinationRectangle, FramebufferBlitMask mask, FramebufferBlitFilter filter)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>blit</name>
      <anchorfile>classMagnum_1_1AbstractFramebuffer.html</anchorfile>
      <anchor>a344a48184cc4cefd1915d146d70c0838</anchor>
      <arglist>(AbstractFramebuffer &amp;source, AbstractFramebuffer &amp;destination, const Range2Di &amp;rectangle, FramebufferBlitMask mask)</arglist>
    </member>
    <docanchor file="classMagnum_1_1AbstractFramebuffer" title="Performance optimizations and security">AbstractFramebuffer-performance-optimization</docanchor>
  </compound>
  <compound kind="class">
    <name>Magnum::AbstractObject</name>
    <filename>classMagnum_1_1AbstractObject.html</filename>
    <member kind="function" static="yes">
      <type>static Int</type>
      <name>maxLabelLength</name>
      <anchorfile>classMagnum_1_1AbstractObject.html</anchorfile>
      <anchor>a9973fdc894eaaa481e0f2f77b4935f1c</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Magnum::AbstractQuery</name>
    <filename>classMagnum_1_1AbstractQuery.html</filename>
    <base>Magnum::AbstractObject</base>
    <member kind="function">
      <type></type>
      <name>AbstractQuery</name>
      <anchorfile>classMagnum_1_1AbstractQuery.html</anchorfile>
      <anchor>a1048555215e395987cf81d3ec2a19942</anchor>
      <arglist>(const AbstractQuery &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AbstractQuery</name>
      <anchorfile>classMagnum_1_1AbstractQuery.html</anchorfile>
      <anchor>adca195c871803e977217c8d94b391599</anchor>
      <arglist>(AbstractQuery &amp;&amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type>AbstractQuery &amp;</type>
      <name>operator=</name>
      <anchorfile>classMagnum_1_1AbstractQuery.html</anchorfile>
      <anchor>aef19f7184f613b53ff643706bb3b1aec</anchor>
      <arglist>(const AbstractQuery &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>AbstractQuery &amp;</type>
      <name>operator=</name>
      <anchorfile>classMagnum_1_1AbstractQuery.html</anchorfile>
      <anchor>a96621d976dfe9b46e2dc98e02047363a</anchor>
      <arglist>(AbstractQuery &amp;&amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type>GLuint</type>
      <name>id</name>
      <anchorfile>classMagnum_1_1AbstractQuery.html</anchorfile>
      <anchor>ab2478e6532da251f9ea3e58afe628674</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>GLuint</type>
      <name>release</name>
      <anchorfile>classMagnum_1_1AbstractQuery.html</anchorfile>
      <anchor>a5d0de995a5ec7fe8656803751dc0f16a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>label</name>
      <anchorfile>classMagnum_1_1AbstractQuery.html</anchorfile>
      <anchor>a68acd20ab2931c3d7f16434ce0cc435e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>AbstractQuery &amp;</type>
      <name>setLabel</name>
      <anchorfile>classMagnum_1_1AbstractQuery.html</anchorfile>
      <anchor>ad1ced44a24d5bbc0a91233c9bc67c837</anchor>
      <arglist>(const std::string &amp;label)</arglist>
    </member>
    <member kind="function">
      <type>AbstractQuery &amp;</type>
      <name>setLabel</name>
      <anchorfile>classMagnum_1_1AbstractQuery.html</anchorfile>
      <anchor>adcef997e735806b8faaf4a5e3854a60f</anchor>
      <arglist>(const char(&amp;label)[size])</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>resultAvailable</name>
      <anchorfile>classMagnum_1_1AbstractQuery.html</anchorfile>
      <anchor>ae3fce12f38130367afb3ce8ce277ca81</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>result</name>
      <anchorfile>classMagnum_1_1AbstractQuery.html</anchorfile>
      <anchor>aa91b29e2fb4723d4c5f50ecd3c0c6f44</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>begin</name>
      <anchorfile>classMagnum_1_1AbstractQuery.html</anchorfile>
      <anchor>aed5cc4a7b22bd473e30f03666f58e8e3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>end</name>
      <anchorfile>classMagnum_1_1AbstractQuery.html</anchorfile>
      <anchor>aa9fc627a3f6b71ef5324a17a9abd5fae</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>~AbstractQuery</name>
      <anchorfile>classMagnum_1_1AbstractQuery.html</anchorfile>
      <anchor>a2472b1a337ed6d2d347f4751ca2937d2</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Magnum::AbstractResourceLoader</name>
    <filename>classMagnum_1_1AbstractResourceLoader.html</filename>
    <templarg></templarg>
    <member kind="function">
      <type>std::size_t</type>
      <name>requestedCount</name>
      <anchorfile>classMagnum_1_1AbstractResourceLoader.html</anchorfile>
      <anchor>a547797ed4bd6062fab0c18201f3e69d4</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>std::size_t</type>
      <name>notFoundCount</name>
      <anchorfile>classMagnum_1_1AbstractResourceLoader.html</anchorfile>
      <anchor>a9d51b4357e0f6b01a0b4dc3c73a943d8</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>std::size_t</type>
      <name>loadedCount</name>
      <anchorfile>classMagnum_1_1AbstractResourceLoader.html</anchorfile>
      <anchor>aff4d44dea8037b3e822946ca4f36acc0</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>name</name>
      <anchorfile>classMagnum_1_1AbstractResourceLoader.html</anchorfile>
      <anchor>ac7b65abf44230529ea914e055f204a2e</anchor>
      <arglist>(ResourceKey key) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>load</name>
      <anchorfile>classMagnum_1_1AbstractResourceLoader.html</anchorfile>
      <anchor>a171e133926d7d37dc2a04d2c1191c0ab</anchor>
      <arglist>(ResourceKey key)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>set</name>
      <anchorfile>classMagnum_1_1AbstractResourceLoader.html</anchorfile>
      <anchor>af04681d7bee895e3e286aec7aa327782</anchor>
      <arglist>(ResourceKey key, T *data, ResourceDataState state, ResourcePolicy policy)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>set</name>
      <anchorfile>classMagnum_1_1AbstractResourceLoader.html</anchorfile>
      <anchor>ae31f970e395abd81027f79831445155e</anchor>
      <arglist>(ResourceKey key, U &amp;&amp;data, ResourceDataState state, ResourcePolicy policy)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>set</name>
      <anchorfile>classMagnum_1_1AbstractResourceLoader.html</anchorfile>
      <anchor>ae08d87863dbbb8eea76f236fce9cabf7</anchor>
      <arglist>(ResourceKey key, T *data)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>set</name>
      <anchorfile>classMagnum_1_1AbstractResourceLoader.html</anchorfile>
      <anchor>a8df409668475d1e0970d5dc7057fce71</anchor>
      <arglist>(ResourceKey key, U &amp;&amp;data)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>setNotFound</name>
      <anchorfile>classMagnum_1_1AbstractResourceLoader.html</anchorfile>
      <anchor>a89b2091658562243626d37d176e8652f</anchor>
      <arglist>(ResourceKey key)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual std::string</type>
      <name>doName</name>
      <anchorfile>classMagnum_1_1AbstractResourceLoader.html</anchorfile>
      <anchor>a36018c8d91a61ce2ef8ce648ab650deb</anchor>
      <arglist>(ResourceKey key) const </arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual void</type>
      <name>doLoad</name>
      <anchorfile>classMagnum_1_1AbstractResourceLoader.html</anchorfile>
      <anchor>ac6b5179e81b999aeb50af61bcebf7b7b</anchor>
      <arglist>(ResourceKey key)=0</arglist>
    </member>
    <docanchor file="classMagnum_1_1AbstractResourceLoader" title="Usage and subclassing">AbstractResourceLoader-usage</docanchor>
  </compound>
  <compound kind="class">
    <name>Magnum::AbstractShaderProgram</name>
    <filename>classMagnum_1_1AbstractShaderProgram.html</filename>
    <base>Magnum::AbstractObject</base>
    <member kind="enumeration">
      <type></type>
      <name>TransformFeedbackBufferMode</name>
      <anchorfile>classMagnum_1_1AbstractShaderProgram.html</anchorfile>
      <anchor>a8fd853571439c390d19f4bf668e3fd03</anchor>
      <arglist></arglist>
      <enumvalue file="classMagnum_1_1AbstractShaderProgram.html" anchor="a8fd853571439c390d19f4bf668e3fd03af1750acc2f9fb07356b4c742e986451b">InterleavedAttributes</enumvalue>
      <enumvalue file="classMagnum_1_1AbstractShaderProgram.html" anchor="a8fd853571439c390d19f4bf668e3fd03a0106c653b3fa703956bbbe1584518863">SeparateAttributes</enumvalue>
    </member>
    <member kind="function">
      <type></type>
      <name>AbstractShaderProgram</name>
      <anchorfile>classMagnum_1_1AbstractShaderProgram.html</anchorfile>
      <anchor>a16c6edadcc5f386bcffc55476231fba5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AbstractShaderProgram</name>
      <anchorfile>classMagnum_1_1AbstractShaderProgram.html</anchorfile>
      <anchor>a84093bd4dafd28134df9a522ddfe6e29</anchor>
      <arglist>(NoCreateT) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AbstractShaderProgram</name>
      <anchorfile>classMagnum_1_1AbstractShaderProgram.html</anchorfile>
      <anchor>a6bab1442bb544667e2c219aa73d3c63a</anchor>
      <arglist>(const AbstractShaderProgram &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AbstractShaderProgram</name>
      <anchorfile>classMagnum_1_1AbstractShaderProgram.html</anchorfile>
      <anchor>ad2395e29892b791adc266a0286ef0b17</anchor>
      <arglist>(AbstractShaderProgram &amp;&amp;other) noexcept</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual</type>
      <name>~AbstractShaderProgram</name>
      <anchorfile>classMagnum_1_1AbstractShaderProgram.html</anchorfile>
      <anchor>a1bc009626eec8b10702b36742e9e1d0c</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function">
      <type>AbstractShaderProgram &amp;</type>
      <name>operator=</name>
      <anchorfile>classMagnum_1_1AbstractShaderProgram.html</anchorfile>
      <anchor>acccb9a48b3417ecf63353e5ff72db902</anchor>
      <arglist>(const AbstractShaderProgram &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>AbstractShaderProgram &amp;</type>
      <name>operator=</name>
      <anchorfile>classMagnum_1_1AbstractShaderProgram.html</anchorfile>
      <anchor>afaf173b7044a363652ad90de02c8d340</anchor>
      <arglist>(AbstractShaderProgram &amp;&amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type>GLuint</type>
      <name>id</name>
      <anchorfile>classMagnum_1_1AbstractShaderProgram.html</anchorfile>
      <anchor>a002656c4103a6dca1eaf32b93d4c439a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>label</name>
      <anchorfile>classMagnum_1_1AbstractShaderProgram.html</anchorfile>
      <anchor>a710c5ae05b11d042030e6360eae3d772</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>AbstractShaderProgram &amp;</type>
      <name>setLabel</name>
      <anchorfile>classMagnum_1_1AbstractShaderProgram.html</anchorfile>
      <anchor>a4b9b0e4af18300fd44690b5f0a87ab30</anchor>
      <arglist>(const std::string &amp;label)</arglist>
    </member>
    <member kind="function">
      <type>AbstractShaderProgram &amp;</type>
      <name>setLabel</name>
      <anchorfile>classMagnum_1_1AbstractShaderProgram.html</anchorfile>
      <anchor>a953cb48f757e48bda8cfa0d797ee3ed5</anchor>
      <arglist>(const char(&amp;label)[size])</arglist>
    </member>
    <member kind="function">
      <type>std::pair&lt; bool, std::string &gt;</type>
      <name>validate</name>
      <anchorfile>classMagnum_1_1AbstractShaderProgram.html</anchorfile>
      <anchor>ab04f841c47ad188faed0f51881b3d23c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>dispatchCompute</name>
      <anchorfile>classMagnum_1_1AbstractShaderProgram.html</anchorfile>
      <anchor>aab77167563a3d7c54e6ff6f419f4e76e</anchor>
      <arglist>(const Vector3ui &amp;workgroupCount)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>use</name>
      <anchorfile>classMagnum_1_1AbstractShaderProgram.html</anchorfile>
      <anchor>a5fb8e463540743177dd2a17a61d8f931</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Int</type>
      <name>maxVertexAttributes</name>
      <anchorfile>classMagnum_1_1AbstractShaderProgram.html</anchorfile>
      <anchor>af1b0d5a36abde85135e7df3031edbd37</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Int</type>
      <name>maxAtomicCounterBufferSize</name>
      <anchorfile>classMagnum_1_1AbstractShaderProgram.html</anchorfile>
      <anchor>a37913cb1bc6a6cd0b7ad3818c47fd564</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Int</type>
      <name>maxComputeSharedMemorySize</name>
      <anchorfile>classMagnum_1_1AbstractShaderProgram.html</anchorfile>
      <anchor>a4cf3815d66a686e24b1021d68e8cb1a4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Int</type>
      <name>maxComputeWorkGroupInvocations</name>
      <anchorfile>classMagnum_1_1AbstractShaderProgram.html</anchorfile>
      <anchor>a46fd46b2cd61ce0ba68034cfbd47b4c7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Vector3i</type>
      <name>maxComputeWorkGroupCount</name>
      <anchorfile>classMagnum_1_1AbstractShaderProgram.html</anchorfile>
      <anchor>aa690c40760e1654a27667fe599b8e800</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Vector3i</type>
      <name>maxComputeWorkGroupSize</name>
      <anchorfile>classMagnum_1_1AbstractShaderProgram.html</anchorfile>
      <anchor>a180c855de3f843f9166c743e4a35594b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Int</type>
      <name>maxImageUnits</name>
      <anchorfile>classMagnum_1_1AbstractShaderProgram.html</anchorfile>
      <anchor>ace7af792a60f4700c6071fd013d22b4a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Int</type>
      <name>maxImageSamples</name>
      <anchorfile>classMagnum_1_1AbstractShaderProgram.html</anchorfile>
      <anchor>afb44159fbff4b115b07518957143d08a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Int</type>
      <name>maxCombinedShaderOutputResources</name>
      <anchorfile>classMagnum_1_1AbstractShaderProgram.html</anchorfile>
      <anchor>a7c18559208a92fc640626dbb5cd186f8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Long</type>
      <name>maxShaderStorageBlockSize</name>
      <anchorfile>classMagnum_1_1AbstractShaderProgram.html</anchorfile>
      <anchor>ac48faef9629cbf28ee50ea3b9eac28c5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Int</type>
      <name>maxUniformBlockSize</name>
      <anchorfile>classMagnum_1_1AbstractShaderProgram.html</anchorfile>
      <anchor>a142aeeb98fb0e74da28c7a052c1617ca</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Int</type>
      <name>maxUniformLocations</name>
      <anchorfile>classMagnum_1_1AbstractShaderProgram.html</anchorfile>
      <anchor>a5050ff1ba9da287ffc6e724ca1bae022</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Int</type>
      <name>minTexelOffset</name>
      <anchorfile>classMagnum_1_1AbstractShaderProgram.html</anchorfile>
      <anchor>a48fc7a13bf1510bbce42ef04ad8c519d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Int</type>
      <name>maxTexelOffset</name>
      <anchorfile>classMagnum_1_1AbstractShaderProgram.html</anchorfile>
      <anchor>a3677c4e61945a206022c4d103df2413a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>setRetrievableBinary</name>
      <anchorfile>classMagnum_1_1AbstractShaderProgram.html</anchorfile>
      <anchor>ada3b9160bc0e59d6c325ffc9d7cb0dbb</anchor>
      <arglist>(bool enabled)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>setSeparable</name>
      <anchorfile>classMagnum_1_1AbstractShaderProgram.html</anchorfile>
      <anchor>a9c9d58089d7f148a3e291b905f0f065f</anchor>
      <arglist>(bool enabled)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>attachShader</name>
      <anchorfile>classMagnum_1_1AbstractShaderProgram.html</anchorfile>
      <anchor>a0e8db71790fcb203b4812777cf3e83c5</anchor>
      <arglist>(Shader &amp;shader)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>attachShaders</name>
      <anchorfile>classMagnum_1_1AbstractShaderProgram.html</anchorfile>
      <anchor>ad41ff2a82902d48306ebcf5f3d6a92bd</anchor>
      <arglist>(std::initializer_list&lt; std::reference_wrapper&lt; Shader &gt;&gt; shaders)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>bindAttributeLocation</name>
      <anchorfile>classMagnum_1_1AbstractShaderProgram.html</anchorfile>
      <anchor>a8d78ceb7bb5665123fd1645043d3654e</anchor>
      <arglist>(UnsignedInt location, const std::string &amp;name)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>bindAttributeLocation</name>
      <anchorfile>classMagnum_1_1AbstractShaderProgram.html</anchorfile>
      <anchor>ad84340ced5f92dcce6ad6f34c6ad5307</anchor>
      <arglist>(UnsignedInt location, const char(&amp;name)[size])</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>bindFragmentDataLocationIndexed</name>
      <anchorfile>classMagnum_1_1AbstractShaderProgram.html</anchorfile>
      <anchor>adfed60961e8289509d26af2a3d49fec5</anchor>
      <arglist>(UnsignedInt location, UnsignedInt index, const std::string &amp;name)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>bindFragmentDataLocationIndexed</name>
      <anchorfile>classMagnum_1_1AbstractShaderProgram.html</anchorfile>
      <anchor>aed5666ced40702d9de6601d41099dc77</anchor>
      <arglist>(UnsignedInt location, UnsignedInt index, const char(&amp;name)[size])</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>bindFragmentDataLocation</name>
      <anchorfile>classMagnum_1_1AbstractShaderProgram.html</anchorfile>
      <anchor>a6b89f5290fc35d3b2dd10f7a5e143a2d</anchor>
      <arglist>(UnsignedInt location, const std::string &amp;name)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>bindFragmentDataLocation</name>
      <anchorfile>classMagnum_1_1AbstractShaderProgram.html</anchorfile>
      <anchor>a6bfe390f3f09ed3608efe6a5174b2648</anchor>
      <arglist>(UnsignedInt location, const char(&amp;name)[size])</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>setTransformFeedbackOutputs</name>
      <anchorfile>classMagnum_1_1AbstractShaderProgram.html</anchorfile>
      <anchor>a9c31876f2284450adb835c83e1a73000</anchor>
      <arglist>(std::initializer_list&lt; std::string &gt; outputs, TransformFeedbackBufferMode bufferMode)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>link</name>
      <anchorfile>classMagnum_1_1AbstractShaderProgram.html</anchorfile>
      <anchor>a4490aaf9280804ac06b04f32b5421de4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>Int</type>
      <name>uniformLocation</name>
      <anchorfile>classMagnum_1_1AbstractShaderProgram.html</anchorfile>
      <anchor>aa1a8f5ae5d3e36a6f158fcac45f247e1</anchor>
      <arglist>(const std::string &amp;name)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>Int</type>
      <name>uniformLocation</name>
      <anchorfile>classMagnum_1_1AbstractShaderProgram.html</anchorfile>
      <anchor>abfe0c3e647d2838c339f58809f55675b</anchor>
      <arglist>(const char(&amp;name)[size])</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>UnsignedInt</type>
      <name>uniformBlockIndex</name>
      <anchorfile>classMagnum_1_1AbstractShaderProgram.html</anchorfile>
      <anchor>a8e165fbc7d912db3d10039894d0fa67c</anchor>
      <arglist>(const std::string &amp;name)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>UnsignedInt</type>
      <name>uniformBlockIndex</name>
      <anchorfile>classMagnum_1_1AbstractShaderProgram.html</anchorfile>
      <anchor>a040b27f65de2064cb467b903aede3ce0</anchor>
      <arglist>(const char(&amp;name)[size])</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>setUniform</name>
      <anchorfile>classMagnum_1_1AbstractShaderProgram.html</anchorfile>
      <anchor>a7308b32d1166883f0922644ff5ef7f49</anchor>
      <arglist>(Int location, const T &amp;value)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>setUniform</name>
      <anchorfile>classMagnum_1_1AbstractShaderProgram.html</anchorfile>
      <anchor>a614bface48287ba59a8dc3a7ce8aa8b6</anchor>
      <arglist>(Int location, Containers::ArrayView&lt; const Float &gt; values)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>setUniform</name>
      <anchorfile>classMagnum_1_1AbstractShaderProgram.html</anchorfile>
      <anchor>af35664d2f486fe9add64bc18d9669d4c</anchor>
      <arglist>(Int location, Containers::ArrayView&lt; const Math::Vector&lt; 2, Float &gt;&gt; values)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>setUniform</name>
      <anchorfile>classMagnum_1_1AbstractShaderProgram.html</anchorfile>
      <anchor>ab22c273125911f5d435753da5a16e5dc</anchor>
      <arglist>(Int location, Containers::ArrayView&lt; const Math::Vector&lt; 3, Float &gt;&gt; values)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>setUniform</name>
      <anchorfile>classMagnum_1_1AbstractShaderProgram.html</anchorfile>
      <anchor>adf5740dedb660aff4ae7ab771a670185</anchor>
      <arglist>(Int location, Containers::ArrayView&lt; const Math::Vector&lt; 4, Float &gt;&gt; values)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>setUniform</name>
      <anchorfile>classMagnum_1_1AbstractShaderProgram.html</anchorfile>
      <anchor>aebb4c410c4ab3d7a37b62ca275f57b0c</anchor>
      <arglist>(Int location, Containers::ArrayView&lt; const Int &gt; values)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>setUniform</name>
      <anchorfile>classMagnum_1_1AbstractShaderProgram.html</anchorfile>
      <anchor>a38ecfb2740377292ba10233a6dae82ad</anchor>
      <arglist>(Int location, Containers::ArrayView&lt; const Math::Vector&lt; 2, Int &gt;&gt; values)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>setUniform</name>
      <anchorfile>classMagnum_1_1AbstractShaderProgram.html</anchorfile>
      <anchor>aa789d6d986f4190ada457a1cbad72378</anchor>
      <arglist>(Int location, Containers::ArrayView&lt; const Math::Vector&lt; 3, Int &gt;&gt; values)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>setUniform</name>
      <anchorfile>classMagnum_1_1AbstractShaderProgram.html</anchorfile>
      <anchor>a09ab8f6a0161b0aef445ac86d7ea9613</anchor>
      <arglist>(Int location, Containers::ArrayView&lt; const Math::Vector&lt; 4, Int &gt;&gt; values)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>setUniform</name>
      <anchorfile>classMagnum_1_1AbstractShaderProgram.html</anchorfile>
      <anchor>a8edac146cc652480f3b1a05662af18bd</anchor>
      <arglist>(Int location, Containers::ArrayView&lt; const UnsignedInt &gt; values)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>setUniform</name>
      <anchorfile>classMagnum_1_1AbstractShaderProgram.html</anchorfile>
      <anchor>a5a8a3f9fd3b08271224f35f4d8ed1859</anchor>
      <arglist>(Int location, Containers::ArrayView&lt; const Math::Vector&lt; 2, UnsignedInt &gt;&gt; values)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>setUniform</name>
      <anchorfile>classMagnum_1_1AbstractShaderProgram.html</anchorfile>
      <anchor>a8f4ed614e34a11fa036432fd95b0755c</anchor>
      <arglist>(Int location, Containers::ArrayView&lt; const Math::Vector&lt; 3, UnsignedInt &gt;&gt; values)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>setUniform</name>
      <anchorfile>classMagnum_1_1AbstractShaderProgram.html</anchorfile>
      <anchor>a5559b0b82be72afd75f59494a87d4466</anchor>
      <arglist>(Int location, Containers::ArrayView&lt; const Math::Vector&lt; 4, UnsignedInt &gt;&gt; values)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>setUniform</name>
      <anchorfile>classMagnum_1_1AbstractShaderProgram.html</anchorfile>
      <anchor>ac59ad3d02c75a71698d1135d98a0188e</anchor>
      <arglist>(Int location, Containers::ArrayView&lt; const Double &gt; values)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>setUniform</name>
      <anchorfile>classMagnum_1_1AbstractShaderProgram.html</anchorfile>
      <anchor>a06709bbe77ac135e298282243bbf6d14</anchor>
      <arglist>(Int location, Containers::ArrayView&lt; const Math::Vector&lt; 2, Double &gt;&gt; values)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>setUniform</name>
      <anchorfile>classMagnum_1_1AbstractShaderProgram.html</anchorfile>
      <anchor>a7e7a5fda00acdc092fe3888206cf75c3</anchor>
      <arglist>(Int location, Containers::ArrayView&lt; const Math::Vector&lt; 3, Double &gt;&gt; values)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>setUniform</name>
      <anchorfile>classMagnum_1_1AbstractShaderProgram.html</anchorfile>
      <anchor>a8457b0ef804753ec6ff29e8a6f9be1c5</anchor>
      <arglist>(Int location, Containers::ArrayView&lt; const Math::Vector&lt; 4, Double &gt;&gt; values)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>setUniform</name>
      <anchorfile>classMagnum_1_1AbstractShaderProgram.html</anchorfile>
      <anchor>adb074150e3da661ca2406fe731f0dfab</anchor>
      <arglist>(Int location, Containers::ArrayView&lt; const Math::RectangularMatrix&lt; 2, 2, Float &gt;&gt; values)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>setUniform</name>
      <anchorfile>classMagnum_1_1AbstractShaderProgram.html</anchorfile>
      <anchor>a2617aded864fb6ae4ffbd7f9dc199ed3</anchor>
      <arglist>(Int location, Containers::ArrayView&lt; const Math::RectangularMatrix&lt; 3, 3, Float &gt;&gt; values)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>setUniform</name>
      <anchorfile>classMagnum_1_1AbstractShaderProgram.html</anchorfile>
      <anchor>a55fc7e30f1efc270945a87fa65573bab</anchor>
      <arglist>(Int location, Containers::ArrayView&lt; const Math::RectangularMatrix&lt; 4, 4, Float &gt;&gt; values)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>setUniform</name>
      <anchorfile>classMagnum_1_1AbstractShaderProgram.html</anchorfile>
      <anchor>a3887b3d3939460426214f76ad65fb1ca</anchor>
      <arglist>(Int location, Containers::ArrayView&lt; const Math::RectangularMatrix&lt; 2, 3, Float &gt;&gt; values)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>setUniform</name>
      <anchorfile>classMagnum_1_1AbstractShaderProgram.html</anchorfile>
      <anchor>abb65134428cf42d6b06443f5d2c4ad7c</anchor>
      <arglist>(Int location, Containers::ArrayView&lt; const Math::RectangularMatrix&lt; 3, 2, Float &gt;&gt; values)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>setUniform</name>
      <anchorfile>classMagnum_1_1AbstractShaderProgram.html</anchorfile>
      <anchor>a8224e22a0fa27b3b284b5c8cae9850c8</anchor>
      <arglist>(Int location, Containers::ArrayView&lt; const Math::RectangularMatrix&lt; 2, 4, Float &gt;&gt; values)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>setUniform</name>
      <anchorfile>classMagnum_1_1AbstractShaderProgram.html</anchorfile>
      <anchor>a9f423187cc53a67d668bf7645c01f7db</anchor>
      <arglist>(Int location, Containers::ArrayView&lt; const Math::RectangularMatrix&lt; 4, 2, Float &gt;&gt; values)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>setUniform</name>
      <anchorfile>classMagnum_1_1AbstractShaderProgram.html</anchorfile>
      <anchor>a5c04b73f7eaafd7a23eb3a574454c0d1</anchor>
      <arglist>(Int location, Containers::ArrayView&lt; const Math::RectangularMatrix&lt; 3, 4, Float &gt;&gt; values)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>setUniform</name>
      <anchorfile>classMagnum_1_1AbstractShaderProgram.html</anchorfile>
      <anchor>a75e3bbf3f6096440ad4b04c11b7595c8</anchor>
      <arglist>(Int location, Containers::ArrayView&lt; const Math::RectangularMatrix&lt; 4, 3, Float &gt;&gt; values)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>setUniform</name>
      <anchorfile>classMagnum_1_1AbstractShaderProgram.html</anchorfile>
      <anchor>a1c54d95e193608d742160cd638fbf2a6</anchor>
      <arglist>(Int location, Containers::ArrayView&lt; const Math::RectangularMatrix&lt; 2, 2, Double &gt;&gt; values)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>setUniform</name>
      <anchorfile>classMagnum_1_1AbstractShaderProgram.html</anchorfile>
      <anchor>a77694a963a4ad16e3dffaa9c1e0db968</anchor>
      <arglist>(Int location, Containers::ArrayView&lt; const Math::RectangularMatrix&lt; 3, 3, Double &gt;&gt; values)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>setUniform</name>
      <anchorfile>classMagnum_1_1AbstractShaderProgram.html</anchorfile>
      <anchor>a8453355e57f3584c6eb96f48edb6544a</anchor>
      <arglist>(Int location, Containers::ArrayView&lt; const Math::RectangularMatrix&lt; 4, 4, Double &gt;&gt; values)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>setUniform</name>
      <anchorfile>classMagnum_1_1AbstractShaderProgram.html</anchorfile>
      <anchor>a629260e93c71eb952f4fadedcdc044f3</anchor>
      <arglist>(Int location, Containers::ArrayView&lt; const Math::RectangularMatrix&lt; 2, 3, Double &gt;&gt; values)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>setUniform</name>
      <anchorfile>classMagnum_1_1AbstractShaderProgram.html</anchorfile>
      <anchor>a1692d743746d7309ed2ea3308f92f201</anchor>
      <arglist>(Int location, Containers::ArrayView&lt; const Math::RectangularMatrix&lt; 3, 2, Double &gt;&gt; values)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>setUniform</name>
      <anchorfile>classMagnum_1_1AbstractShaderProgram.html</anchorfile>
      <anchor>abb9c5ed55eea38fcb938deae04cbe56e</anchor>
      <arglist>(Int location, Containers::ArrayView&lt; const Math::RectangularMatrix&lt; 2, 4, Double &gt;&gt; values)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>setUniform</name>
      <anchorfile>classMagnum_1_1AbstractShaderProgram.html</anchorfile>
      <anchor>a6fd2137b546868dc4d8bdfefa33e6ca0</anchor>
      <arglist>(Int location, Containers::ArrayView&lt; const Math::RectangularMatrix&lt; 4, 2, Double &gt;&gt; values)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>setUniform</name>
      <anchorfile>classMagnum_1_1AbstractShaderProgram.html</anchorfile>
      <anchor>ae833aa19dfbe68bce71137b1872acdd8</anchor>
      <arglist>(Int location, Containers::ArrayView&lt; const Math::RectangularMatrix&lt; 3, 4, Double &gt;&gt; values)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>setUniform</name>
      <anchorfile>classMagnum_1_1AbstractShaderProgram.html</anchorfile>
      <anchor>a42d3630d656535688e48e1e2171c2142</anchor>
      <arglist>(Int location, Containers::ArrayView&lt; const Math::RectangularMatrix&lt; 4, 3, Double &gt;&gt; values)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>setUniform</name>
      <anchorfile>classMagnum_1_1AbstractShaderProgram.html</anchorfile>
      <anchor>a3ce379aa40c0a2f8474d69dca649fd77</anchor>
      <arglist>(Int location, UnsignedInt count, const T *values)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>setUniformBlockBinding</name>
      <anchorfile>classMagnum_1_1AbstractShaderProgram.html</anchorfile>
      <anchor>a3e856c38718b60f0579ef0feb245e071</anchor>
      <arglist>(UnsignedInt index, UnsignedInt binding)</arglist>
    </member>
    <member kind="function" protection="protected" static="yes">
      <type>static bool</type>
      <name>link</name>
      <anchorfile>classMagnum_1_1AbstractShaderProgram.html</anchorfile>
      <anchor>adea77679045495cce2208ff0447013df</anchor>
      <arglist>(std::initializer_list&lt; std::reference_wrapper&lt; AbstractShaderProgram &gt;&gt; shaders)</arglist>
    </member>
    <docanchor file="classMagnum_1_1AbstractShaderProgram" title="Subclassing workflow">AbstractShaderProgram-subclassing</docanchor>
    <docanchor file="classMagnum_1_1AbstractShaderProgram" title="Binding attribute location">AbstractShaderProgram-attribute-location</docanchor>
    <docanchor file="classMagnum_1_1AbstractShaderProgram" title="Uniform locations">AbstractShaderProgram-uniform-location</docanchor>
    <docanchor file="classMagnum_1_1AbstractShaderProgram" title="Uniform block bindings">AbstractShaderProgram-uniform-block-binding</docanchor>
    <docanchor file="classMagnum_1_1AbstractShaderProgram" title="Shader storage block bindings">AbstractShaderProgram-shader-storage-block-binding</docanchor>
    <docanchor file="classMagnum_1_1AbstractShaderProgram" title="Specifying texture and image binding units">AbstractShaderProgram-texture-units</docanchor>
    <docanchor file="classMagnum_1_1AbstractShaderProgram" title="Specifying transform feedback binding points">AbstractShaderProgram-transform-feedback</docanchor>
    <docanchor file="classMagnum_1_1AbstractShaderProgram" title="Rendering workflow">AbstractShaderProgram-rendering-workflow</docanchor>
    <docanchor file="classMagnum_1_1AbstractShaderProgram" title="Compute workflow">AbstractShaderProgram-compute-workflow</docanchor>
    <docanchor file="classMagnum_1_1AbstractShaderProgram" title="Mapping between GLSL and Magnum types">AbstractShaderProgram-types</docanchor>
    <docanchor file="classMagnum_1_1AbstractShaderProgram" title="Performance optimizations">AbstractShaderProgram-performance-optimization</docanchor>
  </compound>
  <compound kind="class">
    <name>Magnum::AbstractTexture</name>
    <filename>classMagnum_1_1AbstractTexture.html</filename>
    <base>Magnum::AbstractObject</base>
    <member kind="function">
      <type></type>
      <name>AbstractTexture</name>
      <anchorfile>classMagnum_1_1AbstractTexture.html</anchorfile>
      <anchor>adf046691e7f4e04ede3f3f0e4346e480</anchor>
      <arglist>(const AbstractTexture &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AbstractTexture</name>
      <anchorfile>classMagnum_1_1AbstractTexture.html</anchorfile>
      <anchor>a1fc5e6cb528d2090edc22d002cbee079</anchor>
      <arglist>(AbstractTexture &amp;&amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~AbstractTexture</name>
      <anchorfile>classMagnum_1_1AbstractTexture.html</anchorfile>
      <anchor>a5e51c4b74edb7408ac93ac4595f93871</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>AbstractTexture &amp;</type>
      <name>operator=</name>
      <anchorfile>classMagnum_1_1AbstractTexture.html</anchorfile>
      <anchor>aca0f826ad046db08cb9e028bd423308d</anchor>
      <arglist>(const AbstractTexture &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>AbstractTexture &amp;</type>
      <name>operator=</name>
      <anchorfile>classMagnum_1_1AbstractTexture.html</anchorfile>
      <anchor>a06506dceef012c17d5f22f249e96e29c</anchor>
      <arglist>(AbstractTexture &amp;&amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type>GLuint</type>
      <name>id</name>
      <anchorfile>classMagnum_1_1AbstractTexture.html</anchorfile>
      <anchor>a32d53d8fc187b879aa674ca6251a072a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>GLuint</type>
      <name>release</name>
      <anchorfile>classMagnum_1_1AbstractTexture.html</anchorfile>
      <anchor>ac238304b606cebf6ffbc290dfb2a38ef</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>label</name>
      <anchorfile>classMagnum_1_1AbstractTexture.html</anchorfile>
      <anchor>af77f52fdcab97d3917ea7f9305c9078e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>AbstractTexture &amp;</type>
      <name>setLabel</name>
      <anchorfile>classMagnum_1_1AbstractTexture.html</anchorfile>
      <anchor>abe442d51452cee556b776d6dc7e2ab04</anchor>
      <arglist>(const std::string &amp;label)</arglist>
    </member>
    <member kind="function">
      <type>AbstractTexture &amp;</type>
      <name>setLabel</name>
      <anchorfile>classMagnum_1_1AbstractTexture.html</anchorfile>
      <anchor>acb2028f23968734882daa70372ba8567</anchor>
      <arglist>(const char(&amp;label)[size])</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>bind</name>
      <anchorfile>classMagnum_1_1AbstractTexture.html</anchorfile>
      <anchor>a4f6ca04d84d20ae4bdf0deac2dabc8bc</anchor>
      <arglist>(Int textureUnit)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Float</type>
      <name>maxLodBias</name>
      <anchorfile>classMagnum_1_1AbstractTexture.html</anchorfile>
      <anchor>a9b37d2675add0f258329de98a5aed054</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Int</type>
      <name>maxColorSamples</name>
      <anchorfile>classMagnum_1_1AbstractTexture.html</anchorfile>
      <anchor>ae652e7e51c2f75265a507ff294e7e725</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Int</type>
      <name>maxDepthSamples</name>
      <anchorfile>classMagnum_1_1AbstractTexture.html</anchorfile>
      <anchor>ab978cc4bfdbd582358ce0402ae7fc72b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Int</type>
      <name>maxIntegerSamples</name>
      <anchorfile>classMagnum_1_1AbstractTexture.html</anchorfile>
      <anchor>a1cc89a38df045d1a1277486c9345688a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>unbind</name>
      <anchorfile>classMagnum_1_1AbstractTexture.html</anchorfile>
      <anchor>a2dc84f8a0966d675ea16c081f51d6fc7</anchor>
      <arglist>(Int textureUnit)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>unbind</name>
      <anchorfile>classMagnum_1_1AbstractTexture.html</anchorfile>
      <anchor>ade5acca74459bc4500844f6dbd3039f4</anchor>
      <arglist>(Int firstTextureUnit, std::size_t count)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>bind</name>
      <anchorfile>classMagnum_1_1AbstractTexture.html</anchorfile>
      <anchor>abf1314a4b8734f3412cfc01238ae1ed0</anchor>
      <arglist>(Int firstTextureUnit, std::initializer_list&lt; AbstractTexture * &gt; textures)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>unbindImage</name>
      <anchorfile>classMagnum_1_1AbstractTexture.html</anchorfile>
      <anchor>a19692fdceaa70591d717fad97030917d</anchor>
      <arglist>(Int imageUnit)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>unbindImages</name>
      <anchorfile>classMagnum_1_1AbstractTexture.html</anchorfile>
      <anchor>ab2dd2a757c35e7447df76ea86dd4d183</anchor>
      <arglist>(Int firstImageUnit, std::size_t count)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>bindImages</name>
      <anchorfile>classMagnum_1_1AbstractTexture.html</anchorfile>
      <anchor>a636f7ff7f140aa68c4548924e844f038</anchor>
      <arglist>(Int firstImageUnit, std::initializer_list&lt; AbstractTexture * &gt; textures)</arglist>
    </member>
    <docanchor file="classMagnum_1_1AbstractTexture" title="WebGL restrictions">AbstractTexture-webgl-restrictions</docanchor>
    <docanchor file="classMagnum_1_1AbstractTexture" title="Performance optimizations and security">AbstractTexture-performance-optimization</docanchor>
  </compound>
  <compound kind="class">
    <name>Magnum::Array</name>
    <filename>classMagnum_1_1Array.html</filename>
    <templarg>dimensions</templarg>
    <templarg>T</templarg>
    <member kind="enumvalue">
      <name>Dimensions</name>
      <anchorfile>classMagnum_1_1Array.html</anchorfile>
      <anchor>a79f9c3a0f12ed372220a2243c22ad8e5a02e765ef0586f2a00aa3e8d8b6b6f54e</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>T</type>
      <name>Type</name>
      <anchorfile>classMagnum_1_1Array.html</anchorfile>
      <anchor>a5d842ed4765a588e0682657c4d679c7b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Dimensions</name>
      <anchorfile>classMagnum_1_1Array.html</anchorfile>
      <anchor>a79f9c3a0f12ed372220a2243c22ad8e5a02e765ef0586f2a00aa3e8d8b6b6f54e</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Array</name>
      <anchorfile>classMagnum_1_1Array.html</anchorfile>
      <anchor>a013f4528a641a0f8027c2bc1e3f55c43</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Array</name>
      <anchorfile>classMagnum_1_1Array.html</anchorfile>
      <anchor>aa7a5c3f5e210d8266b6f1c06b2a520e1</anchor>
      <arglist>(T first, U...next)</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Array</name>
      <anchorfile>classMagnum_1_1Array.html</anchorfile>
      <anchor>ad49a96a54105662266219595c8aee9d6</anchor>
      <arglist>(T value)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classMagnum_1_1Array.html</anchorfile>
      <anchor>ae4a43630b5e94160b75e47d7a95e29a6</anchor>
      <arglist>(const Array&lt; dimensions, T &gt; &amp;other) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>classMagnum_1_1Array.html</anchorfile>
      <anchor>a7e982c4c3b6fa1a4124e8dbf44996c72</anchor>
      <arglist>(const Array&lt; dimensions, T &gt; &amp;other) const </arglist>
    </member>
    <member kind="function">
      <type>T &amp;</type>
      <name>operator[]</name>
      <anchorfile>classMagnum_1_1Array.html</anchorfile>
      <anchor>a041cec7d0a7725649be58bf9bb6d4ecf</anchor>
      <arglist>(UnsignedInt pos)</arglist>
    </member>
    <member kind="function">
      <type>constexpr T</type>
      <name>operator[]</name>
      <anchorfile>classMagnum_1_1Array.html</anchorfile>
      <anchor>aa8a712aff167c11f9e279783ef93a7b1</anchor>
      <arglist>(UnsignedInt pos) const </arglist>
    </member>
    <member kind="function">
      <type>T *</type>
      <name>data</name>
      <anchorfile>classMagnum_1_1Array.html</anchorfile>
      <anchor>aeb8e629eca2e0c1e43562ba7479070c3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>constexpr const T *</type>
      <name>data</name>
      <anchorfile>classMagnum_1_1Array.html</anchorfile>
      <anchor>a80fa9e8d50e3439b732a052b410b5ae0</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>classMagnum_1_1Array.html</anchorfile>
      <anchor>a2c022de6a506d510afb76bef6f382f10</anchor>
      <arglist>(Debug &amp;debug, const Array&lt; dimensions, T &gt; &amp;value)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Magnum::Array1D</name>
    <filename>classMagnum_1_1Array1D.html</filename>
    <templarg></templarg>
    <base>Array&lt; 1, T &gt;</base>
    <member kind="function">
      <type>constexpr</type>
      <name>Array1D</name>
      <anchorfile>classMagnum_1_1Array1D.html</anchorfile>
      <anchor>a78a26c63d92cfd5ace9166b010514ee8</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Array1D</name>
      <anchorfile>classMagnum_1_1Array1D.html</anchorfile>
      <anchor>ad9582ccdd6b2668a3bca5386db7c51fe</anchor>
      <arglist>(T x)</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Array1D</name>
      <anchorfile>classMagnum_1_1Array1D.html</anchorfile>
      <anchor>ac2b5b75522c4146e097a7c38cafcb7ea</anchor>
      <arglist>(const Array&lt; 1, T &gt; &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>T &amp;</type>
      <name>x</name>
      <anchorfile>classMagnum_1_1Array1D.html</anchorfile>
      <anchor>af288b22cfffdc1a6bb25e165d5329d73</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>constexpr T</type>
      <name>x</name>
      <anchorfile>classMagnum_1_1Array1D.html</anchorfile>
      <anchor>a7d5dadfc15f7bc5b869ac6f5b4fa5051</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>classMagnum_1_1Array1D.html</anchorfile>
      <anchor>a0006f1ddb183ade30e6696eae4d9e41e</anchor>
      <arglist>(Debug &amp;debug, const Array1D&lt; T &gt; &amp;value)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Magnum::Array2D</name>
    <filename>classMagnum_1_1Array2D.html</filename>
    <templarg></templarg>
    <base>Array&lt; 2, T &gt;</base>
    <member kind="function">
      <type>constexpr</type>
      <name>Array2D</name>
      <anchorfile>classMagnum_1_1Array2D.html</anchorfile>
      <anchor>a3b564d65a19c1d932fe43dbb1651a20d</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Array2D</name>
      <anchorfile>classMagnum_1_1Array2D.html</anchorfile>
      <anchor>ab12dd4fe3bf1b55c66303cdf0840e0f5</anchor>
      <arglist>(T x, T y)</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Array2D</name>
      <anchorfile>classMagnum_1_1Array2D.html</anchorfile>
      <anchor>a68e9b1baa30b768b01ae547c91764f2c</anchor>
      <arglist>(T value)</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Array2D</name>
      <anchorfile>classMagnum_1_1Array2D.html</anchorfile>
      <anchor>aeddd5fe019e4954faa5f4c2223724367</anchor>
      <arglist>(const Array&lt; 2, T &gt; &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>T &amp;</type>
      <name>x</name>
      <anchorfile>classMagnum_1_1Array2D.html</anchorfile>
      <anchor>a08a34ba7f543dd9f1caf2533c2cf3584</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>constexpr T</type>
      <name>x</name>
      <anchorfile>classMagnum_1_1Array2D.html</anchorfile>
      <anchor>ac37cc4987fa5ffdad5d7e120d3702e2d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>T &amp;</type>
      <name>y</name>
      <anchorfile>classMagnum_1_1Array2D.html</anchorfile>
      <anchor>aa73c06c88874ffcd521637d7a3a7b3a4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>constexpr T</type>
      <name>y</name>
      <anchorfile>classMagnum_1_1Array2D.html</anchorfile>
      <anchor>a933366a9f5a8cff89b128029e7929fa2</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>classMagnum_1_1Array2D.html</anchorfile>
      <anchor>a0fd13dadee773ce45ed6ab0a7cfe1630</anchor>
      <arglist>(Debug &amp;debug, const Array2D&lt; T &gt; &amp;value)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Magnum::Array3D</name>
    <filename>classMagnum_1_1Array3D.html</filename>
    <templarg>T</templarg>
    <base>Array&lt; 3, T &gt;</base>
    <member kind="function">
      <type>constexpr</type>
      <name>Array3D</name>
      <anchorfile>classMagnum_1_1Array3D.html</anchorfile>
      <anchor>a0ad730b1a5c83d6ed76733ff6f88efd8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Array3D</name>
      <anchorfile>classMagnum_1_1Array3D.html</anchorfile>
      <anchor>abcde5d5b0866569d72e1d8c32b55a0e6</anchor>
      <arglist>(T x, T y, T z)</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Array3D</name>
      <anchorfile>classMagnum_1_1Array3D.html</anchorfile>
      <anchor>a2939e8a313c4525eb29978a1fc00e82b</anchor>
      <arglist>(T value)</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Array3D</name>
      <anchorfile>classMagnum_1_1Array3D.html</anchorfile>
      <anchor>a5ecdf537fdbff58b291c4e579250d3a5</anchor>
      <arglist>(const Array&lt; 3, T &gt; &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>T &amp;</type>
      <name>x</name>
      <anchorfile>classMagnum_1_1Array3D.html</anchorfile>
      <anchor>aefb47d61179ebec5bb4c00f47269fd76</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>constexpr T</type>
      <name>x</name>
      <anchorfile>classMagnum_1_1Array3D.html</anchorfile>
      <anchor>a257e64664cf168e3d3bec38c37865abf</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>T &amp;</type>
      <name>y</name>
      <anchorfile>classMagnum_1_1Array3D.html</anchorfile>
      <anchor>af1853b7cdbcc3004d995972e26a49265</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>constexpr T</type>
      <name>y</name>
      <anchorfile>classMagnum_1_1Array3D.html</anchorfile>
      <anchor>a128027f44f3d34edfc43e9319ab0e24d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>T &amp;</type>
      <name>z</name>
      <anchorfile>classMagnum_1_1Array3D.html</anchorfile>
      <anchor>a250a0dd7eabb1ddb78124b745c7b316a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>constexpr T</type>
      <name>z</name>
      <anchorfile>classMagnum_1_1Array3D.html</anchorfile>
      <anchor>acaa7f102b4c44e4b3728ccd8bfa1319d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Array2D&lt; T &gt; &amp;</type>
      <name>xy</name>
      <anchorfile>classMagnum_1_1Array3D.html</anchorfile>
      <anchor>acb8a90e0c35f28e8ed6e01dc6657216b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>constexpr Array2D&lt; T &gt;</type>
      <name>xy</name>
      <anchorfile>classMagnum_1_1Array3D.html</anchorfile>
      <anchor>a8fd74a226e6d6e622a6c35155d3f9680</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>classMagnum_1_1Array3D.html</anchorfile>
      <anchor>ac95c370506ed1052ae50af8d3ab81fd1</anchor>
      <arglist>(Debug &amp;debug, const Array3D&lt; T &gt; &amp;value)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Magnum::Attribute</name>
    <filename>classMagnum_1_1Attribute.html</filename>
    <templarg>location</templarg>
    <templarg>T</templarg>
    <member kind="enumvalue">
      <name>Location</name>
      <anchorfile>classMagnum_1_1Attribute.html</anchorfile>
      <anchor>ae94a8a985bd4483f5585cad85d8f6bfca9c96ce49a103a993630344df60fdc546</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>VectorCount</name>
      <anchorfile>classMagnum_1_1Attribute.html</anchorfile>
      <anchor>ae94a8a985bd4483f5585cad85d8f6bfca85e83db6f246a1a4929895531efc97b1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>Components</name>
      <anchorfile>classMagnum_1_1Attribute.html</anchorfile>
      <anchor>a316ab4b8289132fb176f672d432c0e03</anchor>
      <arglist></arglist>
      <enumvalue file="classMagnum_1_1Attribute.html" anchor="a316ab4b8289132fb176f672d432c0e03a06c2cea18679d64399783748fa367bdd">One</enumvalue>
      <enumvalue file="classMagnum_1_1Attribute.html" anchor="a316ab4b8289132fb176f672d432c0e03aaada29daee1d64ed0fe907043855cb7e">Two</enumvalue>
      <enumvalue file="classMagnum_1_1Attribute.html" anchor="a316ab4b8289132fb176f672d432c0e03aca8a2087e5557e317599344687a57391">Three</enumvalue>
      <enumvalue file="classMagnum_1_1Attribute.html" anchor="a316ab4b8289132fb176f672d432c0e03a981b8fcee42e1e726a67a2b9a98ea6e9">Four</enumvalue>
      <enumvalue file="classMagnum_1_1Attribute.html" anchor="a316ab4b8289132fb176f672d432c0e03a5a1fe3c61c9e2fd6dbbc823589f6e697">BGRA</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>DataType</name>
      <anchorfile>classMagnum_1_1Attribute.html</anchorfile>
      <anchor>aeb363c7aece399e3779c50406b474dce</anchor>
      <arglist></arglist>
      <enumvalue file="classMagnum_1_1Attribute.html" anchor="aeb363c7aece399e3779c50406b474dcea8f0fb883eb5a52838534191513e365a2">UnsignedByte</enumvalue>
      <enumvalue file="classMagnum_1_1Attribute.html" anchor="aeb363c7aece399e3779c50406b474dceaa245c3230debe5c956484ecc6fa93877">Byte</enumvalue>
      <enumvalue file="classMagnum_1_1Attribute.html" anchor="aeb363c7aece399e3779c50406b474dceaeb51124277f3ec904a9af74d5de34e7b">UnsignedShort</enumvalue>
      <enumvalue file="classMagnum_1_1Attribute.html" anchor="aeb363c7aece399e3779c50406b474dcea30bb747c98bccdd11b3f89e644c4d0ad">Short</enumvalue>
      <enumvalue file="classMagnum_1_1Attribute.html" anchor="aeb363c7aece399e3779c50406b474dceac93cff91b6b9a57fa32bbe1863150070">UnsignedInt</enumvalue>
      <enumvalue file="classMagnum_1_1Attribute.html" anchor="aeb363c7aece399e3779c50406b474dcea1686a6c336b71b36d77354cea19a8b52">Int</enumvalue>
      <enumvalue file="classMagnum_1_1Attribute.html" anchor="aeb363c7aece399e3779c50406b474dcead35523d81610cee8b87cdac1853ad51f">HalfFloat</enumvalue>
      <enumvalue file="classMagnum_1_1Attribute.html" anchor="aeb363c7aece399e3779c50406b474dcea22ae0e2b89e5e3d477f988cc36d3272b">Float</enumvalue>
      <enumvalue file="classMagnum_1_1Attribute.html" anchor="aeb363c7aece399e3779c50406b474dcead909d38d705ce75386dd86e611a82f5b">Double</enumvalue>
      <enumvalue file="classMagnum_1_1Attribute.html" anchor="aeb363c7aece399e3779c50406b474dcea561473e5c75c919542b013eaaaff948d">UnsignedInt10f11f11fRev</enumvalue>
      <enumvalue file="classMagnum_1_1Attribute.html" anchor="aeb363c7aece399e3779c50406b474dceaf181e9b017ba4f6226f947aef3d86755">UnsignedInt2101010Rev</enumvalue>
      <enumvalue file="classMagnum_1_1Attribute.html" anchor="aeb363c7aece399e3779c50406b474dceaf9d37615ff3e365189e48ed5b88dbd46">Int2101010Rev</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>DataOption</name>
      <anchorfile>classMagnum_1_1Attribute.html</anchorfile>
      <anchor>a3f4665e160a58e89f74f16a51f279c99</anchor>
      <arglist></arglist>
      <enumvalue file="classMagnum_1_1Attribute.html" anchor="a3f4665e160a58e89f74f16a51f279c99a66b28fcf83c9f24cd5b4d7bdc8f8ba0e">Normalized</enumvalue>
    </member>
    <member kind="typedef">
      <type>T</type>
      <name>Type</name>
      <anchorfile>classMagnum_1_1Attribute.html</anchorfile>
      <anchor>ad710a6f887f33a108c47f23f7f6ab0fe</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Implementation::Attribute&lt; T &gt;::ScalarType</type>
      <name>ScalarType</name>
      <anchorfile>classMagnum_1_1Attribute.html</anchorfile>
      <anchor>a214d003dfa0a4234e65b7d3a54f3e0d3</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Containers::EnumSet&lt; DataOption &gt;</type>
      <name>DataOptions</name>
      <anchorfile>classMagnum_1_1Attribute.html</anchorfile>
      <anchor>a2116a3e4fc3cd74796d3de5c584c24d8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Location</name>
      <anchorfile>classMagnum_1_1Attribute.html</anchorfile>
      <anchor>ae94a8a985bd4483f5585cad85d8f6bfca9c96ce49a103a993630344df60fdc546</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>VectorCount</name>
      <anchorfile>classMagnum_1_1Attribute.html</anchorfile>
      <anchor>ae94a8a985bd4483f5585cad85d8f6bfca85e83db6f246a1a4929895531efc97b1</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Attribute</name>
      <anchorfile>classMagnum_1_1Attribute.html</anchorfile>
      <anchor>a81342d247df6a7a527c907892d79df58</anchor>
      <arglist>(Components components, DataType dataType=Implementation::Attribute&lt; T &gt;::DefaultDataType, DataOptions dataOptions=DataOptions())</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Attribute</name>
      <anchorfile>classMagnum_1_1Attribute.html</anchorfile>
      <anchor>a6ab66c56a167214c981e2646bbad0bb3</anchor>
      <arglist>(DataType dataType=Implementation::Attribute&lt; T &gt;::DefaultDataType, DataOptions dataOptions=DataOptions())</arglist>
    </member>
    <member kind="function">
      <type>constexpr Components</type>
      <name>components</name>
      <anchorfile>classMagnum_1_1Attribute.html</anchorfile>
      <anchor>abcd7c84011c4db683c7d4c236a36d3ef</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>constexpr DataType</type>
      <name>dataType</name>
      <anchorfile>classMagnum_1_1Attribute.html</anchorfile>
      <anchor>a0f41ef26332b5772f635b6b06faeeee0</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>UnsignedInt</type>
      <name>vectorSize</name>
      <anchorfile>classMagnum_1_1Attribute.html</anchorfile>
      <anchor>a996c99eeafcfa8638b32f17aadab27cb</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>constexpr DataOptions</type>
      <name>dataOptions</name>
      <anchorfile>classMagnum_1_1Attribute.html</anchorfile>
      <anchor>a664fd08ea5084e35bb4f9e0d76ef47ea</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>classMagnum_1_1Attribute.html</anchorfile>
      <anchor>a0eb7a0597aa54dac06f74058f7591913</anchor>
      <arglist>(Debug &amp;debug, Attribute&lt; T &gt;::Components)</arglist>
    </member>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>classMagnum_1_1Attribute.html</anchorfile>
      <anchor>a74a95cad0d549a952ac6a097e5c92b0b</anchor>
      <arglist>(Debug &amp;debug, Attribute&lt; T &gt;::DataType)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Magnum::Audio::AbstractImporter</name>
    <filename>classMagnum_1_1Audio_1_1AbstractImporter.html</filename>
    <base>AbstractManagingPlugin&lt; AbstractImporter &gt;</base>
    <member kind="enumeration">
      <type></type>
      <name>Feature</name>
      <anchorfile>classMagnum_1_1Audio_1_1AbstractImporter.html</anchorfile>
      <anchor>a0466de1b6fa70f1350b90ad6f804ec8d</anchor>
      <arglist></arglist>
      <enumvalue file="classMagnum_1_1Audio_1_1AbstractImporter.html" anchor="a0466de1b6fa70f1350b90ad6f804ec8dad81dcb96c7ab3ee3608397d0b0a9071c">OpenData</enumvalue>
    </member>
    <member kind="typedef">
      <type>Containers::EnumSet&lt; Feature &gt;</type>
      <name>Features</name>
      <anchorfile>classMagnum_1_1Audio_1_1AbstractImporter.html</anchorfile>
      <anchor>a4ad0e13e8e952858ba44c1a45eec8e0a</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AbstractImporter</name>
      <anchorfile>classMagnum_1_1Audio_1_1AbstractImporter.html</anchorfile>
      <anchor>abd0133c8ae118656d998502e451613ee</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AbstractImporter</name>
      <anchorfile>classMagnum_1_1Audio_1_1AbstractImporter.html</anchorfile>
      <anchor>ace8c40f686c7d2b7bac54cd184a55606</anchor>
      <arglist>(PluginManager::Manager&lt; AbstractImporter &gt; &amp;manager)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AbstractImporter</name>
      <anchorfile>classMagnum_1_1Audio_1_1AbstractImporter.html</anchorfile>
      <anchor>a1b882f5b3e423924043a2731acce422c</anchor>
      <arglist>(PluginManager::AbstractManager &amp;manager, const std::string &amp;plugin)</arglist>
    </member>
    <member kind="function">
      <type>Features</type>
      <name>features</name>
      <anchorfile>classMagnum_1_1Audio_1_1AbstractImporter.html</anchorfile>
      <anchor>aec9990d3e9b47cc78d0791adea6e8755</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isOpened</name>
      <anchorfile>classMagnum_1_1Audio_1_1AbstractImporter.html</anchorfile>
      <anchor>a319d6bbd50bef8d550238ab455cb0856</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>openData</name>
      <anchorfile>classMagnum_1_1Audio_1_1AbstractImporter.html</anchorfile>
      <anchor>a89eed7be2bad0257ada88433f3ea052e</anchor>
      <arglist>(Containers::ArrayView&lt; const char &gt; data)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>openFile</name>
      <anchorfile>classMagnum_1_1Audio_1_1AbstractImporter.html</anchorfile>
      <anchor>af9511f075311591f67246141e6aab6ac</anchor>
      <arglist>(const std::string &amp;filename)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>close</name>
      <anchorfile>classMagnum_1_1Audio_1_1AbstractImporter.html</anchorfile>
      <anchor>a801a5227314ad16e45858d05f5ee3eb9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Buffer::Format</type>
      <name>format</name>
      <anchorfile>classMagnum_1_1Audio_1_1AbstractImporter.html</anchorfile>
      <anchor>ab7bd05d672984d907715dadbb49a5d52</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>UnsignedInt</type>
      <name>frequency</name>
      <anchorfile>classMagnum_1_1Audio_1_1AbstractImporter.html</anchorfile>
      <anchor>afdb90d5fcacb4a0cde93e6b430e79417</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Containers::Array&lt; char &gt;</type>
      <name>data</name>
      <anchorfile>classMagnum_1_1Audio_1_1AbstractImporter.html</anchorfile>
      <anchor>abc6f098f83ff56b1790ba42a2a43a91c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual Features</type>
      <name>doFeatures</name>
      <anchorfile>classMagnum_1_1Audio_1_1AbstractImporter.html</anchorfile>
      <anchor>a8bc544e241fe4619ecfc88b8fe608944</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual bool</type>
      <name>doIsOpened</name>
      <anchorfile>classMagnum_1_1Audio_1_1AbstractImporter.html</anchorfile>
      <anchor>a16058ee5f0ddffa33b95c5b8821d7093</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>doOpenData</name>
      <anchorfile>classMagnum_1_1Audio_1_1AbstractImporter.html</anchorfile>
      <anchor>af36fa7a6d20e3bd40b940fdf9fab55f2</anchor>
      <arglist>(Containers::ArrayView&lt; const char &gt; data)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>doOpenFile</name>
      <anchorfile>classMagnum_1_1Audio_1_1AbstractImporter.html</anchorfile>
      <anchor>a196201c290ff075f789f8b389249f1cd</anchor>
      <arglist>(const std::string &amp;filename)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual void</type>
      <name>doClose</name>
      <anchorfile>classMagnum_1_1Audio_1_1AbstractImporter.html</anchorfile>
      <anchor>adef8340d3688fa581f4e2eda471058c2</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual Buffer::Format</type>
      <name>doFormat</name>
      <anchorfile>classMagnum_1_1Audio_1_1AbstractImporter.html</anchorfile>
      <anchor>a225d35a9325afb465525f784e6cd601d</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual UnsignedInt</type>
      <name>doFrequency</name>
      <anchorfile>classMagnum_1_1Audio_1_1AbstractImporter.html</anchorfile>
      <anchor>a8db7deff0d33befe124e131940cb96c2</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual Containers::Array&lt; char &gt;</type>
      <name>doData</name>
      <anchorfile>classMagnum_1_1Audio_1_1AbstractImporter.html</anchorfile>
      <anchor>a620fc593b91d8f2f3dad6c7c199ce146</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function">
      <type>Buffer::Format</type>
      <name>format</name>
      <anchorfile>classMagnum_1_1Audio_1_1AbstractImporter.html</anchorfile>
      <anchor>ab7bd05d672984d907715dadbb49a5d52</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>UnsignedInt</type>
      <name>frequency</name>
      <anchorfile>classMagnum_1_1Audio_1_1AbstractImporter.html</anchorfile>
      <anchor>afdb90d5fcacb4a0cde93e6b430e79417</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Containers::Array&lt; char &gt;</type>
      <name>data</name>
      <anchorfile>classMagnum_1_1Audio_1_1AbstractImporter.html</anchorfile>
      <anchor>abc6f098f83ff56b1790ba42a2a43a91c</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Magnum::Audio::AnyImporter</name>
    <filename>classMagnum_1_1Audio_1_1AnyImporter.html</filename>
    <base>Magnum::Audio::AbstractImporter</base>
    <member kind="function">
      <type></type>
      <name>AnyImporter</name>
      <anchorfile>classMagnum_1_1Audio_1_1AnyImporter.html</anchorfile>
      <anchor>ad12c4d0ec0743670873ed9c284ec0b8a</anchor>
      <arglist>(PluginManager::Manager&lt; AbstractImporter &gt; &amp;manager)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AnyImporter</name>
      <anchorfile>classMagnum_1_1Audio_1_1AnyImporter.html</anchorfile>
      <anchor>a9cee170243e2e14af3e16f03a509eab7</anchor>
      <arglist>(PluginManager::AbstractManager &amp;manager, const std::string &amp;plugin)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Magnum::Audio::Buffer</name>
    <filename>classMagnum_1_1Audio_1_1Buffer.html</filename>
    <member kind="enumeration">
      <type></type>
      <name>Format</name>
      <anchorfile>classMagnum_1_1Audio_1_1Buffer.html</anchorfile>
      <anchor>a874e5b6e06d2251b2ff487940cd0be9f</anchor>
      <arglist></arglist>
      <enumvalue file="classMagnum_1_1Audio_1_1Buffer.html" anchor="a874e5b6e06d2251b2ff487940cd0be9fabc5c44624758954f1a4af1e009f5cf6e">Mono8</enumvalue>
      <enumvalue file="classMagnum_1_1Audio_1_1Buffer.html" anchor="a874e5b6e06d2251b2ff487940cd0be9faab2f4f7e4448e8c91c89774787a1cc2c">Mono16</enumvalue>
      <enumvalue file="classMagnum_1_1Audio_1_1Buffer.html" anchor="a874e5b6e06d2251b2ff487940cd0be9fac6b222ce6dafa010da034571a80c21f3">Stereo8</enumvalue>
      <enumvalue file="classMagnum_1_1Audio_1_1Buffer.html" anchor="a874e5b6e06d2251b2ff487940cd0be9fa851cd6283aaf71edd18bb2fcda2505f4">Stereo16</enumvalue>
      <enumvalue file="classMagnum_1_1Audio_1_1Buffer.html" anchor="a874e5b6e06d2251b2ff487940cd0be9faa3ef86eb1edf1b0d24120152d02b9ef5">MonoALaw</enumvalue>
      <enumvalue file="classMagnum_1_1Audio_1_1Buffer.html" anchor="a874e5b6e06d2251b2ff487940cd0be9faf898d946fe1d41fc95e314810ca89496">StereoALaw</enumvalue>
      <enumvalue file="classMagnum_1_1Audio_1_1Buffer.html" anchor="a874e5b6e06d2251b2ff487940cd0be9faad3e4303ede6b64317a9ff173efa71bc">MonoMuLaw</enumvalue>
      <enumvalue file="classMagnum_1_1Audio_1_1Buffer.html" anchor="a874e5b6e06d2251b2ff487940cd0be9fac95d445585d921a97b8accb0e18947e5">StereoMuLaw</enumvalue>
      <enumvalue file="classMagnum_1_1Audio_1_1Buffer.html" anchor="a874e5b6e06d2251b2ff487940cd0be9fa3b5536c3d1aaf79c160d903fcb9b0373">MonoFloat</enumvalue>
      <enumvalue file="classMagnum_1_1Audio_1_1Buffer.html" anchor="a874e5b6e06d2251b2ff487940cd0be9fa1a929985b34ac6a5fdb5711034db8c2e">StereoFloat</enumvalue>
      <enumvalue file="classMagnum_1_1Audio_1_1Buffer.html" anchor="a874e5b6e06d2251b2ff487940cd0be9fa1fbed8d9457b7fceea35133e4f1abcd9">MonoDouble</enumvalue>
      <enumvalue file="classMagnum_1_1Audio_1_1Buffer.html" anchor="a874e5b6e06d2251b2ff487940cd0be9fa22e42f9014076820ae2392d3e446f06f">StereoDouble</enumvalue>
      <enumvalue file="classMagnum_1_1Audio_1_1Buffer.html" anchor="a874e5b6e06d2251b2ff487940cd0be9fa81a164b246c5014e888b66929f52f590">Quad8</enumvalue>
      <enumvalue file="classMagnum_1_1Audio_1_1Buffer.html" anchor="a874e5b6e06d2251b2ff487940cd0be9fa58a29325c4b5d157cb99990258c5489e">Quad16</enumvalue>
      <enumvalue file="classMagnum_1_1Audio_1_1Buffer.html" anchor="a874e5b6e06d2251b2ff487940cd0be9fa0ad8b41946d63884e26b54328db993f4">Quad32</enumvalue>
      <enumvalue file="classMagnum_1_1Audio_1_1Buffer.html" anchor="a874e5b6e06d2251b2ff487940cd0be9fadf41c9c4fa8da9fe9f8f2e5a72af2524">Rear8</enumvalue>
      <enumvalue file="classMagnum_1_1Audio_1_1Buffer.html" anchor="a874e5b6e06d2251b2ff487940cd0be9fa9cc2022589783937583eb8b0d9647977">Rear16</enumvalue>
      <enumvalue file="classMagnum_1_1Audio_1_1Buffer.html" anchor="a874e5b6e06d2251b2ff487940cd0be9fabdf29e461ff3e3d5a74989bd5f88e085">Rear32</enumvalue>
      <enumvalue file="classMagnum_1_1Audio_1_1Buffer.html" anchor="a874e5b6e06d2251b2ff487940cd0be9fa8aea3b11005e9d26048ead9c6a42f5f6">Surround51Channel8</enumvalue>
      <enumvalue file="classMagnum_1_1Audio_1_1Buffer.html" anchor="a874e5b6e06d2251b2ff487940cd0be9fa97352bb35a7fd55284a8abcee934750b">Surround51Channel16</enumvalue>
      <enumvalue file="classMagnum_1_1Audio_1_1Buffer.html" anchor="a874e5b6e06d2251b2ff487940cd0be9fab00d9219a3bd6bc39879c3b190b975d5">Surround51Channel32</enumvalue>
      <enumvalue file="classMagnum_1_1Audio_1_1Buffer.html" anchor="a874e5b6e06d2251b2ff487940cd0be9fa5cc44f6f8cc3fcb9e82950f2a8cd5138">Surround61Channel8</enumvalue>
      <enumvalue file="classMagnum_1_1Audio_1_1Buffer.html" anchor="a874e5b6e06d2251b2ff487940cd0be9fae73828019aeecb9a50fb8969ec37a692">Surround61Channel16</enumvalue>
      <enumvalue file="classMagnum_1_1Audio_1_1Buffer.html" anchor="a874e5b6e06d2251b2ff487940cd0be9faa2719df150529fd80a2d27f14e1960e3">Surround61Channel32</enumvalue>
      <enumvalue file="classMagnum_1_1Audio_1_1Buffer.html" anchor="a874e5b6e06d2251b2ff487940cd0be9fa64e05f42c7d9f67c13383329b4492e82">Surround71Channel8</enumvalue>
      <enumvalue file="classMagnum_1_1Audio_1_1Buffer.html" anchor="a874e5b6e06d2251b2ff487940cd0be9fa36fb3772c6c7c3102f312473b1a0f466">Surround71Channel16</enumvalue>
      <enumvalue file="classMagnum_1_1Audio_1_1Buffer.html" anchor="a874e5b6e06d2251b2ff487940cd0be9fa8917bb1aa8b402c02ee777e8d59a51ec">Surround71Channel32</enumvalue>
    </member>
    <member kind="function">
      <type></type>
      <name>Buffer</name>
      <anchorfile>classMagnum_1_1Audio_1_1Buffer.html</anchorfile>
      <anchor>aa908f0b649e321afaa2e4a513f3546de</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~Buffer</name>
      <anchorfile>classMagnum_1_1Audio_1_1Buffer.html</anchorfile>
      <anchor>a3a6090001e32158c8d0c4b2c9490add2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Buffer</name>
      <anchorfile>classMagnum_1_1Audio_1_1Buffer.html</anchorfile>
      <anchor>ad509396c7de7d95aabcd5036a701eb96</anchor>
      <arglist>(const Buffer &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Buffer</name>
      <anchorfile>classMagnum_1_1Audio_1_1Buffer.html</anchorfile>
      <anchor>ac46de9e5c6a2e304ac9fd455c3050306</anchor>
      <arglist>(Buffer &amp;&amp;other)</arglist>
    </member>
    <member kind="function">
      <type>Buffer &amp;</type>
      <name>operator=</name>
      <anchorfile>classMagnum_1_1Audio_1_1Buffer.html</anchorfile>
      <anchor>acd3094f69e4152a27e024db04be555b8</anchor>
      <arglist>(const Buffer &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>Buffer &amp;</type>
      <name>operator=</name>
      <anchorfile>classMagnum_1_1Audio_1_1Buffer.html</anchorfile>
      <anchor>a47525a2a884594e70f57507cf3c8fd26</anchor>
      <arglist>(Buffer &amp;&amp;other)</arglist>
    </member>
    <member kind="function">
      <type>ALuint</type>
      <name>id</name>
      <anchorfile>classMagnum_1_1Audio_1_1Buffer.html</anchorfile>
      <anchor>abde3bc50844539bf2403720989adba35</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Buffer &amp;</type>
      <name>setData</name>
      <anchorfile>classMagnum_1_1Audio_1_1Buffer.html</anchorfile>
      <anchor>afa99714b396205dff950bd113fc1c6c1</anchor>
      <arglist>(Format format, Containers::ArrayView&lt; const void &gt; data, ALsizei frequency)</arglist>
    </member>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>classMagnum_1_1Audio_1_1Buffer.html</anchorfile>
      <anchor>ab1e69c3dc00f873de9e13def3472dce4</anchor>
      <arglist>(Debug &amp;debug, Buffer::Format value)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Magnum::Audio::Context</name>
    <filename>classMagnum_1_1Audio_1_1Context.html</filename>
    <class kind="class">Magnum::Audio::Context::Configuration</class>
    <member kind="enumeration">
      <type></type>
      <name>HrtfStatus</name>
      <anchorfile>classMagnum_1_1Audio_1_1Context.html</anchorfile>
      <anchor>a22a5135a805786b1bdc460395342a41e</anchor>
      <arglist></arglist>
      <enumvalue file="classMagnum_1_1Audio_1_1Context.html" anchor="a22a5135a805786b1bdc460395342a41eab9f5c797ebbf55adccdd8539a65a0241">Disabled</enumvalue>
      <enumvalue file="classMagnum_1_1Audio_1_1Context.html" anchor="a22a5135a805786b1bdc460395342a41ea00d23a76e43b46dae9ec7aa9dcbebb32">Enabled</enumvalue>
      <enumvalue file="classMagnum_1_1Audio_1_1Context.html" anchor="a22a5135a805786b1bdc460395342a41ea58d036b9b7f0e7eb38cfb90f1cc70a73">Denied</enumvalue>
      <enumvalue file="classMagnum_1_1Audio_1_1Context.html" anchor="a22a5135a805786b1bdc460395342a41eab651efdb98a5d6bd2b3935d0c3f4a5e2">Required</enumvalue>
      <enumvalue file="classMagnum_1_1Audio_1_1Context.html" anchor="a22a5135a805786b1bdc460395342a41ea495ede3d060199c507c8708600b51784">Detected</enumvalue>
      <enumvalue file="classMagnum_1_1Audio_1_1Context.html" anchor="a22a5135a805786b1bdc460395342a41eac82adc7582667b6bbc1e066757aad182">UnsupportedFormat</enumvalue>
    </member>
    <member kind="function">
      <type></type>
      <name>Context</name>
      <anchorfile>classMagnum_1_1Audio_1_1Context.html</anchorfile>
      <anchor>a2954fc444a0e520e44e8c80394c0d8cd</anchor>
      <arglist>(const Configuration &amp;configuration=Configuration())</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~Context</name>
      <anchorfile>classMagnum_1_1Audio_1_1Context.html</anchorfile>
      <anchor>a0cc1b25f3166a2b073d380037c7c4b66</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isHrtfEnabled</name>
      <anchorfile>classMagnum_1_1Audio_1_1Context.html</anchorfile>
      <anchor>ac706dd1a3acfb0df285ee7d0e8f39d16</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>HrtfStatus</type>
      <name>hrtfStatus</name>
      <anchorfile>classMagnum_1_1Audio_1_1Context.html</anchorfile>
      <anchor>a042ba59170b9415df14c7104307a5a85</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>hrtfSpecifier</name>
      <anchorfile>classMagnum_1_1Audio_1_1Context.html</anchorfile>
      <anchor>a67f0d42acea575646bc95f180038fb5d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>deviceSpecifierString</name>
      <anchorfile>classMagnum_1_1Audio_1_1Context.html</anchorfile>
      <anchor>ab2437f9958ae7953aaec0bdbe3851c35</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>vendorString</name>
      <anchorfile>classMagnum_1_1Audio_1_1Context.html</anchorfile>
      <anchor>a7c5a80a1296f4fc6260c3fed17b9600b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>rendererString</name>
      <anchorfile>classMagnum_1_1Audio_1_1Context.html</anchorfile>
      <anchor>acbdecc8e9488d5f08568f5d48a9bdba0</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>versionString</name>
      <anchorfile>classMagnum_1_1Audio_1_1Context.html</anchorfile>
      <anchor>a11671084b6645a63758b6544d90f726c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; std::string &gt;</type>
      <name>extensionStrings</name>
      <anchorfile>classMagnum_1_1Audio_1_1Context.html</anchorfile>
      <anchor>a72f9485daa7532ff74c5f07ca4f2785b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const std::vector&lt; Extension &gt; &amp;</type>
      <name>supportedExtensions</name>
      <anchorfile>classMagnum_1_1Audio_1_1Context.html</anchorfile>
      <anchor>abd8965c945817c2bf1fe02cd5755538f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isExtensionSupported</name>
      <anchorfile>classMagnum_1_1Audio_1_1Context.html</anchorfile>
      <anchor>aad7ba77cf6b02630be1def28f2d79bad</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isExtensionSupported</name>
      <anchorfile>classMagnum_1_1Audio_1_1Context.html</anchorfile>
      <anchor>a09b48e09d30349614c1bbfa338f351f8</anchor>
      <arglist>(const Extension &amp;extension) const </arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::vector&lt; std::string &gt;</type>
      <name>deviceSpecifierStrings</name>
      <anchorfile>classMagnum_1_1Audio_1_1Context.html</anchorfile>
      <anchor>a6f1fdc2c7ae09fe9993be994eba638ae</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>hasCurrent</name>
      <anchorfile>classMagnum_1_1Audio_1_1Context.html</anchorfile>
      <anchor>ad3a658ce6433a735292dfc23a94da854</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Context &amp;</type>
      <name>current</name>
      <anchorfile>classMagnum_1_1Audio_1_1Context.html</anchorfile>
      <anchor>a927dad853681662ac7ef4c04d8b22cd0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>classMagnum_1_1Audio_1_1Context.html</anchorfile>
      <anchor>aaaa4894d3c9ef0fd261da648c8850155</anchor>
      <arglist>(Debug &amp;debug, Context::HrtfStatus value)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Magnum::Audio::Context::Configuration</name>
    <filename>classMagnum_1_1Audio_1_1Context_1_1Configuration.html</filename>
    <member kind="enumeration">
      <type></type>
      <name>Hrtf</name>
      <anchorfile>classMagnum_1_1Audio_1_1Context_1_1Configuration.html</anchorfile>
      <anchor>ab6ac8eefadc69039e87e6d055a892f84</anchor>
      <arglist></arglist>
      <enumvalue file="classMagnum_1_1Audio_1_1Context_1_1Configuration.html" anchor="ab6ac8eefadc69039e87e6d055a892f84a7a1920d61156abc05a60135aefe8bc67">Default</enumvalue>
      <enumvalue file="classMagnum_1_1Audio_1_1Context_1_1Configuration.html" anchor="ab6ac8eefadc69039e87e6d055a892f84a00d23a76e43b46dae9ec7aa9dcbebb32">Enabled</enumvalue>
      <enumvalue file="classMagnum_1_1Audio_1_1Context_1_1Configuration.html" anchor="ab6ac8eefadc69039e87e6d055a892f84ab9f5c797ebbf55adccdd8539a65a0241">Disabled</enumvalue>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>deviceSpecifier</name>
      <anchorfile>classMagnum_1_1Audio_1_1Context_1_1Configuration.html</anchorfile>
      <anchor>ac21b29663255c295a47dc08d0df41916</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Configuration &amp;</type>
      <name>setDeviceSpecifier</name>
      <anchorfile>classMagnum_1_1Audio_1_1Context_1_1Configuration.html</anchorfile>
      <anchor>a5889b285c15714dc15ff9600efb72fa6</anchor>
      <arglist>(const std::string &amp;specifier)</arglist>
    </member>
    <member kind="function">
      <type>Configuration &amp;</type>
      <name>setDeviceSpecifier</name>
      <anchorfile>classMagnum_1_1Audio_1_1Context_1_1Configuration.html</anchorfile>
      <anchor>afb83e18078524016a95aef2925892e78</anchor>
      <arglist>(std::string &amp;&amp;specifier)</arglist>
    </member>
    <member kind="function">
      <type>Int</type>
      <name>frequency</name>
      <anchorfile>classMagnum_1_1Audio_1_1Context_1_1Configuration.html</anchorfile>
      <anchor>a51797813fa0df2fce0d501fb11d49655</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Configuration &amp;</type>
      <name>setFrequency</name>
      <anchorfile>classMagnum_1_1Audio_1_1Context_1_1Configuration.html</anchorfile>
      <anchor>a8d4bc54b80e5fbdb84f978e0c0189b91</anchor>
      <arglist>(Int hz)</arglist>
    </member>
    <member kind="function">
      <type>Hrtf</type>
      <name>hrtf</name>
      <anchorfile>classMagnum_1_1Audio_1_1Context_1_1Configuration.html</anchorfile>
      <anchor>aa3ace584d5a82fe26a605f55dea7ef36</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Configuration &amp;</type>
      <name>setHrtf</name>
      <anchorfile>classMagnum_1_1Audio_1_1Context_1_1Configuration.html</anchorfile>
      <anchor>ade495e3aa4933f75f91a32ea2c4cf6cd</anchor>
      <arglist>(Hrtf hrtf)</arglist>
    </member>
    <member kind="function">
      <type>Int</type>
      <name>monoSourceCount</name>
      <anchorfile>classMagnum_1_1Audio_1_1Context_1_1Configuration.html</anchorfile>
      <anchor>a1e242eb48636d1ab7aee0210b1dd479c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Configuration &amp;</type>
      <name>setMonoSourceCount</name>
      <anchorfile>classMagnum_1_1Audio_1_1Context_1_1Configuration.html</anchorfile>
      <anchor>ac1153bcd9e067db2ddb830a3fc2eeb2f</anchor>
      <arglist>(Int count)</arglist>
    </member>
    <member kind="function">
      <type>Int</type>
      <name>stereoSourceCount</name>
      <anchorfile>classMagnum_1_1Audio_1_1Context_1_1Configuration.html</anchorfile>
      <anchor>ad8dd7afb6d3940d76b70048e03d5e767</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Configuration &amp;</type>
      <name>setStereoSourceCount</name>
      <anchorfile>classMagnum_1_1Audio_1_1Context_1_1Configuration.html</anchorfile>
      <anchor>a39fc78a6375c233bc6c7994c4a7f1660</anchor>
      <arglist>(Int count)</arglist>
    </member>
    <member kind="function">
      <type>Int</type>
      <name>refreshRate</name>
      <anchorfile>classMagnum_1_1Audio_1_1Context_1_1Configuration.html</anchorfile>
      <anchor>a3dca62b60df41275c33703852ea5ef1d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Configuration &amp;</type>
      <name>setRefreshRate</name>
      <anchorfile>classMagnum_1_1Audio_1_1Context_1_1Configuration.html</anchorfile>
      <anchor>aacf97593ec667e64b202208e13518a65</anchor>
      <arglist>(Int hz)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Magnum::Audio::DrFlacImporter</name>
    <filename>classMagnum_1_1Audio_1_1DrFlacImporter.html</filename>
    <base>Magnum::Audio::AbstractImporter</base>
    <member kind="function">
      <type></type>
      <name>DrFlacImporter</name>
      <anchorfile>classMagnum_1_1Audio_1_1DrFlacImporter.html</anchorfile>
      <anchor>ac329bb9b30436be1ba6abfd52bdf4c28</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DrFlacImporter</name>
      <anchorfile>classMagnum_1_1Audio_1_1DrFlacImporter.html</anchorfile>
      <anchor>a2118660b4022fe691f41edc9f996615d</anchor>
      <arglist>(PluginManager::AbstractManager &amp;manager, const std::string &amp;plugin)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Magnum::Audio::DrWavImporter</name>
    <filename>classMagnum_1_1Audio_1_1DrWavImporter.html</filename>
    <base>Magnum::Audio::AbstractImporter</base>
    <member kind="function">
      <type></type>
      <name>DrWavImporter</name>
      <anchorfile>classMagnum_1_1Audio_1_1DrWavImporter.html</anchorfile>
      <anchor>acbffa5500b84839473f84eb456d6154e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DrWavImporter</name>
      <anchorfile>classMagnum_1_1Audio_1_1DrWavImporter.html</anchorfile>
      <anchor>a4785c3603bbcad6b76d234372505c627</anchor>
      <arglist>(PluginManager::AbstractManager &amp;manager, const std::string &amp;plugin)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Magnum::Audio::Extension</name>
    <filename>classMagnum_1_1Audio_1_1Extension.html</filename>
    <member kind="function">
      <type>constexpr const char *</type>
      <name>string</name>
      <anchorfile>classMagnum_1_1Audio_1_1Extension.html</anchorfile>
      <anchor>a926c7ae6ed6760c8b21ef77e5ba8da98</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const std::vector&lt; Extension &gt; &amp;</type>
      <name>extensions</name>
      <anchorfile>classMagnum_1_1Audio_1_1Extension.html</anchorfile>
      <anchor>abb60df01dace0c8ced3fb9eb73d8bd3a</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Magnum::Audio::Listener</name>
    <filename>classMagnum_1_1Audio_1_1Listener.html</filename>
    <templarg>dimensions</templarg>
    <base>AbstractFeature&lt; dimensions, Float &gt;</base>
    <member kind="function">
      <type></type>
      <name>Listener</name>
      <anchorfile>classMagnum_1_1Audio_1_1Listener.html</anchorfile>
      <anchor>a197b91107fe5eb1d25f83292b571b4af</anchor>
      <arglist>(SceneGraph::AbstractObject&lt; dimensions, Float &gt; &amp;object)</arglist>
    </member>
    <member kind="function">
      <type>const Matrix4 &amp;</type>
      <name>soundTransformation</name>
      <anchorfile>classMagnum_1_1Audio_1_1Listener.html</anchorfile>
      <anchor>ab0d1106faae102aef087034115b1ec26</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Listener&lt; dimensions &gt; &amp;</type>
      <name>setSoundTransformation</name>
      <anchorfile>classMagnum_1_1Audio_1_1Listener.html</anchorfile>
      <anchor>af3524dd986270e7bd2f98c8bf82f4a70</anchor>
      <arglist>(const Matrix4 &amp;soundTransformation)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>update</name>
      <anchorfile>classMagnum_1_1Audio_1_1Listener.html</anchorfile>
      <anchor>af5709fe812be779b6bd9ad44445def2b</anchor>
      <arglist>(std::initializer_list&lt; std::reference_wrapper&lt; PlayableGroup&lt; dimensions &gt;&gt;&gt; groups)</arglist>
    </member>
    <member kind="function">
      <type>Float</type>
      <name>gain</name>
      <anchorfile>classMagnum_1_1Audio_1_1Listener.html</anchorfile>
      <anchor>ae400cba0eefa656324404db11734a5ea</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Listener&lt; dimensions &gt; &amp;</type>
      <name>setGain</name>
      <anchorfile>classMagnum_1_1Audio_1_1Listener.html</anchorfile>
      <anchor>a84e0331f62b764a0036e0b8f726780e8</anchor>
      <arglist>(Float gain)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isActive</name>
      <anchorfile>classMagnum_1_1Audio_1_1Listener.html</anchorfile>
      <anchor>a4d93994b5c330f6bc8ecc718b3c9381d</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Magnum::Audio::Playable</name>
    <filename>classMagnum_1_1Audio_1_1Playable.html</filename>
    <templarg>dimensions</templarg>
    <base>AbstractGroupedFeature&lt; dimensions, Playable&lt; dimensions &gt;, Float &gt;</base>
    <member kind="function">
      <type></type>
      <name>Playable</name>
      <anchorfile>classMagnum_1_1Audio_1_1Playable.html</anchorfile>
      <anchor>af85a80753977c5842ae1a61d764641c0</anchor>
      <arglist>(SceneGraph::AbstractObject&lt; dimensions, Float &gt; &amp;object, PlayableGroup&lt; dimensions &gt; *group=nullptr)</arglist>
    </member>
    <member kind="function">
      <type>Source &amp;</type>
      <name>source</name>
      <anchorfile>classMagnum_1_1Audio_1_1Playable.html</anchorfile>
      <anchor>aa6f5345343d22e079da030ce093be9bc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Float</type>
      <name>gain</name>
      <anchorfile>classMagnum_1_1Audio_1_1Playable.html</anchorfile>
      <anchor>a4ad8fcfd7330a00dbd305c1e9c7f9c2e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Playable &amp;</type>
      <name>setGain</name>
      <anchorfile>classMagnum_1_1Audio_1_1Playable.html</anchorfile>
      <anchor>ac4dfc5513d60664bd9182d27db5404ed</anchor>
      <arglist>(const Float gain)</arglist>
    </member>
    <member kind="function">
      <type>PlayableGroup&lt; dimensions &gt; *</type>
      <name>playables</name>
      <anchorfile>classMagnum_1_1Audio_1_1Playable.html</anchorfile>
      <anchor>ac8e414b1479bf75110906b18067c27d4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const PlayableGroup&lt; dimensions &gt; *</type>
      <name>playables</name>
      <anchorfile>classMagnum_1_1Audio_1_1Playable.html</anchorfile>
      <anchor>a229843ff848e433be843c1ac405115e2</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Magnum::Audio::PlayableGroup</name>
    <filename>classMagnum_1_1Audio_1_1PlayableGroup.html</filename>
    <templarg>dimensions</templarg>
    <base>FeatureGroup&lt; dimensions, Playable&lt; dimensions &gt;, Float &gt;</base>
    <member kind="function">
      <type></type>
      <name>PlayableGroup</name>
      <anchorfile>classMagnum_1_1Audio_1_1PlayableGroup.html</anchorfile>
      <anchor>a9a834efc4ca79001278e2b4da2d4f345</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>PlayableGroup&lt; dimensions &gt; &amp;</type>
      <name>play</name>
      <anchorfile>classMagnum_1_1Audio_1_1PlayableGroup.html</anchorfile>
      <anchor>a68af8a6f1f3392fc8b3cd9c067df0852</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>PlayableGroup &amp;</type>
      <name>pause</name>
      <anchorfile>classMagnum_1_1Audio_1_1PlayableGroup.html</anchorfile>
      <anchor>a064e13ca752095e8277f80178bc73a7c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>PlayableGroup &amp;</type>
      <name>stop</name>
      <anchorfile>classMagnum_1_1Audio_1_1PlayableGroup.html</anchorfile>
      <anchor>aee4bf24d5e77115f565981b8c579a6c1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Float</type>
      <name>gain</name>
      <anchorfile>classMagnum_1_1Audio_1_1PlayableGroup.html</anchorfile>
      <anchor>a3d1c694e3b1d13aff51cd91a392f85b3</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>PlayableGroup &amp;</type>
      <name>setGain</name>
      <anchorfile>classMagnum_1_1Audio_1_1PlayableGroup.html</anchorfile>
      <anchor>a795222c46344ffb6bfad4ac7372faea5</anchor>
      <arglist>(const Float gain)</arglist>
    </member>
    <member kind="function">
      <type>const Matrix4 &amp;</type>
      <name>soundTransformation</name>
      <anchorfile>classMagnum_1_1Audio_1_1PlayableGroup.html</anchorfile>
      <anchor>a4643d8b2b1e15009acbd3ed34b86910d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>PlayableGroup &amp;</type>
      <name>setSoundTransformation</name>
      <anchorfile>classMagnum_1_1Audio_1_1PlayableGroup.html</anchorfile>
      <anchor>a6bf32cba7b15a9e6bd354fa8d6feccbe</anchor>
      <arglist>(const Matrix4 &amp;matrix)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setClean</name>
      <anchorfile>classMagnum_1_1Audio_1_1PlayableGroup.html</anchorfile>
      <anchor>ac902ff9516f00c99f29d1e0f10b0c14d</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Magnum::Audio::Renderer</name>
    <filename>classMagnum_1_1Audio_1_1Renderer.html</filename>
    <member kind="enumeration">
      <type></type>
      <name>Error</name>
      <anchorfile>classMagnum_1_1Audio_1_1Renderer.html</anchorfile>
      <anchor>a850adfc54ad2b0caffc6477f7588279c</anchor>
      <arglist></arglist>
      <enumvalue file="classMagnum_1_1Audio_1_1Renderer.html" anchor="a850adfc54ad2b0caffc6477f7588279ca70a47cae4eb221930f2663fd244369ea">NoError</enumvalue>
      <enumvalue file="classMagnum_1_1Audio_1_1Renderer.html" anchor="a850adfc54ad2b0caffc6477f7588279caa798c6c805d93fedf99d9bdf443e7ffc">InvalidName</enumvalue>
      <enumvalue file="classMagnum_1_1Audio_1_1Renderer.html" anchor="a850adfc54ad2b0caffc6477f7588279cabaf0777e3144a52d6fd69816f4ac22c8">InvalidEnum</enumvalue>
      <enumvalue file="classMagnum_1_1Audio_1_1Renderer.html" anchor="a850adfc54ad2b0caffc6477f7588279ca223e81e8afa42c41346a6696560ecc7b">InvalidValue</enumvalue>
      <enumvalue file="classMagnum_1_1Audio_1_1Renderer.html" anchor="a850adfc54ad2b0caffc6477f7588279ca1cd5ecce6fe138df5c3f7e8854a1a66d">InvalidOperation</enumvalue>
      <enumvalue file="classMagnum_1_1Audio_1_1Renderer.html" anchor="a850adfc54ad2b0caffc6477f7588279cab498327feeb51430af73e07deac268fd">OutOfMemory</enumvalue>
    </member>
    <member kind="function" static="yes">
      <type>static Error</type>
      <name>error</name>
      <anchorfile>classMagnum_1_1Audio_1_1Renderer.html</anchorfile>
      <anchor>a0cdb3e0f83fdcd97b67bad15b2d663b1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Vector3</type>
      <name>listenerPosition</name>
      <anchorfile>classMagnum_1_1Audio_1_1Renderer.html</anchorfile>
      <anchor>abb4edbd4752a62a521e6b35d7cc5bd87</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>setListenerPosition</name>
      <anchorfile>classMagnum_1_1Audio_1_1Renderer.html</anchorfile>
      <anchor>af6f800d5a477669b6ed35bb884c8f109</anchor>
      <arglist>(const Vector3 &amp;position)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>setListenerPosition</name>
      <anchorfile>classMagnum_1_1Audio_1_1Renderer.html</anchorfile>
      <anchor>acc83a03c65738ec2ded77c64891b098d</anchor>
      <arglist>(const Vector3i &amp;position)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::array&lt; Vector3, 2 &gt;</type>
      <name>listenerOrientation</name>
      <anchorfile>classMagnum_1_1Audio_1_1Renderer.html</anchorfile>
      <anchor>a113d202a8ae12cb2c2904e485af6deb3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>setListenerOrientation</name>
      <anchorfile>classMagnum_1_1Audio_1_1Renderer.html</anchorfile>
      <anchor>acd08d7679053000aaeab3f1e864d240f</anchor>
      <arglist>(const Vector3 &amp;forward, const Vector3 &amp;up)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>setListenerOrientation</name>
      <anchorfile>classMagnum_1_1Audio_1_1Renderer.html</anchorfile>
      <anchor>ad4a8fd49f57aa9a0898632639873d550</anchor>
      <arglist>(const Vector3i &amp;forward, const Vector3i &amp;up)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Vector3</type>
      <name>listenerVelocity</name>
      <anchorfile>classMagnum_1_1Audio_1_1Renderer.html</anchorfile>
      <anchor>aaeb2449326769bc45f8de7c8c7830686</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>setListenerVelocity</name>
      <anchorfile>classMagnum_1_1Audio_1_1Renderer.html</anchorfile>
      <anchor>ad5384461bbed53ea8633edcdea9c0537</anchor>
      <arglist>(const Vector3 &amp;velocity)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>setListenerVelocity</name>
      <anchorfile>classMagnum_1_1Audio_1_1Renderer.html</anchorfile>
      <anchor>a991df6a40f165ed18839efde37631f56</anchor>
      <arglist>(const Vector3i &amp;velocity)</arglist>
    </member>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>classMagnum_1_1Audio_1_1Renderer.html</anchorfile>
      <anchor>af5ed7655c31326a82464a3856ce8adaa</anchor>
      <arglist>(Debug &amp;debug, Renderer::Error value)</arglist>
    </member>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>classMagnum_1_1Audio_1_1Renderer.html</anchorfile>
      <anchor>ad9b6a4047aa891ba272662f35fd78414</anchor>
      <arglist>(Debug &amp;debug, Renderer::DistanceModel value)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Vector3</type>
      <name>listenerPosition</name>
      <anchorfile>classMagnum_1_1Audio_1_1Renderer.html</anchorfile>
      <anchor>abb4edbd4752a62a521e6b35d7cc5bd87</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>setListenerPosition</name>
      <anchorfile>classMagnum_1_1Audio_1_1Renderer.html</anchorfile>
      <anchor>af6f800d5a477669b6ed35bb884c8f109</anchor>
      <arglist>(const Vector3 &amp;position)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>setListenerPosition</name>
      <anchorfile>classMagnum_1_1Audio_1_1Renderer.html</anchorfile>
      <anchor>acc83a03c65738ec2ded77c64891b098d</anchor>
      <arglist>(const Vector3i &amp;position)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::array&lt; Vector3, 2 &gt;</type>
      <name>listenerOrientation</name>
      <anchorfile>classMagnum_1_1Audio_1_1Renderer.html</anchorfile>
      <anchor>a113d202a8ae12cb2c2904e485af6deb3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>setListenerOrientation</name>
      <anchorfile>classMagnum_1_1Audio_1_1Renderer.html</anchorfile>
      <anchor>acd08d7679053000aaeab3f1e864d240f</anchor>
      <arglist>(const Vector3 &amp;forward, const Vector3 &amp;up)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>setListenerOrientation</name>
      <anchorfile>classMagnum_1_1Audio_1_1Renderer.html</anchorfile>
      <anchor>ad4a8fd49f57aa9a0898632639873d550</anchor>
      <arglist>(const Vector3i &amp;forward, const Vector3i &amp;up)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Vector3</type>
      <name>listenerVelocity</name>
      <anchorfile>classMagnum_1_1Audio_1_1Renderer.html</anchorfile>
      <anchor>aaeb2449326769bc45f8de7c8c7830686</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>setListenerVelocity</name>
      <anchorfile>classMagnum_1_1Audio_1_1Renderer.html</anchorfile>
      <anchor>ad5384461bbed53ea8633edcdea9c0537</anchor>
      <arglist>(const Vector3 &amp;velocity)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>setListenerVelocity</name>
      <anchorfile>classMagnum_1_1Audio_1_1Renderer.html</anchorfile>
      <anchor>a991df6a40f165ed18839efde37631f56</anchor>
      <arglist>(const Vector3i &amp;velocity)</arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>DistanceModel</name>
      <anchorfile>classMagnum_1_1Audio_1_1Renderer.html</anchorfile>
      <anchor>af9e29a81cd917d238a6d2ee584d116e6</anchor>
      <arglist></arglist>
      <enumvalue file="classMagnum_1_1Audio_1_1Renderer.html" anchor="af9e29a81cd917d238a6d2ee584d116e6a6adf97f83acf6453d4a6a4b1070f3754">None</enumvalue>
      <enumvalue file="classMagnum_1_1Audio_1_1Renderer.html" anchor="af9e29a81cd917d238a6d2ee584d116e6a9f87f02f2da8f99c571b2a1c2a96132b">Inverse</enumvalue>
      <enumvalue file="classMagnum_1_1Audio_1_1Renderer.html" anchor="af9e29a81cd917d238a6d2ee584d116e6ab4753a992d19a2f74ffade7715fb72b7">InverseClamped</enumvalue>
      <enumvalue file="classMagnum_1_1Audio_1_1Renderer.html" anchor="af9e29a81cd917d238a6d2ee584d116e6a32a843da6ea40ab3b17a3421ccdf671b">Linear</enumvalue>
      <enumvalue file="classMagnum_1_1Audio_1_1Renderer.html" anchor="af9e29a81cd917d238a6d2ee584d116e6ad7ccd76fbff7eff9dfc4f329fbc3e1c2">LinearClamped</enumvalue>
      <enumvalue file="classMagnum_1_1Audio_1_1Renderer.html" anchor="af9e29a81cd917d238a6d2ee584d116e6af5ccb8d51ca38e2f3329955fc0149cd4">Exponent</enumvalue>
      <enumvalue file="classMagnum_1_1Audio_1_1Renderer.html" anchor="af9e29a81cd917d238a6d2ee584d116e6a1d71bce82674516f39e041c2988c495e">ExponentClamped</enumvalue>
    </member>
    <member kind="function" static="yes">
      <type>static Float</type>
      <name>listenerGain</name>
      <anchorfile>classMagnum_1_1Audio_1_1Renderer.html</anchorfile>
      <anchor>a0f53338e6e2380920ac79095ee347057</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>setListenerGain</name>
      <anchorfile>classMagnum_1_1Audio_1_1Renderer.html</anchorfile>
      <anchor>a0ebed2fb6510a907299a51f28c501812</anchor>
      <arglist>(Float gain)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Float</type>
      <name>dopplerFactor</name>
      <anchorfile>classMagnum_1_1Audio_1_1Renderer.html</anchorfile>
      <anchor>a8f08b52c127d3d406b35a5d7af4f09a1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>setDopplerFactor</name>
      <anchorfile>classMagnum_1_1Audio_1_1Renderer.html</anchorfile>
      <anchor>a8185258661496a563e47ecb036799948</anchor>
      <arglist>(Float factor)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Float</type>
      <name>speedOfSound</name>
      <anchorfile>classMagnum_1_1Audio_1_1Renderer.html</anchorfile>
      <anchor>aa616c70605807d030cc600c00d87320e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>setSpeedOfSound</name>
      <anchorfile>classMagnum_1_1Audio_1_1Renderer.html</anchorfile>
      <anchor>a9dff88436ea20fbb1257f70ce9f7d72c</anchor>
      <arglist>(Float speed)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static DistanceModel</type>
      <name>distanceModel</name>
      <anchorfile>classMagnum_1_1Audio_1_1Renderer.html</anchorfile>
      <anchor>ae3308be5feee90d7b9b45804b0ec7a9d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>setDistanceModel</name>
      <anchorfile>classMagnum_1_1Audio_1_1Renderer.html</anchorfile>
      <anchor>a9e3d54fd54e8fa83f1c32657938e0f6b</anchor>
      <arglist>(DistanceModel model)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Magnum::Audio::RiffChunk</name>
    <filename>structMagnum_1_1Audio_1_1RiffChunk.html</filename>
    <member kind="variable">
      <type>char</type>
      <name>chunkId</name>
      <anchorfile>structMagnum_1_1Audio_1_1RiffChunk.html</anchorfile>
      <anchor>a9f86bd993c85f98f5ecd9d1976ae304f</anchor>
      <arglist>[4]</arglist>
    </member>
    <member kind="variable">
      <type>UnsignedInt</type>
      <name>chunkSize</name>
      <anchorfile>structMagnum_1_1Audio_1_1RiffChunk.html</anchorfile>
      <anchor>a9615cee2f94fef50f19744893ce732ef</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Magnum::Audio::Source</name>
    <filename>classMagnum_1_1Audio_1_1Source.html</filename>
    <member kind="function">
      <type></type>
      <name>Source</name>
      <anchorfile>classMagnum_1_1Audio_1_1Source.html</anchorfile>
      <anchor>a2554d8f30fd0c382d8a2beb4c56c10a9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~Source</name>
      <anchorfile>classMagnum_1_1Audio_1_1Source.html</anchorfile>
      <anchor>ae0200989c3cd1434a77ee92c49cc0466</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Source</name>
      <anchorfile>classMagnum_1_1Audio_1_1Source.html</anchorfile>
      <anchor>a0f8ad1bdabc03f314c5092715e6622a8</anchor>
      <arglist>(const Source &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Source</name>
      <anchorfile>classMagnum_1_1Audio_1_1Source.html</anchorfile>
      <anchor>a25bd3c26084a1988a92fa733e9e479eb</anchor>
      <arglist>(Source &amp;&amp;other)</arglist>
    </member>
    <member kind="function">
      <type>Source &amp;</type>
      <name>operator=</name>
      <anchorfile>classMagnum_1_1Audio_1_1Source.html</anchorfile>
      <anchor>a381be7a308e033bebd15887bb8936574</anchor>
      <arglist>(const Source &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>Source &amp;</type>
      <name>operator=</name>
      <anchorfile>classMagnum_1_1Audio_1_1Source.html</anchorfile>
      <anchor>ac5634640939c433483de9fd135a97389</anchor>
      <arglist>(Source &amp;&amp;other)</arglist>
    </member>
    <member kind="function">
      <type>ALuint</type>
      <name>id</name>
      <anchorfile>classMagnum_1_1Audio_1_1Source.html</anchorfile>
      <anchor>aee65f8992275ccf648e5e5b17345a46f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Vector3</type>
      <name>position</name>
      <anchorfile>classMagnum_1_1Audio_1_1Source.html</anchorfile>
      <anchor>aaf48becaea66d05577fe77f677d142a4</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Source &amp;</type>
      <name>setPosition</name>
      <anchorfile>classMagnum_1_1Audio_1_1Source.html</anchorfile>
      <anchor>a0dc6e1d62e7df9428f49f69d3d9a9e28</anchor>
      <arglist>(const Vector3 &amp;position)</arglist>
    </member>
    <member kind="function">
      <type>Source &amp;</type>
      <name>setPosition</name>
      <anchorfile>classMagnum_1_1Audio_1_1Source.html</anchorfile>
      <anchor>a2ec5834ecf72ba2cab65cf58b076a286</anchor>
      <arglist>(const Vector3i &amp;position)</arglist>
    </member>
    <member kind="function">
      <type>Vector3</type>
      <name>velocity</name>
      <anchorfile>classMagnum_1_1Audio_1_1Source.html</anchorfile>
      <anchor>a0cddaedac663873c58efe2f31255dc25</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Source &amp;</type>
      <name>setVelocity</name>
      <anchorfile>classMagnum_1_1Audio_1_1Source.html</anchorfile>
      <anchor>a7227ce986c0dfa3276c790a2912bbc08</anchor>
      <arglist>(const Vector3 &amp;velocity)</arglist>
    </member>
    <member kind="function">
      <type>Source &amp;</type>
      <name>setVelocity</name>
      <anchorfile>classMagnum_1_1Audio_1_1Source.html</anchorfile>
      <anchor>aad19824f7d008a50fd59b236d4898c2f</anchor>
      <arglist>(const Vector3i &amp;velocity)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isRelative</name>
      <anchorfile>classMagnum_1_1Audio_1_1Source.html</anchorfile>
      <anchor>a81a7c12765c7b0b2ba336e87038c1133</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Source &amp;</type>
      <name>setRelative</name>
      <anchorfile>classMagnum_1_1Audio_1_1Source.html</anchorfile>
      <anchor>a8f2ed0e0db92adfff07549b86df49e0b</anchor>
      <arglist>(bool relative)</arglist>
    </member>
    <member kind="function">
      <type>Float</type>
      <name>gain</name>
      <anchorfile>classMagnum_1_1Audio_1_1Source.html</anchorfile>
      <anchor>a88f48e58cef3ea8b7ed0da530394bc62</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Source &amp;</type>
      <name>setGain</name>
      <anchorfile>classMagnum_1_1Audio_1_1Source.html</anchorfile>
      <anchor>a7fdd2508a8119fbef30a2faf80116bce</anchor>
      <arglist>(Float gain)</arglist>
    </member>
    <member kind="function">
      <type>Float</type>
      <name>minGain</name>
      <anchorfile>classMagnum_1_1Audio_1_1Source.html</anchorfile>
      <anchor>afaa13dcb300ca752ba4029eee6f04615</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Source &amp;</type>
      <name>setMinGain</name>
      <anchorfile>classMagnum_1_1Audio_1_1Source.html</anchorfile>
      <anchor>a47e8595b9fbed9b27861fce0f4b028e6</anchor>
      <arglist>(Float gain)</arglist>
    </member>
    <member kind="function">
      <type>Float</type>
      <name>maxGain</name>
      <anchorfile>classMagnum_1_1Audio_1_1Source.html</anchorfile>
      <anchor>ab5b171486ad53ca56b5d694ae94eec2f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Source &amp;</type>
      <name>setMaxGain</name>
      <anchorfile>classMagnum_1_1Audio_1_1Source.html</anchorfile>
      <anchor>a5c98fa02993c910e261423d9345c0c1c</anchor>
      <arglist>(Float gain)</arglist>
    </member>
    <member kind="function">
      <type>Float</type>
      <name>referenceDistance</name>
      <anchorfile>classMagnum_1_1Audio_1_1Source.html</anchorfile>
      <anchor>aa4ac9cf921d64c61e69cb54000690414</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Source &amp;</type>
      <name>setReferenceDistance</name>
      <anchorfile>classMagnum_1_1Audio_1_1Source.html</anchorfile>
      <anchor>a7e97ba7c1c64cfeea1d3adb78c3d2c3e</anchor>
      <arglist>(Float distance)</arglist>
    </member>
    <member kind="function">
      <type>Source &amp;</type>
      <name>setReferenceDistance</name>
      <anchorfile>classMagnum_1_1Audio_1_1Source.html</anchorfile>
      <anchor>ac3547125b9eeabdc551f9e3f0251211a</anchor>
      <arglist>(Int distance)</arglist>
    </member>
    <member kind="function">
      <type>Float</type>
      <name>rolloffFactor</name>
      <anchorfile>classMagnum_1_1Audio_1_1Source.html</anchorfile>
      <anchor>a27f2f0f641466e82b9e47016b142cf22</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Source &amp;</type>
      <name>setRolloffFactor</name>
      <anchorfile>classMagnum_1_1Audio_1_1Source.html</anchorfile>
      <anchor>a651c39ddbfde2ada8f9f5ad096e4de30</anchor>
      <arglist>(Float factor)</arglist>
    </member>
    <member kind="function">
      <type>Source &amp;</type>
      <name>setRolloffFactor</name>
      <anchorfile>classMagnum_1_1Audio_1_1Source.html</anchorfile>
      <anchor>aeca87352b2bb3f1fbf91b1cf54c767e9</anchor>
      <arglist>(Int factor)</arglist>
    </member>
    <member kind="function">
      <type>Float</type>
      <name>maxDistance</name>
      <anchorfile>classMagnum_1_1Audio_1_1Source.html</anchorfile>
      <anchor>a4efb2554c63937d531773e12db654b59</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Source &amp;</type>
      <name>setMaxDistance</name>
      <anchorfile>classMagnum_1_1Audio_1_1Source.html</anchorfile>
      <anchor>a0beefa334f5e44c87c05e2e2b6f01f40</anchor>
      <arglist>(Float distance)</arglist>
    </member>
    <member kind="function">
      <type>Source &amp;</type>
      <name>setMaxDistance</name>
      <anchorfile>classMagnum_1_1Audio_1_1Source.html</anchorfile>
      <anchor>a124aceab2e60c2dd74b02e15f5f5c3c8</anchor>
      <arglist>(Int distance)</arglist>
    </member>
    <member kind="function">
      <type>Vector3</type>
      <name>direction</name>
      <anchorfile>classMagnum_1_1Audio_1_1Source.html</anchorfile>
      <anchor>a52f65ee6dc5a39630939bec34246326f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Source &amp;</type>
      <name>setDirection</name>
      <anchorfile>classMagnum_1_1Audio_1_1Source.html</anchorfile>
      <anchor>a6530addf107c1ad8468aae4db6d3011a</anchor>
      <arglist>(const Vector3 &amp;direction)</arglist>
    </member>
    <member kind="function">
      <type>Source &amp;</type>
      <name>setDirection</name>
      <anchorfile>classMagnum_1_1Audio_1_1Source.html</anchorfile>
      <anchor>a9e0f18374ab894a0291d70e0fe5a2253</anchor>
      <arglist>(const Vector3i &amp;direction)</arglist>
    </member>
    <member kind="function">
      <type>Deg</type>
      <name>innerConeAngle</name>
      <anchorfile>classMagnum_1_1Audio_1_1Source.html</anchorfile>
      <anchor>a65c947ecdc904693abf98a1b4d4ab916</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Source &amp;</type>
      <name>setInnerConeAngle</name>
      <anchorfile>classMagnum_1_1Audio_1_1Source.html</anchorfile>
      <anchor>a14b82976d8e038bf2a040aed70037ec1</anchor>
      <arglist>(Deg angle)</arglist>
    </member>
    <member kind="function">
      <type>Deg</type>
      <name>outerConeAngle</name>
      <anchorfile>classMagnum_1_1Audio_1_1Source.html</anchorfile>
      <anchor>ae7c56aab5313227db8958fc817ab3142</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Source &amp;</type>
      <name>setOuterConeAngle</name>
      <anchorfile>classMagnum_1_1Audio_1_1Source.html</anchorfile>
      <anchor>a0fddfff1a639bc9c7a4ed75776c364ea</anchor>
      <arglist>(Deg angle)</arglist>
    </member>
    <member kind="function">
      <type>Float</type>
      <name>outerConeGain</name>
      <anchorfile>classMagnum_1_1Audio_1_1Source.html</anchorfile>
      <anchor>a628db84181e1f47cda09b5bc771a77b2</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Source &amp;</type>
      <name>setOuterConeGain</name>
      <anchorfile>classMagnum_1_1Audio_1_1Source.html</anchorfile>
      <anchor>a45e7c5e7cd19dffa9adf2e3733e65036</anchor>
      <arglist>(Float multiplier)</arglist>
    </member>
    <member kind="function">
      <type>Float</type>
      <name>pitch</name>
      <anchorfile>classMagnum_1_1Audio_1_1Source.html</anchorfile>
      <anchor>a9bec52ad9e03aa7781004d4b14300478</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Source &amp;</type>
      <name>setPitch</name>
      <anchorfile>classMagnum_1_1Audio_1_1Source.html</anchorfile>
      <anchor>afc7dd6c58f3893b0d29004dd1aa98b2b</anchor>
      <arglist>(Float pitch)</arglist>
    </member>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>classMagnum_1_1Audio_1_1Source.html</anchorfile>
      <anchor>a0a8de3ea9665f8333aabda2b530b9d7d</anchor>
      <arglist>(Debug &amp;debug, Source::State value)</arglist>
    </member>
    <member kind="function">
      <type>Vector3</type>
      <name>position</name>
      <anchorfile>classMagnum_1_1Audio_1_1Source.html</anchorfile>
      <anchor>aaf48becaea66d05577fe77f677d142a4</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Source &amp;</type>
      <name>setPosition</name>
      <anchorfile>classMagnum_1_1Audio_1_1Source.html</anchorfile>
      <anchor>a0dc6e1d62e7df9428f49f69d3d9a9e28</anchor>
      <arglist>(const Vector3 &amp;position)</arglist>
    </member>
    <member kind="function">
      <type>Source &amp;</type>
      <name>setPosition</name>
      <anchorfile>classMagnum_1_1Audio_1_1Source.html</anchorfile>
      <anchor>a2ec5834ecf72ba2cab65cf58b076a286</anchor>
      <arglist>(const Vector3i &amp;position)</arglist>
    </member>
    <member kind="function">
      <type>Vector3</type>
      <name>velocity</name>
      <anchorfile>classMagnum_1_1Audio_1_1Source.html</anchorfile>
      <anchor>a0cddaedac663873c58efe2f31255dc25</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Source &amp;</type>
      <name>setVelocity</name>
      <anchorfile>classMagnum_1_1Audio_1_1Source.html</anchorfile>
      <anchor>a7227ce986c0dfa3276c790a2912bbc08</anchor>
      <arglist>(const Vector3 &amp;velocity)</arglist>
    </member>
    <member kind="function">
      <type>Source &amp;</type>
      <name>setVelocity</name>
      <anchorfile>classMagnum_1_1Audio_1_1Source.html</anchorfile>
      <anchor>aad19824f7d008a50fd59b236d4898c2f</anchor>
      <arglist>(const Vector3i &amp;velocity)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isRelative</name>
      <anchorfile>classMagnum_1_1Audio_1_1Source.html</anchorfile>
      <anchor>a81a7c12765c7b0b2ba336e87038c1133</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Source &amp;</type>
      <name>setRelative</name>
      <anchorfile>classMagnum_1_1Audio_1_1Source.html</anchorfile>
      <anchor>a8f2ed0e0db92adfff07549b86df49e0b</anchor>
      <arglist>(bool relative)</arglist>
    </member>
    <member kind="function">
      <type>Float</type>
      <name>gain</name>
      <anchorfile>classMagnum_1_1Audio_1_1Source.html</anchorfile>
      <anchor>a88f48e58cef3ea8b7ed0da530394bc62</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Source &amp;</type>
      <name>setGain</name>
      <anchorfile>classMagnum_1_1Audio_1_1Source.html</anchorfile>
      <anchor>a7fdd2508a8119fbef30a2faf80116bce</anchor>
      <arglist>(Float gain)</arglist>
    </member>
    <member kind="function">
      <type>Float</type>
      <name>minGain</name>
      <anchorfile>classMagnum_1_1Audio_1_1Source.html</anchorfile>
      <anchor>afaa13dcb300ca752ba4029eee6f04615</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Source &amp;</type>
      <name>setMinGain</name>
      <anchorfile>classMagnum_1_1Audio_1_1Source.html</anchorfile>
      <anchor>a47e8595b9fbed9b27861fce0f4b028e6</anchor>
      <arglist>(Float gain)</arglist>
    </member>
    <member kind="function">
      <type>Float</type>
      <name>maxGain</name>
      <anchorfile>classMagnum_1_1Audio_1_1Source.html</anchorfile>
      <anchor>ab5b171486ad53ca56b5d694ae94eec2f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Source &amp;</type>
      <name>setMaxGain</name>
      <anchorfile>classMagnum_1_1Audio_1_1Source.html</anchorfile>
      <anchor>a5c98fa02993c910e261423d9345c0c1c</anchor>
      <arglist>(Float gain)</arglist>
    </member>
    <member kind="function">
      <type>Float</type>
      <name>referenceDistance</name>
      <anchorfile>classMagnum_1_1Audio_1_1Source.html</anchorfile>
      <anchor>aa4ac9cf921d64c61e69cb54000690414</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Source &amp;</type>
      <name>setReferenceDistance</name>
      <anchorfile>classMagnum_1_1Audio_1_1Source.html</anchorfile>
      <anchor>a7e97ba7c1c64cfeea1d3adb78c3d2c3e</anchor>
      <arglist>(Float distance)</arglist>
    </member>
    <member kind="function">
      <type>Source &amp;</type>
      <name>setReferenceDistance</name>
      <anchorfile>classMagnum_1_1Audio_1_1Source.html</anchorfile>
      <anchor>ac3547125b9eeabdc551f9e3f0251211a</anchor>
      <arglist>(Int distance)</arglist>
    </member>
    <member kind="function">
      <type>Float</type>
      <name>rolloffFactor</name>
      <anchorfile>classMagnum_1_1Audio_1_1Source.html</anchorfile>
      <anchor>a27f2f0f641466e82b9e47016b142cf22</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Source &amp;</type>
      <name>setRolloffFactor</name>
      <anchorfile>classMagnum_1_1Audio_1_1Source.html</anchorfile>
      <anchor>a651c39ddbfde2ada8f9f5ad096e4de30</anchor>
      <arglist>(Float factor)</arglist>
    </member>
    <member kind="function">
      <type>Source &amp;</type>
      <name>setRolloffFactor</name>
      <anchorfile>classMagnum_1_1Audio_1_1Source.html</anchorfile>
      <anchor>aeca87352b2bb3f1fbf91b1cf54c767e9</anchor>
      <arglist>(Int factor)</arglist>
    </member>
    <member kind="function">
      <type>Float</type>
      <name>maxDistance</name>
      <anchorfile>classMagnum_1_1Audio_1_1Source.html</anchorfile>
      <anchor>a4efb2554c63937d531773e12db654b59</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Source &amp;</type>
      <name>setMaxDistance</name>
      <anchorfile>classMagnum_1_1Audio_1_1Source.html</anchorfile>
      <anchor>a0beefa334f5e44c87c05e2e2b6f01f40</anchor>
      <arglist>(Float distance)</arglist>
    </member>
    <member kind="function">
      <type>Source &amp;</type>
      <name>setMaxDistance</name>
      <anchorfile>classMagnum_1_1Audio_1_1Source.html</anchorfile>
      <anchor>a124aceab2e60c2dd74b02e15f5f5c3c8</anchor>
      <arglist>(Int distance)</arglist>
    </member>
    <member kind="function">
      <type>Vector3</type>
      <name>direction</name>
      <anchorfile>classMagnum_1_1Audio_1_1Source.html</anchorfile>
      <anchor>a52f65ee6dc5a39630939bec34246326f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Source &amp;</type>
      <name>setDirection</name>
      <anchorfile>classMagnum_1_1Audio_1_1Source.html</anchorfile>
      <anchor>a6530addf107c1ad8468aae4db6d3011a</anchor>
      <arglist>(const Vector3 &amp;direction)</arglist>
    </member>
    <member kind="function">
      <type>Source &amp;</type>
      <name>setDirection</name>
      <anchorfile>classMagnum_1_1Audio_1_1Source.html</anchorfile>
      <anchor>a9e0f18374ab894a0291d70e0fe5a2253</anchor>
      <arglist>(const Vector3i &amp;direction)</arglist>
    </member>
    <member kind="function">
      <type>Deg</type>
      <name>innerConeAngle</name>
      <anchorfile>classMagnum_1_1Audio_1_1Source.html</anchorfile>
      <anchor>a65c947ecdc904693abf98a1b4d4ab916</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Source &amp;</type>
      <name>setInnerConeAngle</name>
      <anchorfile>classMagnum_1_1Audio_1_1Source.html</anchorfile>
      <anchor>a14b82976d8e038bf2a040aed70037ec1</anchor>
      <arglist>(Deg angle)</arglist>
    </member>
    <member kind="function">
      <type>Deg</type>
      <name>outerConeAngle</name>
      <anchorfile>classMagnum_1_1Audio_1_1Source.html</anchorfile>
      <anchor>ae7c56aab5313227db8958fc817ab3142</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Source &amp;</type>
      <name>setOuterConeAngle</name>
      <anchorfile>classMagnum_1_1Audio_1_1Source.html</anchorfile>
      <anchor>a0fddfff1a639bc9c7a4ed75776c364ea</anchor>
      <arglist>(Deg angle)</arglist>
    </member>
    <member kind="function">
      <type>Float</type>
      <name>outerConeGain</name>
      <anchorfile>classMagnum_1_1Audio_1_1Source.html</anchorfile>
      <anchor>a628db84181e1f47cda09b5bc771a77b2</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Source &amp;</type>
      <name>setOuterConeGain</name>
      <anchorfile>classMagnum_1_1Audio_1_1Source.html</anchorfile>
      <anchor>a45e7c5e7cd19dffa9adf2e3733e65036</anchor>
      <arglist>(Float multiplier)</arglist>
    </member>
    <member kind="function">
      <type>Float</type>
      <name>pitch</name>
      <anchorfile>classMagnum_1_1Audio_1_1Source.html</anchorfile>
      <anchor>a9bec52ad9e03aa7781004d4b14300478</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Source &amp;</type>
      <name>setPitch</name>
      <anchorfile>classMagnum_1_1Audio_1_1Source.html</anchorfile>
      <anchor>afc7dd6c58f3893b0d29004dd1aa98b2b</anchor>
      <arglist>(Float pitch)</arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>Type</name>
      <anchorfile>classMagnum_1_1Audio_1_1Source.html</anchorfile>
      <anchor>a503e55e760663a8fd3febb5af8e793a9</anchor>
      <arglist></arglist>
      <enumvalue file="classMagnum_1_1Audio_1_1Source.html" anchor="a503e55e760663a8fd3febb5af8e793a9ad1a4512ffdb35c86a4830a91764190d9">Undetermined</enumvalue>
      <enumvalue file="classMagnum_1_1Audio_1_1Source.html" anchor="a503e55e760663a8fd3febb5af8e793a9a84a8921b25f505d0d2077aeb5db4bc16">Static</enumvalue>
      <enumvalue file="classMagnum_1_1Audio_1_1Source.html" anchor="a503e55e760663a8fd3febb5af8e793a9aac21d502848247aa2f578d0f718f5d1d">Streaming</enumvalue>
    </member>
    <member kind="function">
      <type>Type</type>
      <name>type</name>
      <anchorfile>classMagnum_1_1Audio_1_1Source.html</anchorfile>
      <anchor>ac3c95d55734e6319c7dd3d55ef203901</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Source &amp;</type>
      <name>setBuffer</name>
      <anchorfile>classMagnum_1_1Audio_1_1Source.html</anchorfile>
      <anchor>a2d77c2c4f4a61ca66caf2b0d686212cf</anchor>
      <arglist>(Buffer *buffer)</arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>State</name>
      <anchorfile>classMagnum_1_1Audio_1_1Source.html</anchorfile>
      <anchor>a08c6e2605331bbee7feb91ad3a3149f4</anchor>
      <arglist></arglist>
      <enumvalue file="classMagnum_1_1Audio_1_1Source.html" anchor="a08c6e2605331bbee7feb91ad3a3149f4a4f2a91e15af2631ff9424564b8a45fb2">Initial</enumvalue>
      <enumvalue file="classMagnum_1_1Audio_1_1Source.html" anchor="a08c6e2605331bbee7feb91ad3a3149f4ac9dbb2b7c84159b632d71e512eba8428">Playing</enumvalue>
      <enumvalue file="classMagnum_1_1Audio_1_1Source.html" anchor="a08c6e2605331bbee7feb91ad3a3149f4ae99180abf47a8b3a856e0bcb2656990a">Paused</enumvalue>
      <enumvalue file="classMagnum_1_1Audio_1_1Source.html" anchor="a08c6e2605331bbee7feb91ad3a3149f4ac23e2b09ebe6bf4cb5e2a9abe85c0be2">Stopped</enumvalue>
    </member>
    <member kind="function">
      <type>State</type>
      <name>state</name>
      <anchorfile>classMagnum_1_1Audio_1_1Source.html</anchorfile>
      <anchor>a8275d8b1aa1eafb4383ca7ea788de8e7</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>play</name>
      <anchorfile>classMagnum_1_1Audio_1_1Source.html</anchorfile>
      <anchor>a6ed1f421dd12593db57fe32eb3572d39</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>pause</name>
      <anchorfile>classMagnum_1_1Audio_1_1Source.html</anchorfile>
      <anchor>ab40e87e3f8cea6a052d68d371f1506f6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>stop</name>
      <anchorfile>classMagnum_1_1Audio_1_1Source.html</anchorfile>
      <anchor>abda7e08e055dc2220edc25923b252c4c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>rewind</name>
      <anchorfile>classMagnum_1_1Audio_1_1Source.html</anchorfile>
      <anchor>a7334f921345782a9d04a4b973900cd1b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isLooping</name>
      <anchorfile>classMagnum_1_1Audio_1_1Source.html</anchorfile>
      <anchor>a9f77f7375cdb8cd34b3e27afe9d53213</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Source &amp;</type>
      <name>setLooping</name>
      <anchorfile>classMagnum_1_1Audio_1_1Source.html</anchorfile>
      <anchor>acd158f0bbd25f921cc61f2fdef003c13</anchor>
      <arglist>(bool loop)</arglist>
    </member>
    <member kind="function">
      <type>Float</type>
      <name>offsetInSeconds</name>
      <anchorfile>classMagnum_1_1Audio_1_1Source.html</anchorfile>
      <anchor>a2f71240f5c802fda7ae98abc15cee129</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Source &amp;</type>
      <name>setOffsetInSeconds</name>
      <anchorfile>classMagnum_1_1Audio_1_1Source.html</anchorfile>
      <anchor>af1aa6d82f3646f3992c213b75f0ce785</anchor>
      <arglist>(Float offset)</arglist>
    </member>
    <member kind="function">
      <type>Int</type>
      <name>offsetInBytes</name>
      <anchorfile>classMagnum_1_1Audio_1_1Source.html</anchorfile>
      <anchor>a9ebf54fa07a07dcc6cbd5d366a4d143f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Source &amp;</type>
      <name>setOffsetInBytes</name>
      <anchorfile>classMagnum_1_1Audio_1_1Source.html</anchorfile>
      <anchor>a35d34d31abee83c1cd5458ef6db8d03f</anchor>
      <arglist>(Int offset)</arglist>
    </member>
    <member kind="function">
      <type>Int</type>
      <name>offsetInSamples</name>
      <anchorfile>classMagnum_1_1Audio_1_1Source.html</anchorfile>
      <anchor>a52d4709261d5af03c22f9f823555c238</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Source &amp;</type>
      <name>setOffsetInSamples</name>
      <anchorfile>classMagnum_1_1Audio_1_1Source.html</anchorfile>
      <anchor>a267c58d8ef95bd50408efa2d5dcdccab</anchor>
      <arglist>(Int offset)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>play</name>
      <anchorfile>classMagnum_1_1Audio_1_1Source.html</anchorfile>
      <anchor>ace53ea6c28c35326c3265e029d906d90</anchor>
      <arglist>(std::initializer_list&lt; std::reference_wrapper&lt; Source &gt;&gt; sources)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>play</name>
      <anchorfile>classMagnum_1_1Audio_1_1Source.html</anchorfile>
      <anchor>ad9937360d1f8924bd18a8b612189b43b</anchor>
      <arglist>(const std::vector&lt; std::reference_wrapper&lt; Source &gt;&gt; &amp;sources)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>pause</name>
      <anchorfile>classMagnum_1_1Audio_1_1Source.html</anchorfile>
      <anchor>ad1ed98356604e888ca9b8da315385130</anchor>
      <arglist>(std::initializer_list&lt; std::reference_wrapper&lt; Source &gt;&gt; sources)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>pause</name>
      <anchorfile>classMagnum_1_1Audio_1_1Source.html</anchorfile>
      <anchor>ab0500c83b2e56ef93842bc4dca6d7965</anchor>
      <arglist>(const std::vector&lt; std::reference_wrapper&lt; Source &gt;&gt; &amp;sources)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>stop</name>
      <anchorfile>classMagnum_1_1Audio_1_1Source.html</anchorfile>
      <anchor>a09b564b7ca9df56dc5c9268a85f1d540</anchor>
      <arglist>(std::initializer_list&lt; std::reference_wrapper&lt; Source &gt;&gt; sources)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>stop</name>
      <anchorfile>classMagnum_1_1Audio_1_1Source.html</anchorfile>
      <anchor>ad77f1f6609f372a96e41f741f6e86cb3</anchor>
      <arglist>(const std::vector&lt; std::reference_wrapper&lt; Source &gt;&gt; &amp;sources)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>rewind</name>
      <anchorfile>classMagnum_1_1Audio_1_1Source.html</anchorfile>
      <anchor>a3227c1aa5c507f5d32148daa806e6385</anchor>
      <arglist>(std::initializer_list&lt; std::reference_wrapper&lt; Source &gt;&gt; sources)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>rewind</name>
      <anchorfile>classMagnum_1_1Audio_1_1Source.html</anchorfile>
      <anchor>a5be6e7ba4d723a6861e565672b03c538</anchor>
      <arglist>(const std::vector&lt; std::reference_wrapper&lt; Source &gt;&gt; &amp;sources)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Magnum::Audio::StbVorbisImporter</name>
    <filename>classMagnum_1_1Audio_1_1StbVorbisImporter.html</filename>
    <base>Magnum::Audio::AbstractImporter</base>
    <member kind="function">
      <type></type>
      <name>StbVorbisImporter</name>
      <anchorfile>classMagnum_1_1Audio_1_1StbVorbisImporter.html</anchorfile>
      <anchor>a62edada15ecec1cd4cbb897934e8d989</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>StbVorbisImporter</name>
      <anchorfile>classMagnum_1_1Audio_1_1StbVorbisImporter.html</anchorfile>
      <anchor>acbf4ca952fa23a39455e2a4d5dfd962d</anchor>
      <arglist>(PluginManager::AbstractManager &amp;manager, const std::string &amp;plugin)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Magnum::Audio::WavFormatChunk</name>
    <filename>structMagnum_1_1Audio_1_1WavFormatChunk.html</filename>
    <member kind="variable">
      <type>RiffChunk</type>
      <name>chunk</name>
      <anchorfile>structMagnum_1_1Audio_1_1WavFormatChunk.html</anchorfile>
      <anchor>ab17431cde26dbd79e05deccd08b80a4c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>WavAudioFormat</type>
      <name>audioFormat</name>
      <anchorfile>structMagnum_1_1Audio_1_1WavFormatChunk.html</anchorfile>
      <anchor>a1bd7847fe973e750437f5e665973f688</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>UnsignedShort</type>
      <name>numChannels</name>
      <anchorfile>structMagnum_1_1Audio_1_1WavFormatChunk.html</anchorfile>
      <anchor>a4fa47192334d56359f9f57002327679a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>UnsignedInt</type>
      <name>sampleRate</name>
      <anchorfile>structMagnum_1_1Audio_1_1WavFormatChunk.html</anchorfile>
      <anchor>a5768a042b87bf6dd6017973f41d8de0c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>UnsignedInt</type>
      <name>byteRate</name>
      <anchorfile>structMagnum_1_1Audio_1_1WavFormatChunk.html</anchorfile>
      <anchor>a1bab3429bfb22683d67835fd112d45a4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>UnsignedShort</type>
      <name>blockAlign</name>
      <anchorfile>structMagnum_1_1Audio_1_1WavFormatChunk.html</anchorfile>
      <anchor>a3f7180ef5c1d84be25812e6e91c7f27e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>UnsignedShort</type>
      <name>bitsPerSample</name>
      <anchorfile>structMagnum_1_1Audio_1_1WavFormatChunk.html</anchorfile>
      <anchor>a564180fd7772fb5669d189fd965a2fd9</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Magnum::Audio::WavHeaderChunk</name>
    <filename>structMagnum_1_1Audio_1_1WavHeaderChunk.html</filename>
    <member kind="variable">
      <type>RiffChunk</type>
      <name>chunk</name>
      <anchorfile>structMagnum_1_1Audio_1_1WavHeaderChunk.html</anchorfile>
      <anchor>ab4591e57b14024bbaf07676ccad6afdc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>format</name>
      <anchorfile>structMagnum_1_1Audio_1_1WavHeaderChunk.html</anchorfile>
      <anchor>a7c7580a50e6101e376371d46f9feccec</anchor>
      <arglist>[4]</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Magnum::Audio::WavImporter</name>
    <filename>classMagnum_1_1Audio_1_1WavImporter.html</filename>
    <base>Magnum::Audio::AbstractImporter</base>
    <member kind="function">
      <type></type>
      <name>WavImporter</name>
      <anchorfile>classMagnum_1_1Audio_1_1WavImporter.html</anchorfile>
      <anchor>a44ea0db18f9c8e3c27fc6792de0f4c18</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WavImporter</name>
      <anchorfile>classMagnum_1_1Audio_1_1WavImporter.html</anchorfile>
      <anchor>ac6c088e008f0576d51f1252b1c017b59</anchor>
      <arglist>(PluginManager::AbstractManager &amp;manager, const std::string &amp;plugin)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Magnum::Buffer</name>
    <filename>classMagnum_1_1Buffer.html</filename>
    <base>Magnum::AbstractObject</base>
    <member kind="enumeration">
      <type></type>
      <name>TargetHint</name>
      <anchorfile>classMagnum_1_1Buffer.html</anchorfile>
      <anchor>a1ae515e6dbb45b4cbc29cebf74b92674</anchor>
      <arglist></arglist>
      <enumvalue file="classMagnum_1_1Buffer.html" anchor="a1ae515e6dbb45b4cbc29cebf74b92674a4410ec34d9e6c1a68100ca0ce033fb17">Array</enumvalue>
      <enumvalue file="classMagnum_1_1Buffer.html" anchor="a1ae515e6dbb45b4cbc29cebf74b92674a718568e47d2de4af4d51fc1114cb3583">AtomicCounter</enumvalue>
      <enumvalue file="classMagnum_1_1Buffer.html" anchor="a1ae515e6dbb45b4cbc29cebf74b92674a3a23dd1e2979213e268b02eca78f1093">CopyRead</enumvalue>
      <enumvalue file="classMagnum_1_1Buffer.html" anchor="a1ae515e6dbb45b4cbc29cebf74b92674aac0d23bb3afb6d4ffb725d00de2b3ffb">CopyWrite</enumvalue>
      <enumvalue file="classMagnum_1_1Buffer.html" anchor="a1ae515e6dbb45b4cbc29cebf74b92674a8b76d6291a8094d1fc459a056780dd54">DispatchIndirect</enumvalue>
      <enumvalue file="classMagnum_1_1Buffer.html" anchor="a1ae515e6dbb45b4cbc29cebf74b92674a95b0e6b8c7aa6af632295afda7a926bc">DrawIndirect</enumvalue>
      <enumvalue file="classMagnum_1_1Buffer.html" anchor="a1ae515e6dbb45b4cbc29cebf74b92674a3726aa2adc65a493586528ddbd070204">ElementArray</enumvalue>
      <enumvalue file="classMagnum_1_1Buffer.html" anchor="a1ae515e6dbb45b4cbc29cebf74b92674a22702a714692d1c3a1ba2f02cf200c7a">PixelPack</enumvalue>
      <enumvalue file="classMagnum_1_1Buffer.html" anchor="a1ae515e6dbb45b4cbc29cebf74b92674a454e29d3537454f75dba31fc3ab1fc0d">PixelUnpack</enumvalue>
      <enumvalue file="classMagnum_1_1Buffer.html" anchor="a1ae515e6dbb45b4cbc29cebf74b92674a63d204f04170f5bbf958083589f6572f">ShaderStorage</enumvalue>
      <enumvalue file="classMagnum_1_1Buffer.html" anchor="a1ae515e6dbb45b4cbc29cebf74b92674aa3e8ae43188ae76d38f414b2bdb0077b">Texture</enumvalue>
      <enumvalue file="classMagnum_1_1Buffer.html" anchor="a1ae515e6dbb45b4cbc29cebf74b92674af42c5721f003b0657f081141043576f6">TransformFeedback</enumvalue>
      <enumvalue file="classMagnum_1_1Buffer.html" anchor="a1ae515e6dbb45b4cbc29cebf74b92674af19516d11f2946f894070e92fcb56b6d">Uniform</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>Target</name>
      <anchorfile>classMagnum_1_1Buffer.html</anchorfile>
      <anchor>a95320451d95818a1123ee2e5584687f3</anchor>
      <arglist></arglist>
      <enumvalue file="classMagnum_1_1Buffer.html" anchor="a95320451d95818a1123ee2e5584687f3a4410ec34d9e6c1a68100ca0ce033fb17">Array</enumvalue>
      <enumvalue file="classMagnum_1_1Buffer.html" anchor="a95320451d95818a1123ee2e5584687f3a718568e47d2de4af4d51fc1114cb3583">AtomicCounter</enumvalue>
      <enumvalue file="classMagnum_1_1Buffer.html" anchor="a95320451d95818a1123ee2e5584687f3a3a23dd1e2979213e268b02eca78f1093">CopyRead</enumvalue>
      <enumvalue file="classMagnum_1_1Buffer.html" anchor="a95320451d95818a1123ee2e5584687f3aac0d23bb3afb6d4ffb725d00de2b3ffb">CopyWrite</enumvalue>
      <enumvalue file="classMagnum_1_1Buffer.html" anchor="a95320451d95818a1123ee2e5584687f3a8b76d6291a8094d1fc459a056780dd54">DispatchIndirect</enumvalue>
      <enumvalue file="classMagnum_1_1Buffer.html" anchor="a95320451d95818a1123ee2e5584687f3a95b0e6b8c7aa6af632295afda7a926bc">DrawIndirect</enumvalue>
      <enumvalue file="classMagnum_1_1Buffer.html" anchor="a95320451d95818a1123ee2e5584687f3a3726aa2adc65a493586528ddbd070204">ElementArray</enumvalue>
      <enumvalue file="classMagnum_1_1Buffer.html" anchor="a95320451d95818a1123ee2e5584687f3a22702a714692d1c3a1ba2f02cf200c7a">PixelPack</enumvalue>
      <enumvalue file="classMagnum_1_1Buffer.html" anchor="a95320451d95818a1123ee2e5584687f3a454e29d3537454f75dba31fc3ab1fc0d">PixelUnpack</enumvalue>
      <enumvalue file="classMagnum_1_1Buffer.html" anchor="a95320451d95818a1123ee2e5584687f3a63d204f04170f5bbf958083589f6572f">ShaderStorage</enumvalue>
      <enumvalue file="classMagnum_1_1Buffer.html" anchor="a95320451d95818a1123ee2e5584687f3aa3e8ae43188ae76d38f414b2bdb0077b">Texture</enumvalue>
      <enumvalue file="classMagnum_1_1Buffer.html" anchor="a95320451d95818a1123ee2e5584687f3af42c5721f003b0657f081141043576f6">TransformFeedback</enumvalue>
      <enumvalue file="classMagnum_1_1Buffer.html" anchor="a95320451d95818a1123ee2e5584687f3af19516d11f2946f894070e92fcb56b6d">Uniform</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>MapAccess</name>
      <anchorfile>classMagnum_1_1Buffer.html</anchorfile>
      <anchor>a7a61b1cbdb7f0610429a54b4f10c3b7e</anchor>
      <arglist></arglist>
      <enumvalue file="classMagnum_1_1Buffer.html" anchor="a7a61b1cbdb7f0610429a54b4f10c3b7ea131fb182a881796e7606ed6da27f1197">ReadOnly</enumvalue>
      <enumvalue file="classMagnum_1_1Buffer.html" anchor="a7a61b1cbdb7f0610429a54b4f10c3b7ea53dfe5089ae9e65887cb0215cb0098f5">WriteOnly</enumvalue>
      <enumvalue file="classMagnum_1_1Buffer.html" anchor="a7a61b1cbdb7f0610429a54b4f10c3b7ea70a2a84088d405a2e3f1e3accaa16723">ReadWrite</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>MapFlag</name>
      <anchorfile>classMagnum_1_1Buffer.html</anchorfile>
      <anchor>a04683caff8450b7f4839abf66516956d</anchor>
      <arglist></arglist>
      <enumvalue file="classMagnum_1_1Buffer.html" anchor="a04683caff8450b7f4839abf66516956da7a1a5f3e79fdc91edf2f5ead9d66abb4">Read</enumvalue>
      <enumvalue file="classMagnum_1_1Buffer.html" anchor="a04683caff8450b7f4839abf66516956da1129c0e4d43f2d121652a7302712cff6">Write</enumvalue>
      <enumvalue file="classMagnum_1_1Buffer.html" anchor="a04683caff8450b7f4839abf66516956dacc6d7b432c2856582ca2627a8437bbe0">InvalidateBuffer</enumvalue>
      <enumvalue file="classMagnum_1_1Buffer.html" anchor="a04683caff8450b7f4839abf66516956da1dccc9feae5c38be3c116bdad6e3974a">InvalidateRange</enumvalue>
      <enumvalue file="classMagnum_1_1Buffer.html" anchor="a04683caff8450b7f4839abf66516956dab9698f5447ac81e5c28a7c3c53a196e3">FlushExplicit</enumvalue>
      <enumvalue file="classMagnum_1_1Buffer.html" anchor="a04683caff8450b7f4839abf66516956da7854699f8079e4a586a6c943703ac972">Unsynchronized</enumvalue>
    </member>
    <member kind="typedef">
      <type>BufferUsage</type>
      <name>Usage</name>
      <anchorfile>classMagnum_1_1Buffer.html</anchorfile>
      <anchor>abe233435e2cbed15d527f5b94cf9d4c3</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Containers::EnumSet&lt; MapFlag &gt;</type>
      <name>MapFlags</name>
      <anchorfile>classMagnum_1_1Buffer.html</anchorfile>
      <anchor>a08b72d44f3d00bed83fcc5ee4081c306</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Buffer</name>
      <anchorfile>classMagnum_1_1Buffer.html</anchorfile>
      <anchor>a7a33e983bbbbf5a00f575367e442ae32</anchor>
      <arglist>(TargetHint targetHint=TargetHint::Array)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Buffer</name>
      <anchorfile>classMagnum_1_1Buffer.html</anchorfile>
      <anchor>a8f7ed43f5e3eb83de36b22facb6bf9cd</anchor>
      <arglist>(NoCreateT) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Buffer</name>
      <anchorfile>classMagnum_1_1Buffer.html</anchorfile>
      <anchor>aa2f5f396da1de96972a23249a1948427</anchor>
      <arglist>(Target targetHint)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Buffer</name>
      <anchorfile>classMagnum_1_1Buffer.html</anchorfile>
      <anchor>ae44b476641db83678e47b6fcbe873804</anchor>
      <arglist>(const Buffer &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Buffer</name>
      <anchorfile>classMagnum_1_1Buffer.html</anchorfile>
      <anchor>acf9c50860147b3ff104c308fe4c72f28</anchor>
      <arglist>(Buffer &amp;&amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~Buffer</name>
      <anchorfile>classMagnum_1_1Buffer.html</anchorfile>
      <anchor>a74691a53e1513408c517b244147dfceb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Buffer &amp;</type>
      <name>operator=</name>
      <anchorfile>classMagnum_1_1Buffer.html</anchorfile>
      <anchor>ac7e6a261b845897bc3cfc1ed01f4b985</anchor>
      <arglist>(const Buffer &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>Buffer &amp;</type>
      <name>operator=</name>
      <anchorfile>classMagnum_1_1Buffer.html</anchorfile>
      <anchor>aaa6abf6b83d6c92c42cacf3aa8f8a4aa</anchor>
      <arglist>(Buffer &amp;&amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type>GLuint</type>
      <name>id</name>
      <anchorfile>classMagnum_1_1Buffer.html</anchorfile>
      <anchor>a96f10183370e9dd06c1a048f117aa7e2</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>GLuint</type>
      <name>release</name>
      <anchorfile>classMagnum_1_1Buffer.html</anchorfile>
      <anchor>a71b9c90db467c9b155b2d497c4f79543</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>label</name>
      <anchorfile>classMagnum_1_1Buffer.html</anchorfile>
      <anchor>a8ae54561428942eb012fe6b8b61b9a0b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Buffer &amp;</type>
      <name>setLabel</name>
      <anchorfile>classMagnum_1_1Buffer.html</anchorfile>
      <anchor>a1ef846caa8fc173d0a83961435628e16</anchor>
      <arglist>(const std::string &amp;label)</arglist>
    </member>
    <member kind="function">
      <type>Buffer &amp;</type>
      <name>setLabel</name>
      <anchorfile>classMagnum_1_1Buffer.html</anchorfile>
      <anchor>a8f56fc4e97fab41eead3e49fa39a72db</anchor>
      <arglist>(const char(&amp;label)[size])</arglist>
    </member>
    <member kind="function">
      <type>TargetHint</type>
      <name>targetHint</name>
      <anchorfile>classMagnum_1_1Buffer.html</anchorfile>
      <anchor>a63834db927dca79f0d746d1d0bc6f7c5</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Buffer &amp;</type>
      <name>setTargetHint</name>
      <anchorfile>classMagnum_1_1Buffer.html</anchorfile>
      <anchor>a275cd922b6db19d87561772ce1c4e907</anchor>
      <arglist>(TargetHint hint)</arglist>
    </member>
    <member kind="function">
      <type>Buffer &amp;</type>
      <name>setTargetHint</name>
      <anchorfile>classMagnum_1_1Buffer.html</anchorfile>
      <anchor>a204057b5c80c51733026f893599e11cc</anchor>
      <arglist>(Target hint)</arglist>
    </member>
    <member kind="function">
      <type>Buffer &amp;</type>
      <name>bind</name>
      <anchorfile>classMagnum_1_1Buffer.html</anchorfile>
      <anchor>a0f063b217ff83fe8823e7fa40cd428df</anchor>
      <arglist>(Target target, UnsignedInt index, GLintptr offset, GLsizeiptr size)</arglist>
    </member>
    <member kind="function">
      <type>Buffer &amp;</type>
      <name>bind</name>
      <anchorfile>classMagnum_1_1Buffer.html</anchorfile>
      <anchor>a92808356e8a95eee27c0f476626e0da2</anchor>
      <arglist>(Target target, UnsignedInt index)</arglist>
    </member>
    <member kind="function">
      <type>Int</type>
      <name>size</name>
      <anchorfile>classMagnum_1_1Buffer.html</anchorfile>
      <anchor>a229ac137c843e94e68f739fedf9c695b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Containers::Array&lt; char &gt;</type>
      <name>data</name>
      <anchorfile>classMagnum_1_1Buffer.html</anchorfile>
      <anchor>a07d630cb57ad68b021c1f8921bfc1cbf</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Containers::Array&lt; T &gt;</type>
      <name>data</name>
      <anchorfile>classMagnum_1_1Buffer.html</anchorfile>
      <anchor>af016d35a5d69201e46d9df9858714861</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Containers::Array&lt; char &gt;</type>
      <name>subData</name>
      <anchorfile>classMagnum_1_1Buffer.html</anchorfile>
      <anchor>ae1e18dffaf4ef49fa665727834e738bf</anchor>
      <arglist>(GLintptr offset, GLsizeiptr size)</arglist>
    </member>
    <member kind="function">
      <type>Containers::Array&lt; T &gt;</type>
      <name>subData</name>
      <anchorfile>classMagnum_1_1Buffer.html</anchorfile>
      <anchor>a725927a2cc8476d223ea7921e3d3234b</anchor>
      <arglist>(GLintptr offset, GLsizeiptr size)</arglist>
    </member>
    <member kind="function">
      <type>Buffer &amp;</type>
      <name>setData</name>
      <anchorfile>classMagnum_1_1Buffer.html</anchorfile>
      <anchor>a7ba3c02b4c07f6007253e1e6a5980fae</anchor>
      <arglist>(Containers::ArrayView&lt; const void &gt; data, BufferUsage usage)</arglist>
    </member>
    <member kind="function">
      <type>Buffer &amp;</type>
      <name>setData</name>
      <anchorfile>classMagnum_1_1Buffer.html</anchorfile>
      <anchor>a0244c3852704fc04f7d570847a75bcaa</anchor>
      <arglist>(const std::vector&lt; T &gt; &amp;data, BufferUsage usage)</arglist>
    </member>
    <member kind="function">
      <type>Buffer &amp;</type>
      <name>setData</name>
      <anchorfile>classMagnum_1_1Buffer.html</anchorfile>
      <anchor>a65a0e5d0828d0230b203276628c42521</anchor>
      <arglist>(const std::array&lt; T, size &gt; &amp;data, BufferUsage usage)</arglist>
    </member>
    <member kind="function">
      <type>Buffer &amp;</type>
      <name>setSubData</name>
      <anchorfile>classMagnum_1_1Buffer.html</anchorfile>
      <anchor>a2eacba709a2295530fcc514139ab2a7a</anchor>
      <arglist>(GLintptr offset, Containers::ArrayView&lt; const void &gt; data)</arglist>
    </member>
    <member kind="function">
      <type>Buffer &amp;</type>
      <name>setSubData</name>
      <anchorfile>classMagnum_1_1Buffer.html</anchorfile>
      <anchor>a824897e7f7c52ef845b77566bdbf9c35</anchor>
      <arglist>(GLintptr offset, const std::vector&lt; T &gt; &amp;data)</arglist>
    </member>
    <member kind="function">
      <type>Buffer &amp;</type>
      <name>setSubData</name>
      <anchorfile>classMagnum_1_1Buffer.html</anchorfile>
      <anchor>a44abee54f61bce3ab90a1a665dc24a89</anchor>
      <arglist>(GLintptr offset, const std::array&lt; T, size &gt; &amp;data)</arglist>
    </member>
    <member kind="function">
      <type>Buffer &amp;</type>
      <name>invalidateData</name>
      <anchorfile>classMagnum_1_1Buffer.html</anchorfile>
      <anchor>a576df62db52aca510e1d650e89690da9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Buffer &amp;</type>
      <name>invalidateSubData</name>
      <anchorfile>classMagnum_1_1Buffer.html</anchorfile>
      <anchor>acf5c741a9397f78f0df9126f17ae4cf6</anchor>
      <arglist>(GLintptr offset, GLsizeiptr length)</arglist>
    </member>
    <member kind="function">
      <type>char *</type>
      <name>map</name>
      <anchorfile>classMagnum_1_1Buffer.html</anchorfile>
      <anchor>a3c71f3b5b3bc47407850ff17de1c9e1d</anchor>
      <arglist>(MapAccess access)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>mapRead</name>
      <anchorfile>classMagnum_1_1Buffer.html</anchorfile>
      <anchor>a581feac494b2134550f86d8b8ecd6986</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>T *</type>
      <name>map</name>
      <anchorfile>classMagnum_1_1Buffer.html</anchorfile>
      <anchor>af6f7443ba2c618259b6fc38aa82d089b</anchor>
      <arglist>(MapAccess access)</arglist>
    </member>
    <member kind="function">
      <type>Containers::ArrayView&lt; char &gt;</type>
      <name>map</name>
      <anchorfile>classMagnum_1_1Buffer.html</anchorfile>
      <anchor>aa61d1827d63a0472c3dd3f97a823f7eb</anchor>
      <arglist>(GLintptr offset, GLsizeiptr length, MapFlags flags)</arglist>
    </member>
    <member kind="function">
      <type>Containers::ArrayView&lt; const char &gt;</type>
      <name>mapRead</name>
      <anchorfile>classMagnum_1_1Buffer.html</anchorfile>
      <anchor>ae6255d6588e550565f083a3f80482247</anchor>
      <arglist>(GLintptr offset, GLsizeiptr length, MapFlags flags={})</arglist>
    </member>
    <member kind="function">
      <type>T *</type>
      <name>map</name>
      <anchorfile>classMagnum_1_1Buffer.html</anchorfile>
      <anchor>a3e78749d197d40604f9aa13e0916a308</anchor>
      <arglist>(GLintptr offset, GLsizeiptr length, MapFlags flags)</arglist>
    </member>
    <member kind="function">
      <type>Buffer &amp;</type>
      <name>flushMappedRange</name>
      <anchorfile>classMagnum_1_1Buffer.html</anchorfile>
      <anchor>a36ac22cec6238ff09ac27f5f29ca6f32</anchor>
      <arglist>(GLintptr offset, GLsizeiptr length)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>unmap</name>
      <anchorfile>classMagnum_1_1Buffer.html</anchorfile>
      <anchor>a8a33f19034189575c05f85caba5218b6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Int</type>
      <name>minMapAlignment</name>
      <anchorfile>classMagnum_1_1Buffer.html</anchorfile>
      <anchor>a6199e876551e04772d9c94e88801b225</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Int</type>
      <name>maxAtomicCounterBindings</name>
      <anchorfile>classMagnum_1_1Buffer.html</anchorfile>
      <anchor>a8d702dfc23553a1b09a0adc308bce2c1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Int</type>
      <name>maxShaderStorageBindings</name>
      <anchorfile>classMagnum_1_1Buffer.html</anchorfile>
      <anchor>aec739be643a9c5dd0f1a3b5d7911f6fe</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Int</type>
      <name>uniformOffsetAlignment</name>
      <anchorfile>classMagnum_1_1Buffer.html</anchorfile>
      <anchor>aa680abc3cd755d50fdfbff24bd88e8cc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Int</type>
      <name>shaderStorageOffsetAlignment</name>
      <anchorfile>classMagnum_1_1Buffer.html</anchorfile>
      <anchor>ac4310da492ccda4e4101e2b447667545</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Int</type>
      <name>maxUniformBindings</name>
      <anchorfile>classMagnum_1_1Buffer.html</anchorfile>
      <anchor>af31c49f2310da060c24ab372ae2ef863</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>unbind</name>
      <anchorfile>classMagnum_1_1Buffer.html</anchorfile>
      <anchor>aa8a9ecf8ad1d54698faf4654514c14b0</anchor>
      <arglist>(Target target, UnsignedInt index)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>unbind</name>
      <anchorfile>classMagnum_1_1Buffer.html</anchorfile>
      <anchor>a0bd32037306be195f1ea9d18090aa215</anchor>
      <arglist>(Target target, UnsignedInt firstIndex, std::size_t count)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>bind</name>
      <anchorfile>classMagnum_1_1Buffer.html</anchorfile>
      <anchor>ae6ffbdf5997fbc5a2fb738370456ac31</anchor>
      <arglist>(Target target, UnsignedInt firstIndex, std::initializer_list&lt; std::tuple&lt; Buffer *, GLintptr, GLsizeiptr &gt;&gt; buffers)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>bind</name>
      <anchorfile>classMagnum_1_1Buffer.html</anchorfile>
      <anchor>a30969489adcc23ea81f9d742514c1bc3</anchor>
      <arglist>(Target target, UnsignedInt firstIndex, std::initializer_list&lt; Buffer * &gt; buffers)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>copy</name>
      <anchorfile>classMagnum_1_1Buffer.html</anchorfile>
      <anchor>a8c38fe8634dad552b6204fc3d8fac45e</anchor>
      <arglist>(Buffer &amp;read, Buffer &amp;write, GLintptr readOffset, GLintptr writeOffset, GLsizeiptr size)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Buffer</type>
      <name>wrap</name>
      <anchorfile>classMagnum_1_1Buffer.html</anchorfile>
      <anchor>a618f5fd2c16d47241c572796440ea873</anchor>
      <arglist>(GLuint id, TargetHint targetHint=TargetHint::Array, ObjectFlags flags={})</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Buffer</type>
      <name>wrap</name>
      <anchorfile>classMagnum_1_1Buffer.html</anchorfile>
      <anchor>a7523d187f3511c60d0bd552e6bd991b4</anchor>
      <arglist>(GLuint id, ObjectFlags flags)</arglist>
    </member>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>classMagnum_1_1Buffer.html</anchorfile>
      <anchor>a9024465ba0e0014d55008545bee2493d</anchor>
      <arglist>(Debug &amp;debug, Buffer::TargetHint value)</arglist>
    </member>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>classMagnum_1_1Buffer.html</anchorfile>
      <anchor>a41d8e7d6b7a2d9d12dcca72630d3a23a</anchor>
      <arglist>(Debug &amp;debug, Buffer::Target value)</arglist>
    </member>
    <docanchor file="classMagnum_1_1Buffer">Buffer-data-mapping</docanchor>
  </compound>
  <compound kind="class">
    <name>Magnum::BufferImage</name>
    <filename>classMagnum_1_1BufferImage.html</filename>
    <templarg>dimensions</templarg>
    <member kind="enumvalue">
      <name>Dimensions</name>
      <anchorfile>classMagnum_1_1BufferImage.html</anchorfile>
      <anchor>ab377384fd2d02bf3b8b1a8f27a670f49a980f231d7b734ad0e661d254f79bb9c7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Dimensions</name>
      <anchorfile>classMagnum_1_1BufferImage.html</anchorfile>
      <anchor>ab377384fd2d02bf3b8b1a8f27a670f49a980f231d7b734ad0e661d254f79bb9c7</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>BufferImage</name>
      <anchorfile>classMagnum_1_1BufferImage.html</anchorfile>
      <anchor>a822215d2db42f52c8cad8b5c907c5112</anchor>
      <arglist>(PixelStorage storage, PixelFormat format, PixelType type, const VectorTypeFor&lt; dimensions, Int &gt; &amp;size, Containers::ArrayView&lt; const void &gt; data, BufferUsage usage)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>BufferImage</name>
      <anchorfile>classMagnum_1_1BufferImage.html</anchorfile>
      <anchor>a0647196834deef24db25d5a0f8456fda</anchor>
      <arglist>(PixelFormat format, PixelType type, const VectorTypeFor&lt; dimensions, Int &gt; &amp;size, Containers::ArrayView&lt; const void &gt; data, BufferUsage usage)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>BufferImage</name>
      <anchorfile>classMagnum_1_1BufferImage.html</anchorfile>
      <anchor>aca38782fcb7653841af9f4d51d752260</anchor>
      <arglist>(PixelStorage storage, PixelFormat format, PixelType type, const VectorTypeFor&lt; dimensions, Int &gt; &amp;size, Buffer &amp;&amp;buffer, std::size_t dataSize) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>BufferImage</name>
      <anchorfile>classMagnum_1_1BufferImage.html</anchorfile>
      <anchor>a7d0674dbd3dda1cac6e568a7b0651330</anchor>
      <arglist>(PixelFormat format, PixelType type, const VectorTypeFor&lt; dimensions, Int &gt; &amp;size, Buffer &amp;&amp;buffer, std::size_t dataSize) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>BufferImage</name>
      <anchorfile>classMagnum_1_1BufferImage.html</anchorfile>
      <anchor>a4fbecabf2aa8ae1dab65eb97f2633029</anchor>
      <arglist>(PixelFormat format, PixelType type, const VectorTypeFor&lt; dimensions, Int &gt; &amp;size, const void *data, BufferUsage usage)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>BufferImage</name>
      <anchorfile>classMagnum_1_1BufferImage.html</anchorfile>
      <anchor>aea5aaf23b1cf96817b35d58e4011c93b</anchor>
      <arglist>(PixelStorage storage, PixelFormat format, PixelType type)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>BufferImage</name>
      <anchorfile>classMagnum_1_1BufferImage.html</anchorfile>
      <anchor>a551de02c10f923819744fefc225b52ee</anchor>
      <arglist>(PixelFormat format, PixelType type)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>BufferImage</name>
      <anchorfile>classMagnum_1_1BufferImage.html</anchorfile>
      <anchor>afc6fe5f137c47a73379da9709b2198f6</anchor>
      <arglist>(NoCreateT) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>BufferImage</name>
      <anchorfile>classMagnum_1_1BufferImage.html</anchorfile>
      <anchor>af39584f26585f61fa783d66291cd2b94</anchor>
      <arglist>(const BufferImage&lt; dimensions &gt; &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>BufferImage</name>
      <anchorfile>classMagnum_1_1BufferImage.html</anchorfile>
      <anchor>ad2ff51a3b5339e41e8493fa706543003</anchor>
      <arglist>(BufferImage&lt; dimensions &gt; &amp;&amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type>BufferImage&lt; dimensions &gt; &amp;</type>
      <name>operator=</name>
      <anchorfile>classMagnum_1_1BufferImage.html</anchorfile>
      <anchor>a38ec808d5d9f8bcdca3ad0a019a7c94e</anchor>
      <arglist>(const BufferImage&lt; dimensions &gt; &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>BufferImage&lt; dimensions &gt; &amp;</type>
      <name>operator=</name>
      <anchorfile>classMagnum_1_1BufferImage.html</anchorfile>
      <anchor>a3dbf94be16b17d51d4b796a1c33c9846</anchor>
      <arglist>(BufferImage&lt; dimensions &gt; &amp;&amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type>PixelStorage</type>
      <name>storage</name>
      <anchorfile>classMagnum_1_1BufferImage.html</anchorfile>
      <anchor>ac42ba899d21760350a3e754e7d606d1b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>PixelFormat</type>
      <name>format</name>
      <anchorfile>classMagnum_1_1BufferImage.html</anchorfile>
      <anchor>a7133e3db6a186a72c4be8de19fcdbc57</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>PixelType</type>
      <name>type</name>
      <anchorfile>classMagnum_1_1BufferImage.html</anchorfile>
      <anchor>a0b482d0cfab0f6348a415d6ac6e65109</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>std::size_t</type>
      <name>pixelSize</name>
      <anchorfile>classMagnum_1_1BufferImage.html</anchorfile>
      <anchor>a307f33c76fe0b654bac0fcb84117c9ae</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>VectorTypeFor&lt; Dimensions, Int &gt;</type>
      <name>size</name>
      <anchorfile>classMagnum_1_1BufferImage.html</anchorfile>
      <anchor>a6f69525dd654e4a34ec0401814189dd1</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>std::tuple&lt; VectorTypeFor&lt; dimensions, std::size_t &gt;, VectorTypeFor&lt; dimensions, std::size_t &gt;, std::size_t &gt;</type>
      <name>dataProperties</name>
      <anchorfile>classMagnum_1_1BufferImage.html</anchorfile>
      <anchor>aab84b9623e4cbc18ff5026382e3b553c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>std::size_t</type>
      <name>dataSize</name>
      <anchorfile>classMagnum_1_1BufferImage.html</anchorfile>
      <anchor>a16e803a7daef8a11dfb6a462dfe51369</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Buffer &amp;</type>
      <name>buffer</name>
      <anchorfile>classMagnum_1_1BufferImage.html</anchorfile>
      <anchor>ab76f3fe07d61d671eb860909b818c7c0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setData</name>
      <anchorfile>classMagnum_1_1BufferImage.html</anchorfile>
      <anchor>ad1f2f8bab797f3887dc6d980533ee105</anchor>
      <arglist>(PixelStorage storage, PixelFormat format, PixelType type, const VectorTypeFor&lt; dimensions, Int &gt; &amp;size, Containers::ArrayView&lt; const void &gt; data, BufferUsage usage)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setData</name>
      <anchorfile>classMagnum_1_1BufferImage.html</anchorfile>
      <anchor>a35815a4427ea01edb7286a8fe0e4d713</anchor>
      <arglist>(PixelFormat format, PixelType type, const VectorTypeFor&lt; dimensions, Int &gt; &amp;size, Containers::ArrayView&lt; const void &gt; data, BufferUsage usage)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setData</name>
      <anchorfile>classMagnum_1_1BufferImage.html</anchorfile>
      <anchor>a5d85fe0029e169408aa20186cad8b649</anchor>
      <arglist>(PixelFormat format, PixelType type, const VectorTypeFor&lt; dimensions, Int &gt; &amp;size, const void *data, BufferUsage usage)</arglist>
    </member>
    <member kind="function">
      <type>Buffer</type>
      <name>release</name>
      <anchorfile>classMagnum_1_1BufferImage.html</anchorfile>
      <anchor>acaf97ba0be508571f52862ac04aacac3</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Magnum::BufferTexture</name>
    <filename>classMagnum_1_1BufferTexture.html</filename>
    <base>Magnum::AbstractTexture</base>
    <member kind="function">
      <type></type>
      <name>BufferTexture</name>
      <anchorfile>classMagnum_1_1BufferTexture.html</anchorfile>
      <anchor>ae021c01d1f972cee4a3e960ffc216771</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>BufferTexture</name>
      <anchorfile>classMagnum_1_1BufferTexture.html</anchorfile>
      <anchor>a7eb2e372081880ffe027f25d153b032c</anchor>
      <arglist>(NoCreateT) noexcept</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>bindImage</name>
      <anchorfile>classMagnum_1_1BufferTexture.html</anchorfile>
      <anchor>a6a63e568aa1027ad1c15b6ebfce7b9b4</anchor>
      <arglist>(Int imageUnit, ImageAccess access, ImageFormat format)</arglist>
    </member>
    <member kind="function">
      <type>BufferTexture &amp;</type>
      <name>setBuffer</name>
      <anchorfile>classMagnum_1_1BufferTexture.html</anchorfile>
      <anchor>ab6d132fa98c8699facab7eceb8f73d7d</anchor>
      <arglist>(BufferTextureFormat internalFormat, Buffer &amp;buffer)</arglist>
    </member>
    <member kind="function">
      <type>BufferTexture &amp;</type>
      <name>setBuffer</name>
      <anchorfile>classMagnum_1_1BufferTexture.html</anchorfile>
      <anchor>a5bc982a40f0178513346760166d25fe9</anchor>
      <arglist>(BufferTextureFormat internalFormat, Buffer &amp;buffer, GLintptr offset, GLsizeiptr size)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Int</type>
      <name>maxSize</name>
      <anchorfile>classMagnum_1_1BufferTexture.html</anchorfile>
      <anchor>a4939e87047a2dd1bb1c44770cb63514f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Int</type>
      <name>offsetAlignment</name>
      <anchorfile>classMagnum_1_1BufferTexture.html</anchorfile>
      <anchor>a6701b40853420734100c6b0acc1f5909</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static BufferTexture</type>
      <name>wrap</name>
      <anchorfile>classMagnum_1_1BufferTexture.html</anchorfile>
      <anchor>ae28073c0fcae5ec5c955cb8cbca1efe3</anchor>
      <arglist>(GLuint id, ObjectFlags flags={})</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Magnum::BulletIntegration::DebugDraw</name>
    <filename>classMagnum_1_1BulletIntegration_1_1DebugDraw.html</filename>
    <member kind="enumeration">
      <type></type>
      <name>DebugMode</name>
      <anchorfile>classMagnum_1_1BulletIntegration_1_1DebugDraw.html</anchorfile>
      <anchor>aa6431130f3c3ae98c6faa35a9cd833ce</anchor>
      <arglist></arglist>
      <enumvalue file="classMagnum_1_1BulletIntegration_1_1DebugDraw.html" anchor="aa6431130f3c3ae98c6faa35a9cd833cea198d167ebb04c8c4ef9d7a51a3275b2d">NoDebug</enumvalue>
      <enumvalue file="classMagnum_1_1BulletIntegration_1_1DebugDraw.html" anchor="aa6431130f3c3ae98c6faa35a9cd833cea15f729ee31e789f519c28d02dde88379">DrawWireframe</enumvalue>
      <enumvalue file="classMagnum_1_1BulletIntegration_1_1DebugDraw.html" anchor="aa6431130f3c3ae98c6faa35a9cd833cea9c29fc518a00d3a9e2397d312c95e242">DrawAabb</enumvalue>
      <enumvalue file="classMagnum_1_1BulletIntegration_1_1DebugDraw.html" anchor="aa6431130f3c3ae98c6faa35a9cd833ceabae6eba82ef524feebf9133cbe787c20">DrawFeaturesText</enumvalue>
      <enumvalue file="classMagnum_1_1BulletIntegration_1_1DebugDraw.html" anchor="aa6431130f3c3ae98c6faa35a9cd833cea379687d2f357da4c3cdc6844dfa9ee72">DrawContactPoints</enumvalue>
      <enumvalue file="classMagnum_1_1BulletIntegration_1_1DebugDraw.html" anchor="aa6431130f3c3ae98c6faa35a9cd833cea4eef246f3ffaacc2d1f5dc8b83bf5c65">NoDeactivation</enumvalue>
      <enumvalue file="classMagnum_1_1BulletIntegration_1_1DebugDraw.html" anchor="aa6431130f3c3ae98c6faa35a9cd833cead33b01709e6483c069e64cacc1d3d2d4">NoHelpText</enumvalue>
      <enumvalue file="classMagnum_1_1BulletIntegration_1_1DebugDraw.html" anchor="aa6431130f3c3ae98c6faa35a9cd833ceacc0e6acc657ab511326581bdf1677e0a">DrawText</enumvalue>
      <enumvalue file="classMagnum_1_1BulletIntegration_1_1DebugDraw.html" anchor="aa6431130f3c3ae98c6faa35a9cd833cea64248c594f73fdcde04e20bbe49a5f9b">ProfileTimings</enumvalue>
      <enumvalue file="classMagnum_1_1BulletIntegration_1_1DebugDraw.html" anchor="aa6431130f3c3ae98c6faa35a9cd833cea1dc06d493f3b74dce80f095c1e24e892">EnableSatComparison</enumvalue>
      <enumvalue file="classMagnum_1_1BulletIntegration_1_1DebugDraw.html" anchor="aa6431130f3c3ae98c6faa35a9cd833cea936cf7a05713c426487531abaa396a9f">DisableBulletLCP</enumvalue>
      <enumvalue file="classMagnum_1_1BulletIntegration_1_1DebugDraw.html" anchor="aa6431130f3c3ae98c6faa35a9cd833cea9287763ccab62e70740da69d1ebc7778">EnableCCD</enumvalue>
      <enumvalue file="classMagnum_1_1BulletIntegration_1_1DebugDraw.html" anchor="aa6431130f3c3ae98c6faa35a9cd833ceaabc345eadb7d52439cb503bf8bc4c07e">DrawConstraints</enumvalue>
      <enumvalue file="classMagnum_1_1BulletIntegration_1_1DebugDraw.html" anchor="aa6431130f3c3ae98c6faa35a9cd833ceaa40e88e3c18d4f7415e47c9fd505032a">DrawConstraintLimits</enumvalue>
      <enumvalue file="classMagnum_1_1BulletIntegration_1_1DebugDraw.html" anchor="aa6431130f3c3ae98c6faa35a9cd833cea33f24995aa71d3635e469db76b56845e">FastWirefram</enumvalue>
      <enumvalue file="classMagnum_1_1BulletIntegration_1_1DebugDraw.html" anchor="aa6431130f3c3ae98c6faa35a9cd833ceae7ce13f79a6035f1907298650002ffbc">DrawNormals</enumvalue>
    </member>
    <member kind="typedef">
      <type>DebugMode</type>
      <name>Mode</name>
      <anchorfile>classMagnum_1_1BulletIntegration_1_1DebugDraw.html</anchorfile>
      <anchor>a7efc13fba8757579d05120b6cea6a509</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Containers::EnumSet&lt; DebugMode &gt;</type>
      <name>DebugModes</name>
      <anchorfile>classMagnum_1_1BulletIntegration_1_1DebugDraw.html</anchorfile>
      <anchor>ab7a7e3cdd6666b7cfc0cd6136a955023</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>DebugModes</type>
      <name>Modes</name>
      <anchorfile>classMagnum_1_1BulletIntegration_1_1DebugDraw.html</anchorfile>
      <anchor>abcd8759f383a209ac358915c4a6bd020</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DebugDraw</name>
      <anchorfile>classMagnum_1_1BulletIntegration_1_1DebugDraw.html</anchorfile>
      <anchor>aa5ab86d611791fe78371ebdd6c8d0a14</anchor>
      <arglist>(std::size_t initialBufferCapacity=0)</arglist>
    </member>
    <member kind="function">
      <type>DebugModes</type>
      <name>debugMode</name>
      <anchorfile>classMagnum_1_1BulletIntegration_1_1DebugDraw.html</anchorfile>
      <anchor>a14a25df73fdfd9340a7b802a705978fb</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>DebugDraw &amp;</type>
      <name>setDebugMode</name>
      <anchorfile>classMagnum_1_1BulletIntegration_1_1DebugDraw.html</anchorfile>
      <anchor>a1ff1f278243e05f1839a41b60bf5ce09</anchor>
      <arglist>(DebugModes mode)</arglist>
    </member>
    <member kind="function">
      <type>DebugDraw &amp;</type>
      <name>setTransformationProjectionMatrix</name>
      <anchorfile>classMagnum_1_1BulletIntegration_1_1DebugDraw.html</anchorfile>
      <anchor>a51c3b95ebf3085f779c27a6d4b367742</anchor>
      <arglist>(const Matrix4 &amp;matrix)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Magnum::BulletIntegration::MotionState</name>
    <filename>classMagnum_1_1BulletIntegration_1_1MotionState.html</filename>
    <base>Magnum::SceneGraph::AbstractFeature</base>
    <member kind="function">
      <type></type>
      <name>MotionState</name>
      <anchorfile>classMagnum_1_1BulletIntegration_1_1MotionState.html</anchorfile>
      <anchor>ab778c6d89cb6e07254eb4abb74d2a678</anchor>
      <arglist>(T &amp;object)</arglist>
    </member>
    <member kind="function">
      <type>btMotionState &amp;</type>
      <name>btMotionState</name>
      <anchorfile>classMagnum_1_1BulletIntegration_1_1MotionState.html</anchorfile>
      <anchor>a2779520943f0b6c6cf613f48e0031260</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Magnum::CompressedBufferImage</name>
    <filename>classMagnum_1_1CompressedBufferImage.html</filename>
    <templarg>dimensions</templarg>
    <member kind="enumvalue">
      <name>Dimensions</name>
      <anchorfile>classMagnum_1_1CompressedBufferImage.html</anchorfile>
      <anchor>ad8e650d282e9e0c9c70dac66602ea46facff9400de4c519b5dae93cde97a5da6e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Dimensions</name>
      <anchorfile>classMagnum_1_1CompressedBufferImage.html</anchorfile>
      <anchor>ad8e650d282e9e0c9c70dac66602ea46facff9400de4c519b5dae93cde97a5da6e</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>CompressedBufferImage</name>
      <anchorfile>classMagnum_1_1CompressedBufferImage.html</anchorfile>
      <anchor>a279f6bbd671e4e152668de54d340ae1f</anchor>
      <arglist>(CompressedPixelStorage storage, CompressedPixelFormat format, const VectorTypeFor&lt; dimensions, Int &gt; &amp;size, Containers::ArrayView&lt; const void &gt; data, BufferUsage usage)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>CompressedBufferImage</name>
      <anchorfile>classMagnum_1_1CompressedBufferImage.html</anchorfile>
      <anchor>aedaca9de85bb30e866a98adeb422ec38</anchor>
      <arglist>(CompressedPixelFormat format, const VectorTypeFor&lt; dimensions, Int &gt; &amp;size, Containers::ArrayView&lt; const void &gt; data, BufferUsage usage)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>CompressedBufferImage</name>
      <anchorfile>classMagnum_1_1CompressedBufferImage.html</anchorfile>
      <anchor>a42cd688ebce9273972b8706ee3819c36</anchor>
      <arglist>(CompressedPixelStorage storage, CompressedPixelFormat format, const VectorTypeFor&lt; dimensions, Int &gt; &amp;size, Buffer &amp;&amp;buffer, std::size_t dataSize) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>CompressedBufferImage</name>
      <anchorfile>classMagnum_1_1CompressedBufferImage.html</anchorfile>
      <anchor>a8cb025be62c4c89038237b5019a508ae</anchor>
      <arglist>(CompressedPixelFormat format, const VectorTypeFor&lt; dimensions, Int &gt; &amp;size, Buffer &amp;&amp;buffer, std::size_t dataSize) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>CompressedBufferImage</name>
      <anchorfile>classMagnum_1_1CompressedBufferImage.html</anchorfile>
      <anchor>a7f8497eea6c5c20540821f8e57bb16e6</anchor>
      <arglist>(CompressedPixelStorage storage)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>CompressedBufferImage</name>
      <anchorfile>classMagnum_1_1CompressedBufferImage.html</anchorfile>
      <anchor>af175bf32a8cde44579d9cda21080d166</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>CompressedBufferImage</name>
      <anchorfile>classMagnum_1_1CompressedBufferImage.html</anchorfile>
      <anchor>aa74ec3efccfd56765e2c912a12f35d6b</anchor>
      <arglist>(NoCreateT) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>CompressedBufferImage</name>
      <anchorfile>classMagnum_1_1CompressedBufferImage.html</anchorfile>
      <anchor>a7feefaa750b973674943a81238880f44</anchor>
      <arglist>(const CompressedBufferImage&lt; dimensions &gt; &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>CompressedBufferImage</name>
      <anchorfile>classMagnum_1_1CompressedBufferImage.html</anchorfile>
      <anchor>a9169a785e702224b61fb2e16476af88d</anchor>
      <arglist>(CompressedBufferImage&lt; dimensions &gt; &amp;&amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type>CompressedBufferImage&lt; dimensions &gt; &amp;</type>
      <name>operator=</name>
      <anchorfile>classMagnum_1_1CompressedBufferImage.html</anchorfile>
      <anchor>ad7a34a87e3827cd5d0f5cc6f5698a1f8</anchor>
      <arglist>(const CompressedBufferImage&lt; dimensions &gt; &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>CompressedBufferImage&lt; dimensions &gt; &amp;</type>
      <name>operator=</name>
      <anchorfile>classMagnum_1_1CompressedBufferImage.html</anchorfile>
      <anchor>a4e1450e346eaa5349612a3978db55575</anchor>
      <arglist>(CompressedBufferImage&lt; dimensions &gt; &amp;&amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type>CompressedPixelStorage</type>
      <name>storage</name>
      <anchorfile>classMagnum_1_1CompressedBufferImage.html</anchorfile>
      <anchor>aa394eb553e5e10748b3422f0e1fa49d9</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>CompressedPixelFormat</type>
      <name>format</name>
      <anchorfile>classMagnum_1_1CompressedBufferImage.html</anchorfile>
      <anchor>a2e28604583dc87b53440401d9eee7c9d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>VectorTypeFor&lt; Dimensions, Int &gt;</type>
      <name>size</name>
      <anchorfile>classMagnum_1_1CompressedBufferImage.html</anchorfile>
      <anchor>a65b23572cfc496fd117f38d930cd66b8</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>std::tuple&lt; VectorTypeFor&lt; dimensions, std::size_t &gt;, VectorTypeFor&lt; dimensions, std::size_t &gt;, std::size_t &gt;</type>
      <name>dataProperties</name>
      <anchorfile>classMagnum_1_1CompressedBufferImage.html</anchorfile>
      <anchor>ac58d04d4d81d7263be338fa55c28b793</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Buffer &amp;</type>
      <name>buffer</name>
      <anchorfile>classMagnum_1_1CompressedBufferImage.html</anchorfile>
      <anchor>aa534a92cb06bdcc0bcef714c18da17c1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::size_t</type>
      <name>dataSize</name>
      <anchorfile>classMagnum_1_1CompressedBufferImage.html</anchorfile>
      <anchor>ad1642c3257f4659f9ff25f09d05eaa56</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setData</name>
      <anchorfile>classMagnum_1_1CompressedBufferImage.html</anchorfile>
      <anchor>a9c415ff4ff944ee247dfaaab0fd06e4c</anchor>
      <arglist>(CompressedPixelStorage storage, CompressedPixelFormat format, const VectorTypeFor&lt; dimensions, Int &gt; &amp;size, Containers::ArrayView&lt; const void &gt; data, BufferUsage usage)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setData</name>
      <anchorfile>classMagnum_1_1CompressedBufferImage.html</anchorfile>
      <anchor>a9100ef8e24d9b69568851da815e69372</anchor>
      <arglist>(CompressedPixelFormat format, const VectorTypeFor&lt; dimensions, Int &gt; &amp;size, Containers::ArrayView&lt; const void &gt; data, BufferUsage usage)</arglist>
    </member>
    <member kind="function">
      <type>Buffer</type>
      <name>release</name>
      <anchorfile>classMagnum_1_1CompressedBufferImage.html</anchorfile>
      <anchor>a9dd3f5fdcbc9f919879c8a44ae414964</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Magnum::CompressedImage</name>
    <filename>classMagnum_1_1CompressedImage.html</filename>
    <templarg>dimensions</templarg>
    <member kind="enumvalue">
      <name>Dimensions</name>
      <anchorfile>classMagnum_1_1CompressedImage.html</anchorfile>
      <anchor>ad571036c2a4e2459b28ab64b2cd90c26a60c263ded93b2db65dcfdfd599e660bc</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Dimensions</name>
      <anchorfile>classMagnum_1_1CompressedImage.html</anchorfile>
      <anchor>ad571036c2a4e2459b28ab64b2cd90c26a60c263ded93b2db65dcfdfd599e660bc</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>CompressedImage</name>
      <anchorfile>classMagnum_1_1CompressedImage.html</anchorfile>
      <anchor>afed945a8a367b73a9aca391c387f1d7d</anchor>
      <arglist>(CompressedPixelStorage storage, CompressedPixelFormat format, const VectorTypeFor&lt; dimensions, Int &gt; &amp;size, Containers::Array&lt; char &gt; &amp;&amp;data)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>CompressedImage</name>
      <anchorfile>classMagnum_1_1CompressedImage.html</anchorfile>
      <anchor>a3270cf3a97203676c7a4a80772fa8379</anchor>
      <arglist>(CompressedPixelFormat format, const VectorTypeFor&lt; dimensions, Int &gt; &amp;size, Containers::Array&lt; char &gt; &amp;&amp;data)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>CompressedImage</name>
      <anchorfile>classMagnum_1_1CompressedImage.html</anchorfile>
      <anchor>a3a2acd5c9798c6e3a1d2634af1e3669f</anchor>
      <arglist>(CompressedPixelStorage storage)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>CompressedImage</name>
      <anchorfile>classMagnum_1_1CompressedImage.html</anchorfile>
      <anchor>ae4b55ebba63d811153e13c07bae9b8f3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>CompressedImage</name>
      <anchorfile>classMagnum_1_1CompressedImage.html</anchorfile>
      <anchor>aefe217584452eb685666f83a8d414aa7</anchor>
      <arglist>(const CompressedImage&lt; dimensions &gt; &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>CompressedImage</name>
      <anchorfile>classMagnum_1_1CompressedImage.html</anchorfile>
      <anchor>acd3f50e9f08ae15826fe6e0b4ed0306a</anchor>
      <arglist>(CompressedImage&lt; dimensions &gt; &amp;&amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type>CompressedImage&lt; dimensions &gt; &amp;</type>
      <name>operator=</name>
      <anchorfile>classMagnum_1_1CompressedImage.html</anchorfile>
      <anchor>adcc5a6d658319ac7bca12ff24c6819fa</anchor>
      <arglist>(const CompressedImage&lt; dimensions &gt; &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>CompressedImage&lt; dimensions &gt; &amp;</type>
      <name>operator=</name>
      <anchorfile>classMagnum_1_1CompressedImage.html</anchorfile>
      <anchor>af2d5c70d3ef360774c5a9c5c6f6faa83</anchor>
      <arglist>(CompressedImage&lt; dimensions &gt; &amp;&amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator CompressedImageView&lt; dimensions &gt;</name>
      <anchorfile>classMagnum_1_1CompressedImage.html</anchorfile>
      <anchor>a1dd9f47cff52b04ac31135afda08b7f1</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>CompressedPixelStorage</type>
      <name>storage</name>
      <anchorfile>classMagnum_1_1CompressedImage.html</anchorfile>
      <anchor>a7b61b1cc90304c6fea031bba28e98943</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>CompressedPixelFormat</type>
      <name>format</name>
      <anchorfile>classMagnum_1_1CompressedImage.html</anchorfile>
      <anchor>af9cb7a73598db2836fae8ffafdcfc6a1</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>VectorTypeFor&lt; dimensions, Int &gt;</type>
      <name>size</name>
      <anchorfile>classMagnum_1_1CompressedImage.html</anchorfile>
      <anchor>add3d91f4b7f0b10e3098faa1f58672e9</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>std::tuple&lt; VectorTypeFor&lt; dimensions, std::size_t &gt;, VectorTypeFor&lt; dimensions, std::size_t &gt;, std::size_t &gt;</type>
      <name>dataProperties</name>
      <anchorfile>classMagnum_1_1CompressedImage.html</anchorfile>
      <anchor>ae269d6737fc83ef4d4fc68761c6ed835</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Containers::ArrayView&lt; char &gt;</type>
      <name>data</name>
      <anchorfile>classMagnum_1_1CompressedImage.html</anchorfile>
      <anchor>abd6aaf3b7b12c63641ca9d9768da3ba0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Containers::ArrayView&lt; const char &gt;</type>
      <name>data</name>
      <anchorfile>classMagnum_1_1CompressedImage.html</anchorfile>
      <anchor>a31e8d842b831442804514c2f4fbb7ed6</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>T *</type>
      <name>data</name>
      <anchorfile>classMagnum_1_1CompressedImage.html</anchorfile>
      <anchor>ad7950d9d6e6ebc55858c37a4ddab13aa</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const T *</type>
      <name>data</name>
      <anchorfile>classMagnum_1_1CompressedImage.html</anchorfile>
      <anchor>a6c54807fa7b4a3a8f3f7f4b31046d64e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setData</name>
      <anchorfile>classMagnum_1_1CompressedImage.html</anchorfile>
      <anchor>a6fefc22785c5a9ff29022182247c40a2</anchor>
      <arglist>(CompressedPixelStorage storage, CompressedPixelFormat format, const VectorTypeFor&lt; dimensions, Int &gt; &amp;size, Containers::Array&lt; char &gt; &amp;&amp;data)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setData</name>
      <anchorfile>classMagnum_1_1CompressedImage.html</anchorfile>
      <anchor>a0d6d96ec19a8a6a3336e148d22549d2c</anchor>
      <arglist>(CompressedPixelFormat format, const VectorTypeFor&lt; dimensions, Int &gt; &amp;size, Containers::Array&lt; char &gt; &amp;&amp;data)</arglist>
    </member>
    <member kind="function">
      <type>Containers::Array&lt; char &gt;</type>
      <name>release</name>
      <anchorfile>classMagnum_1_1CompressedImage.html</anchorfile>
      <anchor>a9f66670dd2595b6d37875ff3a679884c</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Magnum::CompressedImageView</name>
    <filename>classMagnum_1_1CompressedImageView.html</filename>
    <templarg>dimensions</templarg>
    <member kind="enumvalue">
      <name>Dimensions</name>
      <anchorfile>classMagnum_1_1CompressedImageView.html</anchorfile>
      <anchor>a2754e90686a75dec9a4652f2ab98d0d1a201e9b7dc568bdbd99378738c2eea517</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Dimensions</name>
      <anchorfile>classMagnum_1_1CompressedImageView.html</anchorfile>
      <anchor>a2754e90686a75dec9a4652f2ab98d0d1a201e9b7dc568bdbd99378738c2eea517</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>CompressedImageView</name>
      <anchorfile>classMagnum_1_1CompressedImageView.html</anchorfile>
      <anchor>a3f725ebf366786465b3331c4c18aa3c4</anchor>
      <arglist>(CompressedPixelStorage storage, CompressedPixelFormat format, const VectorTypeFor&lt; dimensions, Int &gt; &amp;size, Containers::ArrayView&lt; const void &gt; data) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>CompressedImageView</name>
      <anchorfile>classMagnum_1_1CompressedImageView.html</anchorfile>
      <anchor>a7e726f2b69b25bdc47753b27e1fe2a2d</anchor>
      <arglist>(CompressedPixelFormat format, const VectorTypeFor&lt; dimensions, Int &gt; &amp;size, Containers::ArrayView&lt; const void &gt; data) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>CompressedImageView</name>
      <anchorfile>classMagnum_1_1CompressedImageView.html</anchorfile>
      <anchor>a8b2f78d405ea9bf59083a9f845eaea30</anchor>
      <arglist>(CompressedPixelStorage storage, CompressedPixelFormat format, const VectorTypeFor&lt; dimensions, Int &gt; &amp;size) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>CompressedImageView</name>
      <anchorfile>classMagnum_1_1CompressedImageView.html</anchorfile>
      <anchor>ae28e8c5473f675347e781baf512d46ec</anchor>
      <arglist>(CompressedPixelFormat format, const VectorTypeFor&lt; dimensions, Int &gt; &amp;size) noexcept</arglist>
    </member>
    <member kind="function">
      <type>CompressedPixelStorage</type>
      <name>storage</name>
      <anchorfile>classMagnum_1_1CompressedImageView.html</anchorfile>
      <anchor>ae26b24b4c549c437de1fa54ecc624b7d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>CompressedPixelFormat</type>
      <name>format</name>
      <anchorfile>classMagnum_1_1CompressedImageView.html</anchorfile>
      <anchor>ad3b3a86eea12d58ab0972a2e55de7423</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>constexpr VectorTypeFor&lt; dimensions, Int &gt;</type>
      <name>size</name>
      <anchorfile>classMagnum_1_1CompressedImageView.html</anchorfile>
      <anchor>aec3bcf8c6692d6388441ceff624f9abe</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>std::tuple&lt; std::size_t, VectorTypeFor&lt; dimensions, std::size_t &gt;, std::size_t &gt;</type>
      <name>dataProperties</name>
      <anchorfile>classMagnum_1_1CompressedImageView.html</anchorfile>
      <anchor>a47542abbc46a1feef8d854219ade2df8</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>constexpr Containers::ArrayView&lt; const char &gt;</type>
      <name>data</name>
      <anchorfile>classMagnum_1_1CompressedImageView.html</anchorfile>
      <anchor>afd6154f74185a6174f43e6198fe1edf4</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const T *</type>
      <name>data</name>
      <anchorfile>classMagnum_1_1CompressedImageView.html</anchorfile>
      <anchor>aa8506215f45df757a041e45c5f171074</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setData</name>
      <anchorfile>classMagnum_1_1CompressedImageView.html</anchorfile>
      <anchor>a081408ea65fa6d9bba65cddab46083f1</anchor>
      <arglist>(Containers::ArrayView&lt; const void &gt; data)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Magnum::CompressedPixelStorage</name>
    <filename>classMagnum_1_1CompressedPixelStorage.html</filename>
    <base>Magnum::PixelStorage</base>
    <member kind="function">
      <type>constexpr</type>
      <name>CompressedPixelStorage</name>
      <anchorfile>classMagnum_1_1CompressedPixelStorage.html</anchorfile>
      <anchor>ab3beda591846047cb80f79202536c38c</anchor>
      <arglist>() noexcept</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classMagnum_1_1CompressedPixelStorage.html</anchorfile>
      <anchor>a88643964686933e293a711218824a428</anchor>
      <arglist>(const CompressedPixelStorage &amp;other) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>classMagnum_1_1CompressedPixelStorage.html</anchorfile>
      <anchor>a1b4524793a6edf0c39d7967d5a505bf3</anchor>
      <arglist>(const CompressedPixelStorage &amp;other) const </arglist>
    </member>
    <member kind="function">
      <type>constexpr Vector3i</type>
      <name>compressedBlockSize</name>
      <anchorfile>classMagnum_1_1CompressedPixelStorage.html</anchorfile>
      <anchor>a7170f5842c96b2bb5a4a5fd23b4a328c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>CompressedPixelStorage &amp;</type>
      <name>setCompressedBlockSize</name>
      <anchorfile>classMagnum_1_1CompressedPixelStorage.html</anchorfile>
      <anchor>ab54d1d80a1a10dfd3133df9c0724a6b0</anchor>
      <arglist>(const Vector3i &amp;size)</arglist>
    </member>
    <member kind="function">
      <type>constexpr Int</type>
      <name>compressedBlockDataSize</name>
      <anchorfile>classMagnum_1_1CompressedPixelStorage.html</anchorfile>
      <anchor>a752632f9edf15f2b0c63873f0a88beb1</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>CompressedPixelStorage &amp;</type>
      <name>setCompressedBlockDataSize</name>
      <anchorfile>classMagnum_1_1CompressedPixelStorage.html</anchorfile>
      <anchor>abc8d6a374f5bd03de2b8b404404586eb</anchor>
      <arglist>(Int size)</arglist>
    </member>
    <member kind="function">
      <type>std::tuple&lt; Math::Vector3&lt; std::size_t &gt;, Math::Vector3&lt; std::size_t &gt;, std::size_t &gt;</type>
      <name>dataProperties</name>
      <anchorfile>classMagnum_1_1CompressedPixelStorage.html</anchorfile>
      <anchor>a4248251fdd354c27322f5155adb7e2a3</anchor>
      <arglist>(const Vector3i &amp;size) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Magnum::Context</name>
    <filename>classMagnum_1_1Context.html</filename>
    <member kind="enumeration">
      <type></type>
      <name>Flag</name>
      <anchorfile>classMagnum_1_1Context.html</anchorfile>
      <anchor>ae92e0c1807cd4dd1add7e1edd1e8b792</anchor>
      <arglist></arglist>
      <enumvalue file="classMagnum_1_1Context.html" anchor="ae92e0c1807cd4dd1add7e1edd1e8b792aa603905470e2a5b8c13e96b579ef0dba">Debug</enumvalue>
      <enumvalue file="classMagnum_1_1Context.html" anchor="ae92e0c1807cd4dd1add7e1edd1e8b792a70a47cae4eb221930f2663fd244369ea">NoError</enumvalue>
      <enumvalue file="classMagnum_1_1Context.html" anchor="ae92e0c1807cd4dd1add7e1edd1e8b792aef797a197a966bf786c3075d041793ab">RobustAccess</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>State</name>
      <anchorfile>classMagnum_1_1Context.html</anchorfile>
      <anchor>a40a7999dc06d5be02e48f4a4ded8ef68</anchor>
      <arglist></arglist>
      <enumvalue file="classMagnum_1_1Context.html" anchor="a40a7999dc06d5be02e48f4a4ded8ef68a4c19ddb10d5a902842dda06a62c3d601">Buffers</enumvalue>
      <enumvalue file="classMagnum_1_1Context.html" anchor="a40a7999dc06d5be02e48f4a4ded8ef68ac81a0bdfe577125a16bb2a53d37df5cf">Framebuffers</enumvalue>
      <enumvalue file="classMagnum_1_1Context.html" anchor="a40a7999dc06d5be02e48f4a4ded8ef68a6f977d7c0201677985cc21e9e24d8b35">Meshes</enumvalue>
      <enumvalue file="classMagnum_1_1Context.html" anchor="a40a7999dc06d5be02e48f4a4ded8ef68afa61958e6a37a6f8f906a692fbab4c53">PixelStorage</enumvalue>
      <enumvalue file="classMagnum_1_1Context.html" anchor="a40a7999dc06d5be02e48f4a4ded8ef68a07b20ae970048fc2002d756f27acc863">Renderer</enumvalue>
      <enumvalue file="classMagnum_1_1Context.html" anchor="a40a7999dc06d5be02e48f4a4ded8ef68aecee0a84af1bbe31d8aec4ce303fad9d">Shaders</enumvalue>
      <enumvalue file="classMagnum_1_1Context.html" anchor="a40a7999dc06d5be02e48f4a4ded8ef68a536300d63028e7f16ba150566ecd3a5f">Textures</enumvalue>
      <enumvalue file="classMagnum_1_1Context.html" anchor="a40a7999dc06d5be02e48f4a4ded8ef68af42c5721f003b0657f081141043576f6">TransformFeedback</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>DetectedDriver</name>
      <anchorfile>classMagnum_1_1Context.html</anchorfile>
      <anchor>a821ec3decf30231f00d76aa349889547</anchor>
      <arglist></arglist>
      <enumvalue file="classMagnum_1_1Context.html" anchor="a821ec3decf30231f00d76aa349889547abfd16f84e6b719aba6717bf2f3eb3580">Amd</enumvalue>
      <enumvalue file="classMagnum_1_1Context.html" anchor="a821ec3decf30231f00d76aa349889547a48af4341f745163f945fa838eeabb062">AMD</enumvalue>
      <enumvalue file="classMagnum_1_1Context.html" anchor="a821ec3decf30231f00d76aa349889547aaa0278f8d48aeb5309eec13da03ad8eb">IntelWindows</enumvalue>
      <enumvalue file="classMagnum_1_1Context.html" anchor="a821ec3decf30231f00d76aa349889547a2260b669d1c515bc489704f350fe023f">Mesa</enumvalue>
      <enumvalue file="classMagnum_1_1Context.html" anchor="a821ec3decf30231f00d76aa349889547a1e529e65e1dff87960b1e50a924321a1">NVidia</enumvalue>
      <enumvalue file="classMagnum_1_1Context.html" anchor="a821ec3decf30231f00d76aa349889547a0b1a0acb1197a3d749100f0f947cf41b">Svga3D</enumvalue>
    </member>
    <member kind="typedef">
      <type>Containers::EnumSet&lt; Flag &gt;</type>
      <name>Flags</name>
      <anchorfile>classMagnum_1_1Context.html</anchorfile>
      <anchor>a6bd4411466d5dc7e239f30b4cf1f0904</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Containers::EnumSet&lt; State &gt;</type>
      <name>States</name>
      <anchorfile>classMagnum_1_1Context.html</anchorfile>
      <anchor>a3dcf118bbbe9f8a27468781dd9662f5a</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Containers::EnumSet&lt; DetectedDriver &gt;</type>
      <name>DetectedDrivers</name>
      <anchorfile>classMagnum_1_1Context.html</anchorfile>
      <anchor>a4fcd5f53732b98ebf9b3b84452c02b1a</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Context</name>
      <anchorfile>classMagnum_1_1Context.html</anchorfile>
      <anchor>acdc0b6c8782ae5b2ae4488ced79dfea8</anchor>
      <arglist>(const Context &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Context</name>
      <anchorfile>classMagnum_1_1Context.html</anchorfile>
      <anchor>a7a1ea545a7a0d798e29facfe9fa2bb83</anchor>
      <arglist>(Context &amp;&amp;other)</arglist>
    </member>
    <member kind="function">
      <type>Context &amp;</type>
      <name>operator=</name>
      <anchorfile>classMagnum_1_1Context.html</anchorfile>
      <anchor>aaa693d8815bd638a4a13b04235789fc5</anchor>
      <arglist>(const Context &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>Context &amp;</type>
      <name>operator=</name>
      <anchorfile>classMagnum_1_1Context.html</anchorfile>
      <anchor>a0dc2428360d1438aa5f636090312b6e0</anchor>
      <arglist>(Context &amp;&amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>Version</type>
      <name>version</name>
      <anchorfile>classMagnum_1_1Context.html</anchorfile>
      <anchor>aa6288451fd7ddc2be078890e1299163e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>vendorString</name>
      <anchorfile>classMagnum_1_1Context.html</anchorfile>
      <anchor>a8989c22a69dab7aaa925432db84b9c90</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>rendererString</name>
      <anchorfile>classMagnum_1_1Context.html</anchorfile>
      <anchor>a24228aa0e2e7ffede0072432af5bce58</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>versionString</name>
      <anchorfile>classMagnum_1_1Context.html</anchorfile>
      <anchor>a69e05cb847ccac06717d82283cff0119</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>shadingLanguageVersionString</name>
      <anchorfile>classMagnum_1_1Context.html</anchorfile>
      <anchor>a0159d3c3cff666535bbf4b226f0ec07e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; std::string &gt;</type>
      <name>shadingLanguageVersionStrings</name>
      <anchorfile>classMagnum_1_1Context.html</anchorfile>
      <anchor>ac5513c0ee33025750ca1eab7a8d4292e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; std::string &gt;</type>
      <name>extensionStrings</name>
      <anchorfile>classMagnum_1_1Context.html</anchorfile>
      <anchor>a3ffc73895880ee1b6c47a4636c9abb68</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Flags</type>
      <name>flags</name>
      <anchorfile>classMagnum_1_1Context.html</anchorfile>
      <anchor>af12b00001f6635fee9312b25e116e2fa</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const std::vector&lt; Extension &gt; &amp;</type>
      <name>supportedExtensions</name>
      <anchorfile>classMagnum_1_1Context.html</anchorfile>
      <anchor>a67fe7665b91b41c9a9bc3ed0db7b36db</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isCoreProfile</name>
      <anchorfile>classMagnum_1_1Context.html</anchorfile>
      <anchor>ac0bd7db6b9e7cb37ac062e7582c5afb5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isVersionSupported</name>
      <anchorfile>classMagnum_1_1Context.html</anchorfile>
      <anchor>a60ca14756a4639cae97d17dab555d33e</anchor>
      <arglist>(Version version) const </arglist>
    </member>
    <member kind="function">
      <type>Version</type>
      <name>supportedVersion</name>
      <anchorfile>classMagnum_1_1Context.html</anchorfile>
      <anchor>a880b0a77f65837c957063d4a005baf57</anchor>
      <arglist>(std::initializer_list&lt; Version &gt; versions) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isExtensionSupported</name>
      <anchorfile>classMagnum_1_1Context.html</anchorfile>
      <anchor>a9bdd34eba2122fc2f117b3d4d14edad5</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isExtensionSupported</name>
      <anchorfile>classMagnum_1_1Context.html</anchorfile>
      <anchor>a4a1d2c10cbdfdc32f983d96bb7eb05e7</anchor>
      <arglist>(Version version) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isExtensionSupported</name>
      <anchorfile>classMagnum_1_1Context.html</anchorfile>
      <anchor>af05bddb10fcb6b0ef75155760aa9d250</anchor>
      <arglist>(const Extension &amp;extension) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isExtensionDisabled</name>
      <anchorfile>classMagnum_1_1Context.html</anchorfile>
      <anchor>a460a00bdf70bea86f2e9a6331a9a3928</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isExtensionDisabled</name>
      <anchorfile>classMagnum_1_1Context.html</anchorfile>
      <anchor>ac4e92c5a799b822245964008c5511760</anchor>
      <arglist>(Version version) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isExtensionDisabled</name>
      <anchorfile>classMagnum_1_1Context.html</anchorfile>
      <anchor>af43a195fd2ef32259888c89ec3abdd10</anchor>
      <arglist>(const Extension &amp;extension) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>resetState</name>
      <anchorfile>classMagnum_1_1Context.html</anchorfile>
      <anchor>ac75cc4e484a300bac27d802ed41bb203</anchor>
      <arglist>(States states=~States{})</arglist>
    </member>
    <member kind="function">
      <type>DetectedDrivers</type>
      <name>detectedDriver</name>
      <anchorfile>classMagnum_1_1Context.html</anchorfile>
      <anchor>acd7c2c67259203b3b577d0ba8bc11f03</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>hasCurrent</name>
      <anchorfile>classMagnum_1_1Context.html</anchorfile>
      <anchor>a4fee349c51438e69c5baa5974cccd934</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Context &amp;</type>
      <name>current</name>
      <anchorfile>classMagnum_1_1Context.html</anchorfile>
      <anchor>af654cbc109731f6d41a928cc07bb0c2f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>classMagnum_1_1Context.html</anchorfile>
      <anchor>a0d4db4d0216dee7835c81b44f0e0a4e0</anchor>
      <arglist>(Debug &amp;debug, Context::Flag value)</arglist>
    </member>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>classMagnum_1_1Context.html</anchorfile>
      <anchor>ad2a1b71ac5740761d3d5f922c0578ddf</anchor>
      <arglist>(Debug &amp;debug, Context::Flags value)</arglist>
    </member>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>classMagnum_1_1Context.html</anchorfile>
      <anchor>a9333b5940a6dfc9e3432f8231ded74bc</anchor>
      <arglist>(Debug &amp;debug, Context::DetectedDriver value)</arglist>
    </member>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>classMagnum_1_1Context.html</anchorfile>
      <anchor>ad75f14aae1be07e6094458ae5eab06a7</anchor>
      <arglist>(Debug &amp;debug, Context::DetectedDrivers value)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Magnum::CubeMapTexture</name>
    <filename>classMagnum_1_1CubeMapTexture.html</filename>
    <base>Magnum::AbstractTexture</base>
    <member kind="typedef">
      <type>CubeMapCoordinate</type>
      <name>Coordinate</name>
      <anchorfile>classMagnum_1_1CubeMapTexture.html</anchorfile>
      <anchor>aeed667ab8ef512795554d41e84ac2d45</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>CubeMapTexture</name>
      <anchorfile>classMagnum_1_1CubeMapTexture.html</anchorfile>
      <anchor>a14e137fee24c9fed85103f07dba28ef2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>CubeMapTexture</name>
      <anchorfile>classMagnum_1_1CubeMapTexture.html</anchorfile>
      <anchor>ac39a51c2ee0e937699516b78b4c65dfd</anchor>
      <arglist>(NoCreateT) noexcept</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>bindImage</name>
      <anchorfile>classMagnum_1_1CubeMapTexture.html</anchorfile>
      <anchor>a38096b6519c5eee59f3349a3542f25f6</anchor>
      <arglist>(Int imageUnit, Int level, CubeMapCoordinate coordinate, ImageAccess access, ImageFormat format)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>bindImageLayered</name>
      <anchorfile>classMagnum_1_1CubeMapTexture.html</anchorfile>
      <anchor>a2243be2dca55f0a2de01dda18b303c56</anchor>
      <arglist>(Int imageUnit, Int level, ImageAccess access, ImageFormat format)</arglist>
    </member>
    <member kind="function">
      <type>CubeMapTexture &amp;</type>
      <name>setBaseLevel</name>
      <anchorfile>classMagnum_1_1CubeMapTexture.html</anchorfile>
      <anchor>a38d56c49438813d500bb7621fa4623cf</anchor>
      <arglist>(Int level)</arglist>
    </member>
    <member kind="function">
      <type>CubeMapTexture &amp;</type>
      <name>setMaxLevel</name>
      <anchorfile>classMagnum_1_1CubeMapTexture.html</anchorfile>
      <anchor>a56aef03e2261d366d979865abcb02660</anchor>
      <arglist>(Int level)</arglist>
    </member>
    <member kind="function">
      <type>CubeMapTexture &amp;</type>
      <name>setMinificationFilter</name>
      <anchorfile>classMagnum_1_1CubeMapTexture.html</anchorfile>
      <anchor>adee3a9d75465446d40034ab985832a80</anchor>
      <arglist>(Sampler::Filter filter, Sampler::Mipmap mipmap=Sampler::Mipmap::Base)</arglist>
    </member>
    <member kind="function">
      <type>CubeMapTexture &amp;</type>
      <name>setMagnificationFilter</name>
      <anchorfile>classMagnum_1_1CubeMapTexture.html</anchorfile>
      <anchor>a198a717758112e6875da7daf69c19e57</anchor>
      <arglist>(Sampler::Filter filter)</arglist>
    </member>
    <member kind="function">
      <type>CubeMapTexture &amp;</type>
      <name>setMinLod</name>
      <anchorfile>classMagnum_1_1CubeMapTexture.html</anchorfile>
      <anchor>a23d4066fabdb42967fcf55476b9d54a0</anchor>
      <arglist>(Float lod)</arglist>
    </member>
    <member kind="function">
      <type>CubeMapTexture &amp;</type>
      <name>setMaxLod</name>
      <anchorfile>classMagnum_1_1CubeMapTexture.html</anchorfile>
      <anchor>aad783a98648899087e58d22bf2f50e0d</anchor>
      <arglist>(Float lod)</arglist>
    </member>
    <member kind="function">
      <type>CubeMapTexture &amp;</type>
      <name>setLodBias</name>
      <anchorfile>classMagnum_1_1CubeMapTexture.html</anchorfile>
      <anchor>a225e906b638513314a904eac3d351654</anchor>
      <arglist>(Float bias)</arglist>
    </member>
    <member kind="function">
      <type>CubeMapTexture &amp;</type>
      <name>setWrapping</name>
      <anchorfile>classMagnum_1_1CubeMapTexture.html</anchorfile>
      <anchor>ac8ade38bc0b7f0a8469e935411e88d8c</anchor>
      <arglist>(const Array2D&lt; Sampler::Wrapping &gt; &amp;wrapping)</arglist>
    </member>
    <member kind="function">
      <type>CubeMapTexture &amp;</type>
      <name>setBorderColor</name>
      <anchorfile>classMagnum_1_1CubeMapTexture.html</anchorfile>
      <anchor>ae699ad58bcccc5fb30d46f421a32175a</anchor>
      <arglist>(const Color4 &amp;color)</arglist>
    </member>
    <member kind="function">
      <type>CubeMapTexture &amp;</type>
      <name>setBorderColor</name>
      <anchorfile>classMagnum_1_1CubeMapTexture.html</anchorfile>
      <anchor>ae88ba0e89aec31df931eaa0d783d9cc1</anchor>
      <arglist>(const Vector4ui &amp;color)</arglist>
    </member>
    <member kind="function">
      <type>CubeMapTexture &amp;</type>
      <name>setBorderColor</name>
      <anchorfile>classMagnum_1_1CubeMapTexture.html</anchorfile>
      <anchor>a9acf81f5faa72f0fb4452cbc114924ae</anchor>
      <arglist>(const Vector4i &amp;color)</arglist>
    </member>
    <member kind="function">
      <type>CubeMapTexture &amp;</type>
      <name>setMaxAnisotropy</name>
      <anchorfile>classMagnum_1_1CubeMapTexture.html</anchorfile>
      <anchor>acaa338a1c32861b32058c45d3719641b</anchor>
      <arglist>(Float anisotropy)</arglist>
    </member>
    <member kind="function">
      <type>CubeMapTexture &amp;</type>
      <name>setSRGBDecode</name>
      <anchorfile>classMagnum_1_1CubeMapTexture.html</anchorfile>
      <anchor>a886b85d987ea9d8a4176dc2ba3b97916</anchor>
      <arglist>(bool decode)</arglist>
    </member>
    <member kind="function">
      <type>CubeMapTexture &amp;</type>
      <name>setSwizzle</name>
      <anchorfile>classMagnum_1_1CubeMapTexture.html</anchorfile>
      <anchor>a25c296c24052995a5848c730b6f97cf3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>CubeMapTexture &amp;</type>
      <name>setCompareMode</name>
      <anchorfile>classMagnum_1_1CubeMapTexture.html</anchorfile>
      <anchor>a7786c6d766191f5599c087e8e8bcbda9</anchor>
      <arglist>(Sampler::CompareMode mode)</arglist>
    </member>
    <member kind="function">
      <type>CubeMapTexture &amp;</type>
      <name>setCompareFunction</name>
      <anchorfile>classMagnum_1_1CubeMapTexture.html</anchorfile>
      <anchor>ac90044b37e6ec8b602d1be6bdac9d024</anchor>
      <arglist>(Sampler::CompareFunction function)</arglist>
    </member>
    <member kind="function">
      <type>CubeMapTexture &amp;</type>
      <name>setDepthStencilMode</name>
      <anchorfile>classMagnum_1_1CubeMapTexture.html</anchorfile>
      <anchor>a7cc1e040e67689ec4ffac5c5b9a88c6e</anchor>
      <arglist>(Sampler::DepthStencilMode mode)</arglist>
    </member>
    <member kind="function">
      <type>CubeMapTexture &amp;</type>
      <name>setStorage</name>
      <anchorfile>classMagnum_1_1CubeMapTexture.html</anchorfile>
      <anchor>a166167ba6354f12ebcdf7b0831985e0f</anchor>
      <arglist>(Int levels, TextureFormat internalFormat, const Vector2i &amp;size)</arglist>
    </member>
    <member kind="function">
      <type>Vector2i</type>
      <name>imageSize</name>
      <anchorfile>classMagnum_1_1CubeMapTexture.html</anchorfile>
      <anchor>ab166e5b6b112e3a960410f9849157b22</anchor>
      <arglist>(Int level)</arglist>
    </member>
    <member kind="function">
      <type>Vector2i</type>
      <name>imageSize</name>
      <anchorfile>classMagnum_1_1CubeMapTexture.html</anchorfile>
      <anchor>a294387d7901785592843ae7cc4548d84</anchor>
      <arglist>(CubeMapCoordinate, Int level)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>image</name>
      <anchorfile>classMagnum_1_1CubeMapTexture.html</anchorfile>
      <anchor>af32ba8332c9353298e5cef09db60e5af</anchor>
      <arglist>(Int level, Image3D &amp;image)</arglist>
    </member>
    <member kind="function">
      <type>Image3D</type>
      <name>image</name>
      <anchorfile>classMagnum_1_1CubeMapTexture.html</anchorfile>
      <anchor>ab70c55dd6243dfa32e23ccc87933dc58</anchor>
      <arglist>(Int level, Image3D &amp;&amp;image)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>image</name>
      <anchorfile>classMagnum_1_1CubeMapTexture.html</anchorfile>
      <anchor>a698f734aa977addb80dfadcd64a21cb4</anchor>
      <arglist>(Int level, BufferImage3D &amp;image, BufferUsage usage)</arglist>
    </member>
    <member kind="function">
      <type>BufferImage3D</type>
      <name>image</name>
      <anchorfile>classMagnum_1_1CubeMapTexture.html</anchorfile>
      <anchor>a70537ac37fcb703a4b50114aec342b06</anchor>
      <arglist>(Int level, BufferImage3D &amp;&amp;image, BufferUsage usage)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>compressedImage</name>
      <anchorfile>classMagnum_1_1CubeMapTexture.html</anchorfile>
      <anchor>a53a4754027b88eb206275040738d7e7f</anchor>
      <arglist>(Int level, CompressedImage3D &amp;image)</arglist>
    </member>
    <member kind="function">
      <type>CompressedImage3D</type>
      <name>compressedImage</name>
      <anchorfile>classMagnum_1_1CubeMapTexture.html</anchorfile>
      <anchor>a23f2d41608c589bd83946b94636a07ff</anchor>
      <arglist>(Int level, CompressedImage3D &amp;&amp;image)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>compressedImage</name>
      <anchorfile>classMagnum_1_1CubeMapTexture.html</anchorfile>
      <anchor>aa02b3ecee84dff28b4e64b423d4d0f35</anchor>
      <arglist>(Int level, CompressedBufferImage3D &amp;image, BufferUsage usage)</arglist>
    </member>
    <member kind="function">
      <type>CompressedBufferImage3D</type>
      <name>compressedImage</name>
      <anchorfile>classMagnum_1_1CubeMapTexture.html</anchorfile>
      <anchor>a5ec21c05841f98ceeada317cd34ebf21</anchor>
      <arglist>(Int level, CompressedBufferImage3D &amp;&amp;image, BufferUsage usage)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>image</name>
      <anchorfile>classMagnum_1_1CubeMapTexture.html</anchorfile>
      <anchor>a527c78b9b38cbea430802b4f992fef3d</anchor>
      <arglist>(CubeMapCoordinate coordinate, Int level, Image2D &amp;image)</arglist>
    </member>
    <member kind="function">
      <type>Image2D</type>
      <name>image</name>
      <anchorfile>classMagnum_1_1CubeMapTexture.html</anchorfile>
      <anchor>ac343004fd6e279c5d123674c65a0cf0c</anchor>
      <arglist>(CubeMapCoordinate coordinate, Int level, Image2D &amp;&amp;image)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>image</name>
      <anchorfile>classMagnum_1_1CubeMapTexture.html</anchorfile>
      <anchor>a678dfa20215572aa4ebeae94f21056fd</anchor>
      <arglist>(CubeMapCoordinate coordinate, Int level, BufferImage2D &amp;image, BufferUsage usage)</arglist>
    </member>
    <member kind="function">
      <type>BufferImage2D</type>
      <name>image</name>
      <anchorfile>classMagnum_1_1CubeMapTexture.html</anchorfile>
      <anchor>a955de393276be1d3eda8fb35a18d82a1</anchor>
      <arglist>(CubeMapCoordinate coordinate, Int level, BufferImage2D &amp;&amp;image, BufferUsage usage)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>compressedImage</name>
      <anchorfile>classMagnum_1_1CubeMapTexture.html</anchorfile>
      <anchor>a34183fdf911e8daad22863e19303d043</anchor>
      <arglist>(CubeMapCoordinate coordinate, Int level, CompressedImage2D &amp;image)</arglist>
    </member>
    <member kind="function">
      <type>CompressedImage2D</type>
      <name>compressedImage</name>
      <anchorfile>classMagnum_1_1CubeMapTexture.html</anchorfile>
      <anchor>abe22a164990b40c764ec857534d255ff</anchor>
      <arglist>(CubeMapCoordinate coordinate, Int level, CompressedImage2D &amp;&amp;image)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>compressedImage</name>
      <anchorfile>classMagnum_1_1CubeMapTexture.html</anchorfile>
      <anchor>ac0bda12ca79f8b96a159a157688a37cd</anchor>
      <arglist>(CubeMapCoordinate coordinate, Int level, CompressedBufferImage2D &amp;image, BufferUsage usage)</arglist>
    </member>
    <member kind="function">
      <type>CompressedBufferImage2D</type>
      <name>compressedImage</name>
      <anchorfile>classMagnum_1_1CubeMapTexture.html</anchorfile>
      <anchor>a67a70dbf20ccb9b29c0ab04d15e1602b</anchor>
      <arglist>(CubeMapCoordinate coordinate, Int level, CompressedBufferImage2D &amp;&amp;image, BufferUsage usage)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>subImage</name>
      <anchorfile>classMagnum_1_1CubeMapTexture.html</anchorfile>
      <anchor>acc1f8804560e6cdcf5b6800e78ff50c7</anchor>
      <arglist>(Int level, const Range3Di &amp;range, Image3D &amp;image)</arglist>
    </member>
    <member kind="function">
      <type>Image3D</type>
      <name>subImage</name>
      <anchorfile>classMagnum_1_1CubeMapTexture.html</anchorfile>
      <anchor>aad0530dcc66d1b9fbdf0c5cf513fafb9</anchor>
      <arglist>(Int level, const Range3Di &amp;range, Image3D &amp;&amp;image)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>subImage</name>
      <anchorfile>classMagnum_1_1CubeMapTexture.html</anchorfile>
      <anchor>a75586603c9c7e726dcc5ae16541e96bf</anchor>
      <arglist>(Int level, const Range3Di &amp;range, BufferImage3D &amp;image, BufferUsage usage)</arglist>
    </member>
    <member kind="function">
      <type>BufferImage3D</type>
      <name>subImage</name>
      <anchorfile>classMagnum_1_1CubeMapTexture.html</anchorfile>
      <anchor>abfca2a02068093ca839932f23615b2e7</anchor>
      <arglist>(Int level, const Range3Di &amp;range, BufferImage3D &amp;&amp;image, BufferUsage usage)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>compressedSubImage</name>
      <anchorfile>classMagnum_1_1CubeMapTexture.html</anchorfile>
      <anchor>ab078867f9b101adabd7790a728a8ad2b</anchor>
      <arglist>(Int level, const Range3Di &amp;range, CompressedImage3D &amp;image)</arglist>
    </member>
    <member kind="function">
      <type>CompressedImage3D</type>
      <name>compressedSubImage</name>
      <anchorfile>classMagnum_1_1CubeMapTexture.html</anchorfile>
      <anchor>a68c81a343ef5895e0ea3efa2ee681339</anchor>
      <arglist>(Int level, const Range3Di &amp;range, CompressedImage3D &amp;&amp;image)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>compressedSubImage</name>
      <anchorfile>classMagnum_1_1CubeMapTexture.html</anchorfile>
      <anchor>acd421faeb43c8d335d53a529d0ebadf0</anchor>
      <arglist>(Int level, const Range3Di &amp;range, CompressedBufferImage3D &amp;image, BufferUsage usage)</arglist>
    </member>
    <member kind="function">
      <type>CompressedBufferImage3D</type>
      <name>compressedSubImage</name>
      <anchorfile>classMagnum_1_1CubeMapTexture.html</anchorfile>
      <anchor>ae8ee10fc46e731fc4dc1ad9d762ed691</anchor>
      <arglist>(Int level, const Range3Di &amp;range, CompressedBufferImage3D &amp;&amp;image, BufferUsage usage)</arglist>
    </member>
    <member kind="function">
      <type>CubeMapTexture &amp;</type>
      <name>setImage</name>
      <anchorfile>classMagnum_1_1CubeMapTexture.html</anchorfile>
      <anchor>af1bb07fbba857ffb4224dc83a6d65491</anchor>
      <arglist>(CubeMapCoordinate coordinate, Int level, TextureFormat internalFormat, const ImageView2D &amp;image)</arglist>
    </member>
    <member kind="function">
      <type>CubeMapTexture &amp;</type>
      <name>setImage</name>
      <anchorfile>classMagnum_1_1CubeMapTexture.html</anchorfile>
      <anchor>a5bb22d06fc60ca64cfa4be7057350e6a</anchor>
      <arglist>(CubeMapCoordinate coordinate, Int level, TextureFormat internalFormat, BufferImage2D &amp;image)</arglist>
    </member>
    <member kind="function">
      <type>CubeMapTexture &amp;</type>
      <name>setImage</name>
      <anchorfile>classMagnum_1_1CubeMapTexture.html</anchorfile>
      <anchor>aa987ed6c5ff5e7559adafc8541071685</anchor>
      <arglist>(CubeMapCoordinate coordinate, Int level, TextureFormat internalFormat, BufferImage2D &amp;&amp;image)</arglist>
    </member>
    <member kind="function">
      <type>CubeMapTexture &amp;</type>
      <name>setCompressedImage</name>
      <anchorfile>classMagnum_1_1CubeMapTexture.html</anchorfile>
      <anchor>a2210c01491af61fe145f6ba1affc7103</anchor>
      <arglist>(CubeMapCoordinate coordinate, Int level, const CompressedImageView2D &amp;image)</arglist>
    </member>
    <member kind="function">
      <type>CubeMapTexture &amp;</type>
      <name>setCompressedImage</name>
      <anchorfile>classMagnum_1_1CubeMapTexture.html</anchorfile>
      <anchor>aa197affd05d671f02ef3344fba41a686</anchor>
      <arglist>(CubeMapCoordinate coordinate, Int level, CompressedBufferImage2D &amp;image)</arglist>
    </member>
    <member kind="function">
      <type>CubeMapTexture &amp;</type>
      <name>setCompressedImage</name>
      <anchorfile>classMagnum_1_1CubeMapTexture.html</anchorfile>
      <anchor>a2db11fba17a6c48faf07f219cd3a20e7</anchor>
      <arglist>(CubeMapCoordinate coordinate, Int level, CompressedBufferImage2D &amp;&amp;image)</arglist>
    </member>
    <member kind="function">
      <type>CubeMapTexture &amp;</type>
      <name>setSubImage</name>
      <anchorfile>classMagnum_1_1CubeMapTexture.html</anchorfile>
      <anchor>a23a7ca554dd43733990f6bc9a34ef5e3</anchor>
      <arglist>(Int level, const Vector3i &amp;offset, const ImageView3D &amp;image)</arglist>
    </member>
    <member kind="function">
      <type>CubeMapTexture &amp;</type>
      <name>setSubImage</name>
      <anchorfile>classMagnum_1_1CubeMapTexture.html</anchorfile>
      <anchor>a2cc9c50ef4d9aa0c1b9718d0ddafb7de</anchor>
      <arglist>(Int level, const Vector3i &amp;offset, BufferImage3D &amp;image)</arglist>
    </member>
    <member kind="function">
      <type>CubeMapTexture &amp;</type>
      <name>setSubImage</name>
      <anchorfile>classMagnum_1_1CubeMapTexture.html</anchorfile>
      <anchor>ad781fb1b2611aae2b1351b7813d6bde2</anchor>
      <arglist>(Int level, const Vector3i &amp;offset, BufferImage3D &amp;&amp;image)</arglist>
    </member>
    <member kind="function">
      <type>CubeMapTexture &amp;</type>
      <name>setCompressedSubImage</name>
      <anchorfile>classMagnum_1_1CubeMapTexture.html</anchorfile>
      <anchor>a3f9334c7f06d9aa4a679580ce70dad00</anchor>
      <arglist>(Int level, const Vector3i &amp;offset, const CompressedImageView3D &amp;image)</arglist>
    </member>
    <member kind="function">
      <type>CubeMapTexture &amp;</type>
      <name>setCompressedSubImage</name>
      <anchorfile>classMagnum_1_1CubeMapTexture.html</anchorfile>
      <anchor>a5be029f698a0d9487f63e41d615b3f64</anchor>
      <arglist>(Int level, const Vector3i &amp;offset, CompressedBufferImage3D &amp;image)</arglist>
    </member>
    <member kind="function">
      <type>CubeMapTexture &amp;</type>
      <name>setCompressedSubImage</name>
      <anchorfile>classMagnum_1_1CubeMapTexture.html</anchorfile>
      <anchor>a0eca753fdb8fa9b31588d26a138a61c9</anchor>
      <arglist>(Int level, const Vector3i &amp;offset, CompressedBufferImage3D &amp;&amp;image)</arglist>
    </member>
    <member kind="function">
      <type>CubeMapTexture &amp;</type>
      <name>setSubImage</name>
      <anchorfile>classMagnum_1_1CubeMapTexture.html</anchorfile>
      <anchor>a5546536419c03fac81718a4f8b767a93</anchor>
      <arglist>(CubeMapCoordinate coordinate, Int level, const Vector2i &amp;offset, const ImageView2D &amp;image)</arglist>
    </member>
    <member kind="function">
      <type>CubeMapTexture &amp;</type>
      <name>setSubImage</name>
      <anchorfile>classMagnum_1_1CubeMapTexture.html</anchorfile>
      <anchor>aef62c6d5102e96af6b5d3d83bb28bba5</anchor>
      <arglist>(CubeMapCoordinate coordinate, Int level, const Vector2i &amp;offset, BufferImage2D &amp;image)</arglist>
    </member>
    <member kind="function">
      <type>CubeMapTexture &amp;</type>
      <name>setSubImage</name>
      <anchorfile>classMagnum_1_1CubeMapTexture.html</anchorfile>
      <anchor>aa12cdbc6dd68dc47c8506b744f0f91d0</anchor>
      <arglist>(CubeMapCoordinate coordinate, Int level, const Vector2i &amp;offset, BufferImage2D &amp;&amp;image)</arglist>
    </member>
    <member kind="function">
      <type>CubeMapTexture &amp;</type>
      <name>setCompressedSubImage</name>
      <anchorfile>classMagnum_1_1CubeMapTexture.html</anchorfile>
      <anchor>aafa6da92e2ed48753914c1cbbefca34c</anchor>
      <arglist>(CubeMapCoordinate coordinate, Int level, const Vector2i &amp;offset, const CompressedImageView2D &amp;image)</arglist>
    </member>
    <member kind="function">
      <type>CubeMapTexture &amp;</type>
      <name>setCompressedSubImage</name>
      <anchorfile>classMagnum_1_1CubeMapTexture.html</anchorfile>
      <anchor>add6dd955cb7a37776d4c56dedb4e0d76</anchor>
      <arglist>(CubeMapCoordinate coordinate, Int level, const Vector2i &amp;offset, CompressedBufferImage2D &amp;image)</arglist>
    </member>
    <member kind="function">
      <type>CubeMapTexture &amp;</type>
      <name>setCompressedSubImage</name>
      <anchorfile>classMagnum_1_1CubeMapTexture.html</anchorfile>
      <anchor>ae00eef9c36462e042a7f38c6ecea338a</anchor>
      <arglist>(CubeMapCoordinate coordinate, Int level, const Vector2i &amp;offset, CompressedBufferImage2D &amp;&amp;image)</arglist>
    </member>
    <member kind="function">
      <type>CubeMapTexture &amp;</type>
      <name>generateMipmap</name>
      <anchorfile>classMagnum_1_1CubeMapTexture.html</anchorfile>
      <anchor>ac95079040a3b6c8ed15183cac396b5bf</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>invalidateImage</name>
      <anchorfile>classMagnum_1_1CubeMapTexture.html</anchorfile>
      <anchor>a983a03f4d5651f813a896332f2eb5b0c</anchor>
      <arglist>(Int level)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>invalidateSubImage</name>
      <anchorfile>classMagnum_1_1CubeMapTexture.html</anchorfile>
      <anchor>abbf7d01a45fa9f5c20e0eed8dfce5a62</anchor>
      <arglist>(Int level, const Vector3i &amp;offset, const Vector3i &amp;size)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Vector2i</type>
      <name>maxSize</name>
      <anchorfile>classMagnum_1_1CubeMapTexture.html</anchorfile>
      <anchor>a42584e46ddbfadc16af09a31a375a41f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Vector2i</type>
      <name>compressedBlockSize</name>
      <anchorfile>classMagnum_1_1CubeMapTexture.html</anchorfile>
      <anchor>a9894e1522de79dd6515aaf8699da0dbe</anchor>
      <arglist>(TextureFormat format)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Int</type>
      <name>compressedBlockDataSize</name>
      <anchorfile>classMagnum_1_1CubeMapTexture.html</anchorfile>
      <anchor>af9a95940dbe2755a290e3bcbb9b7e0ac</anchor>
      <arglist>(TextureFormat format)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static CubeMapTexture</type>
      <name>wrap</name>
      <anchorfile>classMagnum_1_1CubeMapTexture.html</anchorfile>
      <anchor>aaa0d9d84e8318cc41765de3b4d39b8f8</anchor>
      <arglist>(GLuint id, ObjectFlags flags={})</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Magnum::CubeMapTextureArray</name>
    <filename>classMagnum_1_1CubeMapTextureArray.html</filename>
    <base>Magnum::AbstractTexture</base>
    <member kind="function">
      <type></type>
      <name>CubeMapTextureArray</name>
      <anchorfile>classMagnum_1_1CubeMapTextureArray.html</anchorfile>
      <anchor>ac851072768700599e330529dd69477f0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>CubeMapTextureArray</name>
      <anchorfile>classMagnum_1_1CubeMapTextureArray.html</anchorfile>
      <anchor>aa403dbed3944e6e46c0f4428b418db3b</anchor>
      <arglist>(NoCreateT) noexcept</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>bindImage</name>
      <anchorfile>classMagnum_1_1CubeMapTextureArray.html</anchorfile>
      <anchor>a4574362d132fd7cab76137878b822554</anchor>
      <arglist>(Int imageUnit, Int level, Int layer, ImageAccess access, ImageFormat format)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>bindImageLayered</name>
      <anchorfile>classMagnum_1_1CubeMapTextureArray.html</anchorfile>
      <anchor>a500f9c373521238271b0fe8a9fdef79f</anchor>
      <arglist>(Int imageUnit, Int level, ImageAccess access, ImageFormat format)</arglist>
    </member>
    <member kind="function">
      <type>CubeMapTextureArray &amp;</type>
      <name>setBaseLevel</name>
      <anchorfile>classMagnum_1_1CubeMapTextureArray.html</anchorfile>
      <anchor>a72e1a575306349d4f2fab48701c49e72</anchor>
      <arglist>(Int level)</arglist>
    </member>
    <member kind="function">
      <type>CubeMapTextureArray &amp;</type>
      <name>setMaxLevel</name>
      <anchorfile>classMagnum_1_1CubeMapTextureArray.html</anchorfile>
      <anchor>a3235878f1e51c761ef3596d968b65209</anchor>
      <arglist>(Int level)</arglist>
    </member>
    <member kind="function">
      <type>CubeMapTextureArray &amp;</type>
      <name>setMinificationFilter</name>
      <anchorfile>classMagnum_1_1CubeMapTextureArray.html</anchorfile>
      <anchor>aa8e104cae63fc0b1158bb29eb10e6e35</anchor>
      <arglist>(Sampler::Filter filter, Sampler::Mipmap mipmap=Sampler::Mipmap::Base)</arglist>
    </member>
    <member kind="function">
      <type>CubeMapTextureArray &amp;</type>
      <name>setMagnificationFilter</name>
      <anchorfile>classMagnum_1_1CubeMapTextureArray.html</anchorfile>
      <anchor>afd714f46338c45e792af0a41b1f90912</anchor>
      <arglist>(Sampler::Filter filter)</arglist>
    </member>
    <member kind="function">
      <type>CubeMapTextureArray &amp;</type>
      <name>setMinLod</name>
      <anchorfile>classMagnum_1_1CubeMapTextureArray.html</anchorfile>
      <anchor>a959b4507b4d177febe0cc747324d1a7f</anchor>
      <arglist>(Float lod)</arglist>
    </member>
    <member kind="function">
      <type>CubeMapTextureArray &amp;</type>
      <name>setMaxLod</name>
      <anchorfile>classMagnum_1_1CubeMapTextureArray.html</anchorfile>
      <anchor>a6a96a867fd3669207927877b319eff5e</anchor>
      <arglist>(Float lod)</arglist>
    </member>
    <member kind="function">
      <type>CubeMapTextureArray &amp;</type>
      <name>setLodBias</name>
      <anchorfile>classMagnum_1_1CubeMapTextureArray.html</anchorfile>
      <anchor>a441126b68d5d51235c10f798d67a998e</anchor>
      <arglist>(Float bias)</arglist>
    </member>
    <member kind="function">
      <type>CubeMapTextureArray &amp;</type>
      <name>setWrapping</name>
      <anchorfile>classMagnum_1_1CubeMapTextureArray.html</anchorfile>
      <anchor>a00efaab18df152d626f39b99807bba4e</anchor>
      <arglist>(const Array2D&lt; Sampler::Wrapping &gt; &amp;wrapping)</arglist>
    </member>
    <member kind="function">
      <type>CubeMapTextureArray &amp;</type>
      <name>setBorderColor</name>
      <anchorfile>classMagnum_1_1CubeMapTextureArray.html</anchorfile>
      <anchor>ace601a7e4bd3b559eb6cd5ae387341b8</anchor>
      <arglist>(const Color4 &amp;color)</arglist>
    </member>
    <member kind="function">
      <type>CubeMapTextureArray &amp;</type>
      <name>setBorderColor</name>
      <anchorfile>classMagnum_1_1CubeMapTextureArray.html</anchorfile>
      <anchor>adc4e9be2de629986af7b476d18d1f0b3</anchor>
      <arglist>(const Vector4ui &amp;color)</arglist>
    </member>
    <member kind="function">
      <type>CubeMapTextureArray &amp;</type>
      <name>setBorderColor</name>
      <anchorfile>classMagnum_1_1CubeMapTextureArray.html</anchorfile>
      <anchor>ac2d86ed83022891ba279ae4f54958c0e</anchor>
      <arglist>(const Vector4i &amp;color)</arglist>
    </member>
    <member kind="function">
      <type>CubeMapTextureArray &amp;</type>
      <name>setMaxAnisotropy</name>
      <anchorfile>classMagnum_1_1CubeMapTextureArray.html</anchorfile>
      <anchor>aec86b15c59e9525cd5753c9955ca3063</anchor>
      <arglist>(Float anisotropy)</arglist>
    </member>
    <member kind="function">
      <type>CubeMapTextureArray &amp;</type>
      <name>setSRGBDecode</name>
      <anchorfile>classMagnum_1_1CubeMapTextureArray.html</anchorfile>
      <anchor>a20abaac4c9e1112c9e0cb482aa3eba8c</anchor>
      <arglist>(bool decode)</arglist>
    </member>
    <member kind="function">
      <type>CubeMapTextureArray &amp;</type>
      <name>setSwizzle</name>
      <anchorfile>classMagnum_1_1CubeMapTextureArray.html</anchorfile>
      <anchor>a027a379d063df278d3bfbfaff4489cf2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>CubeMapTextureArray &amp;</type>
      <name>setCompareMode</name>
      <anchorfile>classMagnum_1_1CubeMapTextureArray.html</anchorfile>
      <anchor>a651ace2a5fe7e3d512c8c839a59b69f3</anchor>
      <arglist>(Sampler::CompareMode mode)</arglist>
    </member>
    <member kind="function">
      <type>CubeMapTextureArray &amp;</type>
      <name>setCompareFunction</name>
      <anchorfile>classMagnum_1_1CubeMapTextureArray.html</anchorfile>
      <anchor>a0240d68077f38a302877434a3b3702d2</anchor>
      <arglist>(Sampler::CompareFunction function)</arglist>
    </member>
    <member kind="function">
      <type>CubeMapTextureArray &amp;</type>
      <name>setDepthStencilMode</name>
      <anchorfile>classMagnum_1_1CubeMapTextureArray.html</anchorfile>
      <anchor>a9e8f3bb66a1e5d16522b8bf8ccf4a3e4</anchor>
      <arglist>(Sampler::DepthStencilMode mode)</arglist>
    </member>
    <member kind="function">
      <type>CubeMapTextureArray &amp;</type>
      <name>setStorage</name>
      <anchorfile>classMagnum_1_1CubeMapTextureArray.html</anchorfile>
      <anchor>afdfc34d0c7444262a54c219d0bd4c033</anchor>
      <arglist>(Int levels, TextureFormat internalFormat, const Vector3i &amp;size)</arglist>
    </member>
    <member kind="function">
      <type>Vector3i</type>
      <name>imageSize</name>
      <anchorfile>classMagnum_1_1CubeMapTextureArray.html</anchorfile>
      <anchor>a78465cb5f2c66be7f74db4f45a9674d0</anchor>
      <arglist>(Int level)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>image</name>
      <anchorfile>classMagnum_1_1CubeMapTextureArray.html</anchorfile>
      <anchor>a9ac2d8e1491631dda55ae66dbab8806f</anchor>
      <arglist>(Int level, Image3D &amp;image)</arglist>
    </member>
    <member kind="function">
      <type>Image3D</type>
      <name>image</name>
      <anchorfile>classMagnum_1_1CubeMapTextureArray.html</anchorfile>
      <anchor>acde3177ad7c6c0578e0c4aca9d12bf90</anchor>
      <arglist>(Int level, Image3D &amp;&amp;image)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>image</name>
      <anchorfile>classMagnum_1_1CubeMapTextureArray.html</anchorfile>
      <anchor>a6035f08eb947402e656e4c818d6c53fc</anchor>
      <arglist>(Int level, BufferImage3D &amp;image, BufferUsage usage)</arglist>
    </member>
    <member kind="function">
      <type>BufferImage3D</type>
      <name>image</name>
      <anchorfile>classMagnum_1_1CubeMapTextureArray.html</anchorfile>
      <anchor>af2c6968002855c8a4f0716c2ffd98c32</anchor>
      <arglist>(Int level, BufferImage3D &amp;&amp;image, BufferUsage usage)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>compressedImage</name>
      <anchorfile>classMagnum_1_1CubeMapTextureArray.html</anchorfile>
      <anchor>ac907036e05528236fb97ccc16a7d4cd1</anchor>
      <arglist>(Int level, CompressedImage3D &amp;image)</arglist>
    </member>
    <member kind="function">
      <type>CompressedImage3D</type>
      <name>compressedImage</name>
      <anchorfile>classMagnum_1_1CubeMapTextureArray.html</anchorfile>
      <anchor>addb3461327ab731a0f362bda7c7c14ee</anchor>
      <arglist>(Int level, CompressedImage3D &amp;&amp;image)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>compressedImage</name>
      <anchorfile>classMagnum_1_1CubeMapTextureArray.html</anchorfile>
      <anchor>a9b0a5f45a073c25c50e84d88db24d010</anchor>
      <arglist>(Int level, CompressedBufferImage3D &amp;image, BufferUsage usage)</arglist>
    </member>
    <member kind="function">
      <type>CompressedBufferImage3D</type>
      <name>compressedImage</name>
      <anchorfile>classMagnum_1_1CubeMapTextureArray.html</anchorfile>
      <anchor>a44828c1371c87ac4c093ac10328d2d49</anchor>
      <arglist>(Int level, CompressedBufferImage3D &amp;&amp;image, BufferUsage usage)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>subImage</name>
      <anchorfile>classMagnum_1_1CubeMapTextureArray.html</anchorfile>
      <anchor>aa5758394800ac98dc668ad9dfc222d5b</anchor>
      <arglist>(Int level, const Range3Di &amp;range, Image3D &amp;image)</arglist>
    </member>
    <member kind="function">
      <type>Image3D</type>
      <name>subImage</name>
      <anchorfile>classMagnum_1_1CubeMapTextureArray.html</anchorfile>
      <anchor>a59ba20424e47340de7d42f61e1a6bfb3</anchor>
      <arglist>(Int level, const Range3Di &amp;range, Image3D &amp;&amp;image)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>subImage</name>
      <anchorfile>classMagnum_1_1CubeMapTextureArray.html</anchorfile>
      <anchor>a9fb133f9d84c125a7ab8327c8debe4ea</anchor>
      <arglist>(Int level, const Range3Di &amp;range, BufferImage3D &amp;image, BufferUsage usage)</arglist>
    </member>
    <member kind="function">
      <type>BufferImage3D</type>
      <name>subImage</name>
      <anchorfile>classMagnum_1_1CubeMapTextureArray.html</anchorfile>
      <anchor>a3d45b5c1afffd887c4383d63d4171d6f</anchor>
      <arglist>(Int level, const Range3Di &amp;range, BufferImage3D &amp;&amp;image, BufferUsage usage)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>compressedSubImage</name>
      <anchorfile>classMagnum_1_1CubeMapTextureArray.html</anchorfile>
      <anchor>acd51aeb052541710bfe92b4e064b1033</anchor>
      <arglist>(Int level, const Range3Di &amp;range, CompressedImage3D &amp;image)</arglist>
    </member>
    <member kind="function">
      <type>CompressedImage3D</type>
      <name>compressedSubImage</name>
      <anchorfile>classMagnum_1_1CubeMapTextureArray.html</anchorfile>
      <anchor>a261a66c087cf348240a87fda36eccbfd</anchor>
      <arglist>(Int level, const Range3Di &amp;range, CompressedImage3D &amp;&amp;image)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>compressedSubImage</name>
      <anchorfile>classMagnum_1_1CubeMapTextureArray.html</anchorfile>
      <anchor>ab33537876e9269f63856237684cd40ed</anchor>
      <arglist>(Int level, const Range3Di &amp;range, CompressedBufferImage3D &amp;image, BufferUsage usage)</arglist>
    </member>
    <member kind="function">
      <type>CompressedBufferImage3D</type>
      <name>compressedSubImage</name>
      <anchorfile>classMagnum_1_1CubeMapTextureArray.html</anchorfile>
      <anchor>ad8d297fe0ae068837e2ec97f5663e7b4</anchor>
      <arglist>(Int level, const Range3Di &amp;range, CompressedBufferImage3D &amp;&amp;image, BufferUsage usage)</arglist>
    </member>
    <member kind="function">
      <type>CubeMapTextureArray &amp;</type>
      <name>setImage</name>
      <anchorfile>classMagnum_1_1CubeMapTextureArray.html</anchorfile>
      <anchor>a7003b075fa7841644344e38a1fb4a51b</anchor>
      <arglist>(Int level, TextureFormat internalFormat, const ImageView3D &amp;image)</arglist>
    </member>
    <member kind="function">
      <type>CubeMapTextureArray &amp;</type>
      <name>setImage</name>
      <anchorfile>classMagnum_1_1CubeMapTextureArray.html</anchorfile>
      <anchor>a30251ab2e1066f357124d4d7a093c330</anchor>
      <arglist>(Int level, TextureFormat internalFormat, BufferImage3D &amp;image)</arglist>
    </member>
    <member kind="function">
      <type>CubeMapTextureArray &amp;</type>
      <name>setImage</name>
      <anchorfile>classMagnum_1_1CubeMapTextureArray.html</anchorfile>
      <anchor>a078eb4794eccabb852b0cef6e7218400</anchor>
      <arglist>(Int level, TextureFormat internalFormat, BufferImage3D &amp;&amp;image)</arglist>
    </member>
    <member kind="function">
      <type>CubeMapTextureArray &amp;</type>
      <name>setCompressedImage</name>
      <anchorfile>classMagnum_1_1CubeMapTextureArray.html</anchorfile>
      <anchor>aea4fc7eb7c4be36b1acd783cbb0f813e</anchor>
      <arglist>(Int level, const CompressedImageView3D &amp;image)</arglist>
    </member>
    <member kind="function">
      <type>CubeMapTextureArray &amp;</type>
      <name>setCompressedImage</name>
      <anchorfile>classMagnum_1_1CubeMapTextureArray.html</anchorfile>
      <anchor>a1461980cf602a992b4f10024b9f183cf</anchor>
      <arglist>(Int level, CompressedBufferImage3D &amp;image)</arglist>
    </member>
    <member kind="function">
      <type>CubeMapTextureArray &amp;</type>
      <name>setCompressedImage</name>
      <anchorfile>classMagnum_1_1CubeMapTextureArray.html</anchorfile>
      <anchor>ade5a5fd14798e78a1644b7922b1daa6e</anchor>
      <arglist>(Int level, CompressedBufferImage3D &amp;&amp;image)</arglist>
    </member>
    <member kind="function">
      <type>CubeMapTextureArray &amp;</type>
      <name>setSubImage</name>
      <anchorfile>classMagnum_1_1CubeMapTextureArray.html</anchorfile>
      <anchor>a377aa5022efaaa8c08c36bdc54b39ba5</anchor>
      <arglist>(Int level, const Vector3i &amp;offset, const ImageView3D &amp;image)</arglist>
    </member>
    <member kind="function">
      <type>CubeMapTextureArray &amp;</type>
      <name>setSubImage</name>
      <anchorfile>classMagnum_1_1CubeMapTextureArray.html</anchorfile>
      <anchor>ad85f29303128270e092c13c55b17c914</anchor>
      <arglist>(Int level, const Vector3i &amp;offset, BufferImage3D &amp;image)</arglist>
    </member>
    <member kind="function">
      <type>CubeMapTextureArray &amp;</type>
      <name>setSubImage</name>
      <anchorfile>classMagnum_1_1CubeMapTextureArray.html</anchorfile>
      <anchor>a38661770f13c23b1572587353f45be31</anchor>
      <arglist>(Int level, const Vector3i &amp;offset, BufferImage3D &amp;&amp;image)</arglist>
    </member>
    <member kind="function">
      <type>CubeMapTextureArray &amp;</type>
      <name>setCompressedSubImage</name>
      <anchorfile>classMagnum_1_1CubeMapTextureArray.html</anchorfile>
      <anchor>aaf052f14a2ff4fd7e34097c36294963b</anchor>
      <arglist>(Int level, const Vector3i &amp;offset, const CompressedImageView3D &amp;image)</arglist>
    </member>
    <member kind="function">
      <type>CubeMapTextureArray &amp;</type>
      <name>setCompressedSubImage</name>
      <anchorfile>classMagnum_1_1CubeMapTextureArray.html</anchorfile>
      <anchor>af07c1d8c43846db77fb124b0ed7473a1</anchor>
      <arglist>(Int level, const Vector3i &amp;offset, CompressedBufferImage3D &amp;image)</arglist>
    </member>
    <member kind="function">
      <type>CubeMapTextureArray &amp;</type>
      <name>setCompressedSubImage</name>
      <anchorfile>classMagnum_1_1CubeMapTextureArray.html</anchorfile>
      <anchor>a3635b63844f2524553e995f12f92d430</anchor>
      <arglist>(Int level, const Vector3i &amp;offset, CompressedBufferImage3D &amp;&amp;image)</arglist>
    </member>
    <member kind="function">
      <type>CubeMapTextureArray &amp;</type>
      <name>generateMipmap</name>
      <anchorfile>classMagnum_1_1CubeMapTextureArray.html</anchorfile>
      <anchor>a51834c046bfa268966267eeaf78d7d0f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>invalidateImage</name>
      <anchorfile>classMagnum_1_1CubeMapTextureArray.html</anchorfile>
      <anchor>aa0df815158b6d3af76048639dae54d5e</anchor>
      <arglist>(Int level)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>invalidateSubImage</name>
      <anchorfile>classMagnum_1_1CubeMapTextureArray.html</anchorfile>
      <anchor>a59f5d46715a8378499c94380c1255379</anchor>
      <arglist>(Int level, const Vector3i &amp;offset, const Vector3i &amp;size)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Vector3i</type>
      <name>maxSize</name>
      <anchorfile>classMagnum_1_1CubeMapTextureArray.html</anchorfile>
      <anchor>ad8935c267e1dbcca2cc33909fa80c277</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Vector2i</type>
      <name>compressedBlockSize</name>
      <anchorfile>classMagnum_1_1CubeMapTextureArray.html</anchorfile>
      <anchor>a0e226d1b37de1b967d3800ee5a90bd66</anchor>
      <arglist>(TextureFormat format)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Int</type>
      <name>compressedBlockDataSize</name>
      <anchorfile>classMagnum_1_1CubeMapTextureArray.html</anchorfile>
      <anchor>aca54e957d624c4cb7565c3da209277a4</anchor>
      <arglist>(TextureFormat format)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static CubeMapTextureArray</type>
      <name>wrap</name>
      <anchorfile>classMagnum_1_1CubeMapTextureArray.html</anchorfile>
      <anchor>a84df4006b48ce3392314dc57561f6855</anchor>
      <arglist>(GLuint id, ObjectFlags flags={})</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Magnum::DebugGroup</name>
    <filename>classMagnum_1_1DebugGroup.html</filename>
    <member kind="enumeration">
      <type></type>
      <name>Source</name>
      <anchorfile>classMagnum_1_1DebugGroup.html</anchorfile>
      <anchor>ac7f74012699245f0772b8fec1f97d833</anchor>
      <arglist></arglist>
      <enumvalue file="classMagnum_1_1DebugGroup.html" anchor="ac7f74012699245f0772b8fec1f97d833a7b2d70df6fb557246ecc29b745b6114d">ThirdParty</enumvalue>
      <enumvalue file="classMagnum_1_1DebugGroup.html" anchor="ac7f74012699245f0772b8fec1f97d833ae498749f3c42246d50b15c81c101d988">Application</enumvalue>
    </member>
    <member kind="function">
      <type></type>
      <name>DebugGroup</name>
      <anchorfile>classMagnum_1_1DebugGroup.html</anchorfile>
      <anchor>a189de6b7a8ddfad81201df919eab2f76</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DebugGroup</name>
      <anchorfile>classMagnum_1_1DebugGroup.html</anchorfile>
      <anchor>a882bcc932be70ee5afdec9910ce70f97</anchor>
      <arglist>(Source source, UnsignedInt id, const std::string &amp;message)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DebugGroup</name>
      <anchorfile>classMagnum_1_1DebugGroup.html</anchorfile>
      <anchor>a0ed7faf2592e93208c21d22495ee2015</anchor>
      <arglist>(Source source, UnsignedInt id, const char(&amp;message)[size])</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~DebugGroup</name>
      <anchorfile>classMagnum_1_1DebugGroup.html</anchorfile>
      <anchor>a9ee0a2d3816150933000c8c663781829</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>push</name>
      <anchorfile>classMagnum_1_1DebugGroup.html</anchorfile>
      <anchor>a6f36ffbe077bcd433265184ebab63df3</anchor>
      <arglist>(Source source, UnsignedInt id, const std::string &amp;message)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>push</name>
      <anchorfile>classMagnum_1_1DebugGroup.html</anchorfile>
      <anchor>ae449a7cf4ea1977b2e64eaeb255de2aa</anchor>
      <arglist>(Source source, UnsignedInt id, const char(&amp;message)[size])</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>pop</name>
      <anchorfile>classMagnum_1_1DebugGroup.html</anchorfile>
      <anchor>a71db63fcdac85e82f70396610d70209c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Int</type>
      <name>maxStackDepth</name>
      <anchorfile>classMagnum_1_1DebugGroup.html</anchorfile>
      <anchor>ad461e9a019642790ec2c8f7d808912e1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>classMagnum_1_1DebugGroup.html</anchorfile>
      <anchor>ac94d5fde25c824e3f7cafb1c0ff7cb13</anchor>
      <arglist>(Debug &amp;debug, DebugGroup::Source value)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Magnum::DebugMessage</name>
    <filename>classMagnum_1_1DebugMessage.html</filename>
    <member kind="enumeration">
      <type></type>
      <name>Source</name>
      <anchorfile>classMagnum_1_1DebugMessage.html</anchorfile>
      <anchor>a557203cd7ea05c95d29c809d87aeea23</anchor>
      <arglist></arglist>
      <enumvalue file="classMagnum_1_1DebugMessage.html" anchor="a557203cd7ea05c95d29c809d87aeea23a72664dc0959f3b0c04891f8c7046a9f3">Api</enumvalue>
      <enumvalue file="classMagnum_1_1DebugMessage.html" anchor="a557203cd7ea05c95d29c809d87aeea23a622bcd3e3eb6eb6f2ca22d63fc98c5ea">WindowSystem</enumvalue>
      <enumvalue file="classMagnum_1_1DebugMessage.html" anchor="a557203cd7ea05c95d29c809d87aeea23a780fd1ff590e0e52a3765ab7f223c30a">ShaderCompiler</enumvalue>
      <enumvalue file="classMagnum_1_1DebugMessage.html" anchor="a557203cd7ea05c95d29c809d87aeea23a7b2d70df6fb557246ecc29b745b6114d">ThirdParty</enumvalue>
      <enumvalue file="classMagnum_1_1DebugMessage.html" anchor="a557203cd7ea05c95d29c809d87aeea23ae498749f3c42246d50b15c81c101d988">Application</enumvalue>
      <enumvalue file="classMagnum_1_1DebugMessage.html" anchor="a557203cd7ea05c95d29c809d87aeea23a6311ae17c1ee52b36e68aaf4ad066387">Other</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>Type</name>
      <anchorfile>classMagnum_1_1DebugMessage.html</anchorfile>
      <anchor>adf7effba2ab4597563f733016bef8c9a</anchor>
      <arglist></arglist>
      <enumvalue file="classMagnum_1_1DebugMessage.html" anchor="adf7effba2ab4597563f733016bef8c9aa902b0d55fddef6f8d651fe1035b7d4bd">Error</enumvalue>
      <enumvalue file="classMagnum_1_1DebugMessage.html" anchor="adf7effba2ab4597563f733016bef8c9aab4cc97bb7245cc3bf5111ed4183fc3a5">DeprecatedBehavior</enumvalue>
      <enumvalue file="classMagnum_1_1DebugMessage.html" anchor="adf7effba2ab4597563f733016bef8c9aa8dd33a40183f56a664a71123ee4763cc">UndefinedBehavior</enumvalue>
      <enumvalue file="classMagnum_1_1DebugMessage.html" anchor="adf7effba2ab4597563f733016bef8c9aae5c4972a8739402b5daa0acbce30d62b">Portability</enumvalue>
      <enumvalue file="classMagnum_1_1DebugMessage.html" anchor="adf7effba2ab4597563f733016bef8c9aa9446a98ad14416153cc4d45ab8b531bf">Performance</enumvalue>
      <enumvalue file="classMagnum_1_1DebugMessage.html" anchor="adf7effba2ab4597563f733016bef8c9aa0235c996b43b3799573658df41ef82f2">Marker</enumvalue>
      <enumvalue file="classMagnum_1_1DebugMessage.html" anchor="adf7effba2ab4597563f733016bef8c9aa6311ae17c1ee52b36e68aaf4ad066387">Other</enumvalue>
    </member>
    <member kind="typedef">
      <type>DebugOutput::Severity</type>
      <name>Severity</name>
      <anchorfile>classMagnum_1_1DebugMessage.html</anchorfile>
      <anchor>a813b2d15a63a088e890a04941e7bba9b</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>void(*</type>
      <name>Callback</name>
      <anchorfile>classMagnum_1_1DebugMessage.html</anchorfile>
      <anchor>a13bac75e669d39031ac2a91e956fa5d8</anchor>
      <arglist>)(DebugMessage::Source, DebugMessage::Type, UnsignedInt, DebugOutput::Severity, const std::string &amp;, const void *)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DebugMessage</name>
      <anchorfile>classMagnum_1_1DebugMessage.html</anchorfile>
      <anchor>aba069f20e4f3c478d86934b6db91e183</anchor>
      <arglist>()=delete</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Int</type>
      <name>maxLoggedMessages</name>
      <anchorfile>classMagnum_1_1DebugMessage.html</anchorfile>
      <anchor>a12318f7744180566d4a80afab34b8664</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Int</type>
      <name>maxMessageLength</name>
      <anchorfile>classMagnum_1_1DebugMessage.html</anchorfile>
      <anchor>ad279dea12a022907615f2a2d3b45e524</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>setEnabled</name>
      <anchorfile>classMagnum_1_1DebugMessage.html</anchorfile>
      <anchor>a314e994f60fe7e5e14cc2023965009b4</anchor>
      <arglist>(T...args)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>setCallback</name>
      <anchorfile>classMagnum_1_1DebugMessage.html</anchorfile>
      <anchor>aa5bd8be41954309de2f687b85e3b6b18</anchor>
      <arglist>(DebugOutput::Callback callback, const void *userParam=nullptr)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>setDefaultCallback</name>
      <anchorfile>classMagnum_1_1DebugMessage.html</anchorfile>
      <anchor>ad7ee64184e37379daa968fcbb0e98b73</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>insert</name>
      <anchorfile>classMagnum_1_1DebugMessage.html</anchorfile>
      <anchor>a09a577b8be31ce9ed99d987b1354e6c6</anchor>
      <arglist>(Source source, Type type, UnsignedInt id, DebugOutput::Severity severity, const std::string &amp;string)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>insert</name>
      <anchorfile>classMagnum_1_1DebugMessage.html</anchorfile>
      <anchor>a476de394c090cb0786475f8db98d3307</anchor>
      <arglist>(Source source, Type type, UnsignedInt id, DebugOutput::Severity severity, const char(&amp;string)[size])</arglist>
    </member>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>classMagnum_1_1DebugMessage.html</anchorfile>
      <anchor>a757e23b71bfbb06869da1eba3b7d45da</anchor>
      <arglist>(Debug &amp;debug, DebugMessage::Source value)</arglist>
    </member>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>classMagnum_1_1DebugMessage.html</anchorfile>
      <anchor>ab1f7b8a72a9a538560f8f0606ca1f4a8</anchor>
      <arglist>(Debug &amp;debug, DebugMessage::Type value)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Magnum::DebugOutput</name>
    <filename>classMagnum_1_1DebugOutput.html</filename>
    <member kind="enumeration">
      <type></type>
      <name>Source</name>
      <anchorfile>classMagnum_1_1DebugOutput.html</anchorfile>
      <anchor>a041c7f1fed0c4c9f0128bf982304aeb3</anchor>
      <arglist></arglist>
      <enumvalue file="classMagnum_1_1DebugOutput.html" anchor="a041c7f1fed0c4c9f0128bf982304aeb3a72664dc0959f3b0c04891f8c7046a9f3">Api</enumvalue>
      <enumvalue file="classMagnum_1_1DebugOutput.html" anchor="a041c7f1fed0c4c9f0128bf982304aeb3a622bcd3e3eb6eb6f2ca22d63fc98c5ea">WindowSystem</enumvalue>
      <enumvalue file="classMagnum_1_1DebugOutput.html" anchor="a041c7f1fed0c4c9f0128bf982304aeb3a780fd1ff590e0e52a3765ab7f223c30a">ShaderCompiler</enumvalue>
      <enumvalue file="classMagnum_1_1DebugOutput.html" anchor="a041c7f1fed0c4c9f0128bf982304aeb3a7b2d70df6fb557246ecc29b745b6114d">ThirdParty</enumvalue>
      <enumvalue file="classMagnum_1_1DebugOutput.html" anchor="a041c7f1fed0c4c9f0128bf982304aeb3ae498749f3c42246d50b15c81c101d988">Application</enumvalue>
      <enumvalue file="classMagnum_1_1DebugOutput.html" anchor="a041c7f1fed0c4c9f0128bf982304aeb3a6311ae17c1ee52b36e68aaf4ad066387">Other</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>Type</name>
      <anchorfile>classMagnum_1_1DebugOutput.html</anchorfile>
      <anchor>a336c7b28934cabacbbd0c72f2c48950e</anchor>
      <arglist></arglist>
      <enumvalue file="classMagnum_1_1DebugOutput.html" anchor="a336c7b28934cabacbbd0c72f2c48950ea902b0d55fddef6f8d651fe1035b7d4bd">Error</enumvalue>
      <enumvalue file="classMagnum_1_1DebugOutput.html" anchor="a336c7b28934cabacbbd0c72f2c48950eab4cc97bb7245cc3bf5111ed4183fc3a5">DeprecatedBehavior</enumvalue>
      <enumvalue file="classMagnum_1_1DebugOutput.html" anchor="a336c7b28934cabacbbd0c72f2c48950ea8dd33a40183f56a664a71123ee4763cc">UndefinedBehavior</enumvalue>
      <enumvalue file="classMagnum_1_1DebugOutput.html" anchor="a336c7b28934cabacbbd0c72f2c48950eae5c4972a8739402b5daa0acbce30d62b">Portability</enumvalue>
      <enumvalue file="classMagnum_1_1DebugOutput.html" anchor="a336c7b28934cabacbbd0c72f2c48950ea9446a98ad14416153cc4d45ab8b531bf">Performance</enumvalue>
      <enumvalue file="classMagnum_1_1DebugOutput.html" anchor="a336c7b28934cabacbbd0c72f2c48950ea0235c996b43b3799573658df41ef82f2">Marker</enumvalue>
      <enumvalue file="classMagnum_1_1DebugOutput.html" anchor="a336c7b28934cabacbbd0c72f2c48950eacef0afe9af5edb043716e736049224d3">PushGroup</enumvalue>
      <enumvalue file="classMagnum_1_1DebugOutput.html" anchor="a336c7b28934cabacbbd0c72f2c48950ea3e47d685c082c8b84bea759c25364090">PopGroup</enumvalue>
      <enumvalue file="classMagnum_1_1DebugOutput.html" anchor="a336c7b28934cabacbbd0c72f2c48950ea6311ae17c1ee52b36e68aaf4ad066387">Other</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>Severity</name>
      <anchorfile>classMagnum_1_1DebugOutput.html</anchorfile>
      <anchor>ab35e68bedc8b05c094906e12b96fea1e</anchor>
      <arglist></arglist>
      <enumvalue file="classMagnum_1_1DebugOutput.html" anchor="ab35e68bedc8b05c094906e12b96fea1ea655d20c1ca69519ca647684edbb2db35">High</enumvalue>
      <enumvalue file="classMagnum_1_1DebugOutput.html" anchor="ab35e68bedc8b05c094906e12b96fea1ea87f8a6ab85c9ced3702b4ea641ad4bb5">Medium</enumvalue>
      <enumvalue file="classMagnum_1_1DebugOutput.html" anchor="ab35e68bedc8b05c094906e12b96fea1ea28d0edd045e05cf5af64e35ae0c4c6ef">Low</enumvalue>
      <enumvalue file="classMagnum_1_1DebugOutput.html" anchor="ab35e68bedc8b05c094906e12b96fea1ea96d008db67fc0b5551a926842bbb6a71">Notification</enumvalue>
    </member>
    <member kind="typedef">
      <type>void(*</type>
      <name>Callback</name>
      <anchorfile>classMagnum_1_1DebugOutput.html</anchorfile>
      <anchor>aa272620a4e5aac5da68bde7ba3656f14</anchor>
      <arglist>)(Source, Type, UnsignedInt, Severity, const std::string &amp;, const void *)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DebugOutput</name>
      <anchorfile>classMagnum_1_1DebugOutput.html</anchorfile>
      <anchor>ab43d9cd62cf693bc1c6ed7115ba34ded</anchor>
      <arglist>()=delete</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Int</type>
      <name>maxLoggedMessages</name>
      <anchorfile>classMagnum_1_1DebugOutput.html</anchorfile>
      <anchor>a59b890ab0003489fe16f36552c724b15</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Int</type>
      <name>maxMessageLength</name>
      <anchorfile>classMagnum_1_1DebugOutput.html</anchorfile>
      <anchor>a54930b87deb2ba4359cf1fe6f3d2ce68</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>setEnabled</name>
      <anchorfile>classMagnum_1_1DebugOutput.html</anchorfile>
      <anchor>a9bcfc9c202eb6d69ea575fcfd56b2ce7</anchor>
      <arglist>(Source source, Type type, std::initializer_list&lt; UnsignedInt &gt; ids, bool enabled)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>setEnabled</name>
      <anchorfile>classMagnum_1_1DebugOutput.html</anchorfile>
      <anchor>aea7d92e70bff130c17c0d94acd03a8a2</anchor>
      <arglist>(Source source, Type type, Severity severity, bool enabled)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>setEnabled</name>
      <anchorfile>classMagnum_1_1DebugOutput.html</anchorfile>
      <anchor>aedea5bbffb3cebd036aad3121d44b37f</anchor>
      <arglist>(Source source, Type type, bool enabled)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>setEnabled</name>
      <anchorfile>classMagnum_1_1DebugOutput.html</anchorfile>
      <anchor>a78c7f2d285d776ce92922f5d210c74e1</anchor>
      <arglist>(Source source, Severity severity, bool enabled)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>setEnabled</name>
      <anchorfile>classMagnum_1_1DebugOutput.html</anchorfile>
      <anchor>a22b18736840eb87368f6b7e1cd8b581a</anchor>
      <arglist>(Source source, bool enabled)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>setEnabled</name>
      <anchorfile>classMagnum_1_1DebugOutput.html</anchorfile>
      <anchor>a2c2b0cb589c268953cb938ca59c01eb9</anchor>
      <arglist>(Type type, Severity severity, bool enabled)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>setEnabled</name>
      <anchorfile>classMagnum_1_1DebugOutput.html</anchorfile>
      <anchor>af3713b95f132e492b3d22bcbe698a830</anchor>
      <arglist>(Type type, bool enabled)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>setEnabled</name>
      <anchorfile>classMagnum_1_1DebugOutput.html</anchorfile>
      <anchor>a393cffd4f9ddb537826de468b1c36b9a</anchor>
      <arglist>(Severity severity, bool enabled)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>setEnabled</name>
      <anchorfile>classMagnum_1_1DebugOutput.html</anchorfile>
      <anchor>ae515ddcb3984503a7d597df27157900a</anchor>
      <arglist>(bool enabled)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>setCallback</name>
      <anchorfile>classMagnum_1_1DebugOutput.html</anchorfile>
      <anchor>ad4346cdf37cf30626cceb4b2b0bb103c</anchor>
      <arglist>(Callback callback, const void *userParam=nullptr)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>setDefaultCallback</name>
      <anchorfile>classMagnum_1_1DebugOutput.html</anchorfile>
      <anchor>aef001d3922471d4378d3f0c3e2b7562c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>classMagnum_1_1DebugOutput.html</anchorfile>
      <anchor>a8ebfbeb18914398a29b94bb905a2d27d</anchor>
      <arglist>(Debug &amp;debug, DebugOutput::Source value)</arglist>
    </member>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>classMagnum_1_1DebugOutput.html</anchorfile>
      <anchor>a46414fbbd0eb0fa569512e82d9ee9e22</anchor>
      <arglist>(Debug &amp;debug, DebugOutput::Type value)</arglist>
    </member>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>classMagnum_1_1DebugOutput.html</anchorfile>
      <anchor>a89d1fd21bfaa208055a8c0c9520776e2</anchor>
      <arglist>(Debug &amp;debug, DebugOutput::Severity value)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Magnum::DebugTools::CompareImage</name>
    <filename>classMagnum_1_1DebugTools_1_1CompareImage.html</filename>
    <member kind="function">
      <type></type>
      <name>CompareImage</name>
      <anchorfile>classMagnum_1_1DebugTools_1_1CompareImage.html</anchorfile>
      <anchor>acf19db0affc7fe7a54e4b3427115772a</anchor>
      <arglist>(Float maxThreshold, Float meanThreshold)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>CompareImage</name>
      <anchorfile>classMagnum_1_1DebugTools_1_1CompareImage.html</anchorfile>
      <anchor>ae4c1f7dd0271eb90f4aac489d9f872e9</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Magnum::DebugTools::ForceRenderer</name>
    <filename>classMagnum_1_1DebugTools_1_1ForceRenderer.html</filename>
    <templarg>dimensions</templarg>
    <base>Drawable&lt; dimensions, Float &gt;</base>
    <member kind="function">
      <type></type>
      <name>ForceRenderer</name>
      <anchorfile>classMagnum_1_1DebugTools_1_1ForceRenderer.html</anchorfile>
      <anchor>aa215eb21905d5bb0535602152eb1d8c1</anchor>
      <arglist>(SceneGraph::AbstractObject&lt; dimensions, Float &gt; &amp;object, const VectorTypeFor&lt; dimensions, Float &gt; &amp;forcePosition, const VectorTypeFor&lt; dimensions, Float &gt; &amp;force, ResourceKey options=ResourceKey(), SceneGraph::DrawableGroup&lt; dimensions, Float &gt; *drawables=nullptr)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ForceRenderer</name>
      <anchorfile>classMagnum_1_1DebugTools_1_1ForceRenderer.html</anchorfile>
      <anchor>a4a47078956031ff2961eb316dc05582a</anchor>
      <arglist>(SceneGraph::AbstractObject&lt; dimensions, Float &gt; &amp;, const VectorTypeFor&lt; dimensions, Float &gt; &amp;, VectorTypeFor&lt; dimensions, Float &gt; &amp;&amp;, ResourceKey=ResourceKey(), SceneGraph::DrawableGroup&lt; dimensions, Float &gt; *=nullptr)=delete</arglist>
    </member>
    <docanchor file="classMagnum_1_1DebugTools_1_1ForceRenderer">DebugTools-ForceRenderer-usage</docanchor>
  </compound>
  <compound kind="class">
    <name>Magnum::DebugTools::ForceRendererOptions</name>
    <filename>classMagnum_1_1DebugTools_1_1ForceRendererOptions.html</filename>
    <member kind="function">
      <type>constexpr Color4</type>
      <name>color</name>
      <anchorfile>classMagnum_1_1DebugTools_1_1ForceRendererOptions.html</anchorfile>
      <anchor>ab13ad5efee6305fec2ffdb85e1180213</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>ForceRendererOptions &amp;</type>
      <name>setColor</name>
      <anchorfile>classMagnum_1_1DebugTools_1_1ForceRendererOptions.html</anchorfile>
      <anchor>a1f16f8322957fba7854408a7be79ca64</anchor>
      <arglist>(const Color4 &amp;color)</arglist>
    </member>
    <member kind="function">
      <type>constexpr Float</type>
      <name>scale</name>
      <anchorfile>classMagnum_1_1DebugTools_1_1ForceRendererOptions.html</anchorfile>
      <anchor>aae26eee52826bbd627db84fb120150f5</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>ForceRendererOptions &amp;</type>
      <name>setSize</name>
      <anchorfile>classMagnum_1_1DebugTools_1_1ForceRendererOptions.html</anchorfile>
      <anchor>a0817d06d0bb054d61508e0b92c5853e6</anchor>
      <arglist>(Float size)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Magnum::DebugTools::ObjectRenderer</name>
    <filename>classMagnum_1_1DebugTools_1_1ObjectRenderer.html</filename>
    <templarg>dimensions</templarg>
    <base>Drawable&lt; dimensions, Float &gt;</base>
    <member kind="function">
      <type></type>
      <name>ObjectRenderer</name>
      <anchorfile>classMagnum_1_1DebugTools_1_1ObjectRenderer.html</anchorfile>
      <anchor>a39c29ddf3220a6d6d4a810a7724b1960</anchor>
      <arglist>(SceneGraph::AbstractObject&lt; dimensions, Float &gt; &amp;object, ResourceKey options=ResourceKey(), SceneGraph::DrawableGroup&lt; dimensions, Float &gt; *drawables=nullptr)</arglist>
    </member>
    <docanchor file="classMagnum_1_1DebugTools_1_1ObjectRenderer">DebugTools-ObjectRenderer-usage</docanchor>
  </compound>
  <compound kind="class">
    <name>Magnum::DebugTools::ObjectRendererOptions</name>
    <filename>classMagnum_1_1DebugTools_1_1ObjectRendererOptions.html</filename>
    <member kind="function">
      <type>constexpr Float</type>
      <name>size</name>
      <anchorfile>classMagnum_1_1DebugTools_1_1ObjectRendererOptions.html</anchorfile>
      <anchor>a3dd62cb375205062d7cfb6689551baae</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>ObjectRendererOptions &amp;</type>
      <name>setSize</name>
      <anchorfile>classMagnum_1_1DebugTools_1_1ObjectRendererOptions.html</anchorfile>
      <anchor>a50af6fcdad1352ea0d8a0d8121db876b</anchor>
      <arglist>(Float size)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Magnum::DebugTools::Profiler</name>
    <filename>classMagnum_1_1DebugTools_1_1Profiler.html</filename>
    <member kind="typedef">
      <type>UnsignedInt</type>
      <name>Section</name>
      <anchorfile>classMagnum_1_1DebugTools_1_1Profiler.html</anchorfile>
      <anchor>af5a98d7446df36116797c34cd467feb2</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setMeasureDuration</name>
      <anchorfile>classMagnum_1_1DebugTools_1_1Profiler.html</anchorfile>
      <anchor>aefbcba0490727d47e502905f66e2ba96</anchor>
      <arglist>(std::size_t frames)</arglist>
    </member>
    <member kind="function">
      <type>Section</type>
      <name>addSection</name>
      <anchorfile>classMagnum_1_1DebugTools_1_1Profiler.html</anchorfile>
      <anchor>ab6da3d649b2352a37f08fb5cd7279519</anchor>
      <arglist>(const std::string &amp;name)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isEnabled</name>
      <anchorfile>classMagnum_1_1DebugTools_1_1Profiler.html</anchorfile>
      <anchor>a3e084bffdc62fd51e31a078b2bbdab32</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>enable</name>
      <anchorfile>classMagnum_1_1DebugTools_1_1Profiler.html</anchorfile>
      <anchor>a6fb5bb0cc4e52de61c23be21ddcdf30d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>disable</name>
      <anchorfile>classMagnum_1_1DebugTools_1_1Profiler.html</anchorfile>
      <anchor>a38db40c7ec8aab26cb8df156a9ba4c60</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>start</name>
      <anchorfile>classMagnum_1_1DebugTools_1_1Profiler.html</anchorfile>
      <anchor>a4c1974a7704f581f53d57ec8f4472267</anchor>
      <arglist>(Section section)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>start</name>
      <anchorfile>classMagnum_1_1DebugTools_1_1Profiler.html</anchorfile>
      <anchor>ad7b131e9507245001765a21c57ebda5e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>stop</name>
      <anchorfile>classMagnum_1_1DebugTools_1_1Profiler.html</anchorfile>
      <anchor>ae9ad5cc6c51fb4cbc92f8fce37941212</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>nextFrame</name>
      <anchorfile>classMagnum_1_1DebugTools_1_1Profiler.html</anchorfile>
      <anchor>abc200a768f4543ddf2fb48ec83e314d1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>printStatistics</name>
      <anchorfile>classMagnum_1_1DebugTools_1_1Profiler.html</anchorfile>
      <anchor>ac285f4a9b26fa50d7904263951574191</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const Section</type>
      <name>otherSection</name>
      <anchorfile>classMagnum_1_1DebugTools_1_1Profiler.html</anchorfile>
      <anchor>a589b9249bb24d91e2280b4a59d539ad3</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Magnum::DebugTools::ResourceManager</name>
    <filename>classMagnum_1_1DebugTools_1_1ResourceManager.html</filename>
    <base>ResourceManager&lt; Magnum::Implementation::ResourceManagerLocalInstance, AbstractShaderProgram, Buffer, Mesh, MeshView, DebugTools::ForceRendererOptions, DebugTools::ObjectRendererOptions, DebugTools::ShapeRendererOptions &gt;</base>
  </compound>
  <compound kind="class">
    <name>Magnum::DebugTools::ShapeRenderer</name>
    <filename>classMagnum_1_1DebugTools_1_1ShapeRenderer.html</filename>
    <templarg>dimensions</templarg>
    <base>Drawable&lt; dimensions, Float &gt;</base>
    <member kind="function">
      <type></type>
      <name>ShapeRenderer</name>
      <anchorfile>classMagnum_1_1DebugTools_1_1ShapeRenderer.html</anchorfile>
      <anchor>aaa210f947039f9027c584c0859b0c5b6</anchor>
      <arglist>(Shapes::AbstractShape&lt; dimensions &gt; &amp;shape, ResourceKey options=ResourceKey(), SceneGraph::DrawableGroup&lt; dimensions, Float &gt; *drawables=nullptr)</arglist>
    </member>
    <docanchor file="classMagnum_1_1DebugTools_1_1ShapeRenderer">DebugTools-ShapeRenderer-usage</docanchor>
  </compound>
  <compound kind="class">
    <name>Magnum::DebugTools::ShapeRendererOptions</name>
    <filename>classMagnum_1_1DebugTools_1_1ShapeRendererOptions.html</filename>
    <member kind="enumeration">
      <type></type>
      <name>RenderMode</name>
      <anchorfile>classMagnum_1_1DebugTools_1_1ShapeRendererOptions.html</anchorfile>
      <anchor>aae7b1a38fd0295f79a5b171ea8540565</anchor>
      <arglist></arglist>
      <enumvalue file="classMagnum_1_1DebugTools_1_1ShapeRendererOptions.html" anchor="aae7b1a38fd0295f79a5b171ea8540565a33e42d0f3b166a4c405127e4412fbef2">Wireframe</enumvalue>
      <enumvalue file="classMagnum_1_1DebugTools_1_1ShapeRendererOptions.html" anchor="aae7b1a38fd0295f79a5b171ea8540565ae41480b6bbfbf7407974a88d3d34f4fa">Solid</enumvalue>
    </member>
    <member kind="function">
      <type>constexpr RenderMode</type>
      <name>renderMode</name>
      <anchorfile>classMagnum_1_1DebugTools_1_1ShapeRendererOptions.html</anchorfile>
      <anchor>a49cea30dc0849d4a371bed2ad764cf77</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>ShapeRendererOptions &amp;</type>
      <name>setRenderMode</name>
      <anchorfile>classMagnum_1_1DebugTools_1_1ShapeRendererOptions.html</anchorfile>
      <anchor>ab3ee5fee77c69955c68d571e10706f12</anchor>
      <arglist>(RenderMode mode)</arglist>
    </member>
    <member kind="function">
      <type>constexpr Color4</type>
      <name>color</name>
      <anchorfile>classMagnum_1_1DebugTools_1_1ShapeRendererOptions.html</anchorfile>
      <anchor>a08c659e678792dc3d2cdf30c270a300f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>ShapeRendererOptions &amp;</type>
      <name>setColor</name>
      <anchorfile>classMagnum_1_1DebugTools_1_1ShapeRendererOptions.html</anchorfile>
      <anchor>aa35caa614af616875a77e6b88528af2b</anchor>
      <arglist>(const Color4 &amp;color)</arglist>
    </member>
    <member kind="function">
      <type>constexpr Float</type>
      <name>pointSize</name>
      <anchorfile>classMagnum_1_1DebugTools_1_1ShapeRendererOptions.html</anchorfile>
      <anchor>a9e82673058f4a93d9193a5fa0597ca36</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>ShapeRendererOptions &amp;</type>
      <name>setPointSize</name>
      <anchorfile>classMagnum_1_1DebugTools_1_1ShapeRendererOptions.html</anchorfile>
      <anchor>a5c4d7b855c246f072a06d721e2e63671</anchor>
      <arglist>(Float size)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Magnum::DefaultFramebuffer</name>
    <filename>classMagnum_1_1DefaultFramebuffer.html</filename>
    <base>Magnum::AbstractFramebuffer</base>
    <member kind="enumeration">
      <type></type>
      <name>Status</name>
      <anchorfile>classMagnum_1_1DefaultFramebuffer.html</anchorfile>
      <anchor>a153b647cf16a9912db2e9148f131199c</anchor>
      <arglist></arglist>
      <enumvalue file="classMagnum_1_1DefaultFramebuffer.html" anchor="a153b647cf16a9912db2e9148f131199caae94f80b3ce82062a5dd7815daa04f9d">Complete</enumvalue>
      <enumvalue file="classMagnum_1_1DefaultFramebuffer.html" anchor="a153b647cf16a9912db2e9148f131199caec0fc0100c4fc1ce4eea230c3dc10360">Undefined</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>DrawAttachment</name>
      <anchorfile>classMagnum_1_1DefaultFramebuffer.html</anchorfile>
      <anchor>ab636bba9712b77c7a4c700db6d6e5590</anchor>
      <arglist></arglist>
      <enumvalue file="classMagnum_1_1DefaultFramebuffer.html" anchor="ab636bba9712b77c7a4c700db6d6e5590a6adf97f83acf6453d4a6a4b1070f3754">None</enumvalue>
      <enumvalue file="classMagnum_1_1DefaultFramebuffer.html" anchor="ab636bba9712b77c7a4c700db6d6e5590a3a86c1ecef856c6360b14ee920abd2d4">FrontLeft</enumvalue>
      <enumvalue file="classMagnum_1_1DefaultFramebuffer.html" anchor="ab636bba9712b77c7a4c700db6d6e5590a17a1a1897fa234ffd995f32ff31c4075">FrontRight</enumvalue>
      <enumvalue file="classMagnum_1_1DefaultFramebuffer.html" anchor="ab636bba9712b77c7a4c700db6d6e5590abff6f014d4c53710a1ad968e9b401ccb">BackLeft</enumvalue>
      <enumvalue file="classMagnum_1_1DefaultFramebuffer.html" anchor="ab636bba9712b77c7a4c700db6d6e5590aa07ea17eb99337c60ed9ad770cf2bb55">BackRight</enumvalue>
      <enumvalue file="classMagnum_1_1DefaultFramebuffer.html" anchor="ab636bba9712b77c7a4c700db6d6e5590a0557fa923dcee4d0f86b1409f5c2167f">Back</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>ReadAttachment</name>
      <anchorfile>classMagnum_1_1DefaultFramebuffer.html</anchorfile>
      <anchor>a82cbf3bf23194da5a3ad05a84b44b14c</anchor>
      <arglist></arglist>
      <enumvalue file="classMagnum_1_1DefaultFramebuffer.html" anchor="a82cbf3bf23194da5a3ad05a84b44b14ca6adf97f83acf6453d4a6a4b1070f3754">None</enumvalue>
      <enumvalue file="classMagnum_1_1DefaultFramebuffer.html" anchor="a82cbf3bf23194da5a3ad05a84b44b14ca3a86c1ecef856c6360b14ee920abd2d4">FrontLeft</enumvalue>
      <enumvalue file="classMagnum_1_1DefaultFramebuffer.html" anchor="a82cbf3bf23194da5a3ad05a84b44b14ca17a1a1897fa234ffd995f32ff31c4075">FrontRight</enumvalue>
      <enumvalue file="classMagnum_1_1DefaultFramebuffer.html" anchor="a82cbf3bf23194da5a3ad05a84b44b14cabff6f014d4c53710a1ad968e9b401ccb">BackLeft</enumvalue>
      <enumvalue file="classMagnum_1_1DefaultFramebuffer.html" anchor="a82cbf3bf23194da5a3ad05a84b44b14caa07ea17eb99337c60ed9ad770cf2bb55">BackRight</enumvalue>
      <enumvalue file="classMagnum_1_1DefaultFramebuffer.html" anchor="a82cbf3bf23194da5a3ad05a84b44b14ca945d5e233cf7d6240f6b783b36a374ff">Left</enumvalue>
      <enumvalue file="classMagnum_1_1DefaultFramebuffer.html" anchor="a82cbf3bf23194da5a3ad05a84b44b14ca92b09c7c48c520c3c55e497875da437c">Right</enumvalue>
      <enumvalue file="classMagnum_1_1DefaultFramebuffer.html" anchor="a82cbf3bf23194da5a3ad05a84b44b14ca0557fa923dcee4d0f86b1409f5c2167f">Back</enumvalue>
      <enumvalue file="classMagnum_1_1DefaultFramebuffer.html" anchor="a82cbf3bf23194da5a3ad05a84b44b14ca5835bab1ade0060909e31a06af2e2cde">Front</enumvalue>
      <enumvalue file="classMagnum_1_1DefaultFramebuffer.html" anchor="a82cbf3bf23194da5a3ad05a84b44b14ca8be41da9b58e32ece35a2b5751f6aeb9">FrontAndBack</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>InvalidationAttachment</name>
      <anchorfile>classMagnum_1_1DefaultFramebuffer.html</anchorfile>
      <anchor>a4429bfa6be560fef9adc3bac5bec59a6</anchor>
      <arglist></arglist>
      <enumvalue file="classMagnum_1_1DefaultFramebuffer.html" anchor="a4429bfa6be560fef9adc3bac5bec59a6a3a86c1ecef856c6360b14ee920abd2d4">FrontLeft</enumvalue>
      <enumvalue file="classMagnum_1_1DefaultFramebuffer.html" anchor="a4429bfa6be560fef9adc3bac5bec59a6a17a1a1897fa234ffd995f32ff31c4075">FrontRight</enumvalue>
      <enumvalue file="classMagnum_1_1DefaultFramebuffer.html" anchor="a4429bfa6be560fef9adc3bac5bec59a6abff6f014d4c53710a1ad968e9b401ccb">BackLeft</enumvalue>
      <enumvalue file="classMagnum_1_1DefaultFramebuffer.html" anchor="a4429bfa6be560fef9adc3bac5bec59a6aa07ea17eb99337c60ed9ad770cf2bb55">BackRight</enumvalue>
      <enumvalue file="classMagnum_1_1DefaultFramebuffer.html" anchor="a4429bfa6be560fef9adc3bac5bec59a6acb5feb1b7314637725a2e73bdc9f7295">Color</enumvalue>
      <enumvalue file="classMagnum_1_1DefaultFramebuffer.html" anchor="a4429bfa6be560fef9adc3bac5bec59a6a675056ad1441b6375b2c5abd48c27ef1">Depth</enumvalue>
      <enumvalue file="classMagnum_1_1DefaultFramebuffer.html" anchor="a4429bfa6be560fef9adc3bac5bec59a6ad821e7ccd4d4c25a491ba1a9ea248895">Stencil</enumvalue>
    </member>
    <member kind="function">
      <type></type>
      <name>DefaultFramebuffer</name>
      <anchorfile>classMagnum_1_1DefaultFramebuffer.html</anchorfile>
      <anchor>a81a22eb69202b9f886cccef4daba84d6</anchor>
      <arglist>(const DefaultFramebuffer &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DefaultFramebuffer</name>
      <anchorfile>classMagnum_1_1DefaultFramebuffer.html</anchorfile>
      <anchor>a86afaf934810d4d6cabf51b4c1225dca</anchor>
      <arglist>(DefaultFramebuffer &amp;&amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>DefaultFramebuffer &amp;</type>
      <name>operator=</name>
      <anchorfile>classMagnum_1_1DefaultFramebuffer.html</anchorfile>
      <anchor>a5b0bf462fb79b2289889dbec874c312a</anchor>
      <arglist>(const DefaultFramebuffer &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>DefaultFramebuffer &amp;</type>
      <name>operator=</name>
      <anchorfile>classMagnum_1_1DefaultFramebuffer.html</anchorfile>
      <anchor>a046c770ca9d0c6ee73fa7f0f2ffdee8d</anchor>
      <arglist>(DefaultFramebuffer &amp;&amp;other)=delete</arglist>
    </member>
    <member kind="function">
      <type>Status</type>
      <name>checkStatus</name>
      <anchorfile>classMagnum_1_1DefaultFramebuffer.html</anchorfile>
      <anchor>a3c59320e1e42d3de0e1c29ea44ef38bd</anchor>
      <arglist>(FramebufferTarget target)</arglist>
    </member>
    <member kind="function">
      <type>DefaultFramebuffer &amp;</type>
      <name>clearColor</name>
      <anchorfile>classMagnum_1_1DefaultFramebuffer.html</anchorfile>
      <anchor>a3357f845f87f0a94527c463a27359bf9</anchor>
      <arglist>(const Color4 &amp;color)</arglist>
    </member>
    <member kind="function">
      <type>DefaultFramebuffer &amp;</type>
      <name>clearColor</name>
      <anchorfile>classMagnum_1_1DefaultFramebuffer.html</anchorfile>
      <anchor>aca7957cd54fad1b7faaa552e4395ebb0</anchor>
      <arglist>(const Vector4i &amp;color)</arglist>
    </member>
    <member kind="function">
      <type>DefaultFramebuffer &amp;</type>
      <name>clearColor</name>
      <anchorfile>classMagnum_1_1DefaultFramebuffer.html</anchorfile>
      <anchor>abd814be3a58a9039e166f17f314b39ea</anchor>
      <arglist>(const Vector4ui &amp;color)</arglist>
    </member>
    <member kind="function">
      <type>DefaultFramebuffer &amp;</type>
      <name>mapForDraw</name>
      <anchorfile>classMagnum_1_1DefaultFramebuffer.html</anchorfile>
      <anchor>af8d32d6d9d699dc3c19031366e8d0030</anchor>
      <arglist>(std::initializer_list&lt; std::pair&lt; UnsignedInt, DrawAttachment &gt;&gt; attachments)</arglist>
    </member>
    <member kind="function">
      <type>DefaultFramebuffer &amp;</type>
      <name>mapForDraw</name>
      <anchorfile>classMagnum_1_1DefaultFramebuffer.html</anchorfile>
      <anchor>afb780daec43c6b20fc2ff7bb50754b29</anchor>
      <arglist>(DrawAttachment attachment)</arglist>
    </member>
    <member kind="function">
      <type>DefaultFramebuffer &amp;</type>
      <name>mapForRead</name>
      <anchorfile>classMagnum_1_1DefaultFramebuffer.html</anchorfile>
      <anchor>ac6e9a80383e266fe3df10007e07b30f5</anchor>
      <arglist>(ReadAttachment attachment)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>invalidate</name>
      <anchorfile>classMagnum_1_1DefaultFramebuffer.html</anchorfile>
      <anchor>a9cde00839c12446c0dd81472df78e5b6</anchor>
      <arglist>(std::initializer_list&lt; InvalidationAttachment &gt; attachments)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>invalidate</name>
      <anchorfile>classMagnum_1_1DefaultFramebuffer.html</anchorfile>
      <anchor>af7eb3331dfc37dca2d1e401183eb5d92</anchor>
      <arglist>(std::initializer_list&lt; InvalidationAttachment &gt; attachments, const Range2Di &amp;rectangle)</arglist>
    </member>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>classMagnum_1_1DefaultFramebuffer.html</anchorfile>
      <anchor>a67c85d774decf9566ce34f0861b88198</anchor>
      <arglist>(Debug &amp;debug, DefaultFramebuffer::Status value)</arglist>
    </member>
    <docanchor file="classMagnum_1_1DefaultFramebuffer">DefaultFramebuffer-usage</docanchor>
  </compound>
  <compound kind="struct">
    <name>Magnum::DimensionTraits</name>
    <filename>structMagnum_1_1DimensionTraits.html</filename>
    <templarg>dimensions</templarg>
    <templarg></templarg>
    <member kind="typedef">
      <type>U</type>
      <name>VectorType</name>
      <anchorfile>structMagnum_1_1DimensionTraits.html</anchorfile>
      <anchor>a23a2cdde6de036e7e5d584b21217cff7</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>U</type>
      <name>RangeType</name>
      <anchorfile>structMagnum_1_1DimensionTraits.html</anchorfile>
      <anchor>aa99219979a1ce96aefd76d149315db00</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>U</type>
      <name>MatrixType</name>
      <anchorfile>structMagnum_1_1DimensionTraits.html</anchorfile>
      <anchor>a0edd812ed308228bbff51ef5d0f47140</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Magnum::DynamicAttribute</name>
    <filename>classMagnum_1_1DynamicAttribute.html</filename>
    <member kind="enumeration">
      <type></type>
      <name>Kind</name>
      <anchorfile>classMagnum_1_1DynamicAttribute.html</anchorfile>
      <anchor>a9752762b2fe3edb42fc4f32eda228452</anchor>
      <arglist></arglist>
      <enumvalue file="classMagnum_1_1DynamicAttribute.html" anchor="a9752762b2fe3edb42fc4f32eda228452a8045a0a6c688b0635e3caccc408a1446">Generic</enumvalue>
      <enumvalue file="classMagnum_1_1DynamicAttribute.html" anchor="a9752762b2fe3edb42fc4f32eda228452a267efc5c07962805b8bd786ba04037cb">GenericNormalized</enumvalue>
      <enumvalue file="classMagnum_1_1DynamicAttribute.html" anchor="a9752762b2fe3edb42fc4f32eda228452a4ea94552a2bec56a29592359a1b6069e">Integral</enumvalue>
      <enumvalue file="classMagnum_1_1DynamicAttribute.html" anchor="a9752762b2fe3edb42fc4f32eda228452a8394f0347c184cf156ac5924dccb773b">Long</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>Components</name>
      <anchorfile>classMagnum_1_1DynamicAttribute.html</anchorfile>
      <anchor>aa30561aa6951396c0d7f3a18b0ab204c</anchor>
      <arglist></arglist>
      <enumvalue file="classMagnum_1_1DynamicAttribute.html" anchor="aa30561aa6951396c0d7f3a18b0ab204ca06c2cea18679d64399783748fa367bdd">One</enumvalue>
      <enumvalue file="classMagnum_1_1DynamicAttribute.html" anchor="aa30561aa6951396c0d7f3a18b0ab204caaada29daee1d64ed0fe907043855cb7e">Two</enumvalue>
      <enumvalue file="classMagnum_1_1DynamicAttribute.html" anchor="aa30561aa6951396c0d7f3a18b0ab204caca8a2087e5557e317599344687a57391">Three</enumvalue>
      <enumvalue file="classMagnum_1_1DynamicAttribute.html" anchor="aa30561aa6951396c0d7f3a18b0ab204ca981b8fcee42e1e726a67a2b9a98ea6e9">Four</enumvalue>
      <enumvalue file="classMagnum_1_1DynamicAttribute.html" anchor="aa30561aa6951396c0d7f3a18b0ab204ca5a1fe3c61c9e2fd6dbbc823589f6e697">BGRA</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>DataType</name>
      <anchorfile>classMagnum_1_1DynamicAttribute.html</anchorfile>
      <anchor>afccf68db1265164a98036b0c5672e433</anchor>
      <arglist></arglist>
      <enumvalue file="classMagnum_1_1DynamicAttribute.html" anchor="afccf68db1265164a98036b0c5672e433a8f0fb883eb5a52838534191513e365a2">UnsignedByte</enumvalue>
      <enumvalue file="classMagnum_1_1DynamicAttribute.html" anchor="afccf68db1265164a98036b0c5672e433aa245c3230debe5c956484ecc6fa93877">Byte</enumvalue>
      <enumvalue file="classMagnum_1_1DynamicAttribute.html" anchor="afccf68db1265164a98036b0c5672e433aeb51124277f3ec904a9af74d5de34e7b">UnsignedShort</enumvalue>
      <enumvalue file="classMagnum_1_1DynamicAttribute.html" anchor="afccf68db1265164a98036b0c5672e433a30bb747c98bccdd11b3f89e644c4d0ad">Short</enumvalue>
      <enumvalue file="classMagnum_1_1DynamicAttribute.html" anchor="afccf68db1265164a98036b0c5672e433ac93cff91b6b9a57fa32bbe1863150070">UnsignedInt</enumvalue>
      <enumvalue file="classMagnum_1_1DynamicAttribute.html" anchor="afccf68db1265164a98036b0c5672e433a1686a6c336b71b36d77354cea19a8b52">Int</enumvalue>
      <enumvalue file="classMagnum_1_1DynamicAttribute.html" anchor="afccf68db1265164a98036b0c5672e433ad35523d81610cee8b87cdac1853ad51f">HalfFloat</enumvalue>
      <enumvalue file="classMagnum_1_1DynamicAttribute.html" anchor="afccf68db1265164a98036b0c5672e433a22ae0e2b89e5e3d477f988cc36d3272b">Float</enumvalue>
      <enumvalue file="classMagnum_1_1DynamicAttribute.html" anchor="afccf68db1265164a98036b0c5672e433ad909d38d705ce75386dd86e611a82f5b">Double</enumvalue>
      <enumvalue file="classMagnum_1_1DynamicAttribute.html" anchor="afccf68db1265164a98036b0c5672e433a561473e5c75c919542b013eaaaff948d">UnsignedInt10f11f11fRev</enumvalue>
      <enumvalue file="classMagnum_1_1DynamicAttribute.html" anchor="afccf68db1265164a98036b0c5672e433af181e9b017ba4f6226f947aef3d86755">UnsignedInt2101010Rev</enumvalue>
      <enumvalue file="classMagnum_1_1DynamicAttribute.html" anchor="afccf68db1265164a98036b0c5672e433af9d37615ff3e365189e48ed5b88dbd46">Int2101010Rev</enumvalue>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>DynamicAttribute</name>
      <anchorfile>classMagnum_1_1DynamicAttribute.html</anchorfile>
      <anchor>a78d883e1b4b7e4670743c91e18f3edb2</anchor>
      <arglist>(Kind kind, UnsignedInt location, Components components, DataType dataType)</arglist>
    </member>
    <member kind="function">
      <type>constexpr Kind</type>
      <name>kind</name>
      <anchorfile>classMagnum_1_1DynamicAttribute.html</anchorfile>
      <anchor>aa8fdd76df54e1f94c2906e3a3d4a3bc9</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>constexpr UnsignedInt</type>
      <name>location</name>
      <anchorfile>classMagnum_1_1DynamicAttribute.html</anchorfile>
      <anchor>a63244d8e3109bebd68febaf5fc1c30b3</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>constexpr Components</type>
      <name>components</name>
      <anchorfile>classMagnum_1_1DynamicAttribute.html</anchorfile>
      <anchor>afc4ba035731ddd780acb24c621036fc9</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>constexpr DataType</type>
      <name>dataType</name>
      <anchorfile>classMagnum_1_1DynamicAttribute.html</anchorfile>
      <anchor>ae45551c351bc112e6fc897fb6aeff253</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Magnum::Extension</name>
    <filename>classMagnum_1_1Extension.html</filename>
    <member kind="function">
      <type>constexpr Version</type>
      <name>requiredVersion</name>
      <anchorfile>classMagnum_1_1Extension.html</anchorfile>
      <anchor>aa66258afb7d17c0a4fa7f87f7c6c6404</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>constexpr Version</type>
      <name>coreVersion</name>
      <anchorfile>classMagnum_1_1Extension.html</anchorfile>
      <anchor>a405629349d160b375a146c44eadb9732</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>constexpr const char *</type>
      <name>string</name>
      <anchorfile>classMagnum_1_1Extension.html</anchorfile>
      <anchor>a342333e992d4c12bbc01fb3ce568a201</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const std::vector&lt; Extension &gt; &amp;</type>
      <name>extensions</name>
      <anchorfile>classMagnum_1_1Extension.html</anchorfile>
      <anchor>a029382550d0aba2eeb0fb3e6e9a79871</anchor>
      <arglist>(Version version)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Magnum::Framebuffer</name>
    <filename>classMagnum_1_1Framebuffer.html</filename>
    <base>Magnum::AbstractFramebuffer</base>
    <base>Magnum::AbstractObject</base>
    <class kind="class">Magnum::Framebuffer::BufferAttachment</class>
    <class kind="class">Magnum::Framebuffer::ColorAttachment</class>
    <class kind="class">Magnum::Framebuffer::DrawAttachment</class>
    <class kind="class">Magnum::Framebuffer::InvalidationAttachment</class>
    <member kind="enumeration">
      <type></type>
      <name>Status</name>
      <anchorfile>classMagnum_1_1Framebuffer.html</anchorfile>
      <anchor>a978240a835d1ab34117bafac022b4658</anchor>
      <arglist></arglist>
      <enumvalue file="classMagnum_1_1Framebuffer.html" anchor="a978240a835d1ab34117bafac022b4658aae94f80b3ce82062a5dd7815daa04f9d">Complete</enumvalue>
      <enumvalue file="classMagnum_1_1Framebuffer.html" anchor="a978240a835d1ab34117bafac022b4658a4cfa0e5e63c190c989287bac001d00db">IncompleteAttachment</enumvalue>
      <enumvalue file="classMagnum_1_1Framebuffer.html" anchor="a978240a835d1ab34117bafac022b4658a45f00106794509bc4fd64e7500e322ed">IncompleteMissingAttachment</enumvalue>
      <enumvalue file="classMagnum_1_1Framebuffer.html" anchor="a978240a835d1ab34117bafac022b4658a68882063e371274bb04a919c18a7c12f">IncompleteDrawBuffer</enumvalue>
      <enumvalue file="classMagnum_1_1Framebuffer.html" anchor="a978240a835d1ab34117bafac022b4658aa86a2a2e8bcaa92a2f92fb28a94b0dc3">IncompleteReadBuffer</enumvalue>
      <enumvalue file="classMagnum_1_1Framebuffer.html" anchor="a978240a835d1ab34117bafac022b4658ab4080bdf74febf04d578ff105cce9d3f">Unsupported</enumvalue>
      <enumvalue file="classMagnum_1_1Framebuffer.html" anchor="a978240a835d1ab34117bafac022b4658a3a68d544d09cb9463d21292993997d93">IncompleteMultisample</enumvalue>
      <enumvalue file="classMagnum_1_1Framebuffer.html" anchor="a978240a835d1ab34117bafac022b4658ac367a641bfc569303493ba6d4f18bcee">IncompleteLayerTargets</enumvalue>
    </member>
    <member kind="function">
      <type></type>
      <name>Framebuffer</name>
      <anchorfile>classMagnum_1_1Framebuffer.html</anchorfile>
      <anchor>ad44ce6788f9a7f77aa0b8aa174543b3f</anchor>
      <arglist>(const Range2Di &amp;viewport)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Framebuffer</name>
      <anchorfile>classMagnum_1_1Framebuffer.html</anchorfile>
      <anchor>a4a69a66b41f19d54246304d5ba32e419</anchor>
      <arglist>(NoCreateT) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Framebuffer</name>
      <anchorfile>classMagnum_1_1Framebuffer.html</anchorfile>
      <anchor>a5b10e578eba22e8db5ad111fad7b301c</anchor>
      <arglist>(const Framebuffer &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Framebuffer</name>
      <anchorfile>classMagnum_1_1Framebuffer.html</anchorfile>
      <anchor>aca9a72bed052aeb8928398110a13dbfc</anchor>
      <arglist>(Framebuffer &amp;&amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~Framebuffer</name>
      <anchorfile>classMagnum_1_1Framebuffer.html</anchorfile>
      <anchor>a7787d13fcf714985453c24618719eaec</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Framebuffer &amp;</type>
      <name>operator=</name>
      <anchorfile>classMagnum_1_1Framebuffer.html</anchorfile>
      <anchor>af60533d1a4ccff0365983f04683b4fbe</anchor>
      <arglist>(const Framebuffer &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>Framebuffer &amp;</type>
      <name>operator=</name>
      <anchorfile>classMagnum_1_1Framebuffer.html</anchorfile>
      <anchor>a7a9de05ba7742b8780eb95ce3752f55f</anchor>
      <arglist>(Framebuffer &amp;&amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type>GLuint</type>
      <name>id</name>
      <anchorfile>classMagnum_1_1Framebuffer.html</anchorfile>
      <anchor>a149ea0b37c57b7e5790ef25f2c9884eb</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>GLuint</type>
      <name>release</name>
      <anchorfile>classMagnum_1_1Framebuffer.html</anchorfile>
      <anchor>a4bf891b5e81614a8433b307da9a777b2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>label</name>
      <anchorfile>classMagnum_1_1Framebuffer.html</anchorfile>
      <anchor>a9058db1bc79a679ab827f01a413507c7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Framebuffer &amp;</type>
      <name>setLabel</name>
      <anchorfile>classMagnum_1_1Framebuffer.html</anchorfile>
      <anchor>aea029674d5f0df81f772e7e9e8ce8550</anchor>
      <arglist>(const std::string &amp;label)</arglist>
    </member>
    <member kind="function">
      <type>Framebuffer &amp;</type>
      <name>setLabel</name>
      <anchorfile>classMagnum_1_1Framebuffer.html</anchorfile>
      <anchor>a178edadcb6d22c0d1bdda2db63f91c40</anchor>
      <arglist>(const char(&amp;label)[size])</arglist>
    </member>
    <member kind="function">
      <type>Status</type>
      <name>checkStatus</name>
      <anchorfile>classMagnum_1_1Framebuffer.html</anchorfile>
      <anchor>a443640139354aed25651eb19c9fb6854</anchor>
      <arglist>(FramebufferTarget target)</arglist>
    </member>
    <member kind="function">
      <type>Framebuffer &amp;</type>
      <name>clearColor</name>
      <anchorfile>classMagnum_1_1Framebuffer.html</anchorfile>
      <anchor>a9d6a1b36380dded3c030fb94fadd716a</anchor>
      <arglist>(Int attachment, const Color4 &amp;color)</arglist>
    </member>
    <member kind="function">
      <type>Framebuffer &amp;</type>
      <name>clearColor</name>
      <anchorfile>classMagnum_1_1Framebuffer.html</anchorfile>
      <anchor>a3c7d26fded6f3252e2c56559705fbb45</anchor>
      <arglist>(Int attachment, const Vector4i &amp;color)</arglist>
    </member>
    <member kind="function">
      <type>Framebuffer &amp;</type>
      <name>clearColor</name>
      <anchorfile>classMagnum_1_1Framebuffer.html</anchorfile>
      <anchor>a190a318e7a4587828590cd6e521e8e3a</anchor>
      <arglist>(Int attachment, const Vector4ui &amp;color)</arglist>
    </member>
    <member kind="function">
      <type>Framebuffer &amp;</type>
      <name>mapForDraw</name>
      <anchorfile>classMagnum_1_1Framebuffer.html</anchorfile>
      <anchor>a311c2b223ba76b8569a8426fac1baf37</anchor>
      <arglist>(std::initializer_list&lt; std::pair&lt; UnsignedInt, DrawAttachment &gt;&gt; attachments)</arglist>
    </member>
    <member kind="function">
      <type>Framebuffer &amp;</type>
      <name>mapForDraw</name>
      <anchorfile>classMagnum_1_1Framebuffer.html</anchorfile>
      <anchor>af9948f421f3f945ec7b196d3d67d66ef</anchor>
      <arglist>(DrawAttachment attachment)</arglist>
    </member>
    <member kind="function">
      <type>Framebuffer &amp;</type>
      <name>mapForRead</name>
      <anchorfile>classMagnum_1_1Framebuffer.html</anchorfile>
      <anchor>a7bac625814d353a4ad81f016e6990561</anchor>
      <arglist>(ColorAttachment attachment)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>invalidate</name>
      <anchorfile>classMagnum_1_1Framebuffer.html</anchorfile>
      <anchor>a25d30652d0c6f29f6ccfcd47fa22bfc1</anchor>
      <arglist>(std::initializer_list&lt; InvalidationAttachment &gt; attachments)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>invalidate</name>
      <anchorfile>classMagnum_1_1Framebuffer.html</anchorfile>
      <anchor>a61d46136d24682af5d1126c190457909</anchor>
      <arglist>(std::initializer_list&lt; InvalidationAttachment &gt; attachments, const Range2Di &amp;rectangle)</arglist>
    </member>
    <member kind="function">
      <type>Framebuffer &amp;</type>
      <name>attachRenderbuffer</name>
      <anchorfile>classMagnum_1_1Framebuffer.html</anchorfile>
      <anchor>affd1094bd4ca0e64be60e6e10c85c975</anchor>
      <arglist>(BufferAttachment attachment, Renderbuffer &amp;renderbuffer)</arglist>
    </member>
    <member kind="function">
      <type>Framebuffer &amp;</type>
      <name>attachTexture</name>
      <anchorfile>classMagnum_1_1Framebuffer.html</anchorfile>
      <anchor>a91ad60556976d831185d0cea51e19355</anchor>
      <arglist>(BufferAttachment attachment, Texture1D &amp;texture, Int level)</arglist>
    </member>
    <member kind="function">
      <type>Framebuffer &amp;</type>
      <name>attachTexture</name>
      <anchorfile>classMagnum_1_1Framebuffer.html</anchorfile>
      <anchor>a3b283eccf9a327c63248063b8bee9df4</anchor>
      <arglist>(BufferAttachment attachment, Texture2D &amp;texture, Int level)</arglist>
    </member>
    <member kind="function">
      <type>Framebuffer &amp;</type>
      <name>attachTexture</name>
      <anchorfile>classMagnum_1_1Framebuffer.html</anchorfile>
      <anchor>a9e5e8f2b17ec1f741fe4157710bc766f</anchor>
      <arglist>(BufferAttachment attachment, RectangleTexture &amp;texture)</arglist>
    </member>
    <member kind="function">
      <type>Framebuffer &amp;</type>
      <name>attachTexture</name>
      <anchorfile>classMagnum_1_1Framebuffer.html</anchorfile>
      <anchor>abba91a83ac9b74f9e4d6c8da5b40ee6d</anchor>
      <arglist>(BufferAttachment attachment, MultisampleTexture2D &amp;texture)</arglist>
    </member>
    <member kind="function">
      <type>Framebuffer &amp;</type>
      <name>attachCubeMapTexture</name>
      <anchorfile>classMagnum_1_1Framebuffer.html</anchorfile>
      <anchor>a19b4ebe39e9a597fa17394bfdaba2567</anchor>
      <arglist>(BufferAttachment attachment, CubeMapTexture &amp;texture, CubeMapCoordinate coordinate, Int level)</arglist>
    </member>
    <member kind="function">
      <type>Framebuffer &amp;</type>
      <name>attachTextureLayer</name>
      <anchorfile>classMagnum_1_1Framebuffer.html</anchorfile>
      <anchor>a9f8304f79799eb2edc3db718fe240e79</anchor>
      <arglist>(BufferAttachment attachment, Texture3D &amp;texture, Int level, Int layer)</arglist>
    </member>
    <member kind="function">
      <type>Framebuffer &amp;</type>
      <name>attachTextureLayer</name>
      <anchorfile>classMagnum_1_1Framebuffer.html</anchorfile>
      <anchor>a52e785567813ec38126b61bff9e01355</anchor>
      <arglist>(BufferAttachment attachment, Texture1DArray &amp;texture, Int level, Int layer)</arglist>
    </member>
    <member kind="function">
      <type>Framebuffer &amp;</type>
      <name>attachTextureLayer</name>
      <anchorfile>classMagnum_1_1Framebuffer.html</anchorfile>
      <anchor>aa9cf8cb2579eafe8a775fcdbb1548d8f</anchor>
      <arglist>(BufferAttachment attachment, Texture2DArray &amp;texture, Int level, Int layer)</arglist>
    </member>
    <member kind="function">
      <type>Framebuffer &amp;</type>
      <name>attachTextureLayer</name>
      <anchorfile>classMagnum_1_1Framebuffer.html</anchorfile>
      <anchor>a07bc0af1ec7b30c5de0742bc2306c164</anchor>
      <arglist>(BufferAttachment attachment, CubeMapTextureArray &amp;texture, Int level, Int layer)</arglist>
    </member>
    <member kind="function">
      <type>Framebuffer &amp;</type>
      <name>attachTextureLayer</name>
      <anchorfile>classMagnum_1_1Framebuffer.html</anchorfile>
      <anchor>a60e80ca2130760914c9327e40fc765e0</anchor>
      <arglist>(BufferAttachment attachment, MultisampleTexture2DArray &amp;texture, Int layer)</arglist>
    </member>
    <member kind="function">
      <type>Framebuffer &amp;</type>
      <name>attachLayeredTexture</name>
      <anchorfile>classMagnum_1_1Framebuffer.html</anchorfile>
      <anchor>a306eba7f7d981424a2bfb567acd74ffe</anchor>
      <arglist>(BufferAttachment attachment, Texture3D &amp;texture, Int level)</arglist>
    </member>
    <member kind="function">
      <type>Framebuffer &amp;</type>
      <name>attachLayeredTexture</name>
      <anchorfile>classMagnum_1_1Framebuffer.html</anchorfile>
      <anchor>a38278bfdb3c8aa81a9cea349e975fd8e</anchor>
      <arglist>(BufferAttachment attachment, Texture1DArray &amp;texture, Int level)</arglist>
    </member>
    <member kind="function">
      <type>Framebuffer &amp;</type>
      <name>attachLayeredTexture</name>
      <anchorfile>classMagnum_1_1Framebuffer.html</anchorfile>
      <anchor>a7f5e02a50671bc9894b96d1a45e39a70</anchor>
      <arglist>(BufferAttachment attachment, Texture2DArray &amp;texture, Int level)</arglist>
    </member>
    <member kind="function">
      <type>Framebuffer &amp;</type>
      <name>attachLayeredTexture</name>
      <anchorfile>classMagnum_1_1Framebuffer.html</anchorfile>
      <anchor>acde6351e58a9bab41917085f7e2cb71a</anchor>
      <arglist>(BufferAttachment attachment, CubeMapTexture &amp;texture, Int level)</arglist>
    </member>
    <member kind="function">
      <type>Framebuffer &amp;</type>
      <name>attachLayeredTexture</name>
      <anchorfile>classMagnum_1_1Framebuffer.html</anchorfile>
      <anchor>aa64dbc334a1bdc7fdaac0e3e6554e8f9</anchor>
      <arglist>(BufferAttachment attachment, CubeMapTextureArray &amp;texture, Int level)</arglist>
    </member>
    <member kind="function">
      <type>Framebuffer &amp;</type>
      <name>attachLayeredTexture</name>
      <anchorfile>classMagnum_1_1Framebuffer.html</anchorfile>
      <anchor>a09f19ff424733b51c68c35806a504ec7</anchor>
      <arglist>(BufferAttachment attachment, MultisampleTexture2DArray &amp;texture)</arglist>
    </member>
    <member kind="function">
      <type>Framebuffer &amp;</type>
      <name>detach</name>
      <anchorfile>classMagnum_1_1Framebuffer.html</anchorfile>
      <anchor>a06062c95eeecec6db4bb92fb23e358c7</anchor>
      <arglist>(BufferAttachment attachment)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Int</type>
      <name>maxColorAttachments</name>
      <anchorfile>classMagnum_1_1Framebuffer.html</anchorfile>
      <anchor>a24d8d65e949b56563cd544953c040647</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Framebuffer</type>
      <name>wrap</name>
      <anchorfile>classMagnum_1_1Framebuffer.html</anchorfile>
      <anchor>a7e25010147fba25d7f52d645421f4a0f</anchor>
      <arglist>(GLuint id, const Range2Di &amp;viewport, ObjectFlags flags={})</arglist>
    </member>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>classMagnum_1_1Framebuffer.html</anchorfile>
      <anchor>a969df0ccdd40303d80c983c3eda61ef8</anchor>
      <arglist>(Debug &amp;debug, Framebuffer::Status value)</arglist>
    </member>
    <docanchor file="classMagnum_1_1Framebuffer" title="Example usage">Framebuffer-usage</docanchor>
  </compound>
  <compound kind="class">
    <name>Magnum::Framebuffer::BufferAttachment</name>
    <filename>classMagnum_1_1Framebuffer_1_1BufferAttachment.html</filename>
    <member kind="function">
      <type>constexpr</type>
      <name>BufferAttachment</name>
      <anchorfile>classMagnum_1_1Framebuffer_1_1BufferAttachment.html</anchorfile>
      <anchor>a116beceff8d5d465da22ac4197992f67</anchor>
      <arglist>(Framebuffer::ColorAttachment attachment)</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const BufferAttachment</type>
      <name>Depth</name>
      <anchorfile>classMagnum_1_1Framebuffer_1_1BufferAttachment.html</anchorfile>
      <anchor>ab88bd24b6fbd39824d4e3e26506dfc5c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const BufferAttachment</type>
      <name>Stencil</name>
      <anchorfile>classMagnum_1_1Framebuffer_1_1BufferAttachment.html</anchorfile>
      <anchor>ace12be72be819ac1e2a7aafd69b8c81b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const BufferAttachment</type>
      <name>DepthStencil</name>
      <anchorfile>classMagnum_1_1Framebuffer_1_1BufferAttachment.html</anchorfile>
      <anchor>a4d9bb3a050a79d96c4b6cd50a4ce9eec</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Magnum::Framebuffer::ColorAttachment</name>
    <filename>classMagnum_1_1Framebuffer_1_1ColorAttachment.html</filename>
    <member kind="function">
      <type>constexpr</type>
      <name>ColorAttachment</name>
      <anchorfile>classMagnum_1_1Framebuffer_1_1ColorAttachment.html</anchorfile>
      <anchor>a77f1b6d3a01ad141b0609380c5dc7361</anchor>
      <arglist>(UnsignedInt id)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Magnum::Framebuffer::DrawAttachment</name>
    <filename>classMagnum_1_1Framebuffer_1_1DrawAttachment.html</filename>
    <member kind="function">
      <type>constexpr</type>
      <name>DrawAttachment</name>
      <anchorfile>classMagnum_1_1Framebuffer_1_1DrawAttachment.html</anchorfile>
      <anchor>a3657060ab3309b25e3e4ba0d4826dd64</anchor>
      <arglist>(Framebuffer::ColorAttachment attachment)</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const DrawAttachment</type>
      <name>None</name>
      <anchorfile>classMagnum_1_1Framebuffer_1_1DrawAttachment.html</anchorfile>
      <anchor>aae27094655669b6cb8b9db95b14313c9</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Magnum::Framebuffer::InvalidationAttachment</name>
    <filename>classMagnum_1_1Framebuffer_1_1InvalidationAttachment.html</filename>
    <member kind="function">
      <type>constexpr</type>
      <name>InvalidationAttachment</name>
      <anchorfile>classMagnum_1_1Framebuffer_1_1InvalidationAttachment.html</anchorfile>
      <anchor>a0544d0d4e99b50ce2623620cdef2caf5</anchor>
      <arglist>(Framebuffer::ColorAttachment attachment)</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const InvalidationAttachment</type>
      <name>Depth</name>
      <anchorfile>classMagnum_1_1Framebuffer_1_1InvalidationAttachment.html</anchorfile>
      <anchor>ab8b1397cef0436e7a763196c6722d5ac</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const InvalidationAttachment</type>
      <name>Stencil</name>
      <anchorfile>classMagnum_1_1Framebuffer_1_1InvalidationAttachment.html</anchorfile>
      <anchor>ab173634d684fe6fdc5bec9d8575a4a31</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Magnum::Image</name>
    <filename>classMagnum_1_1Image.html</filename>
    <templarg>dimensions</templarg>
    <member kind="enumvalue">
      <name>Dimensions</name>
      <anchorfile>classMagnum_1_1Image.html</anchorfile>
      <anchor>a845d3ffef940f9302c8b70d9baa9f3baa026b7b79d571822eededa65f67114638</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Dimensions</name>
      <anchorfile>classMagnum_1_1Image.html</anchorfile>
      <anchor>a845d3ffef940f9302c8b70d9baa9f3baa026b7b79d571822eededa65f67114638</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Image</name>
      <anchorfile>classMagnum_1_1Image.html</anchorfile>
      <anchor>a27e8bb0fa540256e9b5cb4ae5c2daf52</anchor>
      <arglist>(PixelStorage storage, PixelFormat format, PixelType type, const VectorTypeFor&lt; dimensions, Int &gt; &amp;size, Containers::Array&lt; char &gt; &amp;&amp;data) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Image</name>
      <anchorfile>classMagnum_1_1Image.html</anchorfile>
      <anchor>a8655ba2d0cd96dc9d0cbad78116eddc6</anchor>
      <arglist>(PixelFormat format, PixelType type, const VectorTypeFor&lt; dimensions, Int &gt; &amp;size, Containers::Array&lt; char &gt; &amp;&amp;data) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Image</name>
      <anchorfile>classMagnum_1_1Image.html</anchorfile>
      <anchor>a84bd155027f72e3e810871e54ffbe1ef</anchor>
      <arglist>(PixelFormat format, PixelType type, const VectorTypeFor&lt; dimensions, Int &gt; &amp;size, void *data) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Image</name>
      <anchorfile>classMagnum_1_1Image.html</anchorfile>
      <anchor>af085b984a38af410b9ec62262e2a6f6e</anchor>
      <arglist>(PixelStorage storage, PixelFormat format, PixelType type) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Image</name>
      <anchorfile>classMagnum_1_1Image.html</anchorfile>
      <anchor>adea7bea8419fb92d763536ba725b18fe</anchor>
      <arglist>(PixelFormat format, PixelType type) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Image</name>
      <anchorfile>classMagnum_1_1Image.html</anchorfile>
      <anchor>a492707710297377a106202e54f365938</anchor>
      <arglist>(const Image&lt; dimensions &gt; &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Image</name>
      <anchorfile>classMagnum_1_1Image.html</anchorfile>
      <anchor>a5fdfd4afc4e3a6e91ac42ce5b623b5e8</anchor>
      <arglist>(Image&lt; dimensions &gt; &amp;&amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type>Image&lt; dimensions &gt; &amp;</type>
      <name>operator=</name>
      <anchorfile>classMagnum_1_1Image.html</anchorfile>
      <anchor>a3a131f7c0c1a9cbf9e55b0207c5097ec</anchor>
      <arglist>(const Image&lt; dimensions &gt; &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>Image&lt; dimensions &gt; &amp;</type>
      <name>operator=</name>
      <anchorfile>classMagnum_1_1Image.html</anchorfile>
      <anchor>a92e4d762fb2256a269ab7141db7838bd</anchor>
      <arglist>(Image&lt; dimensions &gt; &amp;&amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator ImageView&lt; dimensions &gt;</name>
      <anchorfile>classMagnum_1_1Image.html</anchorfile>
      <anchor>a5a42f14b341c4476129b9220ccfb55fa</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>PixelStorage</type>
      <name>storage</name>
      <anchorfile>classMagnum_1_1Image.html</anchorfile>
      <anchor>aff6b872fb8bb2ffd046d33747097b1d2</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>PixelFormat</type>
      <name>format</name>
      <anchorfile>classMagnum_1_1Image.html</anchorfile>
      <anchor>ab5c7fefd26fa1d1a2c5364d1dbcb8044</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>PixelType</type>
      <name>type</name>
      <anchorfile>classMagnum_1_1Image.html</anchorfile>
      <anchor>a43f45ea2a06e9f9b5c435eff9bdbc070</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>std::size_t</type>
      <name>pixelSize</name>
      <anchorfile>classMagnum_1_1Image.html</anchorfile>
      <anchor>a367a922f0d8054fdcca6bcd71ebb0e4e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>VectorTypeFor&lt; dimensions, Int &gt;</type>
      <name>size</name>
      <anchorfile>classMagnum_1_1Image.html</anchorfile>
      <anchor>a29af075331f89388eb6bb40a67460468</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>std::tuple&lt; VectorTypeFor&lt; dimensions, std::size_t &gt;, VectorTypeFor&lt; dimensions, std::size_t &gt;, std::size_t &gt;</type>
      <name>dataProperties</name>
      <anchorfile>classMagnum_1_1Image.html</anchorfile>
      <anchor>af64f01195f1da82cda13447b3f19e38f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Containers::ArrayView&lt; char &gt;</type>
      <name>data</name>
      <anchorfile>classMagnum_1_1Image.html</anchorfile>
      <anchor>a0caf75a98f669aa41c811c1b30af0b26</anchor>
      <arglist>()&amp;</arglist>
    </member>
    <member kind="function">
      <type>Containers::ArrayView&lt; char &gt;</type>
      <name>data</name>
      <anchorfile>classMagnum_1_1Image.html</anchorfile>
      <anchor>a3e523a23f8df9739c8ac2a80e237c4b2</anchor>
      <arglist>()&amp;&amp;=delete</arglist>
    </member>
    <member kind="function">
      <type>Containers::ArrayView&lt; const char &gt;</type>
      <name>data</name>
      <anchorfile>classMagnum_1_1Image.html</anchorfile>
      <anchor>af96a83da73e237019ac1355d2f1dd73f</anchor>
      <arglist>() const  &amp;</arglist>
    </member>
    <member kind="function">
      <type>Containers::ArrayView&lt; const char &gt;</type>
      <name>data</name>
      <anchorfile>classMagnum_1_1Image.html</anchorfile>
      <anchor>a2449b8a3f61917df541e4df632696a8d</anchor>
      <arglist>() const  &amp;&amp;=delete</arglist>
    </member>
    <member kind="function">
      <type>T *</type>
      <name>data</name>
      <anchorfile>classMagnum_1_1Image.html</anchorfile>
      <anchor>a0e2fd4c4389ae9c10ff5bd9eed3ba20a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const T *</type>
      <name>data</name>
      <anchorfile>classMagnum_1_1Image.html</anchorfile>
      <anchor>a99d53d464d18d3735c5aea63d67383a8</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setData</name>
      <anchorfile>classMagnum_1_1Image.html</anchorfile>
      <anchor>a0bc126dc84a7b08bd2a12ea22cad0ac8</anchor>
      <arglist>(PixelStorage storage, PixelFormat format, PixelType type, const VectorTypeFor&lt; dimensions, Int &gt; &amp;size, Containers::Array&lt; char &gt; &amp;&amp;data)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setData</name>
      <anchorfile>classMagnum_1_1Image.html</anchorfile>
      <anchor>a78fa8270ba74184d8882446d68a4c3d0</anchor>
      <arglist>(PixelFormat format, PixelType type, const VectorTypeFor&lt; dimensions, Int &gt; &amp;size, Containers::Array&lt; char &gt; &amp;&amp;data)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setData</name>
      <anchorfile>classMagnum_1_1Image.html</anchorfile>
      <anchor>a0d5a00ba5c9b004180cef28b7eb7515e</anchor>
      <arglist>(PixelFormat format, PixelType type, const VectorTypeFor&lt; dimensions, Int &gt; &amp;size, void *data)</arglist>
    </member>
    <member kind="function">
      <type>Containers::Array&lt; char &gt;</type>
      <name>release</name>
      <anchorfile>classMagnum_1_1Image.html</anchorfile>
      <anchor>ad3bdde891ad5f92d312c40b9151f8599</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Magnum::ImageView</name>
    <filename>classMagnum_1_1ImageView.html</filename>
    <templarg>dimensions</templarg>
    <member kind="enumvalue">
      <name>Dimensions</name>
      <anchorfile>classMagnum_1_1ImageView.html</anchorfile>
      <anchor>a2f4e0990b8a280d18b3e0260ce9069d9a66fad4ae48d49f49716637edddd184f8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Dimensions</name>
      <anchorfile>classMagnum_1_1ImageView.html</anchorfile>
      <anchor>a2f4e0990b8a280d18b3e0260ce9069d9a66fad4ae48d49f49716637edddd184f8</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ImageView</name>
      <anchorfile>classMagnum_1_1ImageView.html</anchorfile>
      <anchor>afe2fa72c5d20824aaf6b828809259d4a</anchor>
      <arglist>(PixelStorage storage, PixelFormat format, PixelType type, const VectorTypeFor&lt; dimensions, Int &gt; &amp;size, Containers::ArrayView&lt; const void &gt; data) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ImageView</name>
      <anchorfile>classMagnum_1_1ImageView.html</anchorfile>
      <anchor>a9ba997fa0489c088f97583574bf1146e</anchor>
      <arglist>(PixelFormat format, PixelType type, const VectorTypeFor&lt; dimensions, Int &gt; &amp;size, Containers::ArrayView&lt; const void &gt; data) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ImageView</name>
      <anchorfile>classMagnum_1_1ImageView.html</anchorfile>
      <anchor>ae1a0416d1c55be4e2a759402d64af4e3</anchor>
      <arglist>(PixelFormat format, PixelType type, const VectorTypeFor&lt; dimensions, Int &gt; &amp;size, const void *data) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>ImageView</name>
      <anchorfile>classMagnum_1_1ImageView.html</anchorfile>
      <anchor>ad20c3ce1503ed25ee1f9c8fe84da4e0a</anchor>
      <arglist>(PixelStorage storage, PixelFormat format, PixelType type, const VectorTypeFor&lt; dimensions, Int &gt; &amp;size) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>ImageView</name>
      <anchorfile>classMagnum_1_1ImageView.html</anchorfile>
      <anchor>a0e271c56f95eb6c57608ea0c1d8b8751</anchor>
      <arglist>(PixelFormat format, PixelType type, const VectorTypeFor&lt; dimensions, Int &gt; &amp;size) noexcept</arglist>
    </member>
    <member kind="function">
      <type>PixelStorage</type>
      <name>storage</name>
      <anchorfile>classMagnum_1_1ImageView.html</anchorfile>
      <anchor>a12a5633bf4ea98528064da666a9f9fa0</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>PixelFormat</type>
      <name>format</name>
      <anchorfile>classMagnum_1_1ImageView.html</anchorfile>
      <anchor>a9b79a8b958f67ad899c15392db3a5a32</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>PixelType</type>
      <name>type</name>
      <anchorfile>classMagnum_1_1ImageView.html</anchorfile>
      <anchor>a2cc5ce7bcc967a495ea8949caeb8e4ed</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>std::size_t</type>
      <name>pixelSize</name>
      <anchorfile>classMagnum_1_1ImageView.html</anchorfile>
      <anchor>a608148408c30626cfcbf899b59d95ed3</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>constexpr VectorTypeFor&lt; dimensions, Int &gt;</type>
      <name>size</name>
      <anchorfile>classMagnum_1_1ImageView.html</anchorfile>
      <anchor>ab1c607c29821d9a443e786ea9fe5dce8</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>std::tuple&lt; VectorTypeFor&lt; dimensions, std::size_t &gt;, VectorTypeFor&lt; dimensions, std::size_t &gt;, std::size_t &gt;</type>
      <name>dataProperties</name>
      <anchorfile>classMagnum_1_1ImageView.html</anchorfile>
      <anchor>af8eeba3f15af45d90fea132439db74ce</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>constexpr Containers::ArrayView&lt; const char &gt;</type>
      <name>data</name>
      <anchorfile>classMagnum_1_1ImageView.html</anchorfile>
      <anchor>a1aba9344e36ddaa0a5568ee77801a52b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const T *</type>
      <name>data</name>
      <anchorfile>classMagnum_1_1ImageView.html</anchorfile>
      <anchor>a52c401973f670d94953fc51c6402f0ce</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setData</name>
      <anchorfile>classMagnum_1_1ImageView.html</anchorfile>
      <anchor>ac8042e1f428aa0f73880900000af219e</anchor>
      <arglist>(Containers::ArrayView&lt; const void &gt; data)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setData</name>
      <anchorfile>classMagnum_1_1ImageView.html</anchorfile>
      <anchor>acf62e731c32f24f48637c6358102f881</anchor>
      <arglist>(const void *data)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Magnum::Math::Bezier</name>
    <filename>classMagnum_1_1Math_1_1Bezier.html</filename>
    <templarg>order</templarg>
    <templarg>dimensions</templarg>
    <templarg></templarg>
    <member kind="enumvalue">
      <name>Order</name>
      <anchorfile>classMagnum_1_1Math_1_1Bezier.html</anchorfile>
      <anchor>a63cbee7d021bfdd66d2e53e394a051d6a445d6fec9761733d428807f35142e5e7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Dimensions</name>
      <anchorfile>classMagnum_1_1Math_1_1Bezier.html</anchorfile>
      <anchor>a63cbee7d021bfdd66d2e53e394a051d6a14c6baf2b69659aec19dbf3f7ba62e43</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>T</type>
      <name>Type</name>
      <anchorfile>classMagnum_1_1Math_1_1Bezier.html</anchorfile>
      <anchor>ae25ec557d5dee6e517e4db5bd43553cd</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Order</name>
      <anchorfile>classMagnum_1_1Math_1_1Bezier.html</anchorfile>
      <anchor>a63cbee7d021bfdd66d2e53e394a051d6a445d6fec9761733d428807f35142e5e7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Dimensions</name>
      <anchorfile>classMagnum_1_1Math_1_1Bezier.html</anchorfile>
      <anchor>a63cbee7d021bfdd66d2e53e394a051d6a14c6baf2b69659aec19dbf3f7ba62e43</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Bezier</name>
      <anchorfile>classMagnum_1_1Math_1_1Bezier.html</anchorfile>
      <anchor>aee59f00bfe4b6a84c1ce22d2cdbb15ee</anchor>
      <arglist>(ZeroInitT=ZeroInit) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Bezier</name>
      <anchorfile>classMagnum_1_1Math_1_1Bezier.html</anchorfile>
      <anchor>a1a8f0f47a9f4756939df843c97bba05e</anchor>
      <arglist>(NoInitT) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Bezier</name>
      <anchorfile>classMagnum_1_1Math_1_1Bezier.html</anchorfile>
      <anchor>a10f568e3316f2581dc07e1c7b1d4127b</anchor>
      <arglist>(const Vector&lt; dimensions, T &gt; &amp;first, U...next) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Bezier</name>
      <anchorfile>classMagnum_1_1Math_1_1Bezier.html</anchorfile>
      <anchor>ae06e500bbd585b9b26bdfaf70e5fe47d</anchor>
      <arglist>(const Bezier&lt; order, dimensions, U &gt; &amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Bezier</name>
      <anchorfile>classMagnum_1_1Math_1_1Bezier.html</anchorfile>
      <anchor>a97bddf2ed032b0991ce13ac64221f5a6</anchor>
      <arglist>(const U &amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>operator U</name>
      <anchorfile>classMagnum_1_1Math_1_1Bezier.html</anchorfile>
      <anchor>acc921e1f4e7b3759e4c71b736e4ad520</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classMagnum_1_1Math_1_1Bezier.html</anchorfile>
      <anchor>ae38115418e33dae882e16f6b993295f0</anchor>
      <arglist>(const Bezier&lt; order, dimensions, T &gt; &amp;other) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>classMagnum_1_1Math_1_1Bezier.html</anchorfile>
      <anchor>a4984bd8822165515b10ae9c5dea3b45c</anchor>
      <arglist>(const Bezier&lt; order, dimensions, T &gt; &amp;other) const </arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; dimensions, T &gt; &amp;</type>
      <name>operator[]</name>
      <anchorfile>classMagnum_1_1Math_1_1Bezier.html</anchorfile>
      <anchor>affad9a82f9b5fbbf53bf7836b7b1f2aa</anchor>
      <arglist>(std::size_t i)</arglist>
    </member>
    <member kind="function">
      <type>constexpr const Vector&lt; dimensions, T &gt; &amp;</type>
      <name>operator[]</name>
      <anchorfile>classMagnum_1_1Math_1_1Bezier.html</anchorfile>
      <anchor>a22b1eb1347e91917462601edd9fee70c</anchor>
      <arglist>(std::size_t i) const </arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; dimensions, T &gt;</type>
      <name>value</name>
      <anchorfile>classMagnum_1_1Math_1_1Bezier.html</anchorfile>
      <anchor>acb89aabcd530f0816b35387f8576f4f3</anchor>
      <arglist>(Float t) const </arglist>
    </member>
    <member kind="function">
      <type>std::pair&lt; Bezier&lt; order, dimensions, T &gt;, Bezier&lt; order, dimensions, T &gt; &gt;</type>
      <name>subdivide</name>
      <anchorfile>classMagnum_1_1Math_1_1Bezier.html</anchorfile>
      <anchor>ae6960a715addc33f0622140d069b0b3d</anchor>
      <arglist>(Float t) const </arglist>
    </member>
    <member kind="function">
      <type>Corrade::Utility::Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>classMagnum_1_1Math_1_1Bezier.html</anchorfile>
      <anchor>ab1001276d3083c0d6d035c9e343c1c3c</anchor>
      <arglist>(Corrade::Utility::Debug &amp;debug, const Bezier&lt; order, dimensions, T &gt; &amp;value)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Magnum::Math::BoolVector</name>
    <filename>classMagnum_1_1Math_1_1BoolVector.html</filename>
    <templarg>size</templarg>
    <member kind="enumvalue">
      <name>Size</name>
      <anchorfile>classMagnum_1_1Math_1_1BoolVector.html</anchorfile>
      <anchor>aecd1409f0d8d2bee34f840a6f45c8a64a1687d1927ae165da75b463cbb593afaa</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DataSize</name>
      <anchorfile>classMagnum_1_1Math_1_1BoolVector.html</anchorfile>
      <anchor>aecd1409f0d8d2bee34f840a6f45c8a64a1a7ca87098d157b8f6e5f874301ccad4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Size</name>
      <anchorfile>classMagnum_1_1Math_1_1BoolVector.html</anchorfile>
      <anchor>aecd1409f0d8d2bee34f840a6f45c8a64a1687d1927ae165da75b463cbb593afaa</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DataSize</name>
      <anchorfile>classMagnum_1_1Math_1_1BoolVector.html</anchorfile>
      <anchor>aecd1409f0d8d2bee34f840a6f45c8a64a1a7ca87098d157b8f6e5f874301ccad4</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>BoolVector</name>
      <anchorfile>classMagnum_1_1Math_1_1BoolVector.html</anchorfile>
      <anchor>a8f89dac5226c1e2fe8caff1cdbb6177b</anchor>
      <arglist>(ZeroInitT=ZeroInit) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>BoolVector</name>
      <anchorfile>classMagnum_1_1Math_1_1BoolVector.html</anchorfile>
      <anchor>aafc0cf95b7259bba289f7823ddab53ae</anchor>
      <arglist>(NoInitT) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>BoolVector</name>
      <anchorfile>classMagnum_1_1Math_1_1BoolVector.html</anchorfile>
      <anchor>a7959c118e89a2980c1dce43557695c2e</anchor>
      <arglist>(UnsignedByte first, T...next) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>BoolVector</name>
      <anchorfile>classMagnum_1_1Math_1_1BoolVector.html</anchorfile>
      <anchor>a1ee5b3eb0414b0d5e41e8d9319a21fa6</anchor>
      <arglist>(T value) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>BoolVector</name>
      <anchorfile>classMagnum_1_1Math_1_1BoolVector.html</anchorfile>
      <anchor>a32e0d0dd79dd34de89cd30ed5b0d9407</anchor>
      <arglist>(const BoolVector&lt; size &gt; &amp;) noexcept=default</arglist>
    </member>
    <member kind="function">
      <type>UnsignedByte *</type>
      <name>data</name>
      <anchorfile>classMagnum_1_1Math_1_1BoolVector.html</anchorfile>
      <anchor>ad941981e7c128f15ca06c4dd2fbd7332</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>constexpr const UnsignedByte *</type>
      <name>data</name>
      <anchorfile>classMagnum_1_1Math_1_1BoolVector.html</anchorfile>
      <anchor>ad77eefeec422e53eb69ebaf1869a1dd1</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>constexpr bool</type>
      <name>operator[]</name>
      <anchorfile>classMagnum_1_1Math_1_1BoolVector.html</anchorfile>
      <anchor>a6bf3971326d7c8c870d7b6bc9f247dcc</anchor>
      <arglist>(std::size_t i) const </arglist>
    </member>
    <member kind="function">
      <type>BoolVector&lt; size &gt; &amp;</type>
      <name>set</name>
      <anchorfile>classMagnum_1_1Math_1_1BoolVector.html</anchorfile>
      <anchor>ac0607188a716c624baa30ed44a5c735f</anchor>
      <arglist>(std::size_t i, bool value)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classMagnum_1_1Math_1_1BoolVector.html</anchorfile>
      <anchor>abc4aa85469f5ae8ad418f63f18b959de</anchor>
      <arglist>(const BoolVector&lt; size &gt; &amp;other) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>classMagnum_1_1Math_1_1BoolVector.html</anchorfile>
      <anchor>ade921ada07d9afd8fd4cb223789fbacb</anchor>
      <arglist>(const BoolVector&lt; size &gt; &amp;other) const </arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator bool</name>
      <anchorfile>classMagnum_1_1Math_1_1BoolVector.html</anchorfile>
      <anchor>a6e3e27ec2fec7312ed54ea0b669ae778</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>all</name>
      <anchorfile>classMagnum_1_1Math_1_1BoolVector.html</anchorfile>
      <anchor>a0e3e98402baaf61c3889fccc49c02e2a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>none</name>
      <anchorfile>classMagnum_1_1Math_1_1BoolVector.html</anchorfile>
      <anchor>abb4a594280aa7a9177252d8139eef1ab</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>any</name>
      <anchorfile>classMagnum_1_1Math_1_1BoolVector.html</anchorfile>
      <anchor>a7b82a0385859b4a732e20217f5bf82f4</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>BoolVector&lt; size &gt;</type>
      <name>operator~</name>
      <anchorfile>classMagnum_1_1Math_1_1BoolVector.html</anchorfile>
      <anchor>add28a01b7d8e9d84bf86cd8bf7b8906f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>BoolVector&lt; size &gt; &amp;</type>
      <name>operator&amp;=</name>
      <anchorfile>classMagnum_1_1Math_1_1BoolVector.html</anchorfile>
      <anchor>ab4fabb0a2db04517c4f22fc9f358b4fc</anchor>
      <arglist>(const BoolVector&lt; size &gt; &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>BoolVector&lt; size &gt;</type>
      <name>operator&amp;</name>
      <anchorfile>classMagnum_1_1Math_1_1BoolVector.html</anchorfile>
      <anchor>a94e0f46ad1e89b41aafa35fe12626476</anchor>
      <arglist>(const BoolVector&lt; size &gt; &amp;other) const </arglist>
    </member>
    <member kind="function">
      <type>BoolVector&lt; size &gt; &amp;</type>
      <name>operator|=</name>
      <anchorfile>classMagnum_1_1Math_1_1BoolVector.html</anchorfile>
      <anchor>aadd51582e168a144e95fa9784a43e134</anchor>
      <arglist>(const BoolVector&lt; size &gt; &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>BoolVector&lt; size &gt;</type>
      <name>operator|</name>
      <anchorfile>classMagnum_1_1Math_1_1BoolVector.html</anchorfile>
      <anchor>a0f50d2d922ea214c2c10043a0c43e312</anchor>
      <arglist>(const BoolVector&lt; size &gt; &amp;other) const </arglist>
    </member>
    <member kind="function">
      <type>BoolVector&lt; size &gt; &amp;</type>
      <name>operator^=</name>
      <anchorfile>classMagnum_1_1Math_1_1BoolVector.html</anchorfile>
      <anchor>a712c1369f006c5c6939b1c1986a7556e</anchor>
      <arglist>(const BoolVector&lt; size &gt; &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>BoolVector&lt; size &gt;</type>
      <name>operator^</name>
      <anchorfile>classMagnum_1_1Math_1_1BoolVector.html</anchorfile>
      <anchor>a33316ef522b2c82e934541b4909cd145</anchor>
      <arglist>(const BoolVector&lt; size &gt; &amp;other) const </arglist>
    </member>
    <member kind="function">
      <type>Corrade::Utility::Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>classMagnum_1_1Math_1_1BoolVector.html</anchorfile>
      <anchor>a05ecfedf1ed791f07d32b7d45d978432</anchor>
      <arglist>(Corrade::Utility::Debug &amp;debug, const BoolVector&lt; size &gt; &amp;value)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Magnum::Math::Color3</name>
    <filename>classMagnum_1_1Math_1_1Color3.html</filename>
    <templarg>T</templarg>
    <base>Magnum::Math::Vector3</base>
    <member kind="typedef">
      <type>TypeTraits&lt; T &gt;::FloatingPointType</type>
      <name>FloatingPointType</name>
      <anchorfile>classMagnum_1_1Math_1_1Color3.html</anchorfile>
      <anchor>a86a0a40b43b75d5b79b96bcb8cfc4465</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::tuple&lt; Deg&lt; FloatingPointType &gt;, FloatingPointType, FloatingPointType &gt;</type>
      <name>Hsv</name>
      <anchorfile>classMagnum_1_1Math_1_1Color3.html</anchorfile>
      <anchor>a6cf345a849a99e6138cb7d5763c0f636</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Hsv</type>
      <name>HSV</name>
      <anchorfile>classMagnum_1_1Math_1_1Color3.html</anchorfile>
      <anchor>a7df623235df8fb83cea5c9accc3eca30</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Color3</name>
      <anchorfile>classMagnum_1_1Math_1_1Color3.html</anchorfile>
      <anchor>a2a6a972bfe445ca702bcfd7beee1981b</anchor>
      <arglist>(ZeroInitT=ZeroInit) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Color3</name>
      <anchorfile>classMagnum_1_1Math_1_1Color3.html</anchorfile>
      <anchor>a8ae83d7e3fbf51bf85eee05b60cc1047</anchor>
      <arglist>(NoInitT) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Color3</name>
      <anchorfile>classMagnum_1_1Math_1_1Color3.html</anchorfile>
      <anchor>aafb96a0def60bc6169f565c6565c5d5c</anchor>
      <arglist>(T rgb) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Color3</name>
      <anchorfile>classMagnum_1_1Math_1_1Color3.html</anchorfile>
      <anchor>aa051703cbe236f31bdebc0285d45edea</anchor>
      <arglist>(T r, T g, T b) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Color3</name>
      <anchorfile>classMagnum_1_1Math_1_1Color3.html</anchorfile>
      <anchor>a757e4d7a08c4948a11d9b2f951342645</anchor>
      <arglist>(const Vector&lt; 3, U &gt; &amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Color3</name>
      <anchorfile>classMagnum_1_1Math_1_1Color3.html</anchorfile>
      <anchor>ab8db848acaf2c503fb74f54eb2774504</anchor>
      <arglist>(const U &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Color3</name>
      <anchorfile>classMagnum_1_1Math_1_1Color3.html</anchorfile>
      <anchor>a7137df615641f011e6eb6d782355acae</anchor>
      <arglist>(const Vector&lt; 3, T &gt; &amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type>Hsv</type>
      <name>toHsv</name>
      <anchorfile>classMagnum_1_1Math_1_1Color3.html</anchorfile>
      <anchor>a67e83f11e3d4473201ee05d4a141fe35</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Hsv</type>
      <name>toHSV</name>
      <anchorfile>classMagnum_1_1Math_1_1Color3.html</anchorfile>
      <anchor>a34f7912009871b309c5324d7a37d92ed</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Deg&lt; FloatingPointType &gt;</type>
      <name>hue</name>
      <anchorfile>classMagnum_1_1Math_1_1Color3.html</anchorfile>
      <anchor>a5e0a434df3ca8ded2610b1f2ca9e125a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>FloatingPointType</type>
      <name>saturation</name>
      <anchorfile>classMagnum_1_1Math_1_1Color3.html</anchorfile>
      <anchor>a0f6704ba252e30a4a8377b536bf7405e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>FloatingPointType</type>
      <name>value</name>
      <anchorfile>classMagnum_1_1Math_1_1Color3.html</anchorfile>
      <anchor>a8be137a579518a765e2f4318d234e223</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Vector3&lt; FloatingPointType &gt;</type>
      <name>toSrgb</name>
      <anchorfile>classMagnum_1_1Math_1_1Color3.html</anchorfile>
      <anchor>ac1bbf489253bdd8eaad0da56983aa9b9</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Vector3&lt; Integral &gt;</type>
      <name>toSrgb</name>
      <anchorfile>classMagnum_1_1Math_1_1Color3.html</anchorfile>
      <anchor>a4d3f172b7c26ffee3606bfa3610c2151</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Vector3&lt; FloatingPointType &gt;</type>
      <name>toXyz</name>
      <anchorfile>classMagnum_1_1Math_1_1Color3.html</anchorfile>
      <anchor>a6160795d25fce0400ff4401298a8c8ae</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" static="yes">
      <type>static constexpr Color3&lt; T &gt;</type>
      <name>red</name>
      <anchorfile>classMagnum_1_1Math_1_1Color3.html</anchorfile>
      <anchor>a7be92cdfd9820b995d17a919edff1b4c</anchor>
      <arglist>(T red=Implementation::fullChannel&lt; T &gt;())</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static constexpr Color3&lt; T &gt;</type>
      <name>green</name>
      <anchorfile>classMagnum_1_1Math_1_1Color3.html</anchorfile>
      <anchor>a0f2c3b68a89395fdf84d5b3dcc684fb3</anchor>
      <arglist>(T green=Implementation::fullChannel&lt; T &gt;())</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static constexpr Color3&lt; T &gt;</type>
      <name>blue</name>
      <anchorfile>classMagnum_1_1Math_1_1Color3.html</anchorfile>
      <anchor>a99d3728fd643515067dbff11465b1b2e</anchor>
      <arglist>(T blue=Implementation::fullChannel&lt; T &gt;())</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static constexpr Color3&lt; T &gt;</type>
      <name>cyan</name>
      <anchorfile>classMagnum_1_1Math_1_1Color3.html</anchorfile>
      <anchor>a6c460f6e2a1774afa92e81c970728eee</anchor>
      <arglist>(T red=T(0))</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static constexpr Color3&lt; T &gt;</type>
      <name>magenta</name>
      <anchorfile>classMagnum_1_1Math_1_1Color3.html</anchorfile>
      <anchor>a784887d433a871fbed66e83f37805fc8</anchor>
      <arglist>(T green=T(0))</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static constexpr Color3&lt; T &gt;</type>
      <name>yellow</name>
      <anchorfile>classMagnum_1_1Math_1_1Color3.html</anchorfile>
      <anchor>af61b7b73cdddc3e58dac3b7806f9b575</anchor>
      <arglist>(T blue=T(0))</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Color3&lt; T &gt;</type>
      <name>fromHsv</name>
      <anchorfile>classMagnum_1_1Math_1_1Color3.html</anchorfile>
      <anchor>a23f0c1a7e9c2b7252e20f3ed3afed952</anchor>
      <arglist>(const Hsv &amp;hsv)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Color3&lt; T &gt;</type>
      <name>fromHsv</name>
      <anchorfile>classMagnum_1_1Math_1_1Color3.html</anchorfile>
      <anchor>acb8828a8260e38cd9a3c52163c15b1bf</anchor>
      <arglist>(Deg&lt; FloatingPointType &gt; hue, FloatingPointType saturation, FloatingPointType value)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Color3&lt; T &gt;</type>
      <name>fromHSV</name>
      <anchorfile>classMagnum_1_1Math_1_1Color3.html</anchorfile>
      <anchor>a9286b5d23a93cb92aaa15ecfb2cf85d8</anchor>
      <arglist>(const Hsv &amp;hsv)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Color3&lt; T &gt;</type>
      <name>fromHSV</name>
      <anchorfile>classMagnum_1_1Math_1_1Color3.html</anchorfile>
      <anchor>a9563621212c346a40401e4e67cac70e3</anchor>
      <arglist>(Deg&lt; FloatingPointType &gt; hue, FloatingPointType saturation, FloatingPointType value)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Color3&lt; T &gt;</type>
      <name>fromSrgb</name>
      <anchorfile>classMagnum_1_1Math_1_1Color3.html</anchorfile>
      <anchor>ad96e9d1d54d587cb94c1fee199c8ccfd</anchor>
      <arglist>(const Vector3&lt; FloatingPointType &gt; &amp;srgb)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Color3&lt; T &gt;</type>
      <name>fromSrgb</name>
      <anchorfile>classMagnum_1_1Math_1_1Color3.html</anchorfile>
      <anchor>af7ce280a2514f8e974b59439af0081b6</anchor>
      <arglist>(const Vector3&lt; Integral &gt; &amp;srgb)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Color3&lt; T &gt;</type>
      <name>fromXyz</name>
      <anchorfile>classMagnum_1_1Math_1_1Color3.html</anchorfile>
      <anchor>a63548a8d5b5b672b031e3a5cc4de74ef</anchor>
      <arglist>(const Vector3&lt; FloatingPointType &gt; &amp;xyz)</arglist>
    </member>
    <member kind="function">
      <type>Vector3&lt; T &gt;</type>
      <name>xyYToXyz</name>
      <anchorfile>classMagnum_1_1Math_1_1Color3.html</anchorfile>
      <anchor>a4fc7e7145d373b085fe34b3492b12b88</anchor>
      <arglist>(const Vector3&lt; T &gt; &amp;xyY)</arglist>
    </member>
    <member kind="function">
      <type>Vector3&lt; T &gt;</type>
      <name>xyzToXyY</name>
      <anchorfile>classMagnum_1_1Math_1_1Color3.html</anchorfile>
      <anchor>a95bff66ce9604939340d44686f857aa6</anchor>
      <arglist>(const Vector3&lt; T &gt; &amp;xyz)</arglist>
    </member>
    <member kind="function">
      <type>constexpr Color3&lt; UnsignedByte &gt;</type>
      <name>operator&quot;&quot;_rgb</name>
      <anchorfile>classMagnum_1_1Math_1_1Color3.html</anchorfile>
      <anchor>a3d234669d966a01ca22618dcd9dabc7e</anchor>
      <arglist>(unsigned long long value)</arglist>
    </member>
    <member kind="function">
      <type>constexpr Vector3&lt; UnsignedByte &gt;</type>
      <name>operator&quot;&quot;_srgb</name>
      <anchorfile>classMagnum_1_1Math_1_1Color3.html</anchorfile>
      <anchor>a411d16876bfb22e418e80ad779355b3e</anchor>
      <arglist>(unsigned long long value)</arglist>
    </member>
    <member kind="function">
      <type>Color3&lt; Float &gt;</type>
      <name>operator&quot;&quot;_rgbf</name>
      <anchorfile>classMagnum_1_1Math_1_1Color3.html</anchorfile>
      <anchor>ad78e022530fcb6bdeb0baa17287a6492</anchor>
      <arglist>(unsigned long long value)</arglist>
    </member>
    <member kind="function">
      <type>Color3&lt; Float &gt;</type>
      <name>operator&quot;&quot;_srgbf</name>
      <anchorfile>classMagnum_1_1Math_1_1Color3.html</anchorfile>
      <anchor>a8ce737bc231dc4fb12acb250712a3693</anchor>
      <arglist>(unsigned long long value)</arglist>
    </member>
    <member kind="function">
      <type>Corrade::Utility::Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>classMagnum_1_1Math_1_1Color3.html</anchorfile>
      <anchor>afae5b383b9623a3b56c4fae43a16b9ca</anchor>
      <arglist>(Corrade::Utility::Debug &amp;debug, const Color3&lt; UnsignedByte &gt; &amp;value)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Magnum::Math::Color4</name>
    <filename>classMagnum_1_1Math_1_1Color4.html</filename>
    <templarg>T</templarg>
    <base>Magnum::Math::Vector4</base>
    <member kind="typedef">
      <type>Color3&lt; T &gt;::FloatingPointType</type>
      <name>FloatingPointType</name>
      <anchorfile>classMagnum_1_1Math_1_1Color4.html</anchorfile>
      <anchor>a5b3e32cd0f193133504ccef2dfb5dc61</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Color3&lt; T &gt;::Hsv</type>
      <name>Hsv</name>
      <anchorfile>classMagnum_1_1Math_1_1Color4.html</anchorfile>
      <anchor>a816c7e5d93d8763b4499d8b83ce14cfa</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Hsv</type>
      <name>HSV</name>
      <anchorfile>classMagnum_1_1Math_1_1Color4.html</anchorfile>
      <anchor>a4342b3ce52c4fc52494cd5888cc0bdfa</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Color4</name>
      <anchorfile>classMagnum_1_1Math_1_1Color4.html</anchorfile>
      <anchor>a3e73d9d3abc4b033bbb38ee1ea642bab</anchor>
      <arglist>() noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Color4</name>
      <anchorfile>classMagnum_1_1Math_1_1Color4.html</anchorfile>
      <anchor>a9c5f1880e7062cf7e0027470aa1761f6</anchor>
      <arglist>(ZeroInitT) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Color4</name>
      <anchorfile>classMagnum_1_1Math_1_1Color4.html</anchorfile>
      <anchor>a796009a7631e5d687e40ab9ef26b7b3d</anchor>
      <arglist>(NoInitT) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Color4</name>
      <anchorfile>classMagnum_1_1Math_1_1Color4.html</anchorfile>
      <anchor>a99c1f739fab793c9e4c0f65255e28b3b</anchor>
      <arglist>(T rgb, T alpha=Implementation::fullChannel&lt; T &gt;()) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Color4</name>
      <anchorfile>classMagnum_1_1Math_1_1Color4.html</anchorfile>
      <anchor>a9317e9cebea34f140b4cb3662447d0c8</anchor>
      <arglist>(T r, T g, T b, T a=Implementation::fullChannel&lt; T &gt;()) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Color4</name>
      <anchorfile>classMagnum_1_1Math_1_1Color4.html</anchorfile>
      <anchor>a640e8d95a9faa7564c40597ada282ab4</anchor>
      <arglist>(const Vector3&lt; T &gt; &amp;rgb, T a=Implementation::fullChannel&lt; T &gt;()) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Color4</name>
      <anchorfile>classMagnum_1_1Math_1_1Color4.html</anchorfile>
      <anchor>a5803e017a8019fe2d7755166b99de4ae</anchor>
      <arglist>(const Vector&lt; 4, U &gt; &amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Color4</name>
      <anchorfile>classMagnum_1_1Math_1_1Color4.html</anchorfile>
      <anchor>ae1417108d82b436e60166f28bd51a4dc</anchor>
      <arglist>(const U &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Color4</name>
      <anchorfile>classMagnum_1_1Math_1_1Color4.html</anchorfile>
      <anchor>a40b0075a9217c25fd7bfa32340a5a211</anchor>
      <arglist>(const Vector&lt; 4, T &gt; &amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type>Hsv</type>
      <name>toHsv</name>
      <anchorfile>classMagnum_1_1Math_1_1Color4.html</anchorfile>
      <anchor>ad36a6558c2e69729b8f45d9b8a69fef0</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Hsv</type>
      <name>toHSV</name>
      <anchorfile>classMagnum_1_1Math_1_1Color4.html</anchorfile>
      <anchor>af249aa59a5e4d29c1eef4878fea0d88b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Deg&lt; FloatingPointType &gt;</type>
      <name>hue</name>
      <anchorfile>classMagnum_1_1Math_1_1Color4.html</anchorfile>
      <anchor>af3c2d5980836ee1505a73fc6eefb906e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>FloatingPointType</type>
      <name>saturation</name>
      <anchorfile>classMagnum_1_1Math_1_1Color4.html</anchorfile>
      <anchor>a8a1a1a461f542098d6d5c361742ab07a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>FloatingPointType</type>
      <name>value</name>
      <anchorfile>classMagnum_1_1Math_1_1Color4.html</anchorfile>
      <anchor>a760a981f0f0ccc0c613175a29c35042a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Vector4&lt; FloatingPointType &gt;</type>
      <name>toSrgbAlpha</name>
      <anchorfile>classMagnum_1_1Math_1_1Color4.html</anchorfile>
      <anchor>aa216b2ffa39b9cecca96cdd4770fda13</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Vector4&lt; Integral &gt;</type>
      <name>toSrgbAlpha</name>
      <anchorfile>classMagnum_1_1Math_1_1Color4.html</anchorfile>
      <anchor>a03fcc5dfba415c34c3df67d1440f9f89</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Vector3&lt; FloatingPointType &gt;</type>
      <name>toXyz</name>
      <anchorfile>classMagnum_1_1Math_1_1Color4.html</anchorfile>
      <anchor>a7579d09b5d305dc7362b2b42aca30d88</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" static="yes">
      <type>static constexpr Color4&lt; T &gt;</type>
      <name>red</name>
      <anchorfile>classMagnum_1_1Math_1_1Color4.html</anchorfile>
      <anchor>a784b2314a5f960bb91e11baadccd8ca7</anchor>
      <arglist>(T red=Implementation::fullChannel&lt; T &gt;(), T alpha=Implementation::fullChannel&lt; T &gt;())</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static constexpr Color4&lt; T &gt;</type>
      <name>green</name>
      <anchorfile>classMagnum_1_1Math_1_1Color4.html</anchorfile>
      <anchor>a8a5429704f834f4375371e620109b4f8</anchor>
      <arglist>(T green=Implementation::fullChannel&lt; T &gt;(), T alpha=Implementation::fullChannel&lt; T &gt;())</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static constexpr Color4&lt; T &gt;</type>
      <name>blue</name>
      <anchorfile>classMagnum_1_1Math_1_1Color4.html</anchorfile>
      <anchor>ae0ce831e82daa97a2a694c16ecb20d07</anchor>
      <arglist>(T blue=Implementation::fullChannel&lt; T &gt;(), T alpha=Implementation::fullChannel&lt; T &gt;())</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static constexpr Color4&lt; T &gt;</type>
      <name>cyan</name>
      <anchorfile>classMagnum_1_1Math_1_1Color4.html</anchorfile>
      <anchor>a489b6778ff29a17b4d8f60c0b9b4c97c</anchor>
      <arglist>(T red=T(0), T alpha=Implementation::fullChannel&lt; T &gt;())</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static constexpr Color4&lt; T &gt;</type>
      <name>magenta</name>
      <anchorfile>classMagnum_1_1Math_1_1Color4.html</anchorfile>
      <anchor>a14f58e1fcfdee9fc6a045e5a58570f3e</anchor>
      <arglist>(T green=T(0), T alpha=Implementation::fullChannel&lt; T &gt;())</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static constexpr Color4&lt; T &gt;</type>
      <name>yellow</name>
      <anchorfile>classMagnum_1_1Math_1_1Color4.html</anchorfile>
      <anchor>af88b6d80684a9f068eed07133a48f0dc</anchor>
      <arglist>(T blue=T(0), T alpha=Implementation::fullChannel&lt; T &gt;())</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Color4&lt; T &gt;</type>
      <name>fromHsv</name>
      <anchorfile>classMagnum_1_1Math_1_1Color4.html</anchorfile>
      <anchor>a8febf22ced9cd7338e3ddf6dc95e3b10</anchor>
      <arglist>(const Hsv &amp;hsv, T a=Implementation::fullChannel&lt; T &gt;())</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Color4&lt; T &gt;</type>
      <name>fromHsv</name>
      <anchorfile>classMagnum_1_1Math_1_1Color4.html</anchorfile>
      <anchor>a83a5c010d34fe1f490406d757441c57d</anchor>
      <arglist>(Deg&lt; FloatingPointType &gt; hue, FloatingPointType saturation, FloatingPointType value, T alpha=Implementation::fullChannel&lt; T &gt;())</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Color4&lt; T &gt;</type>
      <name>fromHSV</name>
      <anchorfile>classMagnum_1_1Math_1_1Color4.html</anchorfile>
      <anchor>a617d015bac06a9e646ca93b112fca2e5</anchor>
      <arglist>(const Hsv &amp;hsv, T a=Implementation::fullChannel&lt; T &gt;())</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Color4&lt; T &gt;</type>
      <name>fromHSV</name>
      <anchorfile>classMagnum_1_1Math_1_1Color4.html</anchorfile>
      <anchor>a4d6f81cfad69d7d42c3aa95ec8b8d1e1</anchor>
      <arglist>(Deg&lt; FloatingPointType &gt; hue, FloatingPointType saturation, FloatingPointType value, T a=Implementation::fullChannel&lt; T &gt;())</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Color4&lt; T &gt;</type>
      <name>fromSrgbAlpha</name>
      <anchorfile>classMagnum_1_1Math_1_1Color4.html</anchorfile>
      <anchor>a84c259d66eac3166fa9134f8f15eb785</anchor>
      <arglist>(const Vector4&lt; FloatingPointType &gt; &amp;srgbAlpha)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Color4&lt; T &gt;</type>
      <name>fromSrgb</name>
      <anchorfile>classMagnum_1_1Math_1_1Color4.html</anchorfile>
      <anchor>a97b5b2df8675f86d199c56ada8be27b2</anchor>
      <arglist>(const Vector3&lt; FloatingPointType &gt; &amp;srgb, T a=Implementation::fullChannel&lt; T &gt;())</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Color4&lt; T &gt;</type>
      <name>fromSrgbAlpha</name>
      <anchorfile>classMagnum_1_1Math_1_1Color4.html</anchorfile>
      <anchor>a66c193208074fe92e65243ee4e162f8b</anchor>
      <arglist>(const Vector4&lt; Integral &gt; &amp;srgbAlpha)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Color4&lt; T &gt;</type>
      <name>fromSrgb</name>
      <anchorfile>classMagnum_1_1Math_1_1Color4.html</anchorfile>
      <anchor>a75a9d660a17cf6f974b8b29085d798ad</anchor>
      <arglist>(const Vector3&lt; Integral &gt; &amp;srgb, T a=Implementation::fullChannel&lt; T &gt;())</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Color4&lt; T &gt;</type>
      <name>fromXyz</name>
      <anchorfile>classMagnum_1_1Math_1_1Color4.html</anchorfile>
      <anchor>a6a23a77cf0f2d9fee7c53b79163c9646</anchor>
      <arglist>(const Vector3&lt; FloatingPointType &gt; xyz, T a=Implementation::fullChannel&lt; T &gt;())</arglist>
    </member>
    <member kind="function">
      <type>constexpr Color4&lt; UnsignedByte &gt;</type>
      <name>operator&quot;&quot;_rgba</name>
      <anchorfile>classMagnum_1_1Math_1_1Color4.html</anchorfile>
      <anchor>a33bb6e4470bbebf78e05c434ceabec43</anchor>
      <arglist>(unsigned long long value)</arglist>
    </member>
    <member kind="function">
      <type>constexpr Vector4&lt; UnsignedByte &gt;</type>
      <name>operator&quot;&quot;_srgba</name>
      <anchorfile>classMagnum_1_1Math_1_1Color4.html</anchorfile>
      <anchor>a88197216abf20bf0d1bd7c5699ec519c</anchor>
      <arglist>(unsigned long long value)</arglist>
    </member>
    <member kind="function">
      <type>Color4&lt; Float &gt;</type>
      <name>operator&quot;&quot;_rgbaf</name>
      <anchorfile>classMagnum_1_1Math_1_1Color4.html</anchorfile>
      <anchor>a827104fe7653f4bde5966f8ae5b0913a</anchor>
      <arglist>(unsigned long long value)</arglist>
    </member>
    <member kind="function">
      <type>Color4&lt; Float &gt;</type>
      <name>operator&quot;&quot;_srgbaf</name>
      <anchorfile>classMagnum_1_1Math_1_1Color4.html</anchorfile>
      <anchor>a7cc23ef04fa621c95f3ec3a28638edcc</anchor>
      <arglist>(unsigned long long value)</arglist>
    </member>
    <member kind="function">
      <type>Corrade::Utility::Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>classMagnum_1_1Math_1_1Color4.html</anchorfile>
      <anchor>a338890901a6aa2d1e80e689f9b2532a4</anchor>
      <arglist>(Corrade::Utility::Debug &amp;debug, const Color4&lt; UnsignedByte &gt; &amp;value)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Magnum::Math::Complex</name>
    <filename>classMagnum_1_1Math_1_1Complex.html</filename>
    <templarg></templarg>
    <member kind="typedef">
      <type>T</type>
      <name>Type</name>
      <anchorfile>classMagnum_1_1Math_1_1Complex.html</anchorfile>
      <anchor>a436e9f8f692179a12a1ef4b8c735306d</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Complex</name>
      <anchorfile>classMagnum_1_1Math_1_1Complex.html</anchorfile>
      <anchor>a56eef832fc64c4d4bad2da36ec27b1a2</anchor>
      <arglist>(IdentityInitT=IdentityInit) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Complex</name>
      <anchorfile>classMagnum_1_1Math_1_1Complex.html</anchorfile>
      <anchor>a28270cfda770405f5182e74e5a1ec535</anchor>
      <arglist>(ZeroInitT) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Complex</name>
      <anchorfile>classMagnum_1_1Math_1_1Complex.html</anchorfile>
      <anchor>add7e74a502d3f01f447e2baebc96dea9</anchor>
      <arglist>(NoInitT) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Complex</name>
      <anchorfile>classMagnum_1_1Math_1_1Complex.html</anchorfile>
      <anchor>afbd653cbcaed2d9816fe4c96d8881b3c</anchor>
      <arglist>(T real, T imaginary) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Complex</name>
      <anchorfile>classMagnum_1_1Math_1_1Complex.html</anchorfile>
      <anchor>aa594b40572861c6f1036cdb56ffe9288</anchor>
      <arglist>(const Vector2&lt; T &gt; &amp;vector) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Complex</name>
      <anchorfile>classMagnum_1_1Math_1_1Complex.html</anchorfile>
      <anchor>a0206ee3f6107c2263f83e735e93ce8dd</anchor>
      <arglist>(const Complex&lt; U &gt; &amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Complex</name>
      <anchorfile>classMagnum_1_1Math_1_1Complex.html</anchorfile>
      <anchor>ab9deb3750ce9e1c7144d8608e0dd5440</anchor>
      <arglist>(const U &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Complex</name>
      <anchorfile>classMagnum_1_1Math_1_1Complex.html</anchorfile>
      <anchor>ab185e2196f0710d63ae7ad7a6d117bb9</anchor>
      <arglist>(const Complex&lt; T &gt; &amp;) noexcept=default</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>operator U</name>
      <anchorfile>classMagnum_1_1Math_1_1Complex.html</anchorfile>
      <anchor>a4cd24ccb94379b293d032f245bbe4147</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classMagnum_1_1Math_1_1Complex.html</anchorfile>
      <anchor>ace1fe8ae367cb41cb732b4e8eb3242f1</anchor>
      <arglist>(const Complex&lt; T &gt; &amp;other) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>classMagnum_1_1Math_1_1Complex.html</anchorfile>
      <anchor>a5686a9c7a5f379505ccf447c99aecdec</anchor>
      <arglist>(const Complex&lt; T &gt; &amp;other) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isNormalized</name>
      <anchorfile>classMagnum_1_1Math_1_1Complex.html</anchorfile>
      <anchor>a543dfd4aec32ce913ab443b193164a41</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>constexpr T</type>
      <name>real</name>
      <anchorfile>classMagnum_1_1Math_1_1Complex.html</anchorfile>
      <anchor>ae8c19db880b794b2e2a9a6b919e0ce5c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>constexpr T</type>
      <name>imaginary</name>
      <anchorfile>classMagnum_1_1Math_1_1Complex.html</anchorfile>
      <anchor>af44d6ea4e021150a277a9204c7cdb167</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>operator Vector2&lt; T &gt;</name>
      <anchorfile>classMagnum_1_1Math_1_1Complex.html</anchorfile>
      <anchor>af84199208c11de0834eb8c64aef944b8</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Rad&lt; T &gt;</type>
      <name>angle</name>
      <anchorfile>classMagnum_1_1Math_1_1Complex.html</anchorfile>
      <anchor>a169cb1855651ce8d444aa1ed72bb5776</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Matrix2x2&lt; T &gt;</type>
      <name>toMatrix</name>
      <anchorfile>classMagnum_1_1Math_1_1Complex.html</anchorfile>
      <anchor>aee7871f52328026ce638fb3d55ed2de4</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Complex&lt; T &gt; &amp;</type>
      <name>operator+=</name>
      <anchorfile>classMagnum_1_1Math_1_1Complex.html</anchorfile>
      <anchor>a87bf0b8aec5e81069b7260f92c38a2a4</anchor>
      <arglist>(const Complex&lt; T &gt; &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>Complex&lt; T &gt;</type>
      <name>operator+</name>
      <anchorfile>classMagnum_1_1Math_1_1Complex.html</anchorfile>
      <anchor>aaf75c170d1ee54a8e750d89f8d7e4131</anchor>
      <arglist>(const Complex&lt; T &gt; &amp;other) const </arglist>
    </member>
    <member kind="function">
      <type>Complex&lt; T &gt;</type>
      <name>operator-</name>
      <anchorfile>classMagnum_1_1Math_1_1Complex.html</anchorfile>
      <anchor>a9b1aa99e04be97bedc4aa043090ea854</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Complex&lt; T &gt; &amp;</type>
      <name>operator-=</name>
      <anchorfile>classMagnum_1_1Math_1_1Complex.html</anchorfile>
      <anchor>aca7a18b5610abade761a17433acc3faa</anchor>
      <arglist>(const Complex&lt; T &gt; &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>Complex&lt; T &gt;</type>
      <name>operator-</name>
      <anchorfile>classMagnum_1_1Math_1_1Complex.html</anchorfile>
      <anchor>a635fe8ce151118f3a8b908cb86e009e5</anchor>
      <arglist>(const Complex&lt; T &gt; &amp;other) const </arglist>
    </member>
    <member kind="function">
      <type>Complex&lt; T &gt; &amp;</type>
      <name>operator*=</name>
      <anchorfile>classMagnum_1_1Math_1_1Complex.html</anchorfile>
      <anchor>a2c01f9160de2241d8101f94bd281b8ee</anchor>
      <arglist>(T scalar)</arglist>
    </member>
    <member kind="function">
      <type>Complex&lt; T &gt;</type>
      <name>operator*</name>
      <anchorfile>classMagnum_1_1Math_1_1Complex.html</anchorfile>
      <anchor>a1a6ec2b15b8f339f4f99b98d2126fc2b</anchor>
      <arglist>(T scalar) const </arglist>
    </member>
    <member kind="function">
      <type>Complex&lt; T &gt; &amp;</type>
      <name>operator/=</name>
      <anchorfile>classMagnum_1_1Math_1_1Complex.html</anchorfile>
      <anchor>a2a9ab4d442d0356ba9bc7fa37d11d730</anchor>
      <arglist>(T scalar)</arglist>
    </member>
    <member kind="function">
      <type>Complex&lt; T &gt;</type>
      <name>operator/</name>
      <anchorfile>classMagnum_1_1Math_1_1Complex.html</anchorfile>
      <anchor>a118af30b20951da75190c0df5a1c5242</anchor>
      <arglist>(T scalar) const </arglist>
    </member>
    <member kind="function">
      <type>Complex&lt; T &gt;</type>
      <name>operator*</name>
      <anchorfile>classMagnum_1_1Math_1_1Complex.html</anchorfile>
      <anchor>a1cb2db4be38bbcef868c92c6c7708e48</anchor>
      <arglist>(const Complex&lt; T &gt; &amp;other) const </arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>dot</name>
      <anchorfile>classMagnum_1_1Math_1_1Complex.html</anchorfile>
      <anchor>aa27791536df2ff25c4e089cf113338f7</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>length</name>
      <anchorfile>classMagnum_1_1Math_1_1Complex.html</anchorfile>
      <anchor>a0999928ee64f270b9d934d3fc8562a75</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Complex&lt; T &gt;</type>
      <name>normalized</name>
      <anchorfile>classMagnum_1_1Math_1_1Complex.html</anchorfile>
      <anchor>a582f2cc12a6072df393dd701b3017e27</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Complex&lt; T &gt;</type>
      <name>conjugated</name>
      <anchorfile>classMagnum_1_1Math_1_1Complex.html</anchorfile>
      <anchor>ae538fbe73989bf818a75d2490b2ed9bd</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Complex&lt; T &gt;</type>
      <name>inverted</name>
      <anchorfile>classMagnum_1_1Math_1_1Complex.html</anchorfile>
      <anchor>ab5137236961dea9f3c41432b25542533</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Complex&lt; T &gt;</type>
      <name>invertedNormalized</name>
      <anchorfile>classMagnum_1_1Math_1_1Complex.html</anchorfile>
      <anchor>a8bf547eb25e127a87ea8c65685a992b7</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Vector2&lt; T &gt;</type>
      <name>transformVector</name>
      <anchorfile>classMagnum_1_1Math_1_1Complex.html</anchorfile>
      <anchor>a20742a863cfec9220335d2009826f770</anchor>
      <arglist>(const Vector2&lt; T &gt; &amp;vector) const </arglist>
    </member>
    <member kind="function" static="yes">
      <type>static T</type>
      <name>dot</name>
      <anchorfile>classMagnum_1_1Math_1_1Complex.html</anchorfile>
      <anchor>a46e6bcdbc196f208cbe280dbb80ec8bb</anchor>
      <arglist>(const Complex&lt; T &gt; &amp;a, const Complex&lt; T &gt; &amp;b)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Rad&lt; T &gt;</type>
      <name>angle</name>
      <anchorfile>classMagnum_1_1Math_1_1Complex.html</anchorfile>
      <anchor>a71881407f148798efbf8613f6a7f6936</anchor>
      <arglist>(const Complex&lt; T &gt; &amp;normalizedA, const Complex&lt; T &gt; &amp;normalizedB)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Complex&lt; T &gt;</type>
      <name>rotation</name>
      <anchorfile>classMagnum_1_1Math_1_1Complex.html</anchorfile>
      <anchor>ac6209d9d93a6c213750cd087e59b35f5</anchor>
      <arglist>(Rad&lt; T &gt; angle)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Complex&lt; T &gt;</type>
      <name>fromMatrix</name>
      <anchorfile>classMagnum_1_1Math_1_1Complex.html</anchorfile>
      <anchor>a1c3928355fdf5a4cf1f5b59e20a7ccb4</anchor>
      <arglist>(const Matrix2x2&lt; T &gt; &amp;matrix)</arglist>
    </member>
    <member kind="friend" protection="private">
      <type>friend class</type>
      <name>Complex</name>
      <anchorfile>classMagnum_1_1Math_1_1Complex.html</anchorfile>
      <anchor>a875eccb6fe1625d4fba89879d56f081c</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>dot</name>
      <anchorfile>classMagnum_1_1Math_1_1Complex.html</anchorfile>
      <anchor>ae3d695a1794978f2aded487bc9e6e312</anchor>
      <arglist>(const Complex&lt; T &gt; &amp;a, const Complex&lt; T &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>Rad&lt; T &gt;</type>
      <name>angle</name>
      <anchorfile>classMagnum_1_1Math_1_1Complex.html</anchorfile>
      <anchor>ab0d977c1e3f6a66dcdedcd261b758210</anchor>
      <arglist>(const Complex&lt; T &gt; &amp;normalizedA, const Complex&lt; T &gt; &amp;normalizedB)</arglist>
    </member>
    <member kind="function">
      <type>Complex&lt; T &gt;</type>
      <name>operator*</name>
      <anchorfile>classMagnum_1_1Math_1_1Complex.html</anchorfile>
      <anchor>a1bcffea1cc093cfe7722085949cc4978</anchor>
      <arglist>(T scalar, const Complex&lt; T &gt; &amp;complex)</arglist>
    </member>
    <member kind="function">
      <type>Complex&lt; T &gt;</type>
      <name>operator/</name>
      <anchorfile>classMagnum_1_1Math_1_1Complex.html</anchorfile>
      <anchor>a7c6460d09ef7244ad15a0f438a6e2248</anchor>
      <arglist>(T scalar, const Complex&lt; T &gt; &amp;complex)</arglist>
    </member>
    <member kind="function">
      <type>Corrade::Utility::Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>classMagnum_1_1Math_1_1Complex.html</anchorfile>
      <anchor>a673cbf89633bedbae0a30457b9bfaceb</anchor>
      <arglist>(Corrade::Utility::Debug &amp;debug, const Complex&lt; T &gt; &amp;value)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Magnum::Math::Constants</name>
    <filename>structMagnum_1_1Math_1_1Constants.html</filename>
    <templarg></templarg>
    <member kind="function" static="yes">
      <type>static constexpr T</type>
      <name>pi</name>
      <anchorfile>structMagnum_1_1Math_1_1Constants.html</anchorfile>
      <anchor>ae4530a2b57f7171de9873546b710441e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static constexpr T</type>
      <name>piHalf</name>
      <anchorfile>structMagnum_1_1Math_1_1Constants.html</anchorfile>
      <anchor>af1d0179c0213986ec14d5f09efd494bc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static constexpr T</type>
      <name>tau</name>
      <anchorfile>structMagnum_1_1Math_1_1Constants.html</anchorfile>
      <anchor>a6e4c9293554be66cd7d26228f06c3faf</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static constexpr T</type>
      <name>e</name>
      <anchorfile>structMagnum_1_1Math_1_1Constants.html</anchorfile>
      <anchor>acc3f1e0c7c386b32a28eeb4bf478bbec</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static constexpr T</type>
      <name>sqrt2</name>
      <anchorfile>structMagnum_1_1Math_1_1Constants.html</anchorfile>
      <anchor>adeb45f98b1d92e393bf8bcbeacb05af1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static constexpr T</type>
      <name>sqrt3</name>
      <anchorfile>structMagnum_1_1Math_1_1Constants.html</anchorfile>
      <anchor>aefe8aa823c32ec9908c20a8ce6778472</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static constexpr T</type>
      <name>nan</name>
      <anchorfile>structMagnum_1_1Math_1_1Constants.html</anchorfile>
      <anchor>a0cc96df25e99d8e386551475d6d171fc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static constexpr T</type>
      <name>inf</name>
      <anchorfile>structMagnum_1_1Math_1_1Constants.html</anchorfile>
      <anchor>a33437fd32195685dc87c2b8b44176c62</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Magnum::Math::Deg</name>
    <filename>classMagnum_1_1Math_1_1Deg.html</filename>
    <templarg></templarg>
    <base>Unit&lt; Deg, T &gt;</base>
    <member kind="function">
      <type>constexpr</type>
      <name>Deg</name>
      <anchorfile>classMagnum_1_1Math_1_1Deg.html</anchorfile>
      <anchor>a1a0b6900e3288e7a555ffb9688c5111d</anchor>
      <arglist>(ZeroInitT=ZeroInit) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Deg</name>
      <anchorfile>classMagnum_1_1Math_1_1Deg.html</anchorfile>
      <anchor>a72e48d82eada6d0c39cd07204351ddbc</anchor>
      <arglist>(NoInitT) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Deg</name>
      <anchorfile>classMagnum_1_1Math_1_1Deg.html</anchorfile>
      <anchor>a0b19ed4122ec285b0ee2e3661aaf6fec</anchor>
      <arglist>(T value) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Deg</name>
      <anchorfile>classMagnum_1_1Math_1_1Deg.html</anchorfile>
      <anchor>a4384b3662f49dafbd5ca13e9772f403f</anchor>
      <arglist>(Unit&lt; Math::Deg, U &gt; value) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Deg</name>
      <anchorfile>classMagnum_1_1Math_1_1Deg.html</anchorfile>
      <anchor>a79fe26b36f035eae640e1995f1f873c2</anchor>
      <arglist>(Unit&lt; Math::Deg, T &gt; other) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Deg</name>
      <anchorfile>classMagnum_1_1Math_1_1Deg.html</anchorfile>
      <anchor>a33aa75b5af1937c4e3fcfd98b46b719e</anchor>
      <arglist>(Unit&lt; Rad, T &gt; value)</arglist>
    </member>
    <member kind="function">
      <type>constexpr Deg&lt; Double &gt;</type>
      <name>operator&quot;&quot;_deg</name>
      <anchorfile>classMagnum_1_1Math_1_1Deg.html</anchorfile>
      <anchor>aac689d53d0c631771a1eaaaa23afb3a5</anchor>
      <arglist>(long double value)</arglist>
    </member>
    <member kind="function">
      <type>constexpr Deg&lt; Float &gt;</type>
      <name>operator&quot;&quot;_degf</name>
      <anchorfile>classMagnum_1_1Math_1_1Deg.html</anchorfile>
      <anchor>ae8c27c930965439412e761d6991f727a</anchor>
      <arglist>(long double value)</arglist>
    </member>
    <member kind="function">
      <type>Corrade::Utility::Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>classMagnum_1_1Math_1_1Deg.html</anchorfile>
      <anchor>ac757572f15467c51569563ea991a2549</anchor>
      <arglist>(Corrade::Utility::Debug &amp;debug, const Unit&lt; Deg, T &gt; &amp;value)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Magnum::Math::Dual</name>
    <filename>classMagnum_1_1Math_1_1Dual.html</filename>
    <templarg>T</templarg>
    <member kind="typedef">
      <type>T</type>
      <name>Type</name>
      <anchorfile>classMagnum_1_1Math_1_1Dual.html</anchorfile>
      <anchor>a3be18c964dc9a31a5adef067790a37d2</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Dual</name>
      <anchorfile>classMagnum_1_1Math_1_1Dual.html</anchorfile>
      <anchor>a1510f9f641c2dfd00ca7b01834cde0fd</anchor>
      <arglist>() noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Dual</name>
      <anchorfile>classMagnum_1_1Math_1_1Dual.html</anchorfile>
      <anchor>ae1030ae3f17f87e504c1bca6bb4512f4</anchor>
      <arglist>(ZeroInitT) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Dual</name>
      <anchorfile>classMagnum_1_1Math_1_1Dual.html</anchorfile>
      <anchor>aa778161aca036a8f91f1416484c0f3e4</anchor>
      <arglist>(NoInitT) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Dual</name>
      <anchorfile>classMagnum_1_1Math_1_1Dual.html</anchorfile>
      <anchor>a145bf8a971711d63b11cce2cdbf60401</anchor>
      <arglist>(const T &amp;real, const T &amp;dual=T()) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Dual</name>
      <anchorfile>classMagnum_1_1Math_1_1Dual.html</anchorfile>
      <anchor>aa69830829a6d39af13c7c0a36ce8d4e9</anchor>
      <arglist>(const Dual&lt; U &gt; &amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Dual</name>
      <anchorfile>classMagnum_1_1Math_1_1Dual.html</anchorfile>
      <anchor>a3547ae5040344880683a611501a4eb3a</anchor>
      <arglist>(const Dual&lt; T &gt; &amp;) noexcept=default</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classMagnum_1_1Math_1_1Dual.html</anchorfile>
      <anchor>a738e797156efbe5c52f4793750a259fc</anchor>
      <arglist>(const Dual&lt; T &gt; &amp;other) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>classMagnum_1_1Math_1_1Dual.html</anchorfile>
      <anchor>aad743cb853987de2d36c32d16d2fde9b</anchor>
      <arglist>(const Dual&lt; T &gt; &amp;other) const </arglist>
    </member>
    <member kind="function">
      <type>T &amp;</type>
      <name>real</name>
      <anchorfile>classMagnum_1_1Math_1_1Dual.html</anchorfile>
      <anchor>a8f653e88c741b4a2adad75bca3bddf6b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>constexpr T</type>
      <name>real</name>
      <anchorfile>classMagnum_1_1Math_1_1Dual.html</anchorfile>
      <anchor>acf023b20b6d04b85e663e5419752e4b0</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>T &amp;</type>
      <name>dual</name>
      <anchorfile>classMagnum_1_1Math_1_1Dual.html</anchorfile>
      <anchor>af66cf3b6fb28b6c2979191ac95b3b492</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>constexpr T</type>
      <name>dual</name>
      <anchorfile>classMagnum_1_1Math_1_1Dual.html</anchorfile>
      <anchor>af659aa1f2e80a2ed16e254c096078071</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Dual&lt; T &gt; &amp;</type>
      <name>operator+=</name>
      <anchorfile>classMagnum_1_1Math_1_1Dual.html</anchorfile>
      <anchor>aa696c4eb5da36892502a712ee0031f3c</anchor>
      <arglist>(const Dual&lt; T &gt; &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>Dual&lt; T &gt;</type>
      <name>operator+</name>
      <anchorfile>classMagnum_1_1Math_1_1Dual.html</anchorfile>
      <anchor>a7338137ec4cf94c5482422028138dfd4</anchor>
      <arglist>(const Dual&lt; T &gt; &amp;other) const </arglist>
    </member>
    <member kind="function">
      <type>Dual&lt; T &gt;</type>
      <name>operator-</name>
      <anchorfile>classMagnum_1_1Math_1_1Dual.html</anchorfile>
      <anchor>a4a2d34b1e1dbbebd2796bc641bc8cb2f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Dual&lt; T &gt; &amp;</type>
      <name>operator-=</name>
      <anchorfile>classMagnum_1_1Math_1_1Dual.html</anchorfile>
      <anchor>a27a849b0e8599549e6f1bc1372411109</anchor>
      <arglist>(const Dual&lt; T &gt; &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>Dual&lt; T &gt;</type>
      <name>operator-</name>
      <anchorfile>classMagnum_1_1Math_1_1Dual.html</anchorfile>
      <anchor>af6711ac675c94d967f1f2715f80132a9</anchor>
      <arglist>(const Dual&lt; T &gt; &amp;other) const </arglist>
    </member>
    <member kind="function">
      <type>auto</type>
      <name>operator*</name>
      <anchorfile>classMagnum_1_1Math_1_1Dual.html</anchorfile>
      <anchor>af4790856d51350f4115bafed6f1af2f9</anchor>
      <arglist>(const Dual&lt; U &gt; &amp;other) const  -&gt; Dual&lt; decltype(std::declval&lt; T &gt;()*std::declval&lt; U &gt;())&gt;</arglist>
    </member>
    <member kind="function">
      <type>Dual&lt; decltype(std::declval&lt; T &gt;)*std::declval&lt; U &gt;))&gt;</type>
      <name>operator*</name>
      <anchorfile>classMagnum_1_1Math_1_1Dual.html</anchorfile>
      <anchor>aa79977248c42b193ffac4c19758f2c78</anchor>
      <arglist>(const U &amp;other) const </arglist>
    </member>
    <member kind="function">
      <type>auto</type>
      <name>operator/</name>
      <anchorfile>classMagnum_1_1Math_1_1Dual.html</anchorfile>
      <anchor>af0fe85e768571b581addceb7f0828cb2</anchor>
      <arglist>(const Dual&lt; U &gt; &amp;other) const  -&gt; Dual&lt; decltype(std::declval&lt; T &gt;()/std::declval&lt; U &gt;())&gt;</arglist>
    </member>
    <member kind="function">
      <type>V</type>
      <name>operator/</name>
      <anchorfile>classMagnum_1_1Math_1_1Dual.html</anchorfile>
      <anchor>ab58d36ebdd2f9e96101e38dbafd0b8cb</anchor>
      <arglist>(const U &amp;other) const </arglist>
    </member>
    <member kind="function">
      <type>Dual&lt; T &gt;</type>
      <name>conjugated</name>
      <anchorfile>classMagnum_1_1Math_1_1Dual.html</anchorfile>
      <anchor>a868bd943cd93912b32c6acfc8ade9479</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>V</type>
      <name>operator*</name>
      <anchorfile>classMagnum_1_1Math_1_1Dual.html</anchorfile>
      <anchor>a6a273cd9fda37078db42173ffc586404</anchor>
      <arglist>(const T &amp;a, const Dual&lt; U &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>Corrade::Utility::Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>classMagnum_1_1Math_1_1Dual.html</anchorfile>
      <anchor>a566f5ca101d2a3793843141980b2545e</anchor>
      <arglist>(Corrade::Utility::Debug &amp;debug, const Dual&lt; T &gt; &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>Dual&lt; T &gt;</type>
      <name>sqrt</name>
      <anchorfile>classMagnum_1_1Math_1_1Dual.html</anchorfile>
      <anchor>a9f399ec60dc87478fcdbe6091e0b6783</anchor>
      <arglist>(const Dual&lt; T &gt; &amp;dual)</arglist>
    </member>
    <member kind="function">
      <type>std::pair&lt; Dual&lt; T &gt;, Dual&lt; T &gt; &gt;</type>
      <name>sincos</name>
      <anchorfile>classMagnum_1_1Math_1_1Dual.html</anchorfile>
      <anchor>adf84b1bff280ad75079c8774ca25cbec</anchor>
      <arglist>(const Dual&lt; Rad&lt; T &gt;&gt; &amp;angle)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Magnum::Math::DualComplex</name>
    <filename>classMagnum_1_1Math_1_1DualComplex.html</filename>
    <templarg></templarg>
    <base>Dual&lt; Complex&lt; T &gt; &gt;</base>
    <member kind="typedef">
      <type>T</type>
      <name>Type</name>
      <anchorfile>classMagnum_1_1Math_1_1DualComplex.html</anchorfile>
      <anchor>a5256076560a545242298ddbb92dc914f</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>DualComplex</name>
      <anchorfile>classMagnum_1_1Math_1_1DualComplex.html</anchorfile>
      <anchor>a0821085a82fc0660a7c39a7a1527d13c</anchor>
      <arglist>(IdentityInitT=IdentityInit) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>DualComplex</name>
      <anchorfile>classMagnum_1_1Math_1_1DualComplex.html</anchorfile>
      <anchor>ae4e9acb4806527cd1810001fe4f01eb6</anchor>
      <arglist>(ZeroInitT) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DualComplex</name>
      <anchorfile>classMagnum_1_1Math_1_1DualComplex.html</anchorfile>
      <anchor>aadae835c2d72814e1df71dea1d1178d7</anchor>
      <arglist>(NoInitT) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>DualComplex</name>
      <anchorfile>classMagnum_1_1Math_1_1DualComplex.html</anchorfile>
      <anchor>a78ca3b0f2e78693615c9f44f6718dfc5</anchor>
      <arglist>(const Complex&lt; T &gt; &amp;real, const Complex&lt; T &gt; &amp;dual=Complex&lt; T &gt;(T(0), T(0))) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>DualComplex</name>
      <anchorfile>classMagnum_1_1Math_1_1DualComplex.html</anchorfile>
      <anchor>af98becfe73485242e65ab3e90f7a9a54</anchor>
      <arglist>(const Vector2&lt; T &gt; &amp;vector) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>DualComplex</name>
      <anchorfile>classMagnum_1_1Math_1_1DualComplex.html</anchorfile>
      <anchor>a72ee826679689906b6c21ea419e4ae57</anchor>
      <arglist>(const DualComplex&lt; U &gt; &amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>DualComplex</name>
      <anchorfile>classMagnum_1_1Math_1_1DualComplex.html</anchorfile>
      <anchor>aea00eb119f7d13a79b7a46934b23b3d2</anchor>
      <arglist>(const U &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>DualComplex</name>
      <anchorfile>classMagnum_1_1Math_1_1DualComplex.html</anchorfile>
      <anchor>a3d776fb1f7a6ac50623a63210158cca1</anchor>
      <arglist>(const Dual&lt; Complex&lt; T &gt;&gt; &amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>operator U</name>
      <anchorfile>classMagnum_1_1Math_1_1DualComplex.html</anchorfile>
      <anchor>a8e358d391f2504502cb0584d5082ed39</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isNormalized</name>
      <anchorfile>classMagnum_1_1Math_1_1DualComplex.html</anchorfile>
      <anchor>a6c5c5b410a3a6c828bc36ed37a17b986</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>constexpr Complex&lt; T &gt;</type>
      <name>rotation</name>
      <anchorfile>classMagnum_1_1Math_1_1DualComplex.html</anchorfile>
      <anchor>a38eb1434eb13d8408fb95e62369bc2ef</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Vector2&lt; T &gt;</type>
      <name>translation</name>
      <anchorfile>classMagnum_1_1Math_1_1DualComplex.html</anchorfile>
      <anchor>a388e8d1add9dcad0196c41e7ad7e9745</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Matrix3&lt; T &gt;</type>
      <name>toMatrix</name>
      <anchorfile>classMagnum_1_1Math_1_1DualComplex.html</anchorfile>
      <anchor>a4a678e69a6b58e178b7b55d93c7485f0</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>DualComplex&lt; T &gt;</type>
      <name>operator*</name>
      <anchorfile>classMagnum_1_1Math_1_1DualComplex.html</anchorfile>
      <anchor>a17ad9d774ffe4829abd74db8669831b8</anchor>
      <arglist>(const DualComplex&lt; T &gt; &amp;other) const </arglist>
    </member>
    <member kind="function">
      <type>DualComplex&lt; T &gt;</type>
      <name>complexConjugated</name>
      <anchorfile>classMagnum_1_1Math_1_1DualComplex.html</anchorfile>
      <anchor>af7fc929597aa4c9c4f2eb5efe9c87c33</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>DualComplex&lt; T &gt;</type>
      <name>dualConjugated</name>
      <anchorfile>classMagnum_1_1Math_1_1DualComplex.html</anchorfile>
      <anchor>aed6adb542e06312b12b2097e3648719e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>DualComplex&lt; T &gt;</type>
      <name>conjugated</name>
      <anchorfile>classMagnum_1_1Math_1_1DualComplex.html</anchorfile>
      <anchor>a275525a31a0ea556e37400b2761df6ef</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>lengthSquared</name>
      <anchorfile>classMagnum_1_1Math_1_1DualComplex.html</anchorfile>
      <anchor>a35ca21dc1ef3b6ed3ea9e574901b8a49</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>length</name>
      <anchorfile>classMagnum_1_1Math_1_1DualComplex.html</anchorfile>
      <anchor>a61ce735db86d5de7300c6f3f4f427946</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>DualComplex&lt; T &gt;</type>
      <name>normalized</name>
      <anchorfile>classMagnum_1_1Math_1_1DualComplex.html</anchorfile>
      <anchor>a4b471d498e95c5aad45b36d02d6c0301</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>DualComplex&lt; T &gt;</type>
      <name>inverted</name>
      <anchorfile>classMagnum_1_1Math_1_1DualComplex.html</anchorfile>
      <anchor>a967fbfb75379ef782cc0cd1c667739ca</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>DualComplex&lt; T &gt;</type>
      <name>invertedNormalized</name>
      <anchorfile>classMagnum_1_1Math_1_1DualComplex.html</anchorfile>
      <anchor>a2702ac4c05ae7d8ce624b420f2afbf3d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Vector2&lt; T &gt;</type>
      <name>transformPoint</name>
      <anchorfile>classMagnum_1_1Math_1_1DualComplex.html</anchorfile>
      <anchor>a621b1db6ec16f2840aae76cc89ae24d7</anchor>
      <arglist>(const Vector2&lt; T &gt; &amp;vector) const </arglist>
    </member>
    <member kind="function" static="yes">
      <type>static DualComplex&lt; T &gt;</type>
      <name>rotation</name>
      <anchorfile>classMagnum_1_1Math_1_1DualComplex.html</anchorfile>
      <anchor>a55b9ca9a69c3f10280ffb600550101c1</anchor>
      <arglist>(Rad&lt; T &gt; angle)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static DualComplex&lt; T &gt;</type>
      <name>translation</name>
      <anchorfile>classMagnum_1_1Math_1_1DualComplex.html</anchorfile>
      <anchor>a2ce37da4456e1218d7c87ae83fae1739</anchor>
      <arglist>(const Vector2&lt; T &gt; &amp;vector)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static DualComplex&lt; T &gt;</type>
      <name>fromMatrix</name>
      <anchorfile>classMagnum_1_1Math_1_1DualComplex.html</anchorfile>
      <anchor>a2497caa52fa01a67332880e0e7ec243c</anchor>
      <arglist>(const Matrix3&lt; T &gt; &amp;matrix)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Magnum::Math::DualQuaternion</name>
    <filename>classMagnum_1_1Math_1_1DualQuaternion.html</filename>
    <templarg></templarg>
    <base>Dual&lt; Quaternion&lt; T &gt; &gt;</base>
    <member kind="typedef">
      <type>T</type>
      <name>Type</name>
      <anchorfile>classMagnum_1_1Math_1_1DualQuaternion.html</anchorfile>
      <anchor>a91876740a6540c47944effcbdf0496ea</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>DualQuaternion</name>
      <anchorfile>classMagnum_1_1Math_1_1DualQuaternion.html</anchorfile>
      <anchor>aa9afda807c74bdc4f725968a0c10b9b5</anchor>
      <arglist>(IdentityInitT=IdentityInit) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>DualQuaternion</name>
      <anchorfile>classMagnum_1_1Math_1_1DualQuaternion.html</anchorfile>
      <anchor>a01527fa3f92eafba35f8e8598b3a5840</anchor>
      <arglist>(ZeroInitT) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DualQuaternion</name>
      <anchorfile>classMagnum_1_1Math_1_1DualQuaternion.html</anchorfile>
      <anchor>a9d62cce23b486b1a8eb3953045823c51</anchor>
      <arglist>(NoInitT) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>DualQuaternion</name>
      <anchorfile>classMagnum_1_1Math_1_1DualQuaternion.html</anchorfile>
      <anchor>a6dcad20c0e9c7c9361b9c291ee42b181</anchor>
      <arglist>(const Quaternion&lt; T &gt; &amp;real, const Quaternion&lt; T &gt; &amp;dual=Quaternion&lt; T &gt;({}, T(0))) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>DualQuaternion</name>
      <anchorfile>classMagnum_1_1Math_1_1DualQuaternion.html</anchorfile>
      <anchor>a2cf520ef5d7e83a95ab9efda58a037f8</anchor>
      <arglist>(const Dual&lt; Vector3&lt; T &gt;&gt; &amp;vector, const Dual&lt; T &gt; &amp;scalar) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>DualQuaternion</name>
      <anchorfile>classMagnum_1_1Math_1_1DualQuaternion.html</anchorfile>
      <anchor>ae1cab2c3759e71fc88bbe6e1118dcbfe</anchor>
      <arglist>(const Vector3&lt; T &gt; &amp;vector) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>DualQuaternion</name>
      <anchorfile>classMagnum_1_1Math_1_1DualQuaternion.html</anchorfile>
      <anchor>a44c4733d1f4e9d96245e541777b716af</anchor>
      <arglist>(const DualQuaternion&lt; U &gt; &amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>DualQuaternion</name>
      <anchorfile>classMagnum_1_1Math_1_1DualQuaternion.html</anchorfile>
      <anchor>aea11101366e60dbb8efd5c90eb0c5b18</anchor>
      <arglist>(const U &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>DualQuaternion</name>
      <anchorfile>classMagnum_1_1Math_1_1DualQuaternion.html</anchorfile>
      <anchor>a51c30b9d1f1131951fb60c91bc023d31</anchor>
      <arglist>(const Dual&lt; Quaternion&lt; T &gt;&gt; &amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>operator U</name>
      <anchorfile>classMagnum_1_1Math_1_1DualQuaternion.html</anchorfile>
      <anchor>a265a612da1e4f47aaaaf50cc57cbed81</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isNormalized</name>
      <anchorfile>classMagnum_1_1Math_1_1DualQuaternion.html</anchorfile>
      <anchor>ad4938c0ff0209a636eb52e42c5efa7ad</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>constexpr Quaternion&lt; T &gt;</type>
      <name>rotation</name>
      <anchorfile>classMagnum_1_1Math_1_1DualQuaternion.html</anchorfile>
      <anchor>ab0e3bdcdaafd94f43799cf973bbca5c8</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Vector3&lt; T &gt;</type>
      <name>translation</name>
      <anchorfile>classMagnum_1_1Math_1_1DualQuaternion.html</anchorfile>
      <anchor>a87fb399d7910ad7955f9be812399a808</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Matrix4&lt; T &gt;</type>
      <name>toMatrix</name>
      <anchorfile>classMagnum_1_1Math_1_1DualQuaternion.html</anchorfile>
      <anchor>a96659593dca1315f6b4b93be7d8e1d75</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>DualQuaternion&lt; T &gt;</type>
      <name>quaternionConjugated</name>
      <anchorfile>classMagnum_1_1Math_1_1DualQuaternion.html</anchorfile>
      <anchor>ae63d2c912eea2d77da8179214bbe3b49</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>DualQuaternion&lt; T &gt;</type>
      <name>dualConjugated</name>
      <anchorfile>classMagnum_1_1Math_1_1DualQuaternion.html</anchorfile>
      <anchor>a833bcc711a88781d958e48ebf2c0545d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>DualQuaternion&lt; T &gt;</type>
      <name>conjugated</name>
      <anchorfile>classMagnum_1_1Math_1_1DualQuaternion.html</anchorfile>
      <anchor>adec9e7575c4bf0c0f784cc48460efa3c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Dual&lt; T &gt;</type>
      <name>lengthSquared</name>
      <anchorfile>classMagnum_1_1Math_1_1DualQuaternion.html</anchorfile>
      <anchor>a75a8383f14452efdf1ebc77614bd3dde</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Dual&lt; T &gt;</type>
      <name>length</name>
      <anchorfile>classMagnum_1_1Math_1_1DualQuaternion.html</anchorfile>
      <anchor>a3e8f1e32ef10047de42730bbdc1eeeaa</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>DualQuaternion&lt; T &gt;</type>
      <name>normalized</name>
      <anchorfile>classMagnum_1_1Math_1_1DualQuaternion.html</anchorfile>
      <anchor>a827993adad4892f68f53bccf95ce4790</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>DualQuaternion&lt; T &gt;</type>
      <name>inverted</name>
      <anchorfile>classMagnum_1_1Math_1_1DualQuaternion.html</anchorfile>
      <anchor>a093f3ffbf1a33962451ccbbef35d3691</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>DualQuaternion&lt; T &gt;</type>
      <name>invertedNormalized</name>
      <anchorfile>classMagnum_1_1Math_1_1DualQuaternion.html</anchorfile>
      <anchor>a25b7bf01f0a49b2efb2d60e815d2e46d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Vector3&lt; T &gt;</type>
      <name>transformPoint</name>
      <anchorfile>classMagnum_1_1Math_1_1DualQuaternion.html</anchorfile>
      <anchor>a316f9a52d912986495fc1b1cb259f218</anchor>
      <arglist>(const Vector3&lt; T &gt; &amp;vector) const </arglist>
    </member>
    <member kind="function">
      <type>Vector3&lt; T &gt;</type>
      <name>transformPointNormalized</name>
      <anchorfile>classMagnum_1_1Math_1_1DualQuaternion.html</anchorfile>
      <anchor>ab600971fce9c406b25deb8d69936fa88</anchor>
      <arglist>(const Vector3&lt; T &gt; &amp;vector) const </arglist>
    </member>
    <member kind="function" static="yes">
      <type>static DualQuaternion&lt; T &gt;</type>
      <name>rotation</name>
      <anchorfile>classMagnum_1_1Math_1_1DualQuaternion.html</anchorfile>
      <anchor>a9240d1feef53fa777cf95a5139a611f3</anchor>
      <arglist>(Rad&lt; T &gt; angle, const Vector3&lt; T &gt; &amp;normalizedAxis)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static DualQuaternion&lt; T &gt;</type>
      <name>translation</name>
      <anchorfile>classMagnum_1_1Math_1_1DualQuaternion.html</anchorfile>
      <anchor>aecdac97d6027049f08ac2b6773dd045a</anchor>
      <arglist>(const Vector3&lt; T &gt; &amp;vector)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static DualQuaternion&lt; T &gt;</type>
      <name>fromMatrix</name>
      <anchorfile>classMagnum_1_1Math_1_1DualQuaternion.html</anchorfile>
      <anchor>a83bd669e5f3cd425b3f7856b2c9dbb36</anchor>
      <arglist>(const Matrix4&lt; T &gt; &amp;matrix)</arglist>
    </member>
    <member kind="function">
      <type>Corrade::Utility::Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>classMagnum_1_1Math_1_1DualQuaternion.html</anchorfile>
      <anchor>a59b3488a700c0d5fcaed8ce7d7e5b1fc</anchor>
      <arglist>(Corrade::Utility::Debug &amp;debug, const DualComplex&lt; T &gt; &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>DualQuaternion&lt; T &gt;</type>
      <name>sclerp</name>
      <anchorfile>classMagnum_1_1Math_1_1DualQuaternion.html</anchorfile>
      <anchor>a16a9790aad4406e49517818bd3fa632b</anchor>
      <arglist>(const DualQuaternion&lt; T &gt; &amp;normalizedA, const DualQuaternion&lt; T &gt; &amp;normalizedB, const T t)</arglist>
    </member>
    <member kind="function">
      <type>Corrade::Utility::Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>classMagnum_1_1Math_1_1DualQuaternion.html</anchorfile>
      <anchor>a827f6a5c6237137238f27a82aa9d1f4d</anchor>
      <arglist>(Corrade::Utility::Debug &amp;debug, const DualQuaternion&lt; T &gt; &amp;value)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Magnum::Math::Frustum</name>
    <filename>classMagnum_1_1Math_1_1Frustum.html</filename>
    <templarg></templarg>
    <member kind="function">
      <type>constexpr</type>
      <name>Frustum</name>
      <anchorfile>classMagnum_1_1Math_1_1Frustum.html</anchorfile>
      <anchor>a875f2f61a1f6f71d346df95a08603bef</anchor>
      <arglist>(IdentityInitT=IdentityInit) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Frustum</name>
      <anchorfile>classMagnum_1_1Math_1_1Frustum.html</anchorfile>
      <anchor>acf93fe440a72897e81eb236f2076336d</anchor>
      <arglist>(NoInitT) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Frustum</name>
      <anchorfile>classMagnum_1_1Math_1_1Frustum.html</anchorfile>
      <anchor>af486b8ef269cfe67b5588fbaf60cc3b5</anchor>
      <arglist>(const Vector4&lt; T &gt; &amp;left, const Vector4&lt; T &gt; &amp;right, const Vector4&lt; T &gt; &amp;bottom, const Vector4&lt; T &gt; &amp;top, const Vector4&lt; T &gt; &amp;near, const Vector4&lt; T &gt; &amp;far) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Frustum</name>
      <anchorfile>classMagnum_1_1Math_1_1Frustum.html</anchorfile>
      <anchor>a2bc120467ccc77ced67a3d4a5f80e8fd</anchor>
      <arglist>(const Frustum&lt; U &gt; &amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Frustum</name>
      <anchorfile>classMagnum_1_1Math_1_1Frustum.html</anchorfile>
      <anchor>a491cbc166606747bf5d375b73532a9de</anchor>
      <arglist>(const U &amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>operator U</name>
      <anchorfile>classMagnum_1_1Math_1_1Frustum.html</anchorfile>
      <anchor>ae4ced80bcdc5291ed34748009b188b16</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classMagnum_1_1Math_1_1Frustum.html</anchorfile>
      <anchor>a4a231d25e633a9775b983f327fba7758</anchor>
      <arglist>(const Frustum&lt; T &gt; &amp;other) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>classMagnum_1_1Math_1_1Frustum.html</anchorfile>
      <anchor>a4e855ef0a3ce8eee6359c67ec7cbe3ea</anchor>
      <arglist>(const Frustum&lt; T &gt; &amp;other) const </arglist>
    </member>
    <member kind="function">
      <type>T *</type>
      <name>data</name>
      <anchorfile>classMagnum_1_1Math_1_1Frustum.html</anchorfile>
      <anchor>a76647edf6e417dd3ba98e166bf101f41</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>constexpr const T *</type>
      <name>data</name>
      <anchorfile>classMagnum_1_1Math_1_1Frustum.html</anchorfile>
      <anchor>a5aa2ee16379ed216baa1363ef97ee08c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>constexpr Corrade::Containers::StaticArrayView&lt; 6, const Vector4&lt; T &gt; &gt;</type>
      <name>planes</name>
      <anchorfile>classMagnum_1_1Math_1_1Frustum.html</anchorfile>
      <anchor>ad11eaeaca41e383d981ffa079cdcd8f8</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>constexpr const Vector4&lt; T &gt; &amp;</type>
      <name>operator[]</name>
      <anchorfile>classMagnum_1_1Math_1_1Frustum.html</anchorfile>
      <anchor>ac1599ebe3bec139e23f4ac8c33256240</anchor>
      <arglist>(std::size_t i) const </arglist>
    </member>
    <member kind="function">
      <type>constexpr Vector4&lt; T &gt;</type>
      <name>left</name>
      <anchorfile>classMagnum_1_1Math_1_1Frustum.html</anchorfile>
      <anchor>a8b4815b058ae163c717c069eebc4d21f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>constexpr Vector4&lt; T &gt;</type>
      <name>right</name>
      <anchorfile>classMagnum_1_1Math_1_1Frustum.html</anchorfile>
      <anchor>a1f94fdee6f00c20dbc972ee2e3f03f74</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>constexpr Vector4&lt; T &gt;</type>
      <name>bottom</name>
      <anchorfile>classMagnum_1_1Math_1_1Frustum.html</anchorfile>
      <anchor>a3f9cf2bd5535af801caeeeee8a6ff7cf</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>constexpr Vector4&lt; T &gt;</type>
      <name>top</name>
      <anchorfile>classMagnum_1_1Math_1_1Frustum.html</anchorfile>
      <anchor>a66a6b3fecfde538f53ce2f71f7f5653c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>constexpr Vector4&lt; T &gt;</type>
      <name>near</name>
      <anchorfile>classMagnum_1_1Math_1_1Frustum.html</anchorfile>
      <anchor>a92ade0c6d4b77d8e5e891b1327ad9675</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>constexpr Vector4&lt; T &gt;</type>
      <name>far</name>
      <anchorfile>classMagnum_1_1Math_1_1Frustum.html</anchorfile>
      <anchor>a048628c2e60f4c4749241cf49483a0b2</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Frustum&lt; T &gt;</type>
      <name>fromMatrix</name>
      <anchorfile>classMagnum_1_1Math_1_1Frustum.html</anchorfile>
      <anchor>a4ea5186bc9a20948753b196c1d7be5ca</anchor>
      <arglist>(const Matrix4&lt; T &gt; &amp;m)</arglist>
    </member>
    <member kind="function">
      <type>Corrade::Utility::Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>classMagnum_1_1Math_1_1Frustum.html</anchorfile>
      <anchor>aad6fdc9ca9b5bd751970733503de84ee</anchor>
      <arglist>(Corrade::Utility::Debug &amp;debug, const Frustum&lt; T &gt; &amp;value)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Magnum::Math::Half</name>
    <filename>classMagnum_1_1Math_1_1Half.html</filename>
    <member kind="function">
      <type>constexpr</type>
      <name>Half</name>
      <anchorfile>classMagnum_1_1Math_1_1Half.html</anchorfile>
      <anchor>ae695a1ae9e5f3e2a7d940919d21a96e9</anchor>
      <arglist>(ZeroInitT=ZeroInit) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Half</name>
      <anchorfile>classMagnum_1_1Math_1_1Half.html</anchorfile>
      <anchor>a871ed35333f1654899f3e25b7dd84d45</anchor>
      <arglist>(UnsignedShort data) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Half</name>
      <anchorfile>classMagnum_1_1Math_1_1Half.html</anchorfile>
      <anchor>ac36b0bdd862ca9ad376b0eda98472ba8</anchor>
      <arglist>(Float value) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Half</name>
      <anchorfile>classMagnum_1_1Math_1_1Half.html</anchorfile>
      <anchor>a8ea74f724b16dbe9afc668ecb3c6f5f4</anchor>
      <arglist>(NoInitT) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr bool</type>
      <name>operator==</name>
      <anchorfile>classMagnum_1_1Math_1_1Half.html</anchorfile>
      <anchor>a2399aa3e7ff7c07b1c7eb47e2faa7314</anchor>
      <arglist>(Half other) const </arglist>
    </member>
    <member kind="function">
      <type>constexpr bool</type>
      <name>operator!=</name>
      <anchorfile>classMagnum_1_1Math_1_1Half.html</anchorfile>
      <anchor>a1ffa10f417ab30106ffb38f01e5b0a78</anchor>
      <arglist>(Half other) const </arglist>
    </member>
    <member kind="function">
      <type>constexpr Half</type>
      <name>operator+</name>
      <anchorfile>classMagnum_1_1Math_1_1Half.html</anchorfile>
      <anchor>acae48faffcda11c7cf580edde74e54cc</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>constexpr Half</type>
      <name>operator-</name>
      <anchorfile>classMagnum_1_1Math_1_1Half.html</anchorfile>
      <anchor>ad5b4932fd6e3ad556c31d5cbeb888821</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>operator UnsignedShort</name>
      <anchorfile>classMagnum_1_1Math_1_1Half.html</anchorfile>
      <anchor>a0590d7a102fa125561292f6ba77f87a7</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator Float</name>
      <anchorfile>classMagnum_1_1Math_1_1Half.html</anchorfile>
      <anchor>aa8868313adfc88c1f6474d4fea1fbc18</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>constexpr UnsignedShort</type>
      <name>data</name>
      <anchorfile>classMagnum_1_1Math_1_1Half.html</anchorfile>
      <anchor>a02b5063da40cf068c5c09d40fc21b18f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Half</type>
      <name>operator&quot;&quot;_h</name>
      <anchorfile>classMagnum_1_1Math_1_1Half.html</anchorfile>
      <anchor>abb4a09a79116fffb3b8b806d4a6f6e0e</anchor>
      <arglist>(long double value)</arglist>
    </member>
    <member kind="function">
      <type>Corrade::Utility::Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>classMagnum_1_1Math_1_1Half.html</anchorfile>
      <anchor>a158798027e4c105796ba27c51b857848</anchor>
      <arglist>(Corrade::Utility::Debug &amp;debug, Half value)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Magnum::Math::IdentityInitT</name>
    <filename>structMagnum_1_1Math_1_1IdentityInitT.html</filename>
  </compound>
  <compound kind="class">
    <name>Magnum::Math::Matrix</name>
    <filename>classMagnum_1_1Math_1_1Matrix.html</filename>
    <templarg>size</templarg>
    <templarg></templarg>
    <base>RectangularMatrix&lt; size, size, T &gt;</base>
    <member kind="enumvalue">
      <name>Size</name>
      <anchorfile>classMagnum_1_1Math_1_1Matrix.html</anchorfile>
      <anchor>af194fd115579f0d38db3b62b07a89de0a71e0ecab841744afb1340b04ed546966</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>ZeroType</name>
      <anchorfile>classMagnum_1_1Math_1_1Matrix.html</anchorfile>
      <anchor>a08a332243f86eb6069bb8aac5c5f885c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>IdentityType</name>
      <anchorfile>classMagnum_1_1Math_1_1Matrix.html</anchorfile>
      <anchor>a768fea8f5bf6e8361afe2c01f7f6d645</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Size</name>
      <anchorfile>classMagnum_1_1Math_1_1Matrix.html</anchorfile>
      <anchor>af194fd115579f0d38db3b62b07a89de0a71e0ecab841744afb1340b04ed546966</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Matrix</name>
      <anchorfile>classMagnum_1_1Math_1_1Matrix.html</anchorfile>
      <anchor>abe49a040366765693c2403dab506a3be</anchor>
      <arglist>(IdentityInitT=IdentityInit, T value=T(1)) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Matrix</name>
      <anchorfile>classMagnum_1_1Math_1_1Matrix.html</anchorfile>
      <anchor>a4adf91d400fae079b7eb9cd71f90d050</anchor>
      <arglist>(ZeroInitT) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Matrix</name>
      <anchorfile>classMagnum_1_1Math_1_1Matrix.html</anchorfile>
      <anchor>ac76456f63fb61569d593b802fb1ad4ab</anchor>
      <arglist>(NoInitT) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Matrix</name>
      <anchorfile>classMagnum_1_1Math_1_1Matrix.html</anchorfile>
      <anchor>abbe6275d90b12764b2d2109b1ad02499</anchor>
      <arglist>(const Vector&lt; size, T &gt; &amp;first, const U &amp;...next) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Matrix</name>
      <anchorfile>classMagnum_1_1Math_1_1Matrix.html</anchorfile>
      <anchor>a599542f22f34ff97f7196e16d1106d93</anchor>
      <arglist>(T value) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Matrix</name>
      <anchorfile>classMagnum_1_1Math_1_1Matrix.html</anchorfile>
      <anchor>a96a98c28fbabc625f469e56665d65563</anchor>
      <arglist>(const RectangularMatrix&lt; size, size, U &gt; &amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Matrix</name>
      <anchorfile>classMagnum_1_1Math_1_1Matrix.html</anchorfile>
      <anchor>a9910cf6c8bbb229676da1e3ed6e7f99b</anchor>
      <arglist>(const U &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Matrix</name>
      <anchorfile>classMagnum_1_1Math_1_1Matrix.html</anchorfile>
      <anchor>aaf73ff90d43d921d7f72d4756cd3532c</anchor>
      <arglist>(const RectangularMatrix&lt; size, size, T &gt; &amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isOrthogonal</name>
      <anchorfile>classMagnum_1_1Math_1_1Matrix.html</anchorfile>
      <anchor>a6dc6e2520666ef85f72bc77ed32904de</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>trace</name>
      <anchorfile>classMagnum_1_1Math_1_1Matrix.html</anchorfile>
      <anchor>aa035344e8ed7965d1a10e2443e5b3719</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Matrix&lt; size-1, T &gt;</type>
      <name>ij</name>
      <anchorfile>classMagnum_1_1Math_1_1Matrix.html</anchorfile>
      <anchor>a5ca78763e951fd898daafd59e2748691</anchor>
      <arglist>(std::size_t skipCol, std::size_t skipRow) const </arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>determinant</name>
      <anchorfile>classMagnum_1_1Math_1_1Matrix.html</anchorfile>
      <anchor>aaa61910a922a5158129031ab871b6c40</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Matrix&lt; size, T &gt;</type>
      <name>inverted</name>
      <anchorfile>classMagnum_1_1Math_1_1Matrix.html</anchorfile>
      <anchor>ae22d2ff13bebde44836b39f81a77df69</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Matrix&lt; size, T &gt;</type>
      <name>invertedOrthogonal</name>
      <anchorfile>classMagnum_1_1Math_1_1Matrix.html</anchorfile>
      <anchor>aae14f3e89b1e3377c6e98bec080eada2</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Magnum::Math::Matrix3</name>
    <filename>classMagnum_1_1Math_1_1Matrix3.html</filename>
    <templarg>T</templarg>
    <base>Magnum::Math::Matrix</base>
    <member kind="function">
      <type>constexpr</type>
      <name>Matrix3</name>
      <anchorfile>classMagnum_1_1Math_1_1Matrix3.html</anchorfile>
      <anchor>aa50d936be37151345b8abe31fbe7de45</anchor>
      <arglist>(IdentityInitT=IdentityInit, T value=T{1}) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Matrix3</name>
      <anchorfile>classMagnum_1_1Math_1_1Matrix3.html</anchorfile>
      <anchor>a84877a6cfca61b877cc156b1343eb163</anchor>
      <arglist>(ZeroInitT) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Matrix3</name>
      <anchorfile>classMagnum_1_1Math_1_1Matrix3.html</anchorfile>
      <anchor>a07a3083c64e4336cfd5c6f23bf034846</anchor>
      <arglist>(NoInitT) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Matrix3</name>
      <anchorfile>classMagnum_1_1Math_1_1Matrix3.html</anchorfile>
      <anchor>a046b4514311f06a092081949f702d41a</anchor>
      <arglist>(const Vector3&lt; T &gt; &amp;first, const Vector3&lt; T &gt; &amp;second, const Vector3&lt; T &gt; &amp;third) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Matrix3</name>
      <anchorfile>classMagnum_1_1Math_1_1Matrix3.html</anchorfile>
      <anchor>ab7ab26d8c749e484e2759d9c47d70217</anchor>
      <arglist>(T value) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Matrix3</name>
      <anchorfile>classMagnum_1_1Math_1_1Matrix3.html</anchorfile>
      <anchor>a606b8212d38868a43dc068bacae061ca</anchor>
      <arglist>(const RectangularMatrix&lt; 3, 3, U &gt; &amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Matrix3</name>
      <anchorfile>classMagnum_1_1Math_1_1Matrix3.html</anchorfile>
      <anchor>a460014a92e0ad60f5e4cd617f87839e3</anchor>
      <arglist>(const U &amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Matrix3</name>
      <anchorfile>classMagnum_1_1Math_1_1Matrix3.html</anchorfile>
      <anchor>a8d13e6f0adec507471b69f23ac88ec4c</anchor>
      <arglist>(const RectangularMatrix&lt; 3, 3, T &gt; &amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isRigidTransformation</name>
      <anchorfile>classMagnum_1_1Math_1_1Matrix3.html</anchorfile>
      <anchor>a267cce4346f18620cd93df07bf858234</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>constexpr Matrix2x2&lt; T &gt;</type>
      <name>rotationScaling</name>
      <anchorfile>classMagnum_1_1Math_1_1Matrix3.html</anchorfile>
      <anchor>a68c155883727032ae44b117d9cd2f692</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Matrix2x2&lt; T &gt;</type>
      <name>rotationNormalized</name>
      <anchorfile>classMagnum_1_1Math_1_1Matrix3.html</anchorfile>
      <anchor>acff2ca2d2860f0f90af6929e2b45245e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Matrix2x2&lt; T &gt;</type>
      <name>rotation</name>
      <anchorfile>classMagnum_1_1Math_1_1Matrix3.html</anchorfile>
      <anchor>aa62eca00108d827c350e13f6121bada3</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>uniformScalingSquared</name>
      <anchorfile>classMagnum_1_1Math_1_1Matrix3.html</anchorfile>
      <anchor>ac3408032a87372772709ae973346e2f0</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>uniformScaling</name>
      <anchorfile>classMagnum_1_1Math_1_1Matrix3.html</anchorfile>
      <anchor>a56f14460dad75555792f35aeb8b94703</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Vector2&lt; T &gt; &amp;</type>
      <name>right</name>
      <anchorfile>classMagnum_1_1Math_1_1Matrix3.html</anchorfile>
      <anchor>ad166d31fcb12797eb258230b47ca80f5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>constexpr Vector2&lt; T &gt;</type>
      <name>right</name>
      <anchorfile>classMagnum_1_1Math_1_1Matrix3.html</anchorfile>
      <anchor>ad78d8311a4493694bb74aca0789685f4</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Vector2&lt; T &gt; &amp;</type>
      <name>up</name>
      <anchorfile>classMagnum_1_1Math_1_1Matrix3.html</anchorfile>
      <anchor>aeb8a324e5abe64f09bc888e4bc58e114</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>constexpr Vector2&lt; T &gt;</type>
      <name>up</name>
      <anchorfile>classMagnum_1_1Math_1_1Matrix3.html</anchorfile>
      <anchor>abdd0458024615486175d18ce5951100d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Vector2&lt; T &gt; &amp;</type>
      <name>translation</name>
      <anchorfile>classMagnum_1_1Math_1_1Matrix3.html</anchorfile>
      <anchor>a05ed7ce765c5c0a3cdbda15b8d5355da</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>constexpr Vector2&lt; T &gt;</type>
      <name>translation</name>
      <anchorfile>classMagnum_1_1Math_1_1Matrix3.html</anchorfile>
      <anchor>ae9be59b02f72ada29df67ca43363c4f9</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Matrix3&lt; T &gt;</type>
      <name>invertedRigid</name>
      <anchorfile>classMagnum_1_1Math_1_1Matrix3.html</anchorfile>
      <anchor>ad52993fc4b52ae189156af7394190eeb</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Vector2&lt; T &gt;</type>
      <name>transformVector</name>
      <anchorfile>classMagnum_1_1Math_1_1Matrix3.html</anchorfile>
      <anchor>a0abd22e4d34e468c60ac7ac95e182c2b</anchor>
      <arglist>(const Vector2&lt; T &gt; &amp;vector) const </arglist>
    </member>
    <member kind="function">
      <type>Vector2&lt; T &gt;</type>
      <name>transformPoint</name>
      <anchorfile>classMagnum_1_1Math_1_1Matrix3.html</anchorfile>
      <anchor>a7766c1ba545814dd774a739424edad6b</anchor>
      <arglist>(const Vector2&lt; T &gt; &amp;vector) const </arglist>
    </member>
    <member kind="function" static="yes">
      <type>static constexpr Matrix3&lt; T &gt;</type>
      <name>translation</name>
      <anchorfile>classMagnum_1_1Math_1_1Matrix3.html</anchorfile>
      <anchor>ae22c375a0af7fac1a22cb8bbc5bba1c1</anchor>
      <arglist>(const Vector2&lt; T &gt; &amp;vector)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static constexpr Matrix3&lt; T &gt;</type>
      <name>scaling</name>
      <anchorfile>classMagnum_1_1Math_1_1Matrix3.html</anchorfile>
      <anchor>a8d1392224570b254702baeaadfa79692</anchor>
      <arglist>(const Vector2&lt; T &gt; &amp;vector)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Matrix3&lt; T &gt;</type>
      <name>rotation</name>
      <anchorfile>classMagnum_1_1Math_1_1Matrix3.html</anchorfile>
      <anchor>a51a3dddeb726e7679cbaa2190d1e889c</anchor>
      <arglist>(Rad&lt; T &gt; angle)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Matrix3&lt; T &gt;</type>
      <name>reflection</name>
      <anchorfile>classMagnum_1_1Math_1_1Matrix3.html</anchorfile>
      <anchor>a4c517f1a78c5300fc9c207496ea867e2</anchor>
      <arglist>(const Vector2&lt; T &gt; &amp;normal)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static constexpr Matrix3&lt; T &gt;</type>
      <name>shearingX</name>
      <anchorfile>classMagnum_1_1Math_1_1Matrix3.html</anchorfile>
      <anchor>a5a10fe4eb0b05f0fae43797642ad8570</anchor>
      <arglist>(T amount)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static constexpr Matrix3&lt; T &gt;</type>
      <name>shearingY</name>
      <anchorfile>classMagnum_1_1Math_1_1Matrix3.html</anchorfile>
      <anchor>a791d5ea6cff14636c10374826668749c</anchor>
      <arglist>(T amount)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Matrix3&lt; T &gt;</type>
      <name>projection</name>
      <anchorfile>classMagnum_1_1Math_1_1Matrix3.html</anchorfile>
      <anchor>a8a782bf6187750b0f4bc763623ee3857</anchor>
      <arglist>(const Vector2&lt; T &gt; &amp;size)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static constexpr Matrix3&lt; T &gt;</type>
      <name>from</name>
      <anchorfile>classMagnum_1_1Math_1_1Matrix3.html</anchorfile>
      <anchor>a04ab2a75059c8016904ad30f5ed7d89c</anchor>
      <arglist>(const Matrix2x2&lt; T &gt; &amp;rotationScaling, const Vector2&lt; T &gt; &amp;translation)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Magnum::Math::Matrix4</name>
    <filename>classMagnum_1_1Math_1_1Matrix4.html</filename>
    <templarg>T</templarg>
    <base>Magnum::Math::Matrix</base>
    <member kind="function">
      <type>constexpr</type>
      <name>Matrix4</name>
      <anchorfile>classMagnum_1_1Math_1_1Matrix4.html</anchorfile>
      <anchor>a0be8f8e761f7e807400a6c2bff1fa2c2</anchor>
      <arglist>(IdentityInitT=IdentityInit, T value=T{1}) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Matrix4</name>
      <anchorfile>classMagnum_1_1Math_1_1Matrix4.html</anchorfile>
      <anchor>a07a734e23014fa82b969228965f4aea2</anchor>
      <arglist>(ZeroInitT) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Matrix4</name>
      <anchorfile>classMagnum_1_1Math_1_1Matrix4.html</anchorfile>
      <anchor>a8640c92bd243d3ff10ce37af5cc1e908</anchor>
      <arglist>(NoInitT) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Matrix4</name>
      <anchorfile>classMagnum_1_1Math_1_1Matrix4.html</anchorfile>
      <anchor>abf0b673faa0db9089a403c9c45ede727</anchor>
      <arglist>(const Vector4&lt; T &gt; &amp;first, const Vector4&lt; T &gt; &amp;second, const Vector4&lt; T &gt; &amp;third, const Vector4&lt; T &gt; &amp;fourth) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Matrix4</name>
      <anchorfile>classMagnum_1_1Math_1_1Matrix4.html</anchorfile>
      <anchor>ac633e90736fe4d196813d1ab30ed2c47</anchor>
      <arglist>(T value) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Matrix4</name>
      <anchorfile>classMagnum_1_1Math_1_1Matrix4.html</anchorfile>
      <anchor>ac4240b374984e79fee6a98c00848b6d0</anchor>
      <arglist>(const RectangularMatrix&lt; 4, 4, U &gt; &amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Matrix4</name>
      <anchorfile>classMagnum_1_1Math_1_1Matrix4.html</anchorfile>
      <anchor>a6448feda6260b10d8269e562bea39eb2</anchor>
      <arglist>(const U &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Matrix4</name>
      <anchorfile>classMagnum_1_1Math_1_1Matrix4.html</anchorfile>
      <anchor>a826e3c118fb9be8590d2ba0ff32997c8</anchor>
      <arglist>(const RectangularMatrix&lt; 4, 4, T &gt; &amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isRigidTransformation</name>
      <anchorfile>classMagnum_1_1Math_1_1Matrix4.html</anchorfile>
      <anchor>a4d4ebbb7a7634e8359f60bbc117d476e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>constexpr Matrix3x3&lt; T &gt;</type>
      <name>rotationScaling</name>
      <anchorfile>classMagnum_1_1Math_1_1Matrix4.html</anchorfile>
      <anchor>a6d9b7d667bd87a3fbf605275adfb3c68</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Matrix3x3&lt; T &gt;</type>
      <name>rotationNormalized</name>
      <anchorfile>classMagnum_1_1Math_1_1Matrix4.html</anchorfile>
      <anchor>a0ba00945e3f99705c25c317d55a9a690</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Matrix3x3&lt; T &gt;</type>
      <name>rotation</name>
      <anchorfile>classMagnum_1_1Math_1_1Matrix4.html</anchorfile>
      <anchor>ad4c2ec6a5a71b575c6df932d39d0f688</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>uniformScalingSquared</name>
      <anchorfile>classMagnum_1_1Math_1_1Matrix4.html</anchorfile>
      <anchor>a70114530ab7f0f3cef2aa036abdbd4df</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>uniformScaling</name>
      <anchorfile>classMagnum_1_1Math_1_1Matrix4.html</anchorfile>
      <anchor>a947c7fd3fd5643bbb653e1a4cdeb4259</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Vector3&lt; T &gt; &amp;</type>
      <name>right</name>
      <anchorfile>classMagnum_1_1Math_1_1Matrix4.html</anchorfile>
      <anchor>a01d3d5de521bddf5b4a91fbcc24adad4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>constexpr Vector3&lt; T &gt;</type>
      <name>right</name>
      <anchorfile>classMagnum_1_1Math_1_1Matrix4.html</anchorfile>
      <anchor>a831c5babce197bb93cae4b6cf6131c58</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Vector3&lt; T &gt; &amp;</type>
      <name>up</name>
      <anchorfile>classMagnum_1_1Math_1_1Matrix4.html</anchorfile>
      <anchor>a91a49eeea70603cb4446f21abc7e4bf7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>constexpr Vector3&lt; T &gt;</type>
      <name>up</name>
      <anchorfile>classMagnum_1_1Math_1_1Matrix4.html</anchorfile>
      <anchor>a88f6c8989599bc19e72dfdb6fa51d872</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Vector3&lt; T &gt; &amp;</type>
      <name>backward</name>
      <anchorfile>classMagnum_1_1Math_1_1Matrix4.html</anchorfile>
      <anchor>abbb01409dd273bb1f0f00b4d251d096f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>constexpr Vector3&lt; T &gt;</type>
      <name>backward</name>
      <anchorfile>classMagnum_1_1Math_1_1Matrix4.html</anchorfile>
      <anchor>a0a0cc1891edf68c4c3fb382521c474bc</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Vector3&lt; T &gt; &amp;</type>
      <name>translation</name>
      <anchorfile>classMagnum_1_1Math_1_1Matrix4.html</anchorfile>
      <anchor>a9a2876c4f7d3f3af31defa3af839f8ef</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>constexpr Vector3&lt; T &gt;</type>
      <name>translation</name>
      <anchorfile>classMagnum_1_1Math_1_1Matrix4.html</anchorfile>
      <anchor>a925ea442a6d8e964ec4b598afce3ae23</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Matrix4&lt; T &gt;</type>
      <name>invertedRigid</name>
      <anchorfile>classMagnum_1_1Math_1_1Matrix4.html</anchorfile>
      <anchor>abeb1abab1ff39721909c3d0f9ee27500</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Vector3&lt; T &gt;</type>
      <name>transformVector</name>
      <anchorfile>classMagnum_1_1Math_1_1Matrix4.html</anchorfile>
      <anchor>a11d32c7ef893c2b46be17909b8e459e2</anchor>
      <arglist>(const Vector3&lt; T &gt; &amp;vector) const </arglist>
    </member>
    <member kind="function">
      <type>Vector3&lt; T &gt;</type>
      <name>transformPoint</name>
      <anchorfile>classMagnum_1_1Math_1_1Matrix4.html</anchorfile>
      <anchor>a06e09bd8b0113dad4e8f5b1b5edb6cac</anchor>
      <arglist>(const Vector3&lt; T &gt; &amp;vector) const </arglist>
    </member>
    <member kind="function" static="yes">
      <type>static constexpr Matrix4&lt; T &gt;</type>
      <name>translation</name>
      <anchorfile>classMagnum_1_1Math_1_1Matrix4.html</anchorfile>
      <anchor>a45c6efa069510006c721f6668c1085aa</anchor>
      <arglist>(const Vector3&lt; T &gt; &amp;vector)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static constexpr Matrix4&lt; T &gt;</type>
      <name>scaling</name>
      <anchorfile>classMagnum_1_1Math_1_1Matrix4.html</anchorfile>
      <anchor>af7be765c3968058eaa46212573d08f51</anchor>
      <arglist>(const Vector3&lt; T &gt; &amp;vector)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Matrix4&lt; T &gt;</type>
      <name>rotation</name>
      <anchorfile>classMagnum_1_1Math_1_1Matrix4.html</anchorfile>
      <anchor>a33c92542c8fa696eccb4ab1a988b197e</anchor>
      <arglist>(Rad&lt; T &gt; angle, const Vector3&lt; T &gt; &amp;normalizedAxis)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Matrix4&lt; T &gt;</type>
      <name>rotationX</name>
      <anchorfile>classMagnum_1_1Math_1_1Matrix4.html</anchorfile>
      <anchor>af13627059189e2a41972bc050fc64380</anchor>
      <arglist>(Rad&lt; T &gt; angle)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Matrix4&lt; T &gt;</type>
      <name>rotationY</name>
      <anchorfile>classMagnum_1_1Math_1_1Matrix4.html</anchorfile>
      <anchor>afb3faf19d351e69287e62a9a1b5a58d9</anchor>
      <arglist>(Rad&lt; T &gt; angle)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Matrix4&lt; T &gt;</type>
      <name>rotationZ</name>
      <anchorfile>classMagnum_1_1Math_1_1Matrix4.html</anchorfile>
      <anchor>a4233c4525af0e29ca99f036b48ecd4cb</anchor>
      <arglist>(Rad&lt; T &gt; angle)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Matrix4&lt; T &gt;</type>
      <name>reflection</name>
      <anchorfile>classMagnum_1_1Math_1_1Matrix4.html</anchorfile>
      <anchor>ac873401ad2ba0868ab7d6ee0bafc1a0d</anchor>
      <arglist>(const Vector3&lt; T &gt; &amp;normal)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static constexpr Matrix4&lt; T &gt;</type>
      <name>shearingXY</name>
      <anchorfile>classMagnum_1_1Math_1_1Matrix4.html</anchorfile>
      <anchor>aaf0d40fe677b13ce587cd60fc770a503</anchor>
      <arglist>(T amountX, T amountY)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static constexpr Matrix4&lt; T &gt;</type>
      <name>shearingXZ</name>
      <anchorfile>classMagnum_1_1Math_1_1Matrix4.html</anchorfile>
      <anchor>af45de8e18101c8d5c3a207d2528cd966</anchor>
      <arglist>(T amountX, T amountZ)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static constexpr Matrix4&lt; T &gt;</type>
      <name>shearingYZ</name>
      <anchorfile>classMagnum_1_1Math_1_1Matrix4.html</anchorfile>
      <anchor>a39ca88e718fab9bf21d22aa6a633deb3</anchor>
      <arglist>(T amountY, T amountZ)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Matrix4&lt; T &gt;</type>
      <name>orthographicProjection</name>
      <anchorfile>classMagnum_1_1Math_1_1Matrix4.html</anchorfile>
      <anchor>a41a7c41a0f1c450758fa0e91c31f9bf6</anchor>
      <arglist>(const Vector2&lt; T &gt; &amp;size, T near, T far)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Matrix4&lt; T &gt;</type>
      <name>perspectiveProjection</name>
      <anchorfile>classMagnum_1_1Math_1_1Matrix4.html</anchorfile>
      <anchor>aeed8f8ff2daedc28b7e3638e8e4ded47</anchor>
      <arglist>(const Vector2&lt; T &gt; &amp;size, T near, T far)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Matrix4&lt; T &gt;</type>
      <name>perspectiveProjection</name>
      <anchorfile>classMagnum_1_1Math_1_1Matrix4.html</anchorfile>
      <anchor>a6475b3ef155c9142b890c8133504ae9b</anchor>
      <arglist>(Rad&lt; T &gt; fov, T aspectRatio, T near, T far)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Matrix4&lt; T &gt;</type>
      <name>lookAt</name>
      <anchorfile>classMagnum_1_1Math_1_1Matrix4.html</anchorfile>
      <anchor>a568407217908849afa90cfe99ccf54a7</anchor>
      <arglist>(const Vector3&lt; T &gt; &amp;eye, const Vector3&lt; T &gt; &amp;target, const Vector3&lt; T &gt; &amp;up)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static constexpr Matrix4&lt; T &gt;</type>
      <name>from</name>
      <anchorfile>classMagnum_1_1Math_1_1Matrix4.html</anchorfile>
      <anchor>a557b7e93cc1cf9f0efc3bd972dfa8db5</anchor>
      <arglist>(const Matrix3x3&lt; T &gt; &amp;rotationScaling, const Vector3&lt; T &gt; &amp;translation)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Magnum::Math::Quaternion</name>
    <filename>classMagnum_1_1Math_1_1Quaternion.html</filename>
    <templarg></templarg>
    <member kind="typedef">
      <type>T</type>
      <name>Type</name>
      <anchorfile>classMagnum_1_1Math_1_1Quaternion.html</anchorfile>
      <anchor>ad8794a36ca3182cf7759ce5563dd2b2a</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Quaternion</name>
      <anchorfile>classMagnum_1_1Math_1_1Quaternion.html</anchorfile>
      <anchor>a6fb3a072aa64fa86b17c7d68050e9e33</anchor>
      <arglist>(IdentityInitT=IdentityInit) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Quaternion</name>
      <anchorfile>classMagnum_1_1Math_1_1Quaternion.html</anchorfile>
      <anchor>a087d50f5ec2dbfee5b98d071723a467e</anchor>
      <arglist>(ZeroInitT) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Quaternion</name>
      <anchorfile>classMagnum_1_1Math_1_1Quaternion.html</anchorfile>
      <anchor>a6a9d3810094b75dc70d1523f3d1026d7</anchor>
      <arglist>(NoInitT) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Quaternion</name>
      <anchorfile>classMagnum_1_1Math_1_1Quaternion.html</anchorfile>
      <anchor>a721460f866326e5d476cf5691637a872</anchor>
      <arglist>(const Vector3&lt; T &gt; &amp;vector, T scalar) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Quaternion</name>
      <anchorfile>classMagnum_1_1Math_1_1Quaternion.html</anchorfile>
      <anchor>ac062b38ffc6436c59cc92f3dfbebf96c</anchor>
      <arglist>(const Vector3&lt; T &gt; &amp;vector) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Quaternion</name>
      <anchorfile>classMagnum_1_1Math_1_1Quaternion.html</anchorfile>
      <anchor>a9e99bc7d5af3164714cc89fed50d7d41</anchor>
      <arglist>(const Quaternion&lt; U &gt; &amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Quaternion</name>
      <anchorfile>classMagnum_1_1Math_1_1Quaternion.html</anchorfile>
      <anchor>aa6b2a61b3a9910aa83480acfa6de23ac</anchor>
      <arglist>(const U &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Quaternion</name>
      <anchorfile>classMagnum_1_1Math_1_1Quaternion.html</anchorfile>
      <anchor>ab174407328d03d9386fa98b7db21b8f9</anchor>
      <arglist>(const Quaternion&lt; T &gt; &amp;) noexcept=default</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>operator U</name>
      <anchorfile>classMagnum_1_1Math_1_1Quaternion.html</anchorfile>
      <anchor>a66b0277cc76359b85310a7314f2ebaa8</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classMagnum_1_1Math_1_1Quaternion.html</anchorfile>
      <anchor>a7d1ccb1c47b3c7838f89a1dd16a57009</anchor>
      <arglist>(const Quaternion&lt; T &gt; &amp;other) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>classMagnum_1_1Math_1_1Quaternion.html</anchorfile>
      <anchor>a18a8349cf92fb8984832b45d6a0049f0</anchor>
      <arglist>(const Quaternion&lt; T &gt; &amp;other) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isNormalized</name>
      <anchorfile>classMagnum_1_1Math_1_1Quaternion.html</anchorfile>
      <anchor>aee7b9e25d7c4a123a1b8e2281dec5f76</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>constexpr const Vector3&lt; T &gt;</type>
      <name>vector</name>
      <anchorfile>classMagnum_1_1Math_1_1Quaternion.html</anchorfile>
      <anchor>acd11bb53ad86079d5160978301dc4bc1</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>constexpr T</type>
      <name>scalar</name>
      <anchorfile>classMagnum_1_1Math_1_1Quaternion.html</anchorfile>
      <anchor>aa41736c0616729a1ce88f927d9871841</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Rad&lt; T &gt;</type>
      <name>angle</name>
      <anchorfile>classMagnum_1_1Math_1_1Quaternion.html</anchorfile>
      <anchor>a17d6cc438d23e4eeb3d39b1809097c87</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Vector3&lt; T &gt;</type>
      <name>axis</name>
      <anchorfile>classMagnum_1_1Math_1_1Quaternion.html</anchorfile>
      <anchor>a5b71185f79b2506620ba0690bf35b022</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Matrix3x3&lt; T &gt;</type>
      <name>toMatrix</name>
      <anchorfile>classMagnum_1_1Math_1_1Quaternion.html</anchorfile>
      <anchor>ab2492c714e37dd51593f060dea954e8f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Quaternion&lt; T &gt; &amp;</type>
      <name>operator+=</name>
      <anchorfile>classMagnum_1_1Math_1_1Quaternion.html</anchorfile>
      <anchor>af978cb442efcd8cdc60926804931fdee</anchor>
      <arglist>(const Quaternion&lt; T &gt; &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>Quaternion&lt; T &gt;</type>
      <name>operator+</name>
      <anchorfile>classMagnum_1_1Math_1_1Quaternion.html</anchorfile>
      <anchor>a412fb17edf8385a70b62cbd1e879870d</anchor>
      <arglist>(const Quaternion&lt; T &gt; &amp;other) const </arglist>
    </member>
    <member kind="function">
      <type>Quaternion&lt; T &gt;</type>
      <name>operator-</name>
      <anchorfile>classMagnum_1_1Math_1_1Quaternion.html</anchorfile>
      <anchor>ae7db6931b27e84432958e91827fd42c5</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Quaternion&lt; T &gt; &amp;</type>
      <name>operator-=</name>
      <anchorfile>classMagnum_1_1Math_1_1Quaternion.html</anchorfile>
      <anchor>a3a15af5b5aa430c3cae4e8c19893e2d5</anchor>
      <arglist>(const Quaternion&lt; T &gt; &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>Quaternion&lt; T &gt;</type>
      <name>operator-</name>
      <anchorfile>classMagnum_1_1Math_1_1Quaternion.html</anchorfile>
      <anchor>ab4ad3d87399aeb497d73c6b3ea64af25</anchor>
      <arglist>(const Quaternion&lt; T &gt; &amp;other) const </arglist>
    </member>
    <member kind="function">
      <type>Quaternion&lt; T &gt; &amp;</type>
      <name>operator*=</name>
      <anchorfile>classMagnum_1_1Math_1_1Quaternion.html</anchorfile>
      <anchor>aa218a09fbb29bd84d307a4c64975ce9d</anchor>
      <arglist>(T scalar)</arglist>
    </member>
    <member kind="function">
      <type>Quaternion&lt; T &gt;</type>
      <name>operator*</name>
      <anchorfile>classMagnum_1_1Math_1_1Quaternion.html</anchorfile>
      <anchor>a758e5fb3324661122bad73bfcdfa5727</anchor>
      <arglist>(T scalar) const </arglist>
    </member>
    <member kind="function">
      <type>Quaternion&lt; T &gt; &amp;</type>
      <name>operator/=</name>
      <anchorfile>classMagnum_1_1Math_1_1Quaternion.html</anchorfile>
      <anchor>ac3e12b812a058b938eef2857fcf32379</anchor>
      <arglist>(T scalar)</arglist>
    </member>
    <member kind="function">
      <type>Quaternion&lt; T &gt;</type>
      <name>operator/</name>
      <anchorfile>classMagnum_1_1Math_1_1Quaternion.html</anchorfile>
      <anchor>a1c0a781ce1e87398405a6794fa128349</anchor>
      <arglist>(T scalar) const </arglist>
    </member>
    <member kind="function">
      <type>Quaternion&lt; T &gt;</type>
      <name>operator*</name>
      <anchorfile>classMagnum_1_1Math_1_1Quaternion.html</anchorfile>
      <anchor>a6057775d20ed61e4b69d5c4918e64d5d</anchor>
      <arglist>(const Quaternion&lt; T &gt; &amp;other) const </arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>dot</name>
      <anchorfile>classMagnum_1_1Math_1_1Quaternion.html</anchorfile>
      <anchor>a89f8b0fe35f4a4b2f6b53f2d2b27278e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>length</name>
      <anchorfile>classMagnum_1_1Math_1_1Quaternion.html</anchorfile>
      <anchor>afa7bc3f00b9fd6f5542652336931710c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Quaternion&lt; T &gt;</type>
      <name>normalized</name>
      <anchorfile>classMagnum_1_1Math_1_1Quaternion.html</anchorfile>
      <anchor>a206e8a8986aa4438f9413a98e43f2718</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Quaternion&lt; T &gt;</type>
      <name>conjugated</name>
      <anchorfile>classMagnum_1_1Math_1_1Quaternion.html</anchorfile>
      <anchor>a2d3b59ac07b454d8384d1caa088fdc34</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Quaternion&lt; T &gt;</type>
      <name>inverted</name>
      <anchorfile>classMagnum_1_1Math_1_1Quaternion.html</anchorfile>
      <anchor>ad5c192db4ba52f34767596a5ac7d58f1</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Quaternion&lt; T &gt;</type>
      <name>invertedNormalized</name>
      <anchorfile>classMagnum_1_1Math_1_1Quaternion.html</anchorfile>
      <anchor>af33e3d9a33fc0d738a94dd1494259d84</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Vector3&lt; T &gt;</type>
      <name>transformVector</name>
      <anchorfile>classMagnum_1_1Math_1_1Quaternion.html</anchorfile>
      <anchor>a123d31e1d749f715ebc4c215e0f2beea</anchor>
      <arglist>(const Vector3&lt; T &gt; &amp;vector) const </arglist>
    </member>
    <member kind="function">
      <type>Vector3&lt; T &gt;</type>
      <name>transformVectorNormalized</name>
      <anchorfile>classMagnum_1_1Math_1_1Quaternion.html</anchorfile>
      <anchor>a287c563a0549f94781eb7536629e97a3</anchor>
      <arglist>(const Vector3&lt; T &gt; &amp;vector) const </arglist>
    </member>
    <member kind="function" static="yes">
      <type>static T</type>
      <name>dot</name>
      <anchorfile>classMagnum_1_1Math_1_1Quaternion.html</anchorfile>
      <anchor>ac40c304a4b01f3ebda3669c040563069</anchor>
      <arglist>(const Quaternion&lt; T &gt; &amp;a, const Quaternion&lt; T &gt; &amp;b)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Rad&lt; T &gt;</type>
      <name>angle</name>
      <anchorfile>classMagnum_1_1Math_1_1Quaternion.html</anchorfile>
      <anchor>a4a1189ce258c1fdd8afd0aac41537131</anchor>
      <arglist>(const Quaternion&lt; T &gt; &amp;normalizedA, const Quaternion&lt; T &gt; &amp;normalizedB)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Quaternion&lt; T &gt;</type>
      <name>lerp</name>
      <anchorfile>classMagnum_1_1Math_1_1Quaternion.html</anchorfile>
      <anchor>a2537032a707be014300e59b2e3d99dc3</anchor>
      <arglist>(const Quaternion&lt; T &gt; &amp;normalizedA, const Quaternion&lt; T &gt; &amp;normalizedB, T t)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Quaternion&lt; T &gt;</type>
      <name>slerp</name>
      <anchorfile>classMagnum_1_1Math_1_1Quaternion.html</anchorfile>
      <anchor>ab032cc7ee418f17ac4a2e71edc5ae4e0</anchor>
      <arglist>(const Quaternion&lt; T &gt; &amp;normalizedA, const Quaternion&lt; T &gt; &amp;normalizedB, T t)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Quaternion&lt; T &gt;</type>
      <name>rotation</name>
      <anchorfile>classMagnum_1_1Math_1_1Quaternion.html</anchorfile>
      <anchor>accba70d55affe884d8086110a130475a</anchor>
      <arglist>(Rad&lt; T &gt; angle, const Vector3&lt; T &gt; &amp;normalizedAxis)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Quaternion&lt; T &gt;</type>
      <name>fromMatrix</name>
      <anchorfile>classMagnum_1_1Math_1_1Quaternion.html</anchorfile>
      <anchor>aae9f73fca12e7b81ff5b45bdb34cc039</anchor>
      <arglist>(const Matrix3x3&lt; T &gt; &amp;matrix)</arglist>
    </member>
    <member kind="friend" protection="private">
      <type>friend class</type>
      <name>Quaternion</name>
      <anchorfile>classMagnum_1_1Math_1_1Quaternion.html</anchorfile>
      <anchor>a729ccff4b30d70c486ea1a4226ab686f</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>dot</name>
      <anchorfile>classMagnum_1_1Math_1_1Quaternion.html</anchorfile>
      <anchor>a24a478c9463275d440061899c3630a32</anchor>
      <arglist>(const Quaternion&lt; T &gt; &amp;a, const Quaternion&lt; T &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>Rad&lt; T &gt;</type>
      <name>angle</name>
      <anchorfile>classMagnum_1_1Math_1_1Quaternion.html</anchorfile>
      <anchor>a77252a59dcbaf44761edc9213f0e5927</anchor>
      <arglist>(const Quaternion&lt; T &gt; &amp;normalizedA, const Quaternion&lt; T &gt; &amp;normalizedB)</arglist>
    </member>
    <member kind="function">
      <type>Quaternion&lt; T &gt;</type>
      <name>lerp</name>
      <anchorfile>classMagnum_1_1Math_1_1Quaternion.html</anchorfile>
      <anchor>a702539c58371af1c8635c2bc60e3e0a5</anchor>
      <arglist>(const Quaternion&lt; T &gt; &amp;normalizedA, const Quaternion&lt; T &gt; &amp;normalizedB, T t)</arglist>
    </member>
    <member kind="function">
      <type>Quaternion&lt; T &gt;</type>
      <name>slerp</name>
      <anchorfile>classMagnum_1_1Math_1_1Quaternion.html</anchorfile>
      <anchor>aa52d32b2fcb66f28a4330fb39fa50589</anchor>
      <arglist>(const Quaternion&lt; T &gt; &amp;normalizedA, const Quaternion&lt; T &gt; &amp;normalizedB, T t)</arglist>
    </member>
    <member kind="function">
      <type>Quaternion&lt; T &gt;</type>
      <name>operator*</name>
      <anchorfile>classMagnum_1_1Math_1_1Quaternion.html</anchorfile>
      <anchor>aa4d97b56f445bf1f096838634d723a3c</anchor>
      <arglist>(T scalar, const Quaternion&lt; T &gt; &amp;quaternion)</arglist>
    </member>
    <member kind="function">
      <type>Quaternion&lt; T &gt;</type>
      <name>operator/</name>
      <anchorfile>classMagnum_1_1Math_1_1Quaternion.html</anchorfile>
      <anchor>ad46afcb9966fa5007b579ff41442abaa</anchor>
      <arglist>(T scalar, const Quaternion&lt; T &gt; &amp;quaternion)</arglist>
    </member>
    <member kind="function">
      <type>Corrade::Utility::Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>classMagnum_1_1Math_1_1Quaternion.html</anchorfile>
      <anchor>a03f030af72160303a9934d7a9af40f37</anchor>
      <arglist>(Corrade::Utility::Debug &amp;debug, const Quaternion&lt; T &gt; &amp;value)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Magnum::Math::Rad</name>
    <filename>classMagnum_1_1Math_1_1Rad.html</filename>
    <templarg>T</templarg>
    <base>Unit&lt; Rad, T &gt;</base>
    <member kind="function">
      <type>constexpr</type>
      <name>Rad</name>
      <anchorfile>classMagnum_1_1Math_1_1Rad.html</anchorfile>
      <anchor>ac2379e7bd29ee10507bbcaf9e2fb7074</anchor>
      <arglist>(ZeroInitT=ZeroInit) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Rad</name>
      <anchorfile>classMagnum_1_1Math_1_1Rad.html</anchorfile>
      <anchor>a0ffa51c6c54c775284fbcdf896e49350</anchor>
      <arglist>(NoInitT) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Rad</name>
      <anchorfile>classMagnum_1_1Math_1_1Rad.html</anchorfile>
      <anchor>a3103647d758537197096e0eeda87aa8a</anchor>
      <arglist>(T value) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Rad</name>
      <anchorfile>classMagnum_1_1Math_1_1Rad.html</anchorfile>
      <anchor>a259baea5e418004734ee1d8d47293648</anchor>
      <arglist>(Unit&lt; Math::Rad, U &gt; value) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Rad</name>
      <anchorfile>classMagnum_1_1Math_1_1Rad.html</anchorfile>
      <anchor>a808735c8f585f24db7e764b231d0f5c2</anchor>
      <arglist>(Unit&lt; Math::Rad, T &gt; value) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Rad</name>
      <anchorfile>classMagnum_1_1Math_1_1Rad.html</anchorfile>
      <anchor>a6666a48047298ac78dda704a21be4dd5</anchor>
      <arglist>(Unit&lt; Deg, T &gt; value)</arglist>
    </member>
    <member kind="function">
      <type>constexpr Rad&lt; Double &gt;</type>
      <name>operator&quot;&quot;_rad</name>
      <anchorfile>classMagnum_1_1Math_1_1Rad.html</anchorfile>
      <anchor>aaf0bfb135a94f2bfd98cae7acc20a495</anchor>
      <arglist>(long double value)</arglist>
    </member>
    <member kind="function">
      <type>constexpr Rad&lt; Float &gt;</type>
      <name>operator&quot;&quot;_radf</name>
      <anchorfile>classMagnum_1_1Math_1_1Rad.html</anchorfile>
      <anchor>a143288fa3c5bea5542c6ab59798d4013</anchor>
      <arglist>(long double value)</arglist>
    </member>
    <member kind="function">
      <type>Corrade::Utility::Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>classMagnum_1_1Math_1_1Rad.html</anchorfile>
      <anchor>a577c8c280a0b3753ef06a23b5b496a3a</anchor>
      <arglist>(Corrade::Utility::Debug &amp;debug, const Unit&lt; Rad, T &gt; &amp;value)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Magnum::Math::Range</name>
    <filename>classMagnum_1_1Math_1_1Range.html</filename>
    <templarg>dimensions</templarg>
    <templarg>T</templarg>
    <member kind="typedef">
      <type>Implementation::RangeTraits&lt; dimensions, T &gt;::Type</type>
      <name>VectorType</name>
      <anchorfile>classMagnum_1_1Math_1_1Range.html</anchorfile>
      <anchor>a9b67475211cb779b753bf6e7c4a0a71b</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Range</name>
      <anchorfile>classMagnum_1_1Math_1_1Range.html</anchorfile>
      <anchor>a9924f26a86ab957d3d7dc232c9cf0fed</anchor>
      <arglist>(ZeroInitT=ZeroInit) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Range</name>
      <anchorfile>classMagnum_1_1Math_1_1Range.html</anchorfile>
      <anchor>a37cf32f96975f2252d535476aee0a0b0</anchor>
      <arglist>(NoInitT) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Range</name>
      <anchorfile>classMagnum_1_1Math_1_1Range.html</anchorfile>
      <anchor>adbcdfa9101feecf1ff90ba5c246997eb</anchor>
      <arglist>(const VectorType &amp;min, const VectorType &amp;max) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Range</name>
      <anchorfile>classMagnum_1_1Math_1_1Range.html</anchorfile>
      <anchor>a42d6842532079884d60019890d0de09d</anchor>
      <arglist>(const Range&lt; dimensions, U &gt; &amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Range</name>
      <anchorfile>classMagnum_1_1Math_1_1Range.html</anchorfile>
      <anchor>a2060f88e1d0f1efe96068ca5341260c9</anchor>
      <arglist>(const U &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Range</name>
      <anchorfile>classMagnum_1_1Math_1_1Range.html</anchorfile>
      <anchor>af98d7db502faa0044a758c879c9d2972</anchor>
      <arglist>(const Range&lt; dimensions, T &gt; &amp;) noexcept=default</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>operator U</name>
      <anchorfile>classMagnum_1_1Math_1_1Range.html</anchorfile>
      <anchor>a3e4433fedea0f498d6bcdea1a984aec8</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>constexpr bool</type>
      <name>operator==</name>
      <anchorfile>classMagnum_1_1Math_1_1Range.html</anchorfile>
      <anchor>a13b922251c81c7db9c2894f290670386</anchor>
      <arglist>(const Range&lt; dimensions, T &gt; &amp;other) const </arglist>
    </member>
    <member kind="function">
      <type>constexpr bool</type>
      <name>operator!=</name>
      <anchorfile>classMagnum_1_1Math_1_1Range.html</anchorfile>
      <anchor>a92733cd0ee541eff518047cefe143662</anchor>
      <arglist>(const Range&lt; dimensions, T &gt; &amp;other) const </arglist>
    </member>
    <member kind="function">
      <type>T *</type>
      <name>data</name>
      <anchorfile>classMagnum_1_1Math_1_1Range.html</anchorfile>
      <anchor>a2715cd7abca4c9c0ede4d3227507495f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>constexpr const T *</type>
      <name>data</name>
      <anchorfile>classMagnum_1_1Math_1_1Range.html</anchorfile>
      <anchor>aab6fc4832ec6db6cfd30eb0075f6d1ec</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>VectorType &amp;</type>
      <name>min</name>
      <anchorfile>classMagnum_1_1Math_1_1Range.html</anchorfile>
      <anchor>ad4919361a2086212fac96da0221e4dcd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>constexpr const VectorType</type>
      <name>min</name>
      <anchorfile>classMagnum_1_1Math_1_1Range.html</anchorfile>
      <anchor>a22af2191e4ab88b45f082ef14aa45185</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>VectorType &amp;</type>
      <name>max</name>
      <anchorfile>classMagnum_1_1Math_1_1Range.html</anchorfile>
      <anchor>ae792027e5ae23ebd90d55f6447746b86</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>constexpr const VectorType</type>
      <name>max</name>
      <anchorfile>classMagnum_1_1Math_1_1Range.html</anchorfile>
      <anchor>a98aa3d62cafaed130433f67ddbcd65a3</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>VectorType</type>
      <name>size</name>
      <anchorfile>classMagnum_1_1Math_1_1Range.html</anchorfile>
      <anchor>a8328c2de860a05e916529171520e7041</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>VectorType</type>
      <name>center</name>
      <anchorfile>classMagnum_1_1Math_1_1Range.html</anchorfile>
      <anchor>a5a374b7a860a80ac95fedd29235652f2</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Range&lt; dimensions, T &gt;</type>
      <name>translated</name>
      <anchorfile>classMagnum_1_1Math_1_1Range.html</anchorfile>
      <anchor>a68d9e8d01c037336459189b76f912ad4</anchor>
      <arglist>(const VectorType &amp;vector) const </arglist>
    </member>
    <member kind="function">
      <type>Range&lt; dimensions, T &gt;</type>
      <name>padded</name>
      <anchorfile>classMagnum_1_1Math_1_1Range.html</anchorfile>
      <anchor>a854aa4f39708f9ef839937836cd5eb00</anchor>
      <arglist>(const VectorType &amp;padding) const </arglist>
    </member>
    <member kind="function">
      <type>Range&lt; dimensions, T &gt;</type>
      <name>scaled</name>
      <anchorfile>classMagnum_1_1Math_1_1Range.html</anchorfile>
      <anchor>a4065a6203ccc5f9609be0019878c111e</anchor>
      <arglist>(const VectorType &amp;scaling) const </arglist>
    </member>
    <member kind="function">
      <type>constexpr bool</type>
      <name>contains</name>
      <anchorfile>classMagnum_1_1Math_1_1Range.html</anchorfile>
      <anchor>a941252e9325679e8e9c2966a13ec1330</anchor>
      <arglist>(const VectorType &amp;a) const </arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Range&lt; dimensions, T &gt;</type>
      <name>fromSize</name>
      <anchorfile>classMagnum_1_1Math_1_1Range.html</anchorfile>
      <anchor>a6c72f85612084d91d80c5c95905b2e32</anchor>
      <arglist>(const VectorType &amp;min, const VectorType &amp;size)</arglist>
    </member>
    <member kind="function">
      <type>Range&lt; dimensions, T &gt;</type>
      <name>join</name>
      <anchorfile>classMagnum_1_1Math_1_1Range.html</anchorfile>
      <anchor>ab1a605df6c5b25fe493c1ee83e2ae6d6</anchor>
      <arglist>(const Range&lt; dimensions, T &gt; &amp;a, const Range&lt; dimensions, T &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>Corrade::Utility::Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>classMagnum_1_1Math_1_1Range.html</anchorfile>
      <anchor>a1f3385fec96840d6f57368596e7b8fe5</anchor>
      <arglist>(Corrade::Utility::Debug &amp;debug, const Range&lt; dimensions, T &gt; &amp;value)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Magnum::Math::Range2D</name>
    <filename>classMagnum_1_1Math_1_1Range2D.html</filename>
    <templarg>T</templarg>
    <base>Range&lt; 2, T &gt;</base>
    <member kind="function">
      <type>constexpr</type>
      <name>Range2D</name>
      <anchorfile>classMagnum_1_1Math_1_1Range2D.html</anchorfile>
      <anchor>ac9b21c1c010f3048b61043bee2196930</anchor>
      <arglist>(ZeroInitT=ZeroInit) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Range2D</name>
      <anchorfile>classMagnum_1_1Math_1_1Range2D.html</anchorfile>
      <anchor>aba01c4477be2625eeac588c1291012f1</anchor>
      <arglist>(NoInitT) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Range2D</name>
      <anchorfile>classMagnum_1_1Math_1_1Range2D.html</anchorfile>
      <anchor>a29a5b08d68619e6f88d1ebcc71a14d7d</anchor>
      <arglist>(const Vector2&lt; T &gt; &amp;min, const Vector2&lt; T &gt; &amp;max) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Range2D</name>
      <anchorfile>classMagnum_1_1Math_1_1Range2D.html</anchorfile>
      <anchor>abf4ff365167312845528c8c29d9fa13b</anchor>
      <arglist>(const Range2D&lt; U &gt; &amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Range2D</name>
      <anchorfile>classMagnum_1_1Math_1_1Range2D.html</anchorfile>
      <anchor>ac6fff4886595aa98843ea4b0143953dc</anchor>
      <arglist>(const U &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Range2D</name>
      <anchorfile>classMagnum_1_1Math_1_1Range2D.html</anchorfile>
      <anchor>ac6b2efabb797a86e2695ae5c52345ad8</anchor>
      <arglist>(const Range&lt; 2, T &gt; &amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type>Vector2&lt; T &gt; &amp;</type>
      <name>bottomLeft</name>
      <anchorfile>classMagnum_1_1Math_1_1Range2D.html</anchorfile>
      <anchor>a72523c0c53c0c1eb52b2bf4ee20ef655</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>constexpr Vector2&lt; T &gt;</type>
      <name>bottomLeft</name>
      <anchorfile>classMagnum_1_1Math_1_1Range2D.html</anchorfile>
      <anchor>a28186724a268176f57686d429e92c5fb</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>constexpr Vector2&lt; T &gt;</type>
      <name>bottomRight</name>
      <anchorfile>classMagnum_1_1Math_1_1Range2D.html</anchorfile>
      <anchor>af3a9755414f0f24198f348d2a42abfa5</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>constexpr Vector2&lt; T &gt;</type>
      <name>topLeft</name>
      <anchorfile>classMagnum_1_1Math_1_1Range2D.html</anchorfile>
      <anchor>a5110b0a07c99cc91ac2ec8e5552dc509</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Vector2&lt; T &gt; &amp;</type>
      <name>topRight</name>
      <anchorfile>classMagnum_1_1Math_1_1Range2D.html</anchorfile>
      <anchor>af722c06c6594f0c95dd8e226ada01e4d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>constexpr Vector2&lt; T &gt;</type>
      <name>topRight</name>
      <anchorfile>classMagnum_1_1Math_1_1Range2D.html</anchorfile>
      <anchor>a04a4c8cbcc28a0bb07f3c3592c3aadf6</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>T &amp;</type>
      <name>left</name>
      <anchorfile>classMagnum_1_1Math_1_1Range2D.html</anchorfile>
      <anchor>ab0045c3d9efc537479a7e1a3b62a3d31</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>constexpr T</type>
      <name>left</name>
      <anchorfile>classMagnum_1_1Math_1_1Range2D.html</anchorfile>
      <anchor>a2fa814e30f4cdad45fa6c380f3d99b8e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>T &amp;</type>
      <name>right</name>
      <anchorfile>classMagnum_1_1Math_1_1Range2D.html</anchorfile>
      <anchor>a6dd0190fea1c0ca659b08761d7de8d21</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>constexpr T</type>
      <name>right</name>
      <anchorfile>classMagnum_1_1Math_1_1Range2D.html</anchorfile>
      <anchor>a8030f3a61af4ff73d63098bb2144a17e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>T &amp;</type>
      <name>bottom</name>
      <anchorfile>classMagnum_1_1Math_1_1Range2D.html</anchorfile>
      <anchor>add87a538ca7568b55d86377b16192226</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>constexpr T</type>
      <name>bottom</name>
      <anchorfile>classMagnum_1_1Math_1_1Range2D.html</anchorfile>
      <anchor>af9bd86239bf1fa1b5369c7c519350186</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>T &amp;</type>
      <name>top</name>
      <anchorfile>classMagnum_1_1Math_1_1Range2D.html</anchorfile>
      <anchor>a304ac9d040df205686a08ec706ccc51a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>constexpr T</type>
      <name>top</name>
      <anchorfile>classMagnum_1_1Math_1_1Range2D.html</anchorfile>
      <anchor>a3a0d317a8bc81ed7244ce7a0cbeb9380</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>sizeX</name>
      <anchorfile>classMagnum_1_1Math_1_1Range2D.html</anchorfile>
      <anchor>ac343ff898317524885afeeb1819fd247</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>sizeY</name>
      <anchorfile>classMagnum_1_1Math_1_1Range2D.html</anchorfile>
      <anchor>a831779452acbec2dd6cee8de64628ba2</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>centerX</name>
      <anchorfile>classMagnum_1_1Math_1_1Range2D.html</anchorfile>
      <anchor>ac8900baf384f28e1128a2996310140ab</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>centerY</name>
      <anchorfile>classMagnum_1_1Math_1_1Range2D.html</anchorfile>
      <anchor>a91bea624576d859dfc812306ee696849</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Magnum::Math::Range3D</name>
    <filename>classMagnum_1_1Math_1_1Range3D.html</filename>
    <templarg></templarg>
    <base>Range&lt; 3, T &gt;</base>
    <member kind="function">
      <type>constexpr</type>
      <name>Range3D</name>
      <anchorfile>classMagnum_1_1Math_1_1Range3D.html</anchorfile>
      <anchor>aee2a2cf6e1d539031eaec09588246646</anchor>
      <arglist>(ZeroInitT=ZeroInit) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Range3D</name>
      <anchorfile>classMagnum_1_1Math_1_1Range3D.html</anchorfile>
      <anchor>ac69dc08457d0394757dbe06a85c5a677</anchor>
      <arglist>(NoInitT) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Range3D</name>
      <anchorfile>classMagnum_1_1Math_1_1Range3D.html</anchorfile>
      <anchor>a9f63b11e3d68bf2ee8ece361412a4691</anchor>
      <arglist>(const Vector3&lt; T &gt; &amp;min, const Vector3&lt; T &gt; &amp;max) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Range3D</name>
      <anchorfile>classMagnum_1_1Math_1_1Range3D.html</anchorfile>
      <anchor>add87562c91ca8368f081f928d9316321</anchor>
      <arglist>(const Range3D&lt; U &gt; &amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Range3D</name>
      <anchorfile>classMagnum_1_1Math_1_1Range3D.html</anchorfile>
      <anchor>aef79c60912137a909ded6985db0a4d67</anchor>
      <arglist>(const U &amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Range3D</name>
      <anchorfile>classMagnum_1_1Math_1_1Range3D.html</anchorfile>
      <anchor>abd079518721f25e5c5881f9cc379d86b</anchor>
      <arglist>(const Range&lt; 3, T &gt; &amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type>Vector3&lt; T &gt; &amp;</type>
      <name>backBottomLeft</name>
      <anchorfile>classMagnum_1_1Math_1_1Range3D.html</anchorfile>
      <anchor>a538d83a3a8dd9886fdee223ad5737025</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>constexpr Vector3&lt; T &gt;</type>
      <name>backBottomLeft</name>
      <anchorfile>classMagnum_1_1Math_1_1Range3D.html</anchorfile>
      <anchor>a6f8f95782a417d42a4a1f04a49bcd8b7</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>constexpr Vector3&lt; T &gt;</type>
      <name>backBottomRight</name>
      <anchorfile>classMagnum_1_1Math_1_1Range3D.html</anchorfile>
      <anchor>a8a998bce02d732ac34201c8781d8029b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>constexpr Vector3&lt; T &gt;</type>
      <name>backTopLeft</name>
      <anchorfile>classMagnum_1_1Math_1_1Range3D.html</anchorfile>
      <anchor>a1fa56481c883b47a8ba9bcbc618527f2</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>constexpr Vector3&lt; T &gt;</type>
      <name>backTopRight</name>
      <anchorfile>classMagnum_1_1Math_1_1Range3D.html</anchorfile>
      <anchor>aeba005985c4d5a6942f4c2c35d3977e6</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Vector3&lt; T &gt; &amp;</type>
      <name>frontTopRight</name>
      <anchorfile>classMagnum_1_1Math_1_1Range3D.html</anchorfile>
      <anchor>acbc3adf04f1660a33114ee8a2be57a9d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>constexpr Vector3&lt; T &gt;</type>
      <name>frontTopRight</name>
      <anchorfile>classMagnum_1_1Math_1_1Range3D.html</anchorfile>
      <anchor>a54e517f25f33374ed63366f37a80e9e3</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>constexpr Vector3&lt; T &gt;</type>
      <name>frontTopLeft</name>
      <anchorfile>classMagnum_1_1Math_1_1Range3D.html</anchorfile>
      <anchor>a6a2a8bc85e302b5cf77a732cafe5d56d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>constexpr Vector3&lt; T &gt;</type>
      <name>frontBottomRight</name>
      <anchorfile>classMagnum_1_1Math_1_1Range3D.html</anchorfile>
      <anchor>af096133e773698478d1a8823764344b7</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>constexpr Vector3&lt; T &gt;</type>
      <name>frontBottomLeft</name>
      <anchorfile>classMagnum_1_1Math_1_1Range3D.html</anchorfile>
      <anchor>a9b7b09345c2f10be039a4ac0bfc711a8</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>T &amp;</type>
      <name>left</name>
      <anchorfile>classMagnum_1_1Math_1_1Range3D.html</anchorfile>
      <anchor>afd3e55f3b41625a536ae0b796ebb1fca</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>constexpr T</type>
      <name>left</name>
      <anchorfile>classMagnum_1_1Math_1_1Range3D.html</anchorfile>
      <anchor>a881369e62ceef4071a25a9509d29cc3f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>T &amp;</type>
      <name>right</name>
      <anchorfile>classMagnum_1_1Math_1_1Range3D.html</anchorfile>
      <anchor>a0c51e4b91035bade69e5cdd749470c9c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>constexpr T</type>
      <name>right</name>
      <anchorfile>classMagnum_1_1Math_1_1Range3D.html</anchorfile>
      <anchor>af8470232c4bff1adae16af274cd72ce5</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>T &amp;</type>
      <name>bottom</name>
      <anchorfile>classMagnum_1_1Math_1_1Range3D.html</anchorfile>
      <anchor>a31e7bbdeeb735e8e3933f86bc185cd53</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>constexpr T</type>
      <name>bottom</name>
      <anchorfile>classMagnum_1_1Math_1_1Range3D.html</anchorfile>
      <anchor>ad720b60207dfcaf485546d837a8104d0</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>T &amp;</type>
      <name>top</name>
      <anchorfile>classMagnum_1_1Math_1_1Range3D.html</anchorfile>
      <anchor>a13c69973eefb791daa1c3effda176b86</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>constexpr T</type>
      <name>top</name>
      <anchorfile>classMagnum_1_1Math_1_1Range3D.html</anchorfile>
      <anchor>acb9ce966395ec274b0aa9bd7b08262e9</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>T &amp;</type>
      <name>back</name>
      <anchorfile>classMagnum_1_1Math_1_1Range3D.html</anchorfile>
      <anchor>a12afe910da6758f65e96a5846186ac66</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>constexpr T</type>
      <name>back</name>
      <anchorfile>classMagnum_1_1Math_1_1Range3D.html</anchorfile>
      <anchor>a3804ed9d7686a97dd2debdfcfe60837f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>T &amp;</type>
      <name>front</name>
      <anchorfile>classMagnum_1_1Math_1_1Range3D.html</anchorfile>
      <anchor>ad82da90dc7bfa8790cbdc563efcdf541</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>constexpr T</type>
      <name>front</name>
      <anchorfile>classMagnum_1_1Math_1_1Range3D.html</anchorfile>
      <anchor>a1c9274369416220e37608a14f700eb0b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>sizeX</name>
      <anchorfile>classMagnum_1_1Math_1_1Range3D.html</anchorfile>
      <anchor>a95ee1cade63d565bf58eb770b588d931</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>sizeY</name>
      <anchorfile>classMagnum_1_1Math_1_1Range3D.html</anchorfile>
      <anchor>adc49246b81080684c96b8256c393987a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>sizeZ</name>
      <anchorfile>classMagnum_1_1Math_1_1Range3D.html</anchorfile>
      <anchor>a966f460b807809ea76a73214b91b9e90</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>centerX</name>
      <anchorfile>classMagnum_1_1Math_1_1Range3D.html</anchorfile>
      <anchor>a3f31653013f83b590a6ddbf5b511236b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>centerY</name>
      <anchorfile>classMagnum_1_1Math_1_1Range3D.html</anchorfile>
      <anchor>a08bda46e66aa11e8a8e586cfd02da140</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>centerZ</name>
      <anchorfile>classMagnum_1_1Math_1_1Range3D.html</anchorfile>
      <anchor>a875a96fc13d29cdd2f9da8fc466ab3e1</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Magnum::Math::RectangularMatrix</name>
    <filename>classMagnum_1_1Math_1_1RectangularMatrix.html</filename>
    <templarg>cols</templarg>
    <templarg>rows</templarg>
    <templarg>T</templarg>
    <member kind="enumvalue">
      <name>Cols</name>
      <anchorfile>classMagnum_1_1Math_1_1RectangularMatrix.html</anchorfile>
      <anchor>a00871b3b1d1e8429a7b83757c8f554d2ab1d8e57eaa8f76414d64eec51b2c69a2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Rows</name>
      <anchorfile>classMagnum_1_1Math_1_1RectangularMatrix.html</anchorfile>
      <anchor>a00871b3b1d1e8429a7b83757c8f554d2ad1257f2c47ba6de49124e584aa29fa5e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DiagonalSize</name>
      <anchorfile>classMagnum_1_1Math_1_1RectangularMatrix.html</anchorfile>
      <anchor>a00871b3b1d1e8429a7b83757c8f554d2af08ebca5bb2c2fbf4d0a2340cbd5b46a</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>T</type>
      <name>Type</name>
      <anchorfile>classMagnum_1_1Math_1_1RectangularMatrix.html</anchorfile>
      <anchor>a518fcd0815a9c2b24b429ffc6a9ef5a7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Cols</name>
      <anchorfile>classMagnum_1_1Math_1_1RectangularMatrix.html</anchorfile>
      <anchor>a00871b3b1d1e8429a7b83757c8f554d2ab1d8e57eaa8f76414d64eec51b2c69a2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Rows</name>
      <anchorfile>classMagnum_1_1Math_1_1RectangularMatrix.html</anchorfile>
      <anchor>a00871b3b1d1e8429a7b83757c8f554d2ad1257f2c47ba6de49124e584aa29fa5e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DiagonalSize</name>
      <anchorfile>classMagnum_1_1Math_1_1RectangularMatrix.html</anchorfile>
      <anchor>a00871b3b1d1e8429a7b83757c8f554d2af08ebca5bb2c2fbf4d0a2340cbd5b46a</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>RectangularMatrix</name>
      <anchorfile>classMagnum_1_1Math_1_1RectangularMatrix.html</anchorfile>
      <anchor>abeb0103eaf56ea2342b5ad73f9970dfa</anchor>
      <arglist>(ZeroInitT=ZeroInit) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>RectangularMatrix</name>
      <anchorfile>classMagnum_1_1Math_1_1RectangularMatrix.html</anchorfile>
      <anchor>a04fb3ef57a300c528475d4f77c190b1b</anchor>
      <arglist>(NoInitT) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>RectangularMatrix</name>
      <anchorfile>classMagnum_1_1Math_1_1RectangularMatrix.html</anchorfile>
      <anchor>a16d0b5cf79623d310c7c5abc9831e5b7</anchor>
      <arglist>(const Vector&lt; rows, T &gt; &amp;first, const U &amp;...next) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>RectangularMatrix</name>
      <anchorfile>classMagnum_1_1Math_1_1RectangularMatrix.html</anchorfile>
      <anchor>a04b9085c6de3a53567f36b45c4eb9225</anchor>
      <arglist>(T value) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>RectangularMatrix</name>
      <anchorfile>classMagnum_1_1Math_1_1RectangularMatrix.html</anchorfile>
      <anchor>a5df773bcf7827a2c23cfc477f73306ca</anchor>
      <arglist>(const RectangularMatrix&lt; cols, rows, U &gt; &amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>RectangularMatrix</name>
      <anchorfile>classMagnum_1_1Math_1_1RectangularMatrix.html</anchorfile>
      <anchor>a3ecfd82db21760be18d560777edc67a5</anchor>
      <arglist>(const U &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>RectangularMatrix</name>
      <anchorfile>classMagnum_1_1Math_1_1RectangularMatrix.html</anchorfile>
      <anchor>a66735ff7cfdf23ff7fc8c8fca466f8e3</anchor>
      <arglist>(const RectangularMatrix&lt; cols, rows, T &gt; &amp;) noexcept=default</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>operator U</name>
      <anchorfile>classMagnum_1_1Math_1_1RectangularMatrix.html</anchorfile>
      <anchor>ae1797564efe6c8c095f4b08320e50f22</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>T *</type>
      <name>data</name>
      <anchorfile>classMagnum_1_1Math_1_1RectangularMatrix.html</anchorfile>
      <anchor>a18852de01a97e7f65398097520364288</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>constexpr const T *</type>
      <name>data</name>
      <anchorfile>classMagnum_1_1Math_1_1RectangularMatrix.html</anchorfile>
      <anchor>aecfcf9ea8076aececd9c70abf0cfcaf9</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; rows, T &gt; &amp;</type>
      <name>operator[]</name>
      <anchorfile>classMagnum_1_1Math_1_1RectangularMatrix.html</anchorfile>
      <anchor>a9bc7bd15bebd143c7eab6dda01b8c647</anchor>
      <arglist>(std::size_t col)</arglist>
    </member>
    <member kind="function">
      <type>constexpr const Vector&lt; rows, T &gt; &amp;</type>
      <name>operator[]</name>
      <anchorfile>classMagnum_1_1Math_1_1RectangularMatrix.html</anchorfile>
      <anchor>a1ba7f4d40b671b6ba65f21a5080a09f6</anchor>
      <arglist>(std::size_t col) const </arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; cols, T &gt;</type>
      <name>row</name>
      <anchorfile>classMagnum_1_1Math_1_1RectangularMatrix.html</anchorfile>
      <anchor>abedb1f8acd1fc9f58f6446baed7491a6</anchor>
      <arglist>(std::size_t row) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setRow</name>
      <anchorfile>classMagnum_1_1Math_1_1RectangularMatrix.html</anchorfile>
      <anchor>afa7d894585174e509984a83ab9e9538a</anchor>
      <arglist>(std::size_t row, const Vector&lt; cols, T &gt; &amp;data)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classMagnum_1_1Math_1_1RectangularMatrix.html</anchorfile>
      <anchor>a04359c5c51fce4ddabd1117aecb9ddae</anchor>
      <arglist>(const RectangularMatrix&lt; cols, rows, T &gt; &amp;other) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>classMagnum_1_1Math_1_1RectangularMatrix.html</anchorfile>
      <anchor>a9ff08e750e5a3937d8edafffd0c3974c</anchor>
      <arglist>(const RectangularMatrix&lt; cols, rows, T &gt; &amp;other) const </arglist>
    </member>
    <member kind="function">
      <type>BoolVector&lt; cols *rows &gt;</type>
      <name>operator&lt;</name>
      <anchorfile>classMagnum_1_1Math_1_1RectangularMatrix.html</anchorfile>
      <anchor>afd58f21f31b6a90b14476edbaf958cd7</anchor>
      <arglist>(const RectangularMatrix&lt; cols, rows, T &gt; &amp;other) const </arglist>
    </member>
    <member kind="function">
      <type>BoolVector&lt; cols *rows &gt;</type>
      <name>operator&lt;=</name>
      <anchorfile>classMagnum_1_1Math_1_1RectangularMatrix.html</anchorfile>
      <anchor>a0902af6f9c2e261bfe3aef19dbfa2093</anchor>
      <arglist>(const RectangularMatrix&lt; cols, rows, T &gt; &amp;other) const </arglist>
    </member>
    <member kind="function">
      <type>BoolVector&lt; cols *rows &gt;</type>
      <name>operator&gt;=</name>
      <anchorfile>classMagnum_1_1Math_1_1RectangularMatrix.html</anchorfile>
      <anchor>a555cffe66d5982a0b7758b57a8ae3f0c</anchor>
      <arglist>(const RectangularMatrix&lt; cols, rows, T &gt; &amp;other) const </arglist>
    </member>
    <member kind="function">
      <type>BoolVector&lt; cols *rows &gt;</type>
      <name>operator&gt;</name>
      <anchorfile>classMagnum_1_1Math_1_1RectangularMatrix.html</anchorfile>
      <anchor>aca71d8ec978feba4f507659cb58974fa</anchor>
      <arglist>(const RectangularMatrix&lt; cols, rows, T &gt; &amp;other) const </arglist>
    </member>
    <member kind="function">
      <type>RectangularMatrix&lt; cols, rows, T &gt;</type>
      <name>operator-</name>
      <anchorfile>classMagnum_1_1Math_1_1RectangularMatrix.html</anchorfile>
      <anchor>a56df3aa8c8cabe7722d2e8a63e143c42</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>RectangularMatrix&lt; cols, rows, T &gt; &amp;</type>
      <name>operator+=</name>
      <anchorfile>classMagnum_1_1Math_1_1RectangularMatrix.html</anchorfile>
      <anchor>adf84e802e22d8196d542bcf8530097a5</anchor>
      <arglist>(const RectangularMatrix&lt; cols, rows, T &gt; &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>RectangularMatrix&lt; cols, rows, T &gt;</type>
      <name>operator+</name>
      <anchorfile>classMagnum_1_1Math_1_1RectangularMatrix.html</anchorfile>
      <anchor>a6308213ae3081318615f7c1ddf4f90a7</anchor>
      <arglist>(const RectangularMatrix&lt; cols, rows, T &gt; &amp;other) const </arglist>
    </member>
    <member kind="function">
      <type>RectangularMatrix&lt; cols, rows, T &gt; &amp;</type>
      <name>operator-=</name>
      <anchorfile>classMagnum_1_1Math_1_1RectangularMatrix.html</anchorfile>
      <anchor>aa15b9de3a8dcc459b1a40d30b1cba635</anchor>
      <arglist>(const RectangularMatrix&lt; cols, rows, T &gt; &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>RectangularMatrix&lt; cols, rows, T &gt;</type>
      <name>operator-</name>
      <anchorfile>classMagnum_1_1Math_1_1RectangularMatrix.html</anchorfile>
      <anchor>a38bb971739f349010623e9f8e6298b66</anchor>
      <arglist>(const RectangularMatrix&lt; cols, rows, T &gt; &amp;other) const </arglist>
    </member>
    <member kind="function">
      <type>RectangularMatrix&lt; cols, rows, T &gt; &amp;</type>
      <name>operator*=</name>
      <anchorfile>classMagnum_1_1Math_1_1RectangularMatrix.html</anchorfile>
      <anchor>a90efff6a6ac599ec3acf6d8de4f375ef</anchor>
      <arglist>(T number)</arglist>
    </member>
    <member kind="function">
      <type>RectangularMatrix&lt; cols, rows, T &gt;</type>
      <name>operator*</name>
      <anchorfile>classMagnum_1_1Math_1_1RectangularMatrix.html</anchorfile>
      <anchor>a9d03c078ef8a3703b58e979664eea089</anchor>
      <arglist>(T number) const </arglist>
    </member>
    <member kind="function">
      <type>RectangularMatrix&lt; cols, rows, T &gt; &amp;</type>
      <name>operator/=</name>
      <anchorfile>classMagnum_1_1Math_1_1RectangularMatrix.html</anchorfile>
      <anchor>ada246062b0ab6ed68fb90392f4e0fc08</anchor>
      <arglist>(T number)</arglist>
    </member>
    <member kind="function">
      <type>RectangularMatrix&lt; cols, rows, T &gt;</type>
      <name>operator/</name>
      <anchorfile>classMagnum_1_1Math_1_1RectangularMatrix.html</anchorfile>
      <anchor>ab1d338c6c37d3fa93ce0fa179847d9d5</anchor>
      <arglist>(T number) const </arglist>
    </member>
    <member kind="function">
      <type>RectangularMatrix&lt; size, rows, T &gt;</type>
      <name>operator*</name>
      <anchorfile>classMagnum_1_1Math_1_1RectangularMatrix.html</anchorfile>
      <anchor>ab343d946420995d745239bec70c6c502</anchor>
      <arglist>(const RectangularMatrix&lt; size, cols, T &gt; &amp;other) const </arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; rows, T &gt;</type>
      <name>operator*</name>
      <anchorfile>classMagnum_1_1Math_1_1RectangularMatrix.html</anchorfile>
      <anchor>ae483fd1aa11f16b9cccdb949cfbce548</anchor>
      <arglist>(const Vector&lt; cols, T &gt; &amp;other) const </arglist>
    </member>
    <member kind="function">
      <type>RectangularMatrix&lt; rows, cols, T &gt;</type>
      <name>transposed</name>
      <anchorfile>classMagnum_1_1Math_1_1RectangularMatrix.html</anchorfile>
      <anchor>afd5bf2dee828b14d2ac5c565982a7ed3</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>constexpr RectangularMatrix&lt; cols, rows, T &gt;</type>
      <name>flippedCols</name>
      <anchorfile>classMagnum_1_1Math_1_1RectangularMatrix.html</anchorfile>
      <anchor>aa1f60a1b3eef57a0af586740665a62be</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>constexpr RectangularMatrix&lt; cols, rows, T &gt;</type>
      <name>flippedRows</name>
      <anchorfile>classMagnum_1_1Math_1_1RectangularMatrix.html</anchorfile>
      <anchor>ade92f4f23889b47feca0e56d2d269d8a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>constexpr Vector&lt; DiagonalSize, T &gt;</type>
      <name>diagonal</name>
      <anchorfile>classMagnum_1_1Math_1_1RectangularMatrix.html</anchorfile>
      <anchor>afed2a91f453117cd2ed5b7005806321c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; rows *cols, T &gt;</type>
      <name>toVector</name>
      <anchorfile>classMagnum_1_1Math_1_1RectangularMatrix.html</anchorfile>
      <anchor>a608d91c19d3c37e98b696c99a45fbee0</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" static="yes">
      <type>static RectangularMatrix&lt; cols, rows, T &gt; &amp;</type>
      <name>from</name>
      <anchorfile>classMagnum_1_1Math_1_1RectangularMatrix.html</anchorfile>
      <anchor>aedde7d7c746be363bf845ebce7496274</anchor>
      <arglist>(T *data)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const RectangularMatrix&lt; cols, rows, T &gt; &amp;</type>
      <name>from</name>
      <anchorfile>classMagnum_1_1Math_1_1RectangularMatrix.html</anchorfile>
      <anchor>a482af1168480ab08df88d4529a71fa2b</anchor>
      <arglist>(const T *data)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static RectangularMatrix&lt; cols, rows, T &gt;</type>
      <name>fromVector</name>
      <anchorfile>classMagnum_1_1Math_1_1RectangularMatrix.html</anchorfile>
      <anchor>aaf45a111900971de89b0448ffafa29c6</anchor>
      <arglist>(const Vector&lt; cols *rows, T &gt; &amp;vector)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static constexpr RectangularMatrix&lt; cols, rows, T &gt;</type>
      <name>fromDiagonal</name>
      <anchorfile>classMagnum_1_1Math_1_1RectangularMatrix.html</anchorfile>
      <anchor>a2b5423dcaab476595937428092187123</anchor>
      <arglist>(const Vector&lt; DiagonalSize, T &gt; &amp;diagonal) noexcept</arglist>
    </member>
    <member kind="function">
      <type>RectangularMatrix&lt; cols, rows, T &gt;</type>
      <name>operator*</name>
      <anchorfile>classMagnum_1_1Math_1_1RectangularMatrix.html</anchorfile>
      <anchor>a2af5b4261c4b9c572e02280dfe4c4ded</anchor>
      <arglist>(T number, const RectangularMatrix&lt; cols, rows, T &gt; &amp;matrix)</arglist>
    </member>
    <member kind="function">
      <type>RectangularMatrix&lt; cols, rows, T &gt;</type>
      <name>operator/</name>
      <anchorfile>classMagnum_1_1Math_1_1RectangularMatrix.html</anchorfile>
      <anchor>ad0953eb681885b46309e31592f2d41fe</anchor>
      <arglist>(T number, const RectangularMatrix&lt; cols, rows, T &gt; &amp;matrix)</arglist>
    </member>
    <member kind="function">
      <type>RectangularMatrix&lt; cols, size, T &gt;</type>
      <name>operator*</name>
      <anchorfile>classMagnum_1_1Math_1_1RectangularMatrix.html</anchorfile>
      <anchor>a2e5256167618367219131497a1e6c806</anchor>
      <arglist>(const Vector&lt; size, T &gt; &amp;vector, const RectangularMatrix&lt; cols, 1, T &gt; &amp;matrix)</arglist>
    </member>
    <member kind="function">
      <type>Corrade::Utility::Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>classMagnum_1_1Math_1_1RectangularMatrix.html</anchorfile>
      <anchor>a2b4c9a90c6ef57998d88efe24b223a07</anchor>
      <arglist>(Corrade::Utility::Debug &amp;debug, const Magnum::Math::RectangularMatrix&lt; cols, rows, T &gt; &amp;value)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Magnum::Math::TypeTraits</name>
    <filename>structMagnum_1_1Math_1_1TypeTraits.html</filename>
    <templarg>T</templarg>
    <member kind="typedef">
      <type>U</type>
      <name>FloatingPointType</name>
      <anchorfile>structMagnum_1_1Math_1_1TypeTraits.html</anchorfile>
      <anchor>a0ec0c970bdf97752fa9570088e942acd</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" static="yes">
      <type>static constexpr const char *</type>
      <name>name</name>
      <anchorfile>structMagnum_1_1Math_1_1TypeTraits.html</anchorfile>
      <anchor>a8429cde176b586538bc81e0a7855d898</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static constexpr T</type>
      <name>epsilon</name>
      <anchorfile>structMagnum_1_1Math_1_1TypeTraits.html</anchorfile>
      <anchor>a915c1572d075ae136a0f89ff11da5567</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>equals</name>
      <anchorfile>structMagnum_1_1Math_1_1TypeTraits.html</anchorfile>
      <anchor>a8e7ba417cfae3d00b717a17afed16152</anchor>
      <arglist>(T a, T b)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>equalsZero</name>
      <anchorfile>structMagnum_1_1Math_1_1TypeTraits.html</anchorfile>
      <anchor>ad617cc41b2cf1fbf78ea45f222e282bd</anchor>
      <arglist>(T a, T magnitude)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Magnum::Math::Unit</name>
    <filename>classMagnum_1_1Math_1_1Unit.html</filename>
    <templarg>Derived</templarg>
    <templarg>T</templarg>
    <member kind="typedef">
      <type>T</type>
      <name>Type</name>
      <anchorfile>classMagnum_1_1Math_1_1Unit.html</anchorfile>
      <anchor>ab2e8497e07678a07d34a06afa2f626e6</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Unit</name>
      <anchorfile>classMagnum_1_1Math_1_1Unit.html</anchorfile>
      <anchor>a9714e781ce84621954ca716011a07bed</anchor>
      <arglist>(ZeroInitT=ZeroInit) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Unit</name>
      <anchorfile>classMagnum_1_1Math_1_1Unit.html</anchorfile>
      <anchor>aae41c717c1a7e3d87249b094e2e7a2cc</anchor>
      <arglist>(NoInitT) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Unit</name>
      <anchorfile>classMagnum_1_1Math_1_1Unit.html</anchorfile>
      <anchor>a12be119a79e2633d6a63bc8725d6254e</anchor>
      <arglist>(T value) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Unit</name>
      <anchorfile>classMagnum_1_1Math_1_1Unit.html</anchorfile>
      <anchor>ad3433bd988806231e5912b8f9c97cd12</anchor>
      <arglist>(Unit&lt; Derived, U &gt; value) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Unit</name>
      <anchorfile>classMagnum_1_1Math_1_1Unit.html</anchorfile>
      <anchor>aef1230eb1f0f105cc5fa361252fd82ba</anchor>
      <arglist>(const Unit&lt; Derived, T &gt; &amp;other) noexcept=default</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>operator T</name>
      <anchorfile>classMagnum_1_1Math_1_1Unit.html</anchorfile>
      <anchor>a060dd8946fbd0b7d568ccdb2181d6dd4</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>constexpr bool</type>
      <name>operator==</name>
      <anchorfile>classMagnum_1_1Math_1_1Unit.html</anchorfile>
      <anchor>aecae7a6e50cd0259e119150c3ac5be8f</anchor>
      <arglist>(Unit&lt; Derived, T &gt; other) const </arglist>
    </member>
    <member kind="function">
      <type>constexpr bool</type>
      <name>operator!=</name>
      <anchorfile>classMagnum_1_1Math_1_1Unit.html</anchorfile>
      <anchor>ad77d8c8304b2f55f69e321e7350e2ec5</anchor>
      <arglist>(Unit&lt; Derived, T &gt; other) const </arglist>
    </member>
    <member kind="function">
      <type>constexpr bool</type>
      <name>operator&lt;</name>
      <anchorfile>classMagnum_1_1Math_1_1Unit.html</anchorfile>
      <anchor>a8e328aba2be9bd15818d5d55d9da5644</anchor>
      <arglist>(Unit&lt; Derived, T &gt; other) const </arglist>
    </member>
    <member kind="function">
      <type>constexpr bool</type>
      <name>operator&gt;</name>
      <anchorfile>classMagnum_1_1Math_1_1Unit.html</anchorfile>
      <anchor>a6ada6eb1cac8298362fa744976173b12</anchor>
      <arglist>(Unit&lt; Derived, T &gt; other) const </arglist>
    </member>
    <member kind="function">
      <type>constexpr bool</type>
      <name>operator&lt;=</name>
      <anchorfile>classMagnum_1_1Math_1_1Unit.html</anchorfile>
      <anchor>aac1b2bb835b4c3e4c063be342c418860</anchor>
      <arglist>(Unit&lt; Derived, T &gt; other) const </arglist>
    </member>
    <member kind="function">
      <type>constexpr bool</type>
      <name>operator&gt;=</name>
      <anchorfile>classMagnum_1_1Math_1_1Unit.html</anchorfile>
      <anchor>ab23269bde76adb76a215ceed699c41f4</anchor>
      <arglist>(Unit&lt; Derived, T &gt; other) const </arglist>
    </member>
    <member kind="function">
      <type>constexpr Unit&lt; Derived, T &gt;</type>
      <name>operator-</name>
      <anchorfile>classMagnum_1_1Math_1_1Unit.html</anchorfile>
      <anchor>ae280b852ad882a1ccb89de1de1cc73c7</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Unit&lt; Derived, T &gt; &amp;</type>
      <name>operator+=</name>
      <anchorfile>classMagnum_1_1Math_1_1Unit.html</anchorfile>
      <anchor>aacb4f2522bf1dd729c588e7f58cbdd84</anchor>
      <arglist>(Unit&lt; Derived, T &gt; other)</arglist>
    </member>
    <member kind="function">
      <type>constexpr Unit&lt; Derived, T &gt;</type>
      <name>operator+</name>
      <anchorfile>classMagnum_1_1Math_1_1Unit.html</anchorfile>
      <anchor>a2291122c678dcd0272b6cbe053138c48</anchor>
      <arglist>(Unit&lt; Derived, T &gt; other) const </arglist>
    </member>
    <member kind="function">
      <type>Unit&lt; Derived, T &gt; &amp;</type>
      <name>operator-=</name>
      <anchorfile>classMagnum_1_1Math_1_1Unit.html</anchorfile>
      <anchor>a331d372da95342b27e44314083b288d6</anchor>
      <arglist>(Unit&lt; Derived, T &gt; other)</arglist>
    </member>
    <member kind="function">
      <type>constexpr Unit&lt; Derived, T &gt;</type>
      <name>operator-</name>
      <anchorfile>classMagnum_1_1Math_1_1Unit.html</anchorfile>
      <anchor>aae35bc84166b8a8de235a468265d6cdc</anchor>
      <arglist>(Unit&lt; Derived, T &gt; other) const </arglist>
    </member>
    <member kind="function">
      <type>Unit&lt; Derived, T &gt; &amp;</type>
      <name>operator*=</name>
      <anchorfile>classMagnum_1_1Math_1_1Unit.html</anchorfile>
      <anchor>a6c362f3be5c210a6a696ae2535bc19c7</anchor>
      <arglist>(T number)</arglist>
    </member>
    <member kind="function">
      <type>constexpr Unit&lt; Derived, T &gt;</type>
      <name>operator*</name>
      <anchorfile>classMagnum_1_1Math_1_1Unit.html</anchorfile>
      <anchor>a34bec93e6d2b4937001ef3bf872a95d5</anchor>
      <arglist>(T number) const </arglist>
    </member>
    <member kind="function">
      <type>Unit&lt; Derived, T &gt; &amp;</type>
      <name>operator/=</name>
      <anchorfile>classMagnum_1_1Math_1_1Unit.html</anchorfile>
      <anchor>a0f6cf00382251fa20c2b3a2a1c5b4424</anchor>
      <arglist>(T number)</arglist>
    </member>
    <member kind="function">
      <type>constexpr Unit&lt; Derived, T &gt;</type>
      <name>operator/</name>
      <anchorfile>classMagnum_1_1Math_1_1Unit.html</anchorfile>
      <anchor>a9eefd6344d69cbf0d2fd7c8032726069</anchor>
      <arglist>(T number) const </arglist>
    </member>
    <member kind="function">
      <type>constexpr T</type>
      <name>operator/</name>
      <anchorfile>classMagnum_1_1Math_1_1Unit.html</anchorfile>
      <anchor>a7ccac99ba500a9c043cd4b240434cb1e</anchor>
      <arglist>(Unit&lt; Derived, T &gt; other) const </arglist>
    </member>
    <member kind="function">
      <type>constexpr Unit&lt; Derived, T &gt;</type>
      <name>operator*</name>
      <anchorfile>classMagnum_1_1Math_1_1Unit.html</anchorfile>
      <anchor>a1cc2f0ac6ddeb4018cd6822ee154e930</anchor>
      <arglist>(typename std::common_type&lt; T &gt;::type number, const Unit&lt; Derived, T &gt; &amp;value)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Magnum::Math::Vector</name>
    <filename>classMagnum_1_1Math_1_1Vector.html</filename>
    <templarg>size</templarg>
    <templarg>T</templarg>
    <member kind="enumvalue">
      <name>Size</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a5bea718d1a6ae8731ff2abe60169cc73a2743ca2e6cd2d98e8248e18a7bfc0b32</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>T</type>
      <name>Type</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a799a265eb81bc32c08a88cedfa104879</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Size</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a5bea718d1a6ae8731ff2abe60169cc73a2743ca2e6cd2d98e8248e18a7bfc0b32</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Vector</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>aef609f61883287f2da4754a7d194d1c9</anchor>
      <arglist>(ZeroInitT=ZeroInit) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Vector</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>ac4607314a44afd4d55f5a8fba1c6cde6</anchor>
      <arglist>(NoInitT) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Vector</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a18ebfc260c5d7553780314ba223c450e</anchor>
      <arglist>(T first, U...next) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Vector</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>abc0b3737f4be19d7fca3c0c928d10269</anchor>
      <arglist>(T value) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Vector</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a87d5b00ae87e9ebc62fb6a1f6c89e88c</anchor>
      <arglist>(const Vector&lt; size, U &gt; &amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Vector</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>ad12afa60a22bbfad159641d28515e63d</anchor>
      <arglist>(const U &amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Vector</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a0a29fb87300604a5b09eca4d6e832450</anchor>
      <arglist>(const Vector&lt; size, T &gt; &amp;) noexcept=default</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>operator U</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a7ea21e43819d2c24a40d4bdbe4c732ec</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>T *</type>
      <name>data</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a3c8693d13c4bb5c98fda71953ea23e1b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>constexpr const T *</type>
      <name>data</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>aa499f6ed07b06982bf1881bc3df4d75f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>T &amp;</type>
      <name>operator[]</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>af1fb6b30bdaf2fb2ebeeae5fcceae660</anchor>
      <arglist>(std::size_t pos)</arglist>
    </member>
    <member kind="function">
      <type>constexpr T</type>
      <name>operator[]</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>af7a1c0969aea6861334031dd21df3aeb</anchor>
      <arglist>(std::size_t pos) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a919d88c687a64fbf439add184fd83e26</anchor>
      <arglist>(const Vector&lt; size, T &gt; &amp;other) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a012b1b785d237f267f01b5eab1128795</anchor>
      <arglist>(const Vector&lt; size, T &gt; &amp;other) const </arglist>
    </member>
    <member kind="function">
      <type>BoolVector&lt; size &gt;</type>
      <name>operator&lt;</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>ade479b15513d5fe5e3e77b58255140a5</anchor>
      <arglist>(const Vector&lt; size, T &gt; &amp;other) const </arglist>
    </member>
    <member kind="function">
      <type>BoolVector&lt; size &gt;</type>
      <name>operator&lt;=</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a98eca28be48e27ce39f71780a1b08b53</anchor>
      <arglist>(const Vector&lt; size, T &gt; &amp;other) const </arglist>
    </member>
    <member kind="function">
      <type>BoolVector&lt; size &gt;</type>
      <name>operator&gt;=</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>af357da6a5a72afa948dfa36b928e81d7</anchor>
      <arglist>(const Vector&lt; size, T &gt; &amp;other) const </arglist>
    </member>
    <member kind="function">
      <type>BoolVector&lt; size &gt;</type>
      <name>operator&gt;</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a81d67cccc8c178c8dbbc62785ff8ce52</anchor>
      <arglist>(const Vector&lt; size, T &gt; &amp;other) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isZero</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a2cf5ab65f37c0c87f894acaa88704fc4</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isNormalized</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a90e3bf3dddebb3e57d1ebf62d4e1e394</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, T &gt;</type>
      <name>operator-</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a2384a93655f0e39fbbf54891634167c9</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, T &gt; &amp;</type>
      <name>operator+=</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>ac0d2c99872bab8dfecdd3e09667c7292</anchor>
      <arglist>(const Vector&lt; size, T &gt; &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, T &gt;</type>
      <name>operator+</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a91f951330a2e574eb22eba396785cf75</anchor>
      <arglist>(const Vector&lt; size, T &gt; &amp;other) const </arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, T &gt; &amp;</type>
      <name>operator-=</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a2879e6a7da21fb210a32731b085e8db4</anchor>
      <arglist>(const Vector&lt; size, T &gt; &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, T &gt;</type>
      <name>operator-</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>af2dafe1a15e8cd4588d03e6ae844aa6d</anchor>
      <arglist>(const Vector&lt; size, T &gt; &amp;other) const </arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, T &gt; &amp;</type>
      <name>operator*=</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>acf36c1445de24bd87912f0a107e51d5b</anchor>
      <arglist>(T number)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, T &gt;</type>
      <name>operator*</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>acb266b5c55a30d7cd871a5c07de8bba4</anchor>
      <arglist>(T number) const </arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, T &gt; &amp;</type>
      <name>operator/=</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>acdea6a05fcd2c83f44107294a436c82a</anchor>
      <arglist>(T number)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, T &gt;</type>
      <name>operator/</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>aac7cb85a8c6c9018536a7cc3a88c52aa</anchor>
      <arglist>(T number) const </arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, T &gt; &amp;</type>
      <name>operator*=</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a212500235cc0ef744d7a0b9e1d443156</anchor>
      <arglist>(const Vector&lt; size, T &gt; &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, T &gt;</type>
      <name>operator*</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>adb264b0fa9decead346d8ad55ea27156</anchor>
      <arglist>(const Vector&lt; size, T &gt; &amp;other) const </arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, T &gt; &amp;</type>
      <name>operator/=</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>afc091891a46419127de515a9714ed9ef</anchor>
      <arglist>(const Vector&lt; size, T &gt; &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, T &gt;</type>
      <name>operator/</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a453483612a7d579a160ce854d42052c6</anchor>
      <arglist>(const Vector&lt; size, T &gt; &amp;other) const </arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>dot</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a27cd08ebde959f77b5f95a25b4e4c433</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>length</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>ab4e8d3ce060ec466ce084f01d2d88c14</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>lengthInverted</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a04f15a7423d2a4f144afb0266844463a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, T &gt;</type>
      <name>normalized</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>aa1678ce501cc313b3432c49ed8eb033c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, T &gt;</type>
      <name>resized</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a0a48a0a0ceff711ff667453721cb6f5f</anchor>
      <arglist>(T length) const </arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, T &gt;</type>
      <name>projected</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a0ee82cf43c67f4a0bcca58b13ae39a96</anchor>
      <arglist>(const Vector&lt; size, T &gt; &amp;line) const </arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, T &gt;</type>
      <name>projectedOntoNormalized</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a91d96dda853b90e29891003ebc394ad5</anchor>
      <arglist>(const Vector&lt; size, T &gt; &amp;line) const </arglist>
    </member>
    <member kind="function">
      <type>constexpr Vector&lt; size, T &gt;</type>
      <name>flipped</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a2f11ab0253d3d99574af9e4e4875dc26</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>sum</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a28add84fe498a71e46d422b9ba31bb84</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>product</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a001c2ede68e794a2b3648004a3b712af</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>min</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>af029f9f7810201f0bd8d9580af273bde</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>max</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a0e5e9bb60ceb49f00569ec9a919e025a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>std::pair&lt; T, T &gt;</type>
      <name>minmax</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a958d3a01ab7b3a416d9d051b23bdee85</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Vector&lt; size, T &gt; &amp;</type>
      <name>from</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>abe9b9bbf9d5a2fdaca278cfab504cbe0</anchor>
      <arglist>(T *data)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const Vector&lt; size, T &gt; &amp;</type>
      <name>from</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a3f9691a1ce7d74a1a59867673f2324e3</anchor>
      <arglist>(const T *data)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static constexpr Vector&lt; size, T &gt;</type>
      <name>pad</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>acfc88ca9f6c47b731a90ef0e1d8ec8c0</anchor>
      <arglist>(const Vector&lt; otherSize, T &gt; &amp;a, T value=T(0))</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static T</type>
      <name>dot</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>af9737bbef2c4c895dfb6f2bdc6426d72</anchor>
      <arglist>(const Vector&lt; size, T &gt; &amp;a, const Vector&lt; size, T &gt; &amp;b)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Rad&lt; T &gt;</type>
      <name>angle</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a8d15d1f369cbb4543d1bd73d7c24f8a8</anchor>
      <arglist>(const Vector&lt; size, T &gt; &amp;normalizedA, const Vector&lt; size, T &gt; &amp;normalizedB)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>dot</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>afcea7c945bee7d210d66d1a47d85944d</anchor>
      <arglist>(const Vector&lt; size, T &gt; &amp;a, const Vector&lt; size, T &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>Rad&lt; T &gt;</type>
      <name>angle</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a754897e5423279be34bfaba81777e51c</anchor>
      <arglist>(const Vector&lt; size, T &gt; &amp;normalizedA, const Vector&lt; size, T &gt; &amp;normalizedB)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, T &gt;</type>
      <name>operator*</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a00e2b338cabfb20cbaf475bc4a74fe5a</anchor>
      <arglist>(T number, const Vector&lt; size, T &gt; &amp;vector)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, T &gt;</type>
      <name>operator/</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>ac602863261ec1a6ff02fe1ec5bffad37</anchor>
      <arglist>(T number, const Vector&lt; size, T &gt; &amp;vector)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt; &amp;</type>
      <name>operator%=</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>ade632882b22533924e5dcd2c8b3f44a1</anchor>
      <arglist>(Vector&lt; size, Integral &gt; &amp;a, Integral b)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt;</type>
      <name>operator%</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a4d5f66e2c273e6ddd6f5d97410778980</anchor>
      <arglist>(const Vector&lt; size, Integral &gt; &amp;a, Integral b)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt; &amp;</type>
      <name>operator%=</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a4a51f33fcbcdb59bc27313898d069769</anchor>
      <arglist>(Vector&lt; size, Integral &gt; &amp;a, const Vector&lt; size, Integral &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt;</type>
      <name>operator%</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>ae757e71a5675609a908ba245919d7b5c</anchor>
      <arglist>(const Vector&lt; size, Integral &gt; &amp;a, const Vector&lt; size, Integral &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt;</type>
      <name>operator~</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a00411ab4b5b07889daa66f136426b4ea</anchor>
      <arglist>(const Vector&lt; size, Integral &gt; &amp;vector)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt; &amp;</type>
      <name>operator&amp;=</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a3b78d1d2ce3be67ea17653af50d19619</anchor>
      <arglist>(Vector&lt; size, Integral &gt; &amp;a, const Vector&lt; size, Integral &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt;</type>
      <name>operator&amp;</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a0238714e940497dcaea6d382a0414d6a</anchor>
      <arglist>(const Vector&lt; size, Integral &gt; &amp;a, const Vector&lt; size, Integral &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt; &amp;</type>
      <name>operator|=</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a5df02285d88aba20bd36f6d4b8ac3c7c</anchor>
      <arglist>(Vector&lt; size, Integral &gt; &amp;a, const Vector&lt; size, Integral &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt;</type>
      <name>operator|</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>ac012aaff8d2971cb052a5dd9a526be2a</anchor>
      <arglist>(const Vector&lt; size, Integral &gt; &amp;a, const Vector&lt; size, Integral &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt; &amp;</type>
      <name>operator^=</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>af87d3deaa8742d561764bec080dbc191</anchor>
      <arglist>(Vector&lt; size, Integral &gt; &amp;a, const Vector&lt; size, Integral &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt;</type>
      <name>operator^</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>af0c70565adfae8fefcdc9e2f204802df</anchor>
      <arglist>(const Vector&lt; size, Integral &gt; &amp;a, const Vector&lt; size, Integral &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt; &amp;</type>
      <name>operator&lt;&lt;=</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a701d71a72018077de086cbacb7af8cde</anchor>
      <arglist>(Vector&lt; size, Integral &gt; &amp;vector, Integral shift)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a36525d8e60373fca36eee6d299daac1f</anchor>
      <arglist>(const Vector&lt; size, Integral &gt; &amp;vector, Integral shift)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt; &amp;</type>
      <name>operator&gt;&gt;=</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>ab1a92b51f3a3ac5ee700196a370a28d0</anchor>
      <arglist>(Vector&lt; size, Integral &gt; &amp;vector, Integral shift)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt;</type>
      <name>operator&gt;&gt;</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a08e4344912fb1df2eafbe4f322c128cd</anchor>
      <arglist>(const Vector&lt; size, Integral &gt; &amp;vector, Integral shift)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt; &amp;</type>
      <name>operator*=</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>aeb4ed8ac931963834097f37248a43a38</anchor>
      <arglist>(Vector&lt; size, Integral &gt; &amp;vector, FloatingPoint number)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt;</type>
      <name>operator*</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a951d0c686b0e14fc4b2c20cdd6c01dfc</anchor>
      <arglist>(const Vector&lt; size, Integral &gt; &amp;vector, FloatingPoint number)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt;</type>
      <name>operator*</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a2dd6210e8bfbcd1306eaecb9ca999c9d</anchor>
      <arglist>(FloatingPoint number, const Vector&lt; size, Integral &gt; &amp;vector)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt; &amp;</type>
      <name>operator/=</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a8ff1ad5c99830e1f120e027119013624</anchor>
      <arglist>(Vector&lt; size, Integral &gt; &amp;vector, FloatingPoint number)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt;</type>
      <name>operator/</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a790689ac947bedb3f294ebfc9aeb686a</anchor>
      <arglist>(const Vector&lt; size, Integral &gt; &amp;vector, FloatingPoint number)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt; &amp;</type>
      <name>operator*=</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a118fb08966b961aafa620802ab232b90</anchor>
      <arglist>(Vector&lt; size, Integral &gt; &amp;a, const Vector&lt; size, FloatingPoint &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt;</type>
      <name>operator*</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a4ca332f0533a3e7577a44495d91b6e74</anchor>
      <arglist>(const Vector&lt; size, Integral &gt; &amp;a, const Vector&lt; size, FloatingPoint &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt;</type>
      <name>operator*</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a6e8e1bd5f68c4bdc2aa32c77acd11791</anchor>
      <arglist>(const Vector&lt; size, FloatingPoint &gt; &amp;a, const Vector&lt; size, Integral &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt; &amp;</type>
      <name>operator/=</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a5877523931df8f205ff225d7580088f8</anchor>
      <arglist>(Vector&lt; size, Integral &gt; &amp;a, const Vector&lt; size, FloatingPoint &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt;</type>
      <name>operator/</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a1da0ed702e57e8ec6464e474497913d8</anchor>
      <arglist>(const Vector&lt; size, Integral &gt; &amp;a, const Vector&lt; size, FloatingPoint &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>Corrade::Utility::Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a342462ce2d3144347242b0c1b0eb2613</anchor>
      <arglist>(Corrade::Utility::Debug &amp;debug, const Vector&lt; size, T &gt; &amp;value)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Magnum::Math::Vector2</name>
    <filename>classMagnum_1_1Math_1_1Vector2.html</filename>
    <templarg>T</templarg>
    <base>Vector&lt; 2, T &gt;</base>
    <member kind="function">
      <type>constexpr</type>
      <name>Vector2</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector2.html</anchorfile>
      <anchor>a17e35d30f59d967caf01fd5367b0915d</anchor>
      <arglist>(ZeroInitT=ZeroInit) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Vector2</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector2.html</anchorfile>
      <anchor>ae39d10df93e68e4d0415ada257e826de</anchor>
      <arglist>(NoInitT) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Vector2</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector2.html</anchorfile>
      <anchor>a594b5a10001b0a5626011490aee1b553</anchor>
      <arglist>(T value) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Vector2</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector2.html</anchorfile>
      <anchor>abc9c7d99a718e2280028cd40cbfcb2c6</anchor>
      <arglist>(T x, T y) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Vector2</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector2.html</anchorfile>
      <anchor>a271e60cacd2cf82cdccc2c6be2d1d832</anchor>
      <arglist>(const Vector&lt; 2, U &gt; &amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Vector2</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector2.html</anchorfile>
      <anchor>ae15a00d470ae74d85596deb6ba5ee32c</anchor>
      <arglist>(const U &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Vector2</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector2.html</anchorfile>
      <anchor>a4f5d0735664c9600830a6cefbdac221c</anchor>
      <arglist>(const Vector&lt; 2, T &gt; &amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type>T &amp;</type>
      <name>x</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector2.html</anchorfile>
      <anchor>a4d5125c64aec36d08023c2e82f6acbdd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>constexpr T</type>
      <name>x</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector2.html</anchorfile>
      <anchor>a6867f8e5d904edc3a0b51b31f3f4c875</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>T &amp;</type>
      <name>y</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector2.html</anchorfile>
      <anchor>a65a74d0a2d9ab8ffa032c2085b2ebc7d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>constexpr T</type>
      <name>y</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector2.html</anchorfile>
      <anchor>a202aeeb65e4673a350d9a90d8e2a06b7</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Vector2&lt; T &gt;</type>
      <name>perpendicular</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector2.html</anchorfile>
      <anchor>afeb5611409a95c72ce8d21efbf3635b0</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>aspectRatio</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector2.html</anchorfile>
      <anchor>adcdf3a06017e8ec98aae3a2adf3e73b2</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" static="yes">
      <type>static constexpr Vector2&lt; T &gt;</type>
      <name>xAxis</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector2.html</anchorfile>
      <anchor>a90795a3ca77e0df1017cdbcb9552e3f5</anchor>
      <arglist>(T length=T(1))</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static constexpr Vector2&lt; T &gt;</type>
      <name>yAxis</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector2.html</anchorfile>
      <anchor>ae842e564c385b5c6d7a3bf6a7710798a</anchor>
      <arglist>(T length=T(1))</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static constexpr Vector2&lt; T &gt;</type>
      <name>xScale</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector2.html</anchorfile>
      <anchor>a0ea3ef7c48c5c304f8ca2304138ead91</anchor>
      <arglist>(T scale)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static constexpr Vector2&lt; T &gt;</type>
      <name>yScale</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector2.html</anchorfile>
      <anchor>ae24066f2e0ad888faeaa839149068586</anchor>
      <arglist>(T scale)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static T</type>
      <name>cross</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector2.html</anchorfile>
      <anchor>a38e98bc84d9a393653eca57c6fe6466e</anchor>
      <arglist>(const Vector2&lt; T &gt; &amp;a, const Vector2&lt; T &gt; &amp;b)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Magnum::Math::Vector3</name>
    <filename>classMagnum_1_1Math_1_1Vector3.html</filename>
    <templarg>T</templarg>
    <base>Vector&lt; 3, T &gt;</base>
    <member kind="function">
      <type>constexpr</type>
      <name>Vector3</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector3.html</anchorfile>
      <anchor>adda67d067f2efe9554e0ee7fe251175d</anchor>
      <arglist>(ZeroInitT=ZeroInit) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Vector3</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector3.html</anchorfile>
      <anchor>a68b81fc43343ea75bb6bd4c705aea7e0</anchor>
      <arglist>(NoInitT) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Vector3</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector3.html</anchorfile>
      <anchor>a61a987b9bd7ae821f95fbe67d4d3a60b</anchor>
      <arglist>(T value) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Vector3</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector3.html</anchorfile>
      <anchor>ae802b9e422b70b200a70b7c8f40625dc</anchor>
      <arglist>(T x, T y, T z) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Vector3</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector3.html</anchorfile>
      <anchor>a75ef10a3f27446ff9bd02b1dd1b5f58d</anchor>
      <arglist>(const Vector2&lt; T &gt; &amp;xy, T z) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Vector3</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector3.html</anchorfile>
      <anchor>a779b7e5a6262b2cfd9577414dc63c716</anchor>
      <arglist>(const Vector&lt; 3, U &gt; &amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Vector3</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector3.html</anchorfile>
      <anchor>a058879e4b043bcd45e4387f5051619cb</anchor>
      <arglist>(const U &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Vector3</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector3.html</anchorfile>
      <anchor>a25e3da8ce96c645cf2a782305a2b12a5</anchor>
      <arglist>(const Vector&lt; 3, T &gt; &amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type>T &amp;</type>
      <name>x</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector3.html</anchorfile>
      <anchor>a30c538699bff804fb2fb205e1e30d207</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>constexpr T</type>
      <name>x</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector3.html</anchorfile>
      <anchor>a67588136815bf00c81e5fbd4cbce17dd</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>T &amp;</type>
      <name>y</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector3.html</anchorfile>
      <anchor>ae51e27f72cf5db9142a8761a4dce56fd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>constexpr T</type>
      <name>y</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector3.html</anchorfile>
      <anchor>aafc310504776bb057d9af029148df55a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>T &amp;</type>
      <name>z</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector3.html</anchorfile>
      <anchor>a194609d99092b9f3443208f355c685ff</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>constexpr T</type>
      <name>z</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector3.html</anchorfile>
      <anchor>a1fe14f31a055c41fa80723ee815ce0c4</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>T &amp;</type>
      <name>r</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector3.html</anchorfile>
      <anchor>a4b90a303fe009795f5a48214da862be9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>constexpr T</type>
      <name>r</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector3.html</anchorfile>
      <anchor>a4f25498c9ebaf5b762ff59dc2b9e2c6c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>T &amp;</type>
      <name>g</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector3.html</anchorfile>
      <anchor>a5635d89362bf6559fb014d0ecabc6813</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>constexpr T</type>
      <name>g</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector3.html</anchorfile>
      <anchor>a212835360c56b8a1f1baa086f469551d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>T &amp;</type>
      <name>b</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector3.html</anchorfile>
      <anchor>a240568b4069ed8aabd9eb7bba3d4a8d2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>constexpr T</type>
      <name>b</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector3.html</anchorfile>
      <anchor>ac0206c89f4d1759986bf852c8958d075</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Vector2&lt; T &gt; &amp;</type>
      <name>xy</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector3.html</anchorfile>
      <anchor>aedf182498210bb6999346591599ffb44</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>constexpr const Vector2&lt; T &gt;</type>
      <name>xy</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector3.html</anchorfile>
      <anchor>ae958b56a59c356d53711b616c15373ae</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" static="yes">
      <type>static constexpr Vector3&lt; T &gt;</type>
      <name>xAxis</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector3.html</anchorfile>
      <anchor>a922be261842df8d174cdcfe1e1eb72da</anchor>
      <arglist>(T length=T(1))</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static constexpr Vector3&lt; T &gt;</type>
      <name>yAxis</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector3.html</anchorfile>
      <anchor>a49a18966ee5980786f9e42162febf82f</anchor>
      <arglist>(T length=T(1))</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static constexpr Vector3&lt; T &gt;</type>
      <name>zAxis</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector3.html</anchorfile>
      <anchor>a9476a5845a4b28caa36c8cb75298f0db</anchor>
      <arglist>(T length=T(1))</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static constexpr Vector3&lt; T &gt;</type>
      <name>xScale</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector3.html</anchorfile>
      <anchor>a2272fdcf3efb0aa0ea7c79e1927c5b91</anchor>
      <arglist>(T scale)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static constexpr Vector3&lt; T &gt;</type>
      <name>yScale</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector3.html</anchorfile>
      <anchor>a84688a819f616d059d472e92c6f80f54</anchor>
      <arglist>(T scale)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static constexpr Vector3&lt; T &gt;</type>
      <name>zScale</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector3.html</anchorfile>
      <anchor>ada1b75b4ea58dfe1771d0593e8c2e071</anchor>
      <arglist>(T scale)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Vector3&lt; T &gt;</type>
      <name>cross</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector3.html</anchorfile>
      <anchor>a03306665111e6ac30efa8f76103fbf5b</anchor>
      <arglist>(const Vector3&lt; T &gt; &amp;a, const Vector3&lt; T &gt; &amp;b)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Magnum::Math::Vector4</name>
    <filename>classMagnum_1_1Math_1_1Vector4.html</filename>
    <templarg>T</templarg>
    <base>Vector&lt; 4, T &gt;</base>
    <member kind="function">
      <type>constexpr</type>
      <name>Vector4</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector4.html</anchorfile>
      <anchor>a858a8009a77b9b4743cbbb72ef6e4c00</anchor>
      <arglist>(ZeroInitT=ZeroInit) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Vector4</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector4.html</anchorfile>
      <anchor>ae6892ff7c3ed4626ea99b73f29bc9235</anchor>
      <arglist>(NoInitT) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Vector4</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector4.html</anchorfile>
      <anchor>ac311a28a30f9ce485a2a61f18c4c801b</anchor>
      <arglist>(T value) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Vector4</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector4.html</anchorfile>
      <anchor>a71c9a0ed0b5b185672501fca3c51a98c</anchor>
      <arglist>(T x, T y, T z, T w) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Vector4</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector4.html</anchorfile>
      <anchor>aff20895adccd77f096e8a454533312a6</anchor>
      <arglist>(const Vector3&lt; T &gt; &amp;xyz, T w) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Vector4</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector4.html</anchorfile>
      <anchor>ab00c86b71d9bb66d4216b31b3b5b86cf</anchor>
      <arglist>(const Vector&lt; 4, U &gt; &amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Vector4</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector4.html</anchorfile>
      <anchor>a485318584ef67c13775b2885efb31671</anchor>
      <arglist>(const U &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Vector4</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector4.html</anchorfile>
      <anchor>a99ad9f8b03a4a5db2bafdd38d0bf820b</anchor>
      <arglist>(const Vector&lt; 4, T &gt; &amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type>T &amp;</type>
      <name>x</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector4.html</anchorfile>
      <anchor>a44cc44ad96da15bf040b711fc433c68e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>constexpr T</type>
      <name>x</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector4.html</anchorfile>
      <anchor>a1d0135600f09946a0012f40955a978c9</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>T &amp;</type>
      <name>y</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector4.html</anchorfile>
      <anchor>a36379d5ad3bf107bae1350b79053162b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>constexpr T</type>
      <name>y</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector4.html</anchorfile>
      <anchor>a7d6e8ed01599c959d6110a038a9972ec</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>T &amp;</type>
      <name>z</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector4.html</anchorfile>
      <anchor>a2ca432de620e30419826ab63d01dc11e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>constexpr T</type>
      <name>z</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector4.html</anchorfile>
      <anchor>ac46deee3786ea4c96a1523ed19d771ee</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>T &amp;</type>
      <name>w</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector4.html</anchorfile>
      <anchor>a7d629f87754fb6f3c588594c4bf23f6a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>constexpr T</type>
      <name>w</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector4.html</anchorfile>
      <anchor>af36c343491d223a1a59f32a3647fe2d5</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>T &amp;</type>
      <name>r</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector4.html</anchorfile>
      <anchor>a63f020a0b0efecc40b7e77a6a5c8faab</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>constexpr T</type>
      <name>r</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector4.html</anchorfile>
      <anchor>a5f033d194de83498996d9e06acadfa27</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>T &amp;</type>
      <name>g</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector4.html</anchorfile>
      <anchor>a0a4427077479ae52b3d208e15c0e915f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>constexpr T</type>
      <name>g</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector4.html</anchorfile>
      <anchor>a52328b1737e3fb03f99877fae64dc4c1</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>T &amp;</type>
      <name>b</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector4.html</anchorfile>
      <anchor>aa6d70fccd810e231fe5b8917d2ce0ab4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>constexpr T</type>
      <name>b</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector4.html</anchorfile>
      <anchor>aa04b6ac15e1a1eafd75276db3083d0b7</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>T &amp;</type>
      <name>a</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector4.html</anchorfile>
      <anchor>ac18be154bdf0d5a6c52f6dbcd1a33139</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>constexpr T</type>
      <name>a</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector4.html</anchorfile>
      <anchor>a86570dd2f007e80ea2289caaafe3422d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Vector3&lt; T &gt; &amp;</type>
      <name>xyz</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector4.html</anchorfile>
      <anchor>a22aae9d118103c82fb5411b8c5616d62</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>constexpr const Vector3&lt; T &gt;</type>
      <name>xyz</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector4.html</anchorfile>
      <anchor>ad353c205bf4adeec70a8203206c1010a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Vector3&lt; T &gt; &amp;</type>
      <name>rgb</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector4.html</anchorfile>
      <anchor>aa731470df39b494e1c65f6d12a2551fd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>constexpr const Vector3&lt; T &gt;</type>
      <name>rgb</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector4.html</anchorfile>
      <anchor>ab097fac7538e99875fecf7aa94e551cb</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Vector2&lt; T &gt; &amp;</type>
      <name>xy</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector4.html</anchorfile>
      <anchor>a3325cd512caa0c56c49bb74a022dc965</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>constexpr const Vector2&lt; T &gt;</type>
      <name>xy</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector4.html</anchorfile>
      <anchor>a772dd8abb03d74d42a88de7b6db48aee</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" static="yes">
      <type>static constexpr Vector4&lt; T &gt;</type>
      <name>pad</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector4.html</anchorfile>
      <anchor>a2ffd1bba90fe992a80655bb192075d4c</anchor>
      <arglist>(const Vector&lt; otherSize, T &gt; &amp;a, T xyz, T w)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Magnum::Math::ZeroInitT</name>
    <filename>structMagnum_1_1Math_1_1ZeroInitT.html</filename>
  </compound>
  <compound kind="class">
    <name>Magnum::Mesh</name>
    <filename>classMagnum_1_1Mesh.html</filename>
    <base>Magnum::AbstractObject</base>
    <member kind="enumeration">
      <type></type>
      <name>IndexType</name>
      <anchorfile>classMagnum_1_1Mesh.html</anchorfile>
      <anchor>abfccffcdef17cdaa3598c3b1a2e48075</anchor>
      <arglist></arglist>
      <enumvalue file="classMagnum_1_1Mesh.html" anchor="abfccffcdef17cdaa3598c3b1a2e48075a8f0fb883eb5a52838534191513e365a2">UnsignedByte</enumvalue>
      <enumvalue file="classMagnum_1_1Mesh.html" anchor="abfccffcdef17cdaa3598c3b1a2e48075aeb51124277f3ec904a9af74d5de34e7b">UnsignedShort</enumvalue>
      <enumvalue file="classMagnum_1_1Mesh.html" anchor="abfccffcdef17cdaa3598c3b1a2e48075ac93cff91b6b9a57fa32bbe1863150070">UnsignedInt</enumvalue>
    </member>
    <member kind="function">
      <type></type>
      <name>Mesh</name>
      <anchorfile>classMagnum_1_1Mesh.html</anchorfile>
      <anchor>a3746c5925172236c239117ce661d19ac</anchor>
      <arglist>(MeshPrimitive primitive=MeshPrimitive::Triangles)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Mesh</name>
      <anchorfile>classMagnum_1_1Mesh.html</anchorfile>
      <anchor>a1905c930f910a090716316b0eb3565c4</anchor>
      <arglist>(NoCreateT) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Mesh</name>
      <anchorfile>classMagnum_1_1Mesh.html</anchorfile>
      <anchor>a97f87b86f424c74726d8152a075839d1</anchor>
      <arglist>(const Mesh &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Mesh</name>
      <anchorfile>classMagnum_1_1Mesh.html</anchorfile>
      <anchor>a4c0ac33e3077873d1ed73ade844d8a36</anchor>
      <arglist>(Mesh &amp;&amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~Mesh</name>
      <anchorfile>classMagnum_1_1Mesh.html</anchorfile>
      <anchor>adc0af9b8033242d701f7390a7beb3f2b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Mesh &amp;</type>
      <name>operator=</name>
      <anchorfile>classMagnum_1_1Mesh.html</anchorfile>
      <anchor>a4fc39ac9ecdf5de9f6aad29adf9123ab</anchor>
      <arglist>(const Mesh &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>Mesh &amp;</type>
      <name>operator=</name>
      <anchorfile>classMagnum_1_1Mesh.html</anchorfile>
      <anchor>a4103378692e6d86dd0e9214ed3b7bcc2</anchor>
      <arglist>(Mesh &amp;&amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type>GLuint</type>
      <name>id</name>
      <anchorfile>classMagnum_1_1Mesh.html</anchorfile>
      <anchor>a2f3cd47249794132c096e8277676f86a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>GLuint</type>
      <name>release</name>
      <anchorfile>classMagnum_1_1Mesh.html</anchorfile>
      <anchor>a539b287178b6b9f41be113fa6bcc6376</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>label</name>
      <anchorfile>classMagnum_1_1Mesh.html</anchorfile>
      <anchor>ad7a1435dcb967905194bb427b10686e8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Mesh &amp;</type>
      <name>setLabel</name>
      <anchorfile>classMagnum_1_1Mesh.html</anchorfile>
      <anchor>a566379b5447768229ec417cfff8b3f99</anchor>
      <arglist>(const std::string &amp;label)</arglist>
    </member>
    <member kind="function">
      <type>Mesh &amp;</type>
      <name>setLabel</name>
      <anchorfile>classMagnum_1_1Mesh.html</anchorfile>
      <anchor>adadd4030d73c76216b0d078d66fd273f</anchor>
      <arglist>(const char(&amp;label)[size])</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isIndexed</name>
      <anchorfile>classMagnum_1_1Mesh.html</anchorfile>
      <anchor>a248012bb47fb8a0aca492b75bf8bf323</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>std::size_t</type>
      <name>indexSize</name>
      <anchorfile>classMagnum_1_1Mesh.html</anchorfile>
      <anchor>ad6e653ba5750ff58ab1dd3a80de3d8f3</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>MeshPrimitive</type>
      <name>primitive</name>
      <anchorfile>classMagnum_1_1Mesh.html</anchorfile>
      <anchor>afe6ad7ebbd0d9f258a6aa02fe54dad7d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Mesh &amp;</type>
      <name>setPrimitive</name>
      <anchorfile>classMagnum_1_1Mesh.html</anchorfile>
      <anchor>a94e9ec5110650468d070b692e4cb51b9</anchor>
      <arglist>(MeshPrimitive primitive)</arglist>
    </member>
    <member kind="function">
      <type>Int</type>
      <name>count</name>
      <anchorfile>classMagnum_1_1Mesh.html</anchorfile>
      <anchor>a9a0ca80b80e0a3eabc268a50530243a6</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Mesh &amp;</type>
      <name>setCount</name>
      <anchorfile>classMagnum_1_1Mesh.html</anchorfile>
      <anchor>a4607bcf92ebd363775ae9d3a07d17a65</anchor>
      <arglist>(Int count)</arglist>
    </member>
    <member kind="function">
      <type>Int</type>
      <name>baseVertex</name>
      <anchorfile>classMagnum_1_1Mesh.html</anchorfile>
      <anchor>aa3f8c912a223efa186e6a0c696d3e4f3</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Mesh &amp;</type>
      <name>setBaseVertex</name>
      <anchorfile>classMagnum_1_1Mesh.html</anchorfile>
      <anchor>a954783212d2123649405fa43c9605b6d</anchor>
      <arglist>(Int baseVertex)</arglist>
    </member>
    <member kind="function">
      <type>Int</type>
      <name>instanceCount</name>
      <anchorfile>classMagnum_1_1Mesh.html</anchorfile>
      <anchor>ae72f11b949fc011bc3013367a1a484dd</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Mesh &amp;</type>
      <name>setInstanceCount</name>
      <anchorfile>classMagnum_1_1Mesh.html</anchorfile>
      <anchor>af14bcb36473eabd677305599b7973946</anchor>
      <arglist>(Int count)</arglist>
    </member>
    <member kind="function">
      <type>UnsignedInt</type>
      <name>baseInstance</name>
      <anchorfile>classMagnum_1_1Mesh.html</anchorfile>
      <anchor>a6932465969b544da2007eb12ae02d933</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Mesh &amp;</type>
      <name>setBaseInstance</name>
      <anchorfile>classMagnum_1_1Mesh.html</anchorfile>
      <anchor>a010b01bd1290aa4f3b9518455ad20b5f</anchor>
      <arglist>(UnsignedInt baseInstance)</arglist>
    </member>
    <member kind="function">
      <type>Mesh &amp;</type>
      <name>addVertexBuffer</name>
      <anchorfile>classMagnum_1_1Mesh.html</anchorfile>
      <anchor>a6eae9ace2e9a2685994e459ec5171472</anchor>
      <arglist>(Buffer &amp;buffer, GLintptr offset, const T &amp;...attributes)</arglist>
    </member>
    <member kind="function">
      <type>Mesh &amp;</type>
      <name>addVertexBufferInstanced</name>
      <anchorfile>classMagnum_1_1Mesh.html</anchorfile>
      <anchor>afbb5cc526a7ac7171e8044f49cfef5c3</anchor>
      <arglist>(Buffer &amp;buffer, UnsignedInt divisor, GLintptr offset, const T &amp;...attributes)</arglist>
    </member>
    <member kind="function">
      <type>Mesh &amp;</type>
      <name>addVertexBuffer</name>
      <anchorfile>classMagnum_1_1Mesh.html</anchorfile>
      <anchor>ac53b2540a29346198352e7e39928fdaa</anchor>
      <arglist>(Buffer &amp;buffer, GLintptr offset, GLsizei stride, const DynamicAttribute &amp;attribute)</arglist>
    </member>
    <member kind="function">
      <type>Mesh &amp;</type>
      <name>addVertexBufferInstanced</name>
      <anchorfile>classMagnum_1_1Mesh.html</anchorfile>
      <anchor>a7ca38be777a70b4a6656532a3f2ac9be</anchor>
      <arglist>(Buffer &amp;buffer, UnsignedInt divisor, GLintptr offset, GLsizei stride, const DynamicAttribute &amp;attribute)</arglist>
    </member>
    <member kind="function">
      <type>Mesh &amp;</type>
      <name>setIndexBuffer</name>
      <anchorfile>classMagnum_1_1Mesh.html</anchorfile>
      <anchor>add6f7001115713423739c4656c5fe278</anchor>
      <arglist>(Buffer &amp;buffer, GLintptr offset, IndexType type, UnsignedInt start, UnsignedInt end)</arglist>
    </member>
    <member kind="function">
      <type>Mesh &amp;</type>
      <name>setIndexBuffer</name>
      <anchorfile>classMagnum_1_1Mesh.html</anchorfile>
      <anchor>a841de239ffc49d129250bb93aaccd4c3</anchor>
      <arglist>(Buffer &amp;buffer, GLintptr offset, IndexType type)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>draw</name>
      <anchorfile>classMagnum_1_1Mesh.html</anchorfile>
      <anchor>a259e2c81219d6ccf2d5c25286e07c3db</anchor>
      <arglist>(AbstractShaderProgram &amp;shader)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>draw</name>
      <anchorfile>classMagnum_1_1Mesh.html</anchorfile>
      <anchor>a67698989ef7e089d47d85e2e7e0e8b8d</anchor>
      <arglist>(AbstractShaderProgram &amp;&amp;shader)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>draw</name>
      <anchorfile>classMagnum_1_1Mesh.html</anchorfile>
      <anchor>a4920c4959246e4e5b3a03d62b15a14aa</anchor>
      <arglist>(AbstractShaderProgram &amp;shader, TransformFeedback &amp;xfb, UnsignedInt stream=0)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>draw</name>
      <anchorfile>classMagnum_1_1Mesh.html</anchorfile>
      <anchor>ad657cf8128bc08adcb4d9f2639bea376</anchor>
      <arglist>(AbstractShaderProgram &amp;&amp;shader, TransformFeedback &amp;xfb, UnsignedInt stream=0)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Int</type>
      <name>maxVertexAttributes</name>
      <anchorfile>classMagnum_1_1Mesh.html</anchorfile>
      <anchor>a2772961c6ebb13f1825a0811bd259cea</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Long</type>
      <name>maxElementIndex</name>
      <anchorfile>classMagnum_1_1Mesh.html</anchorfile>
      <anchor>a03b2a3cab227cf6d2f0f1a1cd93896a6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Int</type>
      <name>maxElementsIndices</name>
      <anchorfile>classMagnum_1_1Mesh.html</anchorfile>
      <anchor>a0eaa24176ff33705155d660a44a1bc55</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Int</type>
      <name>maxElementsVertices</name>
      <anchorfile>classMagnum_1_1Mesh.html</anchorfile>
      <anchor>abb1d788d933cbe4119c60a4858dc6438</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::size_t</type>
      <name>indexSize</name>
      <anchorfile>classMagnum_1_1Mesh.html</anchorfile>
      <anchor>a8ee46979669e67f8d5c010b9e0d99a11</anchor>
      <arglist>(IndexType type)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Mesh</type>
      <name>wrap</name>
      <anchorfile>classMagnum_1_1Mesh.html</anchorfile>
      <anchor>a54a413afebcb0f2689fa28e6b1e6fa30</anchor>
      <arglist>(GLuint id, MeshPrimitive primitive=MeshPrimitive::Triangles, ObjectFlags flags={})</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Mesh</type>
      <name>wrap</name>
      <anchorfile>classMagnum_1_1Mesh.html</anchorfile>
      <anchor>affbbad3eaefba2b8f32c88fbf5d2c5e1</anchor>
      <arglist>(GLuint id, ObjectFlags flags)</arglist>
    </member>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>classMagnum_1_1Mesh.html</anchorfile>
      <anchor>a57501c2212f201d21f32303c9bfad36f</anchor>
      <arglist>(Debug &amp;debug, Mesh::IndexType value)</arglist>
    </member>
    <docanchor file="classMagnum_1_1Mesh">Mesh-configuration</docanchor>
    <docanchor file="classMagnum_1_1Mesh">Mesh-configuration-dynamic</docanchor>
    <docanchor file="classMagnum_1_1Mesh">Mesh-performance-optimization</docanchor>
  </compound>
  <compound kind="class">
    <name>Magnum::MeshView</name>
    <filename>classMagnum_1_1MeshView.html</filename>
    <member kind="function">
      <type></type>
      <name>MeshView</name>
      <anchorfile>classMagnum_1_1MeshView.html</anchorfile>
      <anchor>abcfa9f38955e912b7b0efcdb1626682d</anchor>
      <arglist>(Mesh &amp;original)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>MeshView</name>
      <anchorfile>classMagnum_1_1MeshView.html</anchorfile>
      <anchor>a75ec29827814b15055b8722dbb51a2f4</anchor>
      <arglist>(const MeshView &amp;other)=default</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>MeshView</name>
      <anchorfile>classMagnum_1_1MeshView.html</anchorfile>
      <anchor>a99e83e7e03d53921a9083c137eb240b9</anchor>
      <arglist>(MeshView &amp;&amp;other)=delete</arglist>
    </member>
    <member kind="function">
      <type>MeshView &amp;</type>
      <name>operator=</name>
      <anchorfile>classMagnum_1_1MeshView.html</anchorfile>
      <anchor>af7f1896d644d878f4f094e709167a462</anchor>
      <arglist>(const MeshView &amp;)=default</arglist>
    </member>
    <member kind="function">
      <type>MeshView &amp;</type>
      <name>operator=</name>
      <anchorfile>classMagnum_1_1MeshView.html</anchorfile>
      <anchor>a19c8c186c51673fb7d91d08478d395b3</anchor>
      <arglist>(MeshView &amp;&amp;other)=delete</arglist>
    </member>
    <member kind="function">
      <type>Int</type>
      <name>count</name>
      <anchorfile>classMagnum_1_1MeshView.html</anchorfile>
      <anchor>a116484484b51d62b8b9c21d1535270a3</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>MeshView &amp;</type>
      <name>setCount</name>
      <anchorfile>classMagnum_1_1MeshView.html</anchorfile>
      <anchor>a8d9f713923868c8003eb9a55ca6ef08d</anchor>
      <arglist>(Int count)</arglist>
    </member>
    <member kind="function">
      <type>Int</type>
      <name>baseVertex</name>
      <anchorfile>classMagnum_1_1MeshView.html</anchorfile>
      <anchor>a6ba23078bffc250ee4c7d46e88488c4d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>MeshView &amp;</type>
      <name>setBaseVertex</name>
      <anchorfile>classMagnum_1_1MeshView.html</anchorfile>
      <anchor>a15e1df91c11facc6fb3b0018e27f2b3f</anchor>
      <arglist>(Int baseVertex)</arglist>
    </member>
    <member kind="function">
      <type>MeshView &amp;</type>
      <name>setIndexRange</name>
      <anchorfile>classMagnum_1_1MeshView.html</anchorfile>
      <anchor>a5372c94daab8d10a853a2e1c3bf14803</anchor>
      <arglist>(Int first, UnsignedInt start, UnsignedInt end)</arglist>
    </member>
    <member kind="function">
      <type>MeshView &amp;</type>
      <name>setIndexRange</name>
      <anchorfile>classMagnum_1_1MeshView.html</anchorfile>
      <anchor>ae2a83b912b291d6b70310546bb8d90d6</anchor>
      <arglist>(Int first)</arglist>
    </member>
    <member kind="function">
      <type>Int</type>
      <name>instanceCount</name>
      <anchorfile>classMagnum_1_1MeshView.html</anchorfile>
      <anchor>a0e156d6e5f335f04c7cd047edfca99cd</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>MeshView &amp;</type>
      <name>setInstanceCount</name>
      <anchorfile>classMagnum_1_1MeshView.html</anchorfile>
      <anchor>a0b6ba5fead0e1c37212a0ab708fbcc1e</anchor>
      <arglist>(Int count)</arglist>
    </member>
    <member kind="function">
      <type>UnsignedInt</type>
      <name>baseInstance</name>
      <anchorfile>classMagnum_1_1MeshView.html</anchorfile>
      <anchor>aa8fd6660ee761d84e8d8e2b95d762824</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>MeshView &amp;</type>
      <name>setBaseInstance</name>
      <anchorfile>classMagnum_1_1MeshView.html</anchorfile>
      <anchor>af60d9b7ea931b30b3d3c38d24adbdb49</anchor>
      <arglist>(UnsignedInt baseInstance)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>draw</name>
      <anchorfile>classMagnum_1_1MeshView.html</anchorfile>
      <anchor>a1a9bb83919eaf968990cd89f5f8cec00</anchor>
      <arglist>(AbstractShaderProgram &amp;shader)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>draw</name>
      <anchorfile>classMagnum_1_1MeshView.html</anchorfile>
      <anchor>a0b6d5c100105c6571f62f1be5e956365</anchor>
      <arglist>(AbstractShaderProgram &amp;&amp;shader)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>draw</name>
      <anchorfile>classMagnum_1_1MeshView.html</anchorfile>
      <anchor>ac1b7e47ed6f96892434be0e433b1f436</anchor>
      <arglist>(AbstractShaderProgram &amp;shader, TransformFeedback &amp;xfb, UnsignedInt stream=0)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>draw</name>
      <anchorfile>classMagnum_1_1MeshView.html</anchorfile>
      <anchor>a28c9b5df33b3fa0c13284ecf023cfd13</anchor>
      <arglist>(AbstractShaderProgram &amp;&amp;shader, TransformFeedback &amp;xfb, UnsignedInt stream=0)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>draw</name>
      <anchorfile>classMagnum_1_1MeshView.html</anchorfile>
      <anchor>a104021c69be31b96567b9cc7b18ea714</anchor>
      <arglist>(AbstractShaderProgram &amp;shader, std::initializer_list&lt; std::reference_wrapper&lt; MeshView &gt;&gt; meshes)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>draw</name>
      <anchorfile>classMagnum_1_1MeshView.html</anchorfile>
      <anchor>a998c8876868361c83c3c11623c783ff3</anchor>
      <arglist>(AbstractShaderProgram &amp;&amp;shader, std::initializer_list&lt; std::reference_wrapper&lt; MeshView &gt;&gt; meshes)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Magnum::MultisampleTexture</name>
    <filename>classMagnum_1_1MultisampleTexture.html</filename>
    <templarg>dimensions</templarg>
    <base>Magnum::AbstractTexture</base>
    <member kind="enumvalue">
      <name>Dimensions</name>
      <anchorfile>classMagnum_1_1MultisampleTexture.html</anchorfile>
      <anchor>ab326f180022b1f550d177b2ff45767eaac59941f6abe866093b87d91c18260a65</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Dimensions</name>
      <anchorfile>classMagnum_1_1MultisampleTexture.html</anchorfile>
      <anchor>ab326f180022b1f550d177b2ff45767eaac59941f6abe866093b87d91c18260a65</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>MultisampleTexture</name>
      <anchorfile>classMagnum_1_1MultisampleTexture.html</anchorfile>
      <anchor>abf8dedf39ccc686a4b7a142f4662aa5d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>MultisampleTexture</name>
      <anchorfile>classMagnum_1_1MultisampleTexture.html</anchorfile>
      <anchor>a8bcc7ef276784cbf62ef113d3647bee6</anchor>
      <arglist>(NoCreateT) noexcept</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>bindImage</name>
      <anchorfile>classMagnum_1_1MultisampleTexture.html</anchorfile>
      <anchor>ab604127da922943849eafb1872410a71</anchor>
      <arglist>(Int imageUnit, ImageAccess access, ImageFormat format)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>bindImage</name>
      <anchorfile>classMagnum_1_1MultisampleTexture.html</anchorfile>
      <anchor>a8e7a92bc7f2adcc73e171c81aa3f565f</anchor>
      <arglist>(Int imageUnit, Int layer, ImageAccess access, ImageFormat format)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>bindImageLayered</name>
      <anchorfile>classMagnum_1_1MultisampleTexture.html</anchorfile>
      <anchor>a6fdf0f3c03f5ce528d645d638c992384</anchor>
      <arglist>(Int imageUnit, ImageAccess access, ImageFormat format)</arglist>
    </member>
    <member kind="function">
      <type>MultisampleTexture&lt; dimensions &gt; &amp;</type>
      <name>setStorage</name>
      <anchorfile>classMagnum_1_1MultisampleTexture.html</anchorfile>
      <anchor>ad3073428ae29145ce9cd6da43378680b</anchor>
      <arglist>(Int samples, TextureFormat internalFormat, const VectorTypeFor&lt; dimensions, Int &gt; &amp;size, MultisampleTextureSampleLocations sampleLocations=NotFixed)</arglist>
    </member>
    <member kind="function">
      <type>VectorTypeFor&lt; dimensions, Int &gt;</type>
      <name>imageSize</name>
      <anchorfile>classMagnum_1_1MultisampleTexture.html</anchorfile>
      <anchor>aa01384a1e142784a21cc2b08b133fe03</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>invalidateImage</name>
      <anchorfile>classMagnum_1_1MultisampleTexture.html</anchorfile>
      <anchor>ad3fcc0f88c63992f278fc8dc3e465ab8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>invalidateSubImage</name>
      <anchorfile>classMagnum_1_1MultisampleTexture.html</anchorfile>
      <anchor>af1a3972f6cd3bd5f2693ec41fd0e9b5c</anchor>
      <arglist>(const VectorTypeFor&lt; dimensions, Int &gt; &amp;offset, const VectorTypeFor&lt; dimensions, Int &gt; &amp;size)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static VectorTypeFor&lt; dimensions, Int &gt;</type>
      <name>maxSize</name>
      <anchorfile>classMagnum_1_1MultisampleTexture.html</anchorfile>
      <anchor>ad73f623120ee2870a917b85ccf3c0f71</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static MultisampleTexture&lt; dimensions &gt;</type>
      <name>wrap</name>
      <anchorfile>classMagnum_1_1MultisampleTexture.html</anchorfile>
      <anchor>a0819e1babff709cd5dd87e7cdb14cafe</anchor>
      <arglist>(GLuint id, ObjectFlags flags={})</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Magnum::NoCreateT</name>
    <filename>structMagnum_1_1NoCreateT.html</filename>
  </compound>
  <compound kind="struct">
    <name>Magnum::OpenDdl::CharacterLiteral</name>
    <filename>structMagnum_1_1OpenDdl_1_1CharacterLiteral.html</filename>
    <base>ArrayView&lt; const char &gt;</base>
    <member kind="function">
      <type>constexpr</type>
      <name>CharacterLiteral</name>
      <anchorfile>structMagnum_1_1OpenDdl_1_1CharacterLiteral.html</anchorfile>
      <anchor>a4857ec122deba79fca99775f20d49bf1</anchor>
      <arglist>(const char(&amp;string)[size])</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Magnum::OpenDdl::Document</name>
    <filename>classMagnum_1_1OpenDdl_1_1Document.html</filename>
    <member kind="function">
      <type></type>
      <name>Document</name>
      <anchorfile>classMagnum_1_1OpenDdl_1_1Document.html</anchorfile>
      <anchor>a81b3bb36beebb7c356cde21695ac42ee</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Document</name>
      <anchorfile>classMagnum_1_1OpenDdl_1_1Document.html</anchorfile>
      <anchor>a8e10d09a9949e8a51cbe5cb84696bd6e</anchor>
      <arglist>(const Document &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Document</name>
      <anchorfile>classMagnum_1_1OpenDdl_1_1Document.html</anchorfile>
      <anchor>a7c0d54dd3470c5ff8a1c45be215a2a2c</anchor>
      <arglist>(Document &amp;&amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>Document &amp;</type>
      <name>operator=</name>
      <anchorfile>classMagnum_1_1OpenDdl_1_1Document.html</anchorfile>
      <anchor>ad6dc95e6548a673ca6a74fd0de5b315b</anchor>
      <arglist>(const Document &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>Document &amp;</type>
      <name>operator=</name>
      <anchorfile>classMagnum_1_1OpenDdl_1_1Document.html</anchorfile>
      <anchor>aeb290b7daa1fcb285956815eabfcbdb4</anchor>
      <arglist>(Document &amp;&amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>parse</name>
      <anchorfile>classMagnum_1_1OpenDdl_1_1Document.html</anchorfile>
      <anchor>a20d36c2ba73d7972bd5d04e611f1e08f</anchor>
      <arglist>(Containers::ArrayView&lt; const char &gt; data, std::initializer_list&lt; CharacterLiteral &gt; structureIdentifiers, std::initializer_list&lt; CharacterLiteral &gt; propertyIdentifiers)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isEmpty</name>
      <anchorfile>classMagnum_1_1OpenDdl_1_1Document.html</anchorfile>
      <anchor>aa8f2eccf58ea927116c757377d7ccc5c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::optional&lt; Structure &gt;</type>
      <name>findFirstChild</name>
      <anchorfile>classMagnum_1_1OpenDdl_1_1Document.html</anchorfile>
      <anchor>a2d06002360975f159f0b4615832e5c8e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Structure</type>
      <name>firstChild</name>
      <anchorfile>classMagnum_1_1OpenDdl_1_1Document.html</anchorfile>
      <anchor>a769837465e2327c8ce2ad74593869609</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Implementation::StructureList</type>
      <name>children</name>
      <anchorfile>classMagnum_1_1OpenDdl_1_1Document.html</anchorfile>
      <anchor>a4192aa39f904219fbe2ebeb5284ed12d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>std::optional&lt; Structure &gt;</type>
      <name>findFirstChildOf</name>
      <anchorfile>classMagnum_1_1OpenDdl_1_1Document.html</anchorfile>
      <anchor>a1a18654c99099543cc1dd75230ff6caa</anchor>
      <arglist>(Type type) const </arglist>
    </member>
    <member kind="function">
      <type>std::optional&lt; Structure &gt;</type>
      <name>findFirstChildOf</name>
      <anchorfile>classMagnum_1_1OpenDdl_1_1Document.html</anchorfile>
      <anchor>ad4b521c2c1f882e6bf8e694805b2ca13</anchor>
      <arglist>(Int identifier) const </arglist>
    </member>
    <member kind="function">
      <type>std::optional&lt; Structure &gt;</type>
      <name>findFirstChildOf</name>
      <anchorfile>classMagnum_1_1OpenDdl_1_1Document.html</anchorfile>
      <anchor>a827838f8bcfe08e15862f248a7136f2e</anchor>
      <arglist>(std::initializer_list&lt; Int &gt; identifiers) const </arglist>
    </member>
    <member kind="function">
      <type>std::optional&lt; Structure &gt;</type>
      <name>findFirstChildOf</name>
      <anchorfile>classMagnum_1_1OpenDdl_1_1Document.html</anchorfile>
      <anchor>a2db71814797540c50b74600bed7c1494</anchor>
      <arglist>(Containers::ArrayView&lt; const Int &gt; identifiers) const </arglist>
    </member>
    <member kind="function">
      <type>Structure</type>
      <name>firstChildOf</name>
      <anchorfile>classMagnum_1_1OpenDdl_1_1Document.html</anchorfile>
      <anchor>a893aa23b763d320163bea18ce8ab550d</anchor>
      <arglist>(Type type) const </arglist>
    </member>
    <member kind="function">
      <type>Structure</type>
      <name>firstChildOf</name>
      <anchorfile>classMagnum_1_1OpenDdl_1_1Document.html</anchorfile>
      <anchor>a9369f6fdb0f55226a1aaceaba1c5a52c</anchor>
      <arglist>(Int identifier) const </arglist>
    </member>
    <member kind="function">
      <type>Implementation::StructureOfList&lt; sizeof...(T)+1 &gt;</type>
      <name>childrenOf</name>
      <anchorfile>classMagnum_1_1OpenDdl_1_1Document.html</anchorfile>
      <anchor>a11d902047da4a98bea4c69ea3cf951e2</anchor>
      <arglist>(Int identifier, T...identifiers) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>validate</name>
      <anchorfile>classMagnum_1_1OpenDdl_1_1Document.html</anchorfile>
      <anchor>af967ede4c01c3f15d271be858d03d729</anchor>
      <arglist>(Validation::Structures allowedRootStructures, std::initializer_list&lt; Validation::Structure &gt; structures) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Magnum::OpenDdl::Property</name>
    <filename>classMagnum_1_1OpenDdl_1_1Property.html</filename>
    <member kind="function">
      <type>Int</type>
      <name>identifier</name>
      <anchorfile>classMagnum_1_1OpenDdl_1_1Property.html</anchorfile>
      <anchor>aa9b9a2094bf5dbd44d919ba221490138</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isTypeCompatibleWith</name>
      <anchorfile>classMagnum_1_1OpenDdl_1_1Property.html</anchorfile>
      <anchor>a0c2baca4a302f6a1488bf2e70c294891</anchor>
      <arglist>(PropertyType type) const </arglist>
    </member>
    <member kind="function">
      <type>const T &amp;</type>
      <name>as</name>
      <anchorfile>classMagnum_1_1OpenDdl_1_1Property.html</anchorfile>
      <anchor>a26178e40a3dfff726d49fc5c8c3afae6</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>std::optional&lt; Structure &gt;</type>
      <name>asReference</name>
      <anchorfile>classMagnum_1_1OpenDdl_1_1Property.html</anchorfile>
      <anchor>ae8e35e3013a148b2a50c5e652e4c292c</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Magnum::OpenDdl::Structure</name>
    <filename>classMagnum_1_1OpenDdl_1_1Structure.html</filename>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classMagnum_1_1OpenDdl_1_1Structure.html</anchorfile>
      <anchor>a0536b187c744a0372dc4964be5a9ccfd</anchor>
      <arglist>(const Structure &amp;other) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>classMagnum_1_1OpenDdl_1_1Structure.html</anchorfile>
      <anchor>a1778df9ec4a0edf2e5d5bb02e254f3ff</anchor>
      <arglist>(const Structure &amp;other) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isCustom</name>
      <anchorfile>classMagnum_1_1OpenDdl_1_1Structure.html</anchorfile>
      <anchor>a17e8f3c2254e5942dfddbdd05fb41659</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Type</type>
      <name>type</name>
      <anchorfile>classMagnum_1_1OpenDdl_1_1Structure.html</anchorfile>
      <anchor>a5061aea9c21c83ae98be0aca9749b7f5</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Int</type>
      <name>identifier</name>
      <anchorfile>classMagnum_1_1OpenDdl_1_1Structure.html</anchorfile>
      <anchor>a2495cf2607367f440c9e2a9c4f0fa99c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>hasName</name>
      <anchorfile>classMagnum_1_1OpenDdl_1_1Structure.html</anchorfile>
      <anchor>a1b2e2ab9a8e639eee171ca13a0abd944</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>name</name>
      <anchorfile>classMagnum_1_1OpenDdl_1_1Structure.html</anchorfile>
      <anchor>ae3c3411fda95af92efc82d5af45e6b94</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>std::size_t</type>
      <name>arraySize</name>
      <anchorfile>classMagnum_1_1OpenDdl_1_1Structure.html</anchorfile>
      <anchor>a925708bab2c12140c2bdc1df0e0b1434</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>std::size_t</type>
      <name>subArraySize</name>
      <anchorfile>classMagnum_1_1OpenDdl_1_1Structure.html</anchorfile>
      <anchor>ae9e022a9f5e169e0e025d98336406782</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const T &amp;</type>
      <name>as</name>
      <anchorfile>classMagnum_1_1OpenDdl_1_1Structure.html</anchorfile>
      <anchor>ae4284062f72657634139e185b44c5b0b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>std::optional&lt; Structure &gt;</type>
      <name>asReference</name>
      <anchorfile>classMagnum_1_1OpenDdl_1_1Structure.html</anchorfile>
      <anchor>a0f6a7b846dd5424a6eb1c508f450627d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Containers::ArrayView&lt; const T &gt;</type>
      <name>asArray</name>
      <anchorfile>classMagnum_1_1OpenDdl_1_1Structure.html</anchorfile>
      <anchor>adbabbc808be9cf4a73cb94dceae9d808</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Containers::Array&lt; std::optional&lt; Structure &gt; &gt;</type>
      <name>asReferenceArray</name>
      <anchorfile>classMagnum_1_1OpenDdl_1_1Structure.html</anchorfile>
      <anchor>acd6cab730e130c0d4935ae385097c1f6</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>std::optional&lt; Structure &gt;</type>
      <name>parent</name>
      <anchorfile>classMagnum_1_1OpenDdl_1_1Structure.html</anchorfile>
      <anchor>a4cd9099e1e6ce07994075050aa6c6053</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>std::optional&lt; Structure &gt;</type>
      <name>findNext</name>
      <anchorfile>classMagnum_1_1OpenDdl_1_1Structure.html</anchorfile>
      <anchor>a899fc540a1b1fefad6781d4b07a3f78c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>std::optional&lt; Structure &gt;</type>
      <name>findNextOf</name>
      <anchorfile>classMagnum_1_1OpenDdl_1_1Structure.html</anchorfile>
      <anchor>ae351f4f3eee95a6bb696a6dad3395a00</anchor>
      <arglist>(Int identifier) const </arglist>
    </member>
    <member kind="function">
      <type>std::optional&lt; Structure &gt;</type>
      <name>findNextOf</name>
      <anchorfile>classMagnum_1_1OpenDdl_1_1Structure.html</anchorfile>
      <anchor>aaef8e48f9bde1c37fc657fc0abeb65b5</anchor>
      <arglist>(std::initializer_list&lt; Int &gt; identifiers) const </arglist>
    </member>
    <member kind="function">
      <type>std::optional&lt; Structure &gt;</type>
      <name>findNextOf</name>
      <anchorfile>classMagnum_1_1OpenDdl_1_1Structure.html</anchorfile>
      <anchor>a0ebf99957148e286e334831ec637e071</anchor>
      <arglist>(Containers::ArrayView&lt; const Int &gt; identifiers) const </arglist>
    </member>
    <member kind="function">
      <type>std::optional&lt; Structure &gt;</type>
      <name>findNextSame</name>
      <anchorfile>classMagnum_1_1OpenDdl_1_1Structure.html</anchorfile>
      <anchor>a88ede310ca0c8f548bd158358c3f3684</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>hasProperties</name>
      <anchorfile>classMagnum_1_1OpenDdl_1_1Structure.html</anchorfile>
      <anchor>aadfaacd424fdef1cadd356fb95b27aff</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Int</type>
      <name>propertyCount</name>
      <anchorfile>classMagnum_1_1OpenDdl_1_1Structure.html</anchorfile>
      <anchor>a43037f379b457dcc625956b9c45042b1</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Implementation::PropertyList</type>
      <name>properties</name>
      <anchorfile>classMagnum_1_1OpenDdl_1_1Structure.html</anchorfile>
      <anchor>a5b4e61e288eea22acef95592ba29922c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>std::optional&lt; Property &gt;</type>
      <name>findPropertyOf</name>
      <anchorfile>classMagnum_1_1OpenDdl_1_1Structure.html</anchorfile>
      <anchor>a1aabdb73140e8fc49cf5eb68ac7c3fac</anchor>
      <arglist>(Int identifier) const </arglist>
    </member>
    <member kind="function">
      <type>Property</type>
      <name>propertyOf</name>
      <anchorfile>classMagnum_1_1OpenDdl_1_1Structure.html</anchorfile>
      <anchor>a7ff94e2d5ade69bcc7d8538648e6195c</anchor>
      <arglist>(Int identifier) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>hasChildren</name>
      <anchorfile>classMagnum_1_1OpenDdl_1_1Structure.html</anchorfile>
      <anchor>a9c12b5d499f2ca68c1fb2ffaab2eda6d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>std::optional&lt; Structure &gt;</type>
      <name>findFirstChild</name>
      <anchorfile>classMagnum_1_1OpenDdl_1_1Structure.html</anchorfile>
      <anchor>ac9c0b34d017981f2a25f79780178f361</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Structure</type>
      <name>firstChild</name>
      <anchorfile>classMagnum_1_1OpenDdl_1_1Structure.html</anchorfile>
      <anchor>a8226934fb9ccbdadea5e1b5d73bbe0c4</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Implementation::StructureList</type>
      <name>children</name>
      <anchorfile>classMagnum_1_1OpenDdl_1_1Structure.html</anchorfile>
      <anchor>a875e8908b582d613790637c1c7f46e9a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>std::optional&lt; Structure &gt;</type>
      <name>findFirstChildOf</name>
      <anchorfile>classMagnum_1_1OpenDdl_1_1Structure.html</anchorfile>
      <anchor>aabd50bd8c4cc68d7ad73b5d5132bff56</anchor>
      <arglist>(Type type) const </arglist>
    </member>
    <member kind="function">
      <type>std::optional&lt; Structure &gt;</type>
      <name>findFirstChildOf</name>
      <anchorfile>classMagnum_1_1OpenDdl_1_1Structure.html</anchorfile>
      <anchor>a16fb7fcd6b8ffca99a369587cbaee05a</anchor>
      <arglist>(Int identifier) const </arglist>
    </member>
    <member kind="function">
      <type>std::optional&lt; Structure &gt;</type>
      <name>findFirstChildOf</name>
      <anchorfile>classMagnum_1_1OpenDdl_1_1Structure.html</anchorfile>
      <anchor>a68a899fa94b8f9694a70ad965e58a426</anchor>
      <arglist>(std::initializer_list&lt; Int &gt; identifiers) const </arglist>
    </member>
    <member kind="function">
      <type>std::optional&lt; Structure &gt;</type>
      <name>findFirstChildOf</name>
      <anchorfile>classMagnum_1_1OpenDdl_1_1Structure.html</anchorfile>
      <anchor>a8be0ffe48dbee47287e16c1b5ece3f73</anchor>
      <arglist>(Containers::ArrayView&lt; const Int &gt; identifiers) const </arglist>
    </member>
    <member kind="function">
      <type>Structure</type>
      <name>firstChildOf</name>
      <anchorfile>classMagnum_1_1OpenDdl_1_1Structure.html</anchorfile>
      <anchor>aa208317d7fea1b72c17276fc95cf913f</anchor>
      <arglist>(Type type) const </arglist>
    </member>
    <member kind="function">
      <type>Structure</type>
      <name>firstChildOf</name>
      <anchorfile>classMagnum_1_1OpenDdl_1_1Structure.html</anchorfile>
      <anchor>a26c8b7c17088e1e05bf2206d4fcf3736</anchor>
      <arglist>(Int identifier) const </arglist>
    </member>
    <member kind="function">
      <type>Implementation::StructureOfList&lt; 1 &gt;</type>
      <name>childrenOf</name>
      <anchorfile>classMagnum_1_1OpenDdl_1_1Structure.html</anchorfile>
      <anchor>a3d56aa52db6557c190372855266ffba1</anchor>
      <arglist>(Int identifier) const </arglist>
    </member>
    <member kind="function">
      <type>Implementation::StructureOfList&lt; sizeof...(T)+1 &gt;</type>
      <name>childrenOf</name>
      <anchorfile>classMagnum_1_1OpenDdl_1_1Structure.html</anchorfile>
      <anchor>acd4f3a8482a133b99b977fa7a7158a3d</anchor>
      <arglist>(Int identifier, T...identifiers) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Magnum::OpenDdl::Validation::Property</name>
    <filename>classMagnum_1_1OpenDdl_1_1Validation_1_1Property.html</filename>
    <member kind="function">
      <type>constexpr</type>
      <name>Property</name>
      <anchorfile>classMagnum_1_1OpenDdl_1_1Validation_1_1Property.html</anchorfile>
      <anchor>a56ccb7cfda54d9c467e5811fbce26f9c</anchor>
      <arglist>(Int identifier, PropertyType type, RequiredPropertyType required)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Magnum::OpenDdl::Validation::RequiredPropertyType</name>
    <filename>structMagnum_1_1OpenDdl_1_1Validation_1_1RequiredPropertyType.html</filename>
  </compound>
  <compound kind="class">
    <name>Magnum::OpenDdl::Validation::Structure</name>
    <filename>classMagnum_1_1OpenDdl_1_1Validation_1_1Structure.html</filename>
    <member kind="function">
      <type></type>
      <name>Structure</name>
      <anchorfile>classMagnum_1_1OpenDdl_1_1Validation_1_1Structure.html</anchorfile>
      <anchor>a0e4fcc701482dce008d5a0ea1ae455b6</anchor>
      <arglist>(Int identifier, Properties properties, Primitives primitives, std::size_t primitiveCount, std::size_t primitiveArraySize, Structures structures={})</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Structure</name>
      <anchorfile>classMagnum_1_1OpenDdl_1_1Validation_1_1Structure.html</anchorfile>
      <anchor>a55047621dc9350aa61737b7762abcd56</anchor>
      <arglist>(Int identifier, Primitives primitives, std::size_t primitiveCount, std::size_t primitiveArraySize, Structures structures={})</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Structure</name>
      <anchorfile>classMagnum_1_1OpenDdl_1_1Validation_1_1Structure.html</anchorfile>
      <anchor>a5191f7a0a7427c90b2cc7cbb18c56348</anchor>
      <arglist>(Int identifier, Properties properties, Structures structures={})</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Structure</name>
      <anchorfile>classMagnum_1_1OpenDdl_1_1Validation_1_1Structure.html</anchorfile>
      <anchor>a26fe4395c4063ffaba9b69293a70116b</anchor>
      <arglist>(Int identifier, Structures structures={})</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Magnum::OpenGLTester</name>
    <filename>classMagnum_1_1OpenGLTester.html</filename>
    <base>Corrade::TestSuite::Tester</base>
    <member kind="enumeration">
      <type></type>
      <name>BenchmarkType</name>
      <anchorfile>classMagnum_1_1OpenGLTester.html</anchorfile>
      <anchor>a1c550714f4893e11c544a73e661371f9</anchor>
      <arglist></arglist>
      <enumvalue file="classMagnum_1_1OpenGLTester.html" anchor="a1c550714f4893e11c544a73e661371f9a7a1920d61156abc05a60135aefe8bc67">Default</enumvalue>
      <enumvalue file="classMagnum_1_1OpenGLTester.html" anchor="a1c550714f4893e11c544a73e661371f9a75fa4d137ea5adb50f81fb3c26229797">WallTime</enumvalue>
      <enumvalue file="classMagnum_1_1OpenGLTester.html" anchor="a1c550714f4893e11c544a73e661371f9a582bcd601669f4956f55cb20feb2614f">CpuTime</enumvalue>
      <enumvalue file="classMagnum_1_1OpenGLTester.html" anchor="a1c550714f4893e11c544a73e661371f9aba0d4b831fbcfdb7788fdfb4e8789207">CpuCycles</enumvalue>
      <enumvalue file="classMagnum_1_1OpenGLTester.html" anchor="a1c550714f4893e11c544a73e661371f9a59078bc2d1f4f1779cbac36845323083">GpuTime</enumvalue>
    </member>
    <member kind="function">
      <type></type>
      <name>OpenGLTester</name>
      <anchorfile>classMagnum_1_1OpenGLTester.html</anchorfile>
      <anchor>a9f8b91d4b0f537702af77f3832c04c40</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addBenchmarks</name>
      <anchorfile>classMagnum_1_1OpenGLTester.html</anchorfile>
      <anchor>a9238091f5ceebd16b0e5f057373e41c4</anchor>
      <arglist>(std::initializer_list&lt; void(Derived::*)()&gt; benchmarks, std::size_t batchCount, BenchmarkType benchmarkType=BenchmarkType::Default)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addBenchmarks</name>
      <anchorfile>classMagnum_1_1OpenGLTester.html</anchorfile>
      <anchor>a170ac411257067a4e9e8b667b2006525</anchor>
      <arglist>(std::initializer_list&lt; void(Derived::*)()&gt; benchmarks, std::size_t batchCount, void(Derived::*setup)(), void(Derived::*teardown)(), BenchmarkType benchmarkType=BenchmarkType::Default)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addInstancedBenchmarks</name>
      <anchorfile>classMagnum_1_1OpenGLTester.html</anchorfile>
      <anchor>af90bc3849be5223de2e45230d929b9ea</anchor>
      <arglist>(std::initializer_list&lt; void(Derived::*)()&gt; benchmarks, std::size_t batchCount, std::size_t instanceCount, BenchmarkType benchmarkType=BenchmarkType::Default)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addInstancedBenchmarks</name>
      <anchorfile>classMagnum_1_1OpenGLTester.html</anchorfile>
      <anchor>a271a10a82ba3d90a1a7979e5362282ee</anchor>
      <arglist>(std::initializer_list&lt; void(Derived::*)()&gt; benchmarks, std::size_t batchCount, std::size_t instanceCount, void(Derived::*setup)(), void(Derived::*teardown)(), BenchmarkType benchmarkType=BenchmarkType::Default)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MAGNUM_VERIFY_NO_ERROR</name>
      <anchorfile>classMagnum_1_1OpenGLTester.html</anchorfile>
      <anchor>acd44b697ab59b3250ec9b99319e2846a</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Magnum::OvrIntegration::Buttons</name>
    <filename>structMagnum_1_1OvrIntegration_1_1Buttons.html</filename>
    <base>EnumSet&lt; Button &gt;</base>
    <member kind="variable" static="yes">
      <type>static constexpr Buttons</type>
      <name>RMask</name>
      <anchorfile>structMagnum_1_1OvrIntegration_1_1Buttons.html</anchorfile>
      <anchor>ac038a6b0d78714d98b69fe99e5dd5d0a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static constexpr Buttons</type>
      <name>LMask</name>
      <anchorfile>structMagnum_1_1OvrIntegration_1_1Buttons.html</anchorfile>
      <anchor>a53e6ef9b933b14671441c815695618d7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static constexpr Buttons</type>
      <name>PrivateMask</name>
      <anchorfile>structMagnum_1_1OvrIntegration_1_1Buttons.html</anchorfile>
      <anchor>a612284da8d143a275e15435a0fa3570a</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Magnum::OvrIntegration::Compositor</name>
    <filename>classMagnum_1_1OvrIntegration_1_1Compositor.html</filename>
    <member kind="function">
      <type></type>
      <name>Compositor</name>
      <anchorfile>classMagnum_1_1OvrIntegration_1_1Compositor.html</anchorfile>
      <anchor>ad26e34795db5d852a4b8de652f4e8f42</anchor>
      <arglist>(const Compositor &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Compositor</name>
      <anchorfile>classMagnum_1_1OvrIntegration_1_1Compositor.html</anchorfile>
      <anchor>a6707c0301cd33fdc6039dea41176e3a6</anchor>
      <arglist>(Compositor &amp;&amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>Compositor &amp;</type>
      <name>operator=</name>
      <anchorfile>classMagnum_1_1OvrIntegration_1_1Compositor.html</anchorfile>
      <anchor>aaa92a83e2888d69c41ae41b83dca2447</anchor>
      <arglist>(const Compositor &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>Compositor &amp;</type>
      <name>operator=</name>
      <anchorfile>classMagnum_1_1OvrIntegration_1_1Compositor.html</anchorfile>
      <anchor>a08f45e9b956e7c9b4bf5b6ef4abb2c0f</anchor>
      <arglist>(Compositor &amp;&amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>Layer &amp;</type>
      <name>addLayer</name>
      <anchorfile>classMagnum_1_1OvrIntegration_1_1Compositor.html</anchorfile>
      <anchor>a0b9a7a09528a2ede23a0cc31028d30d9</anchor>
      <arglist>(LayerType type)</arglist>
    </member>
    <member kind="function">
      <type>LayerEyeFov &amp;</type>
      <name>addLayerEyeFov</name>
      <anchorfile>classMagnum_1_1OvrIntegration_1_1Compositor.html</anchorfile>
      <anchor>a73af2470ce69273019880741326dc6dd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>LayerQuad &amp;</type>
      <name>addLayerQuad</name>
      <anchorfile>classMagnum_1_1OvrIntegration_1_1Compositor.html</anchorfile>
      <anchor>add804d346f57112525f3808ac7eb5eee</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Compositor &amp;</type>
      <name>submitFrame</name>
      <anchorfile>classMagnum_1_1OvrIntegration_1_1Compositor.html</anchorfile>
      <anchor>a68a95040c892970f05e35f19b693bbe7</anchor>
      <arglist>(Session &amp;session)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Magnum::OvrIntegration::Context</name>
    <filename>classMagnum_1_1OvrIntegration_1_1Context.html</filename>
    <member kind="function">
      <type></type>
      <name>Context</name>
      <anchorfile>classMagnum_1_1OvrIntegration_1_1Context.html</anchorfile>
      <anchor>ae365a583bbe41ad3935bc1aa0dc1cd14</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Context</name>
      <anchorfile>classMagnum_1_1OvrIntegration_1_1Context.html</anchorfile>
      <anchor>a4af60bdea85f618c5ecea33b5bfaabec</anchor>
      <arglist>(const Context &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Context</name>
      <anchorfile>classMagnum_1_1OvrIntegration_1_1Context.html</anchorfile>
      <anchor>a5bc0309f7b10dc21a4edd17cfca06d02</anchor>
      <arglist>(Context &amp;&amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>Context &amp;</type>
      <name>operator=</name>
      <anchorfile>classMagnum_1_1OvrIntegration_1_1Context.html</anchorfile>
      <anchor>a181e32882994fea48b29715216168cff</anchor>
      <arglist>(const Context &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>Context &amp;</type>
      <name>operator=</name>
      <anchorfile>classMagnum_1_1OvrIntegration_1_1Context.html</anchorfile>
      <anchor>ac8245dc715cfb680d1d324781295274c</anchor>
      <arglist>(Context &amp;&amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>detect</name>
      <anchorfile>classMagnum_1_1OvrIntegration_1_1Context.html</anchorfile>
      <anchor>ae85fa8c335b9488366b0fbe1fb1425b3</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>std::unique_ptr&lt; Session &gt;</type>
      <name>createSession</name>
      <anchorfile>classMagnum_1_1OvrIntegration_1_1Context.html</anchorfile>
      <anchor>a2acf69a397f1c92be8db374fd6124983</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Compositor &amp;</type>
      <name>compositor</name>
      <anchorfile>classMagnum_1_1OvrIntegration_1_1Context.html</anchorfile>
      <anchor>a6e9f5b8537d891b43382d6d8c924c8cf</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Error</type>
      <name>error</name>
      <anchorfile>classMagnum_1_1OvrIntegration_1_1Context.html</anchorfile>
      <anchor>ab45ea0e24851a0b87cca746c3430ffb1</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" static="yes">
      <type>static DetectResults</type>
      <name>detect</name>
      <anchorfile>classMagnum_1_1OvrIntegration_1_1Context.html</anchorfile>
      <anchor>a6f727d7ae98cbc54c3b8faccb4bf9cdd</anchor>
      <arglist>(Int timeout)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Context &amp;</type>
      <name>get</name>
      <anchorfile>classMagnum_1_1OvrIntegration_1_1Context.html</anchorfile>
      <anchor>a6be091c7c622ecdbaa523777e62be9d6</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Magnum::OvrIntegration::Error</name>
    <filename>structMagnum_1_1OvrIntegration_1_1Error.html</filename>
    <member kind="variable">
      <type>ErrorType</type>
      <name>type</name>
      <anchorfile>structMagnum_1_1OvrIntegration_1_1Error.html</anchorfile>
      <anchor>a8d2cead82acd150ac99ad2d19ae1563d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>message</name>
      <anchorfile>structMagnum_1_1OvrIntegration_1_1Error.html</anchorfile>
      <anchor>a818d89d5cdf9ba840843f588fe612804</anchor>
      <arglist>[512]</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Magnum::OvrIntegration::HeadLockableLayer</name>
    <filename>classMagnum_1_1OvrIntegration_1_1HeadLockableLayer.html</filename>
    <base>Magnum::OvrIntegration::Layer</base>
    <member kind="function">
      <type></type>
      <name>HeadLockableLayer</name>
      <anchorfile>classMagnum_1_1OvrIntegration_1_1HeadLockableLayer.html</anchorfile>
      <anchor>a887d1ceffee76ba55f5d5166c31d30c5</anchor>
      <arglist>(LayerType type)</arglist>
    </member>
    <member kind="function">
      <type>HeadLockableLayer &amp;</type>
      <name>setHeadLocked</name>
      <anchorfile>classMagnum_1_1OvrIntegration_1_1HeadLockableLayer.html</anchorfile>
      <anchor>a22b5cbfa1f602113a92a8e2bc2a88d09</anchor>
      <arglist>(bool headLocked)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isHeadLocked</name>
      <anchorfile>classMagnum_1_1OvrIntegration_1_1HeadLockableLayer.html</anchorfile>
      <anchor>a4552a4fb6c40748712e380fbaf17474c</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Magnum::OvrIntegration::InputState</name>
    <filename>classMagnum_1_1OvrIntegration_1_1InputState.html</filename>
    <member kind="function">
      <type></type>
      <name>InputState</name>
      <anchorfile>classMagnum_1_1OvrIntegration_1_1InputState.html</anchorfile>
      <anchor>aa0d2dc7c20e9bb27b89f41d0b9dcc200</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>InputState</name>
      <anchorfile>classMagnum_1_1OvrIntegration_1_1InputState.html</anchorfile>
      <anchor>a878924fe024423c96be3d04edc923b91</anchor>
      <arglist>(const ovrInputState &amp;state)</arglist>
    </member>
    <member kind="function">
      <type>Buttons</type>
      <name>buttons</name>
      <anchorfile>classMagnum_1_1OvrIntegration_1_1InputState.html</anchorfile>
      <anchor>a07efeb41d92e2063a85322e23e18d3ef</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Touches</type>
      <name>touches</name>
      <anchorfile>classMagnum_1_1OvrIntegration_1_1InputState.html</anchorfile>
      <anchor>a0ef3314e60e21b441cc3b70bc9e4a8aa</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Float</type>
      <name>indexTrigger</name>
      <anchorfile>classMagnum_1_1OvrIntegration_1_1InputState.html</anchorfile>
      <anchor>ac00225c7a23d1c57e71a8635209c9b35</anchor>
      <arglist>(UnsignedInt hand) const </arglist>
    </member>
    <member kind="function">
      <type>Float</type>
      <name>handTrigger</name>
      <anchorfile>classMagnum_1_1OvrIntegration_1_1InputState.html</anchorfile>
      <anchor>abad91f4aaf388b03efaadffeaa529736</anchor>
      <arglist>(UnsignedInt hand) const </arglist>
    </member>
    <member kind="function">
      <type>Vector2</type>
      <name>thumbstick</name>
      <anchorfile>classMagnum_1_1OvrIntegration_1_1InputState.html</anchorfile>
      <anchor>a8ddc324da7db722870f7b589034ffdb4</anchor>
      <arglist>(UnsignedInt hand) const </arglist>
    </member>
    <member kind="function">
      <type>Double</type>
      <name>time</name>
      <anchorfile>classMagnum_1_1OvrIntegration_1_1InputState.html</anchorfile>
      <anchor>afd1d0c1bafa1e8825dbb93bfea4f6f46</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>ControllerType</type>
      <name>controllerType</name>
      <anchorfile>classMagnum_1_1OvrIntegration_1_1InputState.html</anchorfile>
      <anchor>ab613fd398778a552cf6458dd9ff59937</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>::ovrInputState &amp;</type>
      <name>ovrInputState</name>
      <anchorfile>classMagnum_1_1OvrIntegration_1_1InputState.html</anchorfile>
      <anchor>a3d24cbf0ed6bf6273a197abea2ab248f</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Magnum::OvrIntegration::Layer</name>
    <filename>classMagnum_1_1OvrIntegration_1_1Layer.html</filename>
    <member kind="function">
      <type></type>
      <name>Layer</name>
      <anchorfile>classMagnum_1_1OvrIntegration_1_1Layer.html</anchorfile>
      <anchor>ab9b0f106d1c85786beebaba03d3668ca</anchor>
      <arglist>(LayerType type)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Layer</name>
      <anchorfile>classMagnum_1_1OvrIntegration_1_1Layer.html</anchorfile>
      <anchor>a71fb347608defed7eaa02fb607458b71</anchor>
      <arglist>(const Layer &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>Layer &amp;</type>
      <name>operator=</name>
      <anchorfile>classMagnum_1_1OvrIntegration_1_1Layer.html</anchorfile>
      <anchor>a726a01536134b8ebef01264984242e00</anchor>
      <arglist>(const Layer &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>Layer &amp;</type>
      <name>setHighQuality</name>
      <anchorfile>classMagnum_1_1OvrIntegration_1_1Layer.html</anchorfile>
      <anchor>a1b3c3683b4c083ee1516a00611ded54f</anchor>
      <arglist>(bool highQuality)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isHighQuality</name>
      <anchorfile>classMagnum_1_1OvrIntegration_1_1Layer.html</anchorfile>
      <anchor>a08ccf2561fb97c898de3e705515c2b59</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Layer &amp;</type>
      <name>setEnabled</name>
      <anchorfile>classMagnum_1_1OvrIntegration_1_1Layer.html</anchorfile>
      <anchor>a833cbe956654859892c04095ced69b00</anchor>
      <arglist>(bool enabled)</arglist>
    </member>
    <member kind="function">
      <type>LayerType</type>
      <name>layerType</name>
      <anchorfile>classMagnum_1_1OvrIntegration_1_1Layer.html</anchorfile>
      <anchor>a4a520a1359dceff1ed7be55427fb347e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const ovrLayerHeader &amp;</type>
      <name>layerHeader</name>
      <anchorfile>classMagnum_1_1OvrIntegration_1_1Layer.html</anchorfile>
      <anchor>a0aa76790c765722717a2b54f8cb586b1</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Magnum::OvrIntegration::LayerEyeFov</name>
    <filename>classMagnum_1_1OvrIntegration_1_1LayerEyeFov.html</filename>
    <base>Magnum::OvrIntegration::HeadLockableLayer</base>
    <member kind="function">
      <type></type>
      <name>LayerEyeFov</name>
      <anchorfile>classMagnum_1_1OvrIntegration_1_1LayerEyeFov.html</anchorfile>
      <anchor>a47c5eaeb2894573eeb949e1a218e1937</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>LayerEyeFov &amp;</type>
      <name>setColorTexture</name>
      <anchorfile>classMagnum_1_1OvrIntegration_1_1LayerEyeFov.html</anchorfile>
      <anchor>aa9ccac3838d778409bbf3a402b9c62ad</anchor>
      <arglist>(Int eye, const TextureSwapChain &amp;swapChain)</arglist>
    </member>
    <member kind="function">
      <type>LayerEyeFov &amp;</type>
      <name>setViewport</name>
      <anchorfile>classMagnum_1_1OvrIntegration_1_1LayerEyeFov.html</anchorfile>
      <anchor>a7106639162079d4011f727193e31d12c</anchor>
      <arglist>(Int eye, const Range2Di &amp;viewport)</arglist>
    </member>
    <member kind="function">
      <type>LayerEyeFov &amp;</type>
      <name>setRenderPoses</name>
      <anchorfile>classMagnum_1_1OvrIntegration_1_1LayerEyeFov.html</anchorfile>
      <anchor>a4c752e4b26332f52992ad5ed0afb28bb</anchor>
      <arglist>(const Session &amp;session)</arglist>
    </member>
    <member kind="function">
      <type>LayerEyeFov &amp;</type>
      <name>setFov</name>
      <anchorfile>classMagnum_1_1OvrIntegration_1_1LayerEyeFov.html</anchorfile>
      <anchor>a107be4851e9c5773ef3ce6c4225ef2e6</anchor>
      <arglist>(const Session &amp;session)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Magnum::OvrIntegration::LayerQuad</name>
    <filename>classMagnum_1_1OvrIntegration_1_1LayerQuad.html</filename>
    <base>Magnum::OvrIntegration::HeadLockableLayer</base>
    <member kind="function">
      <type></type>
      <name>LayerQuad</name>
      <anchorfile>classMagnum_1_1OvrIntegration_1_1LayerQuad.html</anchorfile>
      <anchor>a4d538b12dd52c5bb9fc360b9a1d5c84f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>LayerQuad &amp;</type>
      <name>setColorTexture</name>
      <anchorfile>classMagnum_1_1OvrIntegration_1_1LayerQuad.html</anchorfile>
      <anchor>a6901cd28c1ebb3f539ad1fcb702b35cb</anchor>
      <arglist>(const TextureSwapChain &amp;swapChain)</arglist>
    </member>
    <member kind="function">
      <type>LayerQuad &amp;</type>
      <name>setViewport</name>
      <anchorfile>classMagnum_1_1OvrIntegration_1_1LayerQuad.html</anchorfile>
      <anchor>adaf6dd57fda56bec3186cff648aa96ab</anchor>
      <arglist>(const Range2Di &amp;viewport)</arglist>
    </member>
    <member kind="function">
      <type>LayerQuad &amp;</type>
      <name>setCenterPose</name>
      <anchorfile>classMagnum_1_1OvrIntegration_1_1LayerQuad.html</anchorfile>
      <anchor>a0d858e449e7a2f758eb0e5b5fdeb1eb1</anchor>
      <arglist>(const DualQuaternion &amp;pose)</arglist>
    </member>
    <member kind="function">
      <type>LayerQuad &amp;</type>
      <name>setQuadSize</name>
      <anchorfile>classMagnum_1_1OvrIntegration_1_1LayerQuad.html</anchorfile>
      <anchor>ac71c53b1002a63493bedb569a697c928</anchor>
      <arglist>(const Vector2 &amp;size)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Magnum::OvrIntegration::PoseState</name>
    <filename>classMagnum_1_1OvrIntegration_1_1PoseState.html</filename>
    <member kind="function">
      <type></type>
      <name>PoseState</name>
      <anchorfile>classMagnum_1_1OvrIntegration_1_1PoseState.html</anchorfile>
      <anchor>ac150358806fe6517322de4fa07b5025e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PoseState</name>
      <anchorfile>classMagnum_1_1OvrIntegration_1_1PoseState.html</anchorfile>
      <anchor>a2c66193c30ed731f655687f5537b1292</anchor>
      <arglist>(const ovrPoseStatef &amp;state)</arglist>
    </member>
    <member kind="function">
      <type>DualQuaternion</type>
      <name>pose</name>
      <anchorfile>classMagnum_1_1OvrIntegration_1_1PoseState.html</anchorfile>
      <anchor>a0898fc58ed620d34a200d89743479bd0</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Vector3</type>
      <name>angularVelocity</name>
      <anchorfile>classMagnum_1_1OvrIntegration_1_1PoseState.html</anchorfile>
      <anchor>a2902e37adc2bb952da8004baf5e753b8</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Vector3</type>
      <name>LinearVelocity</name>
      <anchorfile>classMagnum_1_1OvrIntegration_1_1PoseState.html</anchorfile>
      <anchor>a2355abfb964ff5ad2489684b2d276e96</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Vector3</type>
      <name>angularAcceleration</name>
      <anchorfile>classMagnum_1_1OvrIntegration_1_1PoseState.html</anchorfile>
      <anchor>a1d077e78b2e1e5983f86d6681dd27284</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Vector3</type>
      <name>linearAcceleration</name>
      <anchorfile>classMagnum_1_1OvrIntegration_1_1PoseState.html</anchorfile>
      <anchor>a50fc94938ef2dfad6f2a95f1dac89671</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Double</type>
      <name>time</name>
      <anchorfile>classMagnum_1_1OvrIntegration_1_1PoseState.html</anchorfile>
      <anchor>ab5d7a3bec5c10687da42c306a49eea4f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>::ovrPoseStatef &amp;</type>
      <name>ovrPoseStatef</name>
      <anchorfile>classMagnum_1_1OvrIntegration_1_1PoseState.html</anchorfile>
      <anchor>a9821da4f9a1476fd2ec4d49d59d100d1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static PoseState &amp;</type>
      <name>wrap</name>
      <anchorfile>classMagnum_1_1OvrIntegration_1_1PoseState.html</anchorfile>
      <anchor>a4f23c45e02f9f4e0999a0d1c44ed5a1b</anchor>
      <arglist>(::ovrPoseStatef &amp;state)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const PoseState &amp;</type>
      <name>wrap</name>
      <anchorfile>classMagnum_1_1OvrIntegration_1_1PoseState.html</anchorfile>
      <anchor>a023ccf56be4df1403a6b36f5e1d4f5fe</anchor>
      <arglist>(const ::ovrPoseStatef &amp;state)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Magnum::OvrIntegration::Session</name>
    <filename>classMagnum_1_1OvrIntegration_1_1Session.html</filename>
    <member kind="function">
      <type>Session &amp;</type>
      <name>configureRendering</name>
      <anchorfile>classMagnum_1_1OvrIntegration_1_1Session.html</anchorfile>
      <anchor>aec331ca97149841e684aed1628bff0c6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Vector2i</type>
      <name>fovTextureSize</name>
      <anchorfile>classMagnum_1_1OvrIntegration_1_1Session.html</anchorfile>
      <anchor>a097aff332cfa159eb4c8095d9500b435</anchor>
      <arglist>(Int eye)</arglist>
    </member>
    <member kind="function">
      <type>Texture2D &amp;</type>
      <name>createMirrorTexture</name>
      <anchorfile>classMagnum_1_1OvrIntegration_1_1Session.html</anchorfile>
      <anchor>af6a47da9c912dedb23a934bf61e9f86e</anchor>
      <arglist>(const Vector2i &amp;size)</arglist>
    </member>
    <member kind="function">
      <type>std::unique_ptr&lt; TextureSwapChain &gt;</type>
      <name>createTextureSwapChain</name>
      <anchorfile>classMagnum_1_1OvrIntegration_1_1Session.html</anchorfile>
      <anchor>a042e15bcc3424620dcbdb7df1b07747b</anchor>
      <arglist>(Int eye)</arglist>
    </member>
    <member kind="function">
      <type>std::unique_ptr&lt; TextureSwapChain &gt;</type>
      <name>createTextureSwapChain</name>
      <anchorfile>classMagnum_1_1OvrIntegration_1_1Session.html</anchorfile>
      <anchor>a6a263cd5409481368e0401ceaa775ee5</anchor>
      <arglist>(const Vector2i &amp;size)</arglist>
    </member>
    <member kind="function">
      <type>const PoseState &amp;</type>
      <name>headPoseState</name>
      <anchorfile>classMagnum_1_1OvrIntegration_1_1Session.html</anchorfile>
      <anchor>ad6acd5b285ad0a988ad2f9b5cb74c4e3</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>DualQuaternion</type>
      <name>calibratedOrigin</name>
      <anchorfile>classMagnum_1_1OvrIntegration_1_1Session.html</anchorfile>
      <anchor>a8e757b2b1e6fa0d53c9e45b5ae01a3b8</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>std::array&lt; DualQuaternion, 2 &gt;</type>
      <name>eyePoses</name>
      <anchorfile>classMagnum_1_1OvrIntegration_1_1Session.html</anchorfile>
      <anchor>a255796c5957fffd696bc7097d0fe49ef</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>std::array&lt; std::reference_wrapper&lt; const PoseState &gt;, 2 &gt;</type>
      <name>handPoseStates</name>
      <anchorfile>classMagnum_1_1OvrIntegration_1_1Session.html</anchorfile>
      <anchor>a03c8013d8e4604e5586c29a455811d91</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Session &amp;</type>
      <name>pollTrackers</name>
      <anchorfile>classMagnum_1_1OvrIntegration_1_1Session.html</anchorfile>
      <anchor>a5f76e51030381109eab9310e7b1c3e62</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Session &amp;</type>
      <name>pollEyePoses</name>
      <anchorfile>classMagnum_1_1OvrIntegration_1_1Session.html</anchorfile>
      <anchor>ad093c8eca09f83dbe15b2fe4bbb191f4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Session &amp;</type>
      <name>pollController</name>
      <anchorfile>classMagnum_1_1OvrIntegration_1_1Session.html</anchorfile>
      <anchor>a1fcb3a78ab1f44c5716f85639e54a234</anchor>
      <arglist>(ControllerType types, InputState &amp;state)</arglist>
    </member>
    <member kind="function">
      <type>Vector2i</type>
      <name>resolution</name>
      <anchorfile>classMagnum_1_1OvrIntegration_1_1Session.html</anchorfile>
      <anchor>a88360a0e440791387b0b35b1c4f9ce39</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Vector2</type>
      <name>defaultEyeFov</name>
      <anchorfile>classMagnum_1_1OvrIntegration_1_1Session.html</anchorfile>
      <anchor>a514a8ed469fbf35f48c461a3a1748135</anchor>
      <arglist>(Int eye) const </arglist>
    </member>
    <member kind="function">
      <type>Matrix4</type>
      <name>projectionMatrix</name>
      <anchorfile>classMagnum_1_1OvrIntegration_1_1Session.html</anchorfile>
      <anchor>a88abb728e567b11e76ff0325b3b9a6ea</anchor>
      <arglist>(Int eye, Float near, Float far) const </arglist>
    </member>
    <member kind="function">
      <type>Matrix4</type>
      <name>orthoSubProjectionMatrix</name>
      <anchorfile>classMagnum_1_1OvrIntegration_1_1Session.html</anchorfile>
      <anchor>a40ae9821f665be43cecfa4955823d0a6</anchor>
      <arglist>(Int eye, const Matrix4 &amp;proj, const Vector2 &amp;scale, Float distance) const </arglist>
    </member>
    <member kind="function">
      <type>::ovrSession</type>
      <name>ovrSession</name>
      <anchorfile>classMagnum_1_1OvrIntegration_1_1Session.html</anchorfile>
      <anchor>a1472d1b836e4590d7ccdd056af59ab16</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>::ovrHmdDesc</type>
      <name>ovrHmdDesc</name>
      <anchorfile>classMagnum_1_1OvrIntegration_1_1Session.html</anchorfile>
      <anchor>a11212dcda324365c5133c3b2b6a9fdb4</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const ::ovrViewScaleDesc &amp;</type>
      <name>ovrViewScaleDesc</name>
      <anchorfile>classMagnum_1_1OvrIntegration_1_1Session.html</anchorfile>
      <anchor>af75f9af1167bd4a336a685dfaa488790</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Float</type>
      <name>worldScale</name>
      <anchorfile>classMagnum_1_1OvrIntegration_1_1Session.html</anchorfile>
      <anchor>a1ff95ebfec98cd11d67bf56a81929661</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Session &amp;</type>
      <name>setWorldScale</name>
      <anchorfile>classMagnum_1_1OvrIntegration_1_1Session.html</anchorfile>
      <anchor>ad99dbde3e27ef2da18de3fc042f7d45a</anchor>
      <arglist>(Float scale)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isDebugHmd</name>
      <anchorfile>classMagnum_1_1OvrIntegration_1_1Session.html</anchorfile>
      <anchor>ab4dfac61d9a40d206ec12f500368660f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const Containers::StaticArrayView&lt; 2, const ovrPosef &gt;</type>
      <name>ovrEyePoses</name>
      <anchorfile>classMagnum_1_1OvrIntegration_1_1Session.html</anchorfile>
      <anchor>ad983e063ba3e156f2cd18bf41a308ad7</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const Containers::StaticArrayView&lt; 2, const ovrPoseStatef &gt;</type>
      <name>ovrHandPoseStates</name>
      <anchorfile>classMagnum_1_1OvrIntegration_1_1Session.html</anchorfile>
      <anchor>a46aba54ca53c784262841441098a4caa</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>recenterTrackingOrigin</name>
      <anchorfile>classMagnum_1_1OvrIntegration_1_1Session.html</anchorfile>
      <anchor>a592e7c420bed4c53d95bcebae2695597</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setTrackingOrigin</name>
      <anchorfile>classMagnum_1_1OvrIntegration_1_1Session.html</anchorfile>
      <anchor>a37b775d2ad3658e44a4021be5e168675</anchor>
      <arglist>(TrackingOrigin origin) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clearShouldRecenterFlag</name>
      <anchorfile>classMagnum_1_1OvrIntegration_1_1Session.html</anchorfile>
      <anchor>ac7c394e497c729209dc02824c1a8765a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Long</type>
      <name>currentFrameIndex</name>
      <anchorfile>classMagnum_1_1OvrIntegration_1_1Session.html</anchorfile>
      <anchor>a6c3e345e2b01afd62f19b31457497401</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Long</type>
      <name>incFrameIndex</name>
      <anchorfile>classMagnum_1_1OvrIntegration_1_1Session.html</anchorfile>
      <anchor>ad38d4ec54e9e691e232e39f50004f0e1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setPerformanceHudMode</name>
      <anchorfile>classMagnum_1_1OvrIntegration_1_1Session.html</anchorfile>
      <anchor>a2313902bb9efa718d4192502f2f3c7bd</anchor>
      <arglist>(PerformanceHudMode mode) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setDebugHudStereoMode</name>
      <anchorfile>classMagnum_1_1OvrIntegration_1_1Session.html</anchorfile>
      <anchor>ab58b6ed5bf580b2b111601e3578d08f3</anchor>
      <arglist>(DebugHudStereoMode mode) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setLayerHudMode</name>
      <anchorfile>classMagnum_1_1OvrIntegration_1_1Session.html</anchorfile>
      <anchor>ace54bc0d09d8c7ddaaf23b715d050733</anchor>
      <arglist>(LayerHudMode mode) const </arglist>
    </member>
    <member kind="function">
      <type>StatusFlags</type>
      <name>trackingState</name>
      <anchorfile>classMagnum_1_1OvrIntegration_1_1Session.html</anchorfile>
      <anchor>a578ea20a27817bcc9eb12c44e702a7ec</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>user</name>
      <anchorfile>classMagnum_1_1OvrIntegration_1_1Session.html</anchorfile>
      <anchor>a139e9e65ccfb6752f59daafd299d685b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>playerName</name>
      <anchorfile>classMagnum_1_1OvrIntegration_1_1Session.html</anchorfile>
      <anchor>a86381c3e88dc236945e21fa6a3668e81</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>playerGender</name>
      <anchorfile>classMagnum_1_1OvrIntegration_1_1Session.html</anchorfile>
      <anchor>a60e46973d3e0ad68c75da2eed53802b8</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Float</type>
      <name>playerHeight</name>
      <anchorfile>classMagnum_1_1OvrIntegration_1_1Session.html</anchorfile>
      <anchor>a82f6cdeeb9dec0b632e4402f611d43d9</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Float</type>
      <name>eyeHeight</name>
      <anchorfile>classMagnum_1_1OvrIntegration_1_1Session.html</anchorfile>
      <anchor>a1d724c177d62e4c532b8281770852170</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>std::array&lt; Float, 2 &gt;</type>
      <name>neckToEyeDistance</name>
      <anchorfile>classMagnum_1_1OvrIntegration_1_1Session.html</anchorfile>
      <anchor>a444cbe1ba54c76ed28f114ecf0107dba</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>std::array&lt; Float, 2 &gt;</type>
      <name>eyeToNoseDistance</name>
      <anchorfile>classMagnum_1_1OvrIntegration_1_1Session.html</anchorfile>
      <anchor>a76d9e884f9ec49f9c97c6b93bb53c0c7</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>SessionStatusFlags</type>
      <name>status</name>
      <anchorfile>classMagnum_1_1OvrIntegration_1_1Session.html</anchorfile>
      <anchor>a651f3b0b72c30bff14f3dbd46ba7cf62</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Magnum::OvrIntegration::TextureSwapChain</name>
    <filename>classMagnum_1_1OvrIntegration_1_1TextureSwapChain.html</filename>
    <member kind="function">
      <type></type>
      <name>TextureSwapChain</name>
      <anchorfile>classMagnum_1_1OvrIntegration_1_1TextureSwapChain.html</anchorfile>
      <anchor>ab9d57ce413456070668d35f118b00e94</anchor>
      <arglist>(const Session &amp;session, const Vector2i &amp;size)</arglist>
    </member>
    <member kind="function">
      <type>Texture2D &amp;</type>
      <name>activeTexture</name>
      <anchorfile>classMagnum_1_1OvrIntegration_1_1TextureSwapChain.html</anchorfile>
      <anchor>a5dbfad611245efe135b4ecaae1ee0350</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>TextureSwapChain &amp;</type>
      <name>commit</name>
      <anchorfile>classMagnum_1_1OvrIntegration_1_1TextureSwapChain.html</anchorfile>
      <anchor>a36935f6792ec7a17e3f473b288e7596e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>::ovrTextureSwapChain</type>
      <name>ovrTextureSwapChain</name>
      <anchorfile>classMagnum_1_1OvrIntegration_1_1TextureSwapChain.html</anchorfile>
      <anchor>a7c354004497818766a50c04037c91aab</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Magnum::OvrIntegration::Touches</name>
    <filename>structMagnum_1_1OvrIntegration_1_1Touches.html</filename>
    <base>EnumSet&lt; Touch &gt;</base>
    <member kind="variable" static="yes">
      <type>static constexpr Touches</type>
      <name>RMask</name>
      <anchorfile>structMagnum_1_1OvrIntegration_1_1Touches.html</anchorfile>
      <anchor>aecebb52583fc12204fe370039f47ec41</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static constexpr Touches</type>
      <name>LMask</name>
      <anchorfile>structMagnum_1_1OvrIntegration_1_1Touches.html</anchorfile>
      <anchor>ac4ede400998abc0b698073784b9138e3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static constexpr Touches</type>
      <name>RPoseMask</name>
      <anchorfile>structMagnum_1_1OvrIntegration_1_1Touches.html</anchorfile>
      <anchor>a1f8ca18d8772d99f12392ffc492925f2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static constexpr Touches</type>
      <name>LPoseMask</name>
      <anchorfile>structMagnum_1_1OvrIntegration_1_1Touches.html</anchorfile>
      <anchor>a931575b061f56ce68a2c809d227c15da</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Magnum::PixelStorage</name>
    <filename>classMagnum_1_1PixelStorage.html</filename>
    <member kind="function">
      <type>constexpr</type>
      <name>PixelStorage</name>
      <anchorfile>classMagnum_1_1PixelStorage.html</anchorfile>
      <anchor>a457e62793428c7f84d661205d3f2492b</anchor>
      <arglist>() noexcept</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classMagnum_1_1PixelStorage.html</anchorfile>
      <anchor>ae7a6676746c1b8ed261a0e417973e61f</anchor>
      <arglist>(const PixelStorage &amp;other) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>classMagnum_1_1PixelStorage.html</anchorfile>
      <anchor>ab57d2b82fbc40b60e7348017e77cda17</anchor>
      <arglist>(const PixelStorage &amp;other) const </arglist>
    </member>
    <member kind="function">
      <type>constexpr bool</type>
      <name>swapBytes</name>
      <anchorfile>classMagnum_1_1PixelStorage.html</anchorfile>
      <anchor>ad203499fdd1a64f8175dca08abb6371f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>PixelStorage &amp;</type>
      <name>setSwapBytes</name>
      <anchorfile>classMagnum_1_1PixelStorage.html</anchorfile>
      <anchor>a0f56fbf377882be2c6d919fd72869fbb</anchor>
      <arglist>(bool enabled)</arglist>
    </member>
    <member kind="function">
      <type>constexpr Int</type>
      <name>alignment</name>
      <anchorfile>classMagnum_1_1PixelStorage.html</anchorfile>
      <anchor>a513c76045237dfef16300f1717cd6ebb</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>PixelStorage &amp;</type>
      <name>setAlignment</name>
      <anchorfile>classMagnum_1_1PixelStorage.html</anchorfile>
      <anchor>ad3da75b1e18c4b864ade56023df95595</anchor>
      <arglist>(Int alignment)</arglist>
    </member>
    <member kind="function">
      <type>constexpr Int</type>
      <name>rowLength</name>
      <anchorfile>classMagnum_1_1PixelStorage.html</anchorfile>
      <anchor>a446b158bdec214d06783134abf0db85f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>PixelStorage &amp;</type>
      <name>setRowLength</name>
      <anchorfile>classMagnum_1_1PixelStorage.html</anchorfile>
      <anchor>afcebb732a1ad64b3025edd656ae8de4b</anchor>
      <arglist>(Int length)</arglist>
    </member>
    <member kind="function">
      <type>constexpr Int</type>
      <name>imageHeight</name>
      <anchorfile>classMagnum_1_1PixelStorage.html</anchorfile>
      <anchor>a3ddd3b832c40b6ff4e03da8fc7a8b9ba</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>PixelStorage &amp;</type>
      <name>setImageHeight</name>
      <anchorfile>classMagnum_1_1PixelStorage.html</anchorfile>
      <anchor>a9f9cba7250ffa4a2d68db9c08187fd1b</anchor>
      <arglist>(Int height)</arglist>
    </member>
    <member kind="function">
      <type>constexpr Vector3i</type>
      <name>skip</name>
      <anchorfile>classMagnum_1_1PixelStorage.html</anchorfile>
      <anchor>a00875b49c3b768fb972a53e9920f7924</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>PixelStorage &amp;</type>
      <name>setSkip</name>
      <anchorfile>classMagnum_1_1PixelStorage.html</anchorfile>
      <anchor>a1f46c621041686b241179edeb1b8f909</anchor>
      <arglist>(const Vector3i &amp;skip)</arglist>
    </member>
    <member kind="function">
      <type>std::tuple&lt; Math::Vector3&lt; std::size_t &gt;, Math::Vector3&lt; std::size_t &gt;, std::size_t &gt;</type>
      <name>dataProperties</name>
      <anchorfile>classMagnum_1_1PixelStorage.html</anchorfile>
      <anchor>ab937a8870bfcd524e5b89c555f3dbb26</anchor>
      <arglist>(PixelFormat format, PixelType type, const Vector3i &amp;size) const </arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::size_t</type>
      <name>pixelSize</name>
      <anchorfile>classMagnum_1_1PixelStorage.html</anchorfile>
      <anchor>a642d65120e1f3692a75c82925489bf09</anchor>
      <arglist>(PixelFormat format, PixelType type)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Magnum::Platform::AbstractXApplication</name>
    <filename>classMagnum_1_1Platform_1_1AbstractXApplication.html</filename>
    <class kind="struct">Magnum::Platform::AbstractXApplication::Arguments</class>
    <class kind="class">Magnum::Platform::AbstractXApplication::Configuration</class>
    <class kind="class">Magnum::Platform::AbstractXApplication::InputEvent</class>
    <class kind="class">Magnum::Platform::AbstractXApplication::KeyEvent</class>
    <class kind="class">Magnum::Platform::AbstractXApplication::MouseEvent</class>
    <class kind="class">Magnum::Platform::AbstractXApplication::MouseMoveEvent</class>
    <member kind="function">
      <type></type>
      <name>AbstractXApplication</name>
      <anchorfile>classMagnum_1_1Platform_1_1AbstractXApplication.html</anchorfile>
      <anchor>ae7b6f68ea7c91b77f613e5012f9bc6bd</anchor>
      <arglist>(const AbstractXApplication &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AbstractXApplication</name>
      <anchorfile>classMagnum_1_1Platform_1_1AbstractXApplication.html</anchorfile>
      <anchor>ae36465e9672d59850840cb3a5ad088b6</anchor>
      <arglist>(AbstractXApplication &amp;&amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>AbstractXApplication &amp;</type>
      <name>operator=</name>
      <anchorfile>classMagnum_1_1Platform_1_1AbstractXApplication.html</anchorfile>
      <anchor>ad55349e90e6ba0fe2470140cab54aab2</anchor>
      <arglist>(const AbstractXApplication &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>AbstractXApplication &amp;</type>
      <name>operator=</name>
      <anchorfile>classMagnum_1_1Platform_1_1AbstractXApplication.html</anchorfile>
      <anchor>aa1eafc5ee50538f57a7f2a0bb0de5ac0</anchor>
      <arglist>(AbstractXApplication &amp;&amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>exec</name>
      <anchorfile>classMagnum_1_1Platform_1_1AbstractXApplication.html</anchorfile>
      <anchor>a7dde2cd0c0105289646efc14bcc69259</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>exit</name>
      <anchorfile>classMagnum_1_1Platform_1_1AbstractXApplication.html</anchorfile>
      <anchor>ae7afef63adc6d3211b7ae0ffbfb82d73</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>createContext</name>
      <anchorfile>classMagnum_1_1Platform_1_1AbstractXApplication.html</anchorfile>
      <anchor>a7c685ad3e1e498b218eb17a397744809</anchor>
      <arglist>(const Configuration &amp;configuration=Configuration())</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>tryCreateContext</name>
      <anchorfile>classMagnum_1_1Platform_1_1AbstractXApplication.html</anchorfile>
      <anchor>aa06b7571ab54621d3e4390688026aed3</anchor>
      <arglist>(const Configuration &amp;configuration)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>swapBuffers</name>
      <anchorfile>classMagnum_1_1Platform_1_1AbstractXApplication.html</anchorfile>
      <anchor>acf2ed010f7d9ed19070eb2c8f2a99bb5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>redraw</name>
      <anchorfile>classMagnum_1_1Platform_1_1AbstractXApplication.html</anchorfile>
      <anchor>a74589e540beef25d6f844f9febaf982d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>viewportEvent</name>
      <anchorfile>classMagnum_1_1Platform_1_1AbstractXApplication.html</anchorfile>
      <anchor>a37464791fbdac271ce40819f28d69b23</anchor>
      <arglist>(const Vector2i &amp;size)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual void</type>
      <name>drawEvent</name>
      <anchorfile>classMagnum_1_1Platform_1_1AbstractXApplication.html</anchorfile>
      <anchor>af2c5853ec1ef59ee2a496b31a5ce1eb2</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>keyPressEvent</name>
      <anchorfile>classMagnum_1_1Platform_1_1AbstractXApplication.html</anchorfile>
      <anchor>a5300a85c9cb15c3150fd967a842f4613</anchor>
      <arglist>(KeyEvent &amp;event)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>keyReleaseEvent</name>
      <anchorfile>classMagnum_1_1Platform_1_1AbstractXApplication.html</anchorfile>
      <anchor>a023100947ae0a6e4443d3876ac7cc0b1</anchor>
      <arglist>(KeyEvent &amp;event)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>mousePressEvent</name>
      <anchorfile>classMagnum_1_1Platform_1_1AbstractXApplication.html</anchorfile>
      <anchor>a4fd5a53087603bb299fecf9e4a361862</anchor>
      <arglist>(MouseEvent &amp;event)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>mouseReleaseEvent</name>
      <anchorfile>classMagnum_1_1Platform_1_1AbstractXApplication.html</anchorfile>
      <anchor>abed988d061fa8037c49744daefa42b69</anchor>
      <arglist>(MouseEvent &amp;event)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>mouseMoveEvent</name>
      <anchorfile>classMagnum_1_1Platform_1_1AbstractXApplication.html</anchorfile>
      <anchor>af9a6f4136f9d66fac5ab897382c7410e</anchor>
      <arglist>(MouseMoveEvent &amp;event)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Magnum::Platform::AbstractXApplication::Arguments</name>
    <filename>structMagnum_1_1Platform_1_1AbstractXApplication_1_1Arguments.html</filename>
    <member kind="function">
      <type>constexpr</type>
      <name>Arguments</name>
      <anchorfile>structMagnum_1_1Platform_1_1AbstractXApplication_1_1Arguments.html</anchorfile>
      <anchor>a450112f8e95f81b2d5b9de9f140710e6</anchor>
      <arglist>(int &amp;argc, char **argv) noexcept</arglist>
    </member>
    <member kind="variable">
      <type>int &amp;</type>
      <name>argc</name>
      <anchorfile>structMagnum_1_1Platform_1_1AbstractXApplication_1_1Arguments.html</anchorfile>
      <anchor>a123d5ba7e3b5080eb2166712f1518699</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char **</type>
      <name>argv</name>
      <anchorfile>structMagnum_1_1Platform_1_1AbstractXApplication_1_1Arguments.html</anchorfile>
      <anchor>aa1209e732e8134ccf235236cc32b60d2</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Magnum::Platform::AbstractXApplication::Configuration</name>
    <filename>classMagnum_1_1Platform_1_1AbstractXApplication_1_1Configuration.html</filename>
    <member kind="function">
      <type>std::string</type>
      <name>title</name>
      <anchorfile>classMagnum_1_1Platform_1_1AbstractXApplication_1_1Configuration.html</anchorfile>
      <anchor>a996be84ebc95806a20b59eed34629192</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Configuration &amp;</type>
      <name>setTitle</name>
      <anchorfile>classMagnum_1_1Platform_1_1AbstractXApplication_1_1Configuration.html</anchorfile>
      <anchor>abd48bf906bf6d2b5edd3ef8dc3dd854b</anchor>
      <arglist>(std::string title)</arglist>
    </member>
    <member kind="function">
      <type>Vector2i</type>
      <name>size</name>
      <anchorfile>classMagnum_1_1Platform_1_1AbstractXApplication_1_1Configuration.html</anchorfile>
      <anchor>a1a4e2d62b5e97eacddefdcfa324ed80c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Configuration &amp;</type>
      <name>setSize</name>
      <anchorfile>classMagnum_1_1Platform_1_1AbstractXApplication_1_1Configuration.html</anchorfile>
      <anchor>aa24dae5c5aa6e797543503db938f41b8</anchor>
      <arglist>(const Vector2i &amp;size)</arglist>
    </member>
    <member kind="function">
      <type>Version</type>
      <name>version</name>
      <anchorfile>classMagnum_1_1Platform_1_1AbstractXApplication_1_1Configuration.html</anchorfile>
      <anchor>a48c928e4e28a5dc8a13356cb122db069</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Configuration &amp;</type>
      <name>setVersion</name>
      <anchorfile>classMagnum_1_1Platform_1_1AbstractXApplication_1_1Configuration.html</anchorfile>
      <anchor>a9d31dbbd355f2cf0be9ef3484654a202</anchor>
      <arglist>(Version version)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Magnum::Platform::AbstractXApplication::InputEvent</name>
    <filename>classMagnum_1_1Platform_1_1AbstractXApplication_1_1InputEvent.html</filename>
    <member kind="enumeration">
      <type></type>
      <name>Modifier</name>
      <anchorfile>classMagnum_1_1Platform_1_1AbstractXApplication_1_1InputEvent.html</anchorfile>
      <anchor>a527de777d490fd7076179e8339e744ee</anchor>
      <arglist></arglist>
      <enumvalue file="classMagnum_1_1Platform_1_1AbstractXApplication_1_1InputEvent.html" anchor="a527de777d490fd7076179e8339e744eea825a3d98017bab11815ad2817201324c">Shift</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1AbstractXApplication_1_1InputEvent.html" anchor="a527de777d490fd7076179e8339e744eea2b61e0d5977f2e38f06e16281c802b47">Ctrl</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1AbstractXApplication_1_1InputEvent.html" anchor="a527de777d490fd7076179e8339e744eeaa2e92861b757ab878312dd57993d60cf">Alt</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1AbstractXApplication_1_1InputEvent.html" anchor="a527de777d490fd7076179e8339e744eea571dc3ee993d6e9a33bdc851be52b995">AltGr</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1AbstractXApplication_1_1InputEvent.html" anchor="a527de777d490fd7076179e8339e744eea8d0f4171170104d094d8b6d4f8bf49e6">CapsLock</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1AbstractXApplication_1_1InputEvent.html" anchor="a527de777d490fd7076179e8339e744eeacf6cc0261135c6d163fd4305375773d2">NumLock</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>Button</name>
      <anchorfile>classMagnum_1_1Platform_1_1AbstractXApplication_1_1InputEvent.html</anchorfile>
      <anchor>a74d97fb59c1afc8b3723b42311202d29</anchor>
      <arglist></arglist>
      <enumvalue file="classMagnum_1_1Platform_1_1AbstractXApplication_1_1InputEvent.html" anchor="a74d97fb59c1afc8b3723b42311202d29a945d5e233cf7d6240f6b783b36a374ff">Left</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1AbstractXApplication_1_1InputEvent.html" anchor="a74d97fb59c1afc8b3723b42311202d29ab1ca34f82e83c52b010f86955f264e05">Middle</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1AbstractXApplication_1_1InputEvent.html" anchor="a74d97fb59c1afc8b3723b42311202d29a92b09c7c48c520c3c55e497875da437c">Right</enumvalue>
    </member>
    <member kind="typedef">
      <type>Containers::EnumSet&lt; Modifier &gt;</type>
      <name>Modifiers</name>
      <anchorfile>classMagnum_1_1Platform_1_1AbstractXApplication_1_1InputEvent.html</anchorfile>
      <anchor>a391685081d02e608fd71f886a87eea00</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Containers::EnumSet&lt; Button &gt;</type>
      <name>Buttons</name>
      <anchorfile>classMagnum_1_1Platform_1_1AbstractXApplication_1_1InputEvent.html</anchorfile>
      <anchor>a21dc1d563acd35cc9f9e41f7a92f121b</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>InputEvent</name>
      <anchorfile>classMagnum_1_1Platform_1_1AbstractXApplication_1_1InputEvent.html</anchorfile>
      <anchor>a2708c692d9ee68832ef253c4a12c87d2</anchor>
      <arglist>(const InputEvent &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>InputEvent</name>
      <anchorfile>classMagnum_1_1Platform_1_1AbstractXApplication_1_1InputEvent.html</anchorfile>
      <anchor>ae6ba3698a7c262180b143fcd5ab29ffa</anchor>
      <arglist>(InputEvent &amp;&amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>InputEvent &amp;</type>
      <name>operator=</name>
      <anchorfile>classMagnum_1_1Platform_1_1AbstractXApplication_1_1InputEvent.html</anchorfile>
      <anchor>a1b49d22039d83d1974faeff375d710b8</anchor>
      <arglist>(const InputEvent &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>InputEvent &amp;</type>
      <name>operator=</name>
      <anchorfile>classMagnum_1_1Platform_1_1AbstractXApplication_1_1InputEvent.html</anchorfile>
      <anchor>a8aec50d6882de3a79bd649400ad86b29</anchor>
      <arglist>(InputEvent &amp;&amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setAccepted</name>
      <anchorfile>classMagnum_1_1Platform_1_1AbstractXApplication_1_1InputEvent.html</anchorfile>
      <anchor>ab2fa5478cdd425a3c0dce0582daa353c</anchor>
      <arglist>(bool accepted=true)</arglist>
    </member>
    <member kind="function">
      <type>constexpr bool</type>
      <name>isAccepted</name>
      <anchorfile>classMagnum_1_1Platform_1_1AbstractXApplication_1_1InputEvent.html</anchorfile>
      <anchor>a6468b75b9d81d85edb49ac65625ba438</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>constexpr Modifiers</type>
      <name>modifiers</name>
      <anchorfile>classMagnum_1_1Platform_1_1AbstractXApplication_1_1InputEvent.html</anchorfile>
      <anchor>afab83235f9cc1b2d6395a49b570d53c3</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>constexpr Buttons</type>
      <name>buttons</name>
      <anchorfile>classMagnum_1_1Platform_1_1AbstractXApplication_1_1InputEvent.html</anchorfile>
      <anchor>a420d69e9bbcd514f8979e4cfe4b96f63</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Magnum::Platform::AbstractXApplication::KeyEvent</name>
    <filename>classMagnum_1_1Platform_1_1AbstractXApplication_1_1KeyEvent.html</filename>
    <base>Magnum::Platform::AbstractXApplication::InputEvent</base>
    <member kind="enumeration">
      <type></type>
      <name>Key</name>
      <anchorfile>classMagnum_1_1Platform_1_1AbstractXApplication_1_1KeyEvent.html</anchorfile>
      <anchor>a63ffae576fbf74e2700ee1485dffaa8f</anchor>
      <arglist></arglist>
      <enumvalue file="classMagnum_1_1Platform_1_1AbstractXApplication_1_1KeyEvent.html" anchor="a63ffae576fbf74e2700ee1485dffaa8faf1851d5600eae616ee802a31ac74701b">Enter</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1AbstractXApplication_1_1KeyEvent.html" anchor="a63ffae576fbf74e2700ee1485dffaa8fa91f4253ca587ca8ac4e63b9ceb351f5d">Esc</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1AbstractXApplication_1_1KeyEvent.html" anchor="a63ffae576fbf74e2700ee1485dffaa8fa258f49887ef8d14ac268c92b02503aaa">Up</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1AbstractXApplication_1_1KeyEvent.html" anchor="a63ffae576fbf74e2700ee1485dffaa8fa08a38277b0309070706f6652eeae9a53">Down</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1AbstractXApplication_1_1KeyEvent.html" anchor="a63ffae576fbf74e2700ee1485dffaa8fa945d5e233cf7d6240f6b783b36a374ff">Left</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1AbstractXApplication_1_1KeyEvent.html" anchor="a63ffae576fbf74e2700ee1485dffaa8fa92b09c7c48c520c3c55e497875da437c">Right</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1AbstractXApplication_1_1KeyEvent.html" anchor="a63ffae576fbf74e2700ee1485dffaa8fae1dffc8709f31a4987c8a88334107e89">F1</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1AbstractXApplication_1_1KeyEvent.html" anchor="a63ffae576fbf74e2700ee1485dffaa8fafe5c3684dce76cdd9f7f42430868aa74">F2</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1AbstractXApplication_1_1KeyEvent.html" anchor="a63ffae576fbf74e2700ee1485dffaa8fa4b6bf4b531770872d4328ce69bef5627">F3</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1AbstractXApplication_1_1KeyEvent.html" anchor="a63ffae576fbf74e2700ee1485dffaa8fae7e0e72401a9f2718ed0f39f2861d702">F4</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1AbstractXApplication_1_1KeyEvent.html" anchor="a63ffae576fbf74e2700ee1485dffaa8fa37f438df6a6d5ba4c17ef8ca58562f00">F5</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1AbstractXApplication_1_1KeyEvent.html" anchor="a63ffae576fbf74e2700ee1485dffaa8fa1faf42f2823f184eb2c9f0dffe5d73f2">F6</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1AbstractXApplication_1_1KeyEvent.html" anchor="a63ffae576fbf74e2700ee1485dffaa8fa47489eb597b7db34caa24b1fc78fc839">F7</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1AbstractXApplication_1_1KeyEvent.html" anchor="a63ffae576fbf74e2700ee1485dffaa8fa4787509ad9f9d747a81a30e9dde3d4a7">F8</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1AbstractXApplication_1_1KeyEvent.html" anchor="a63ffae576fbf74e2700ee1485dffaa8fa892a245e287c163080b23db737d3c4c9">F9</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1AbstractXApplication_1_1KeyEvent.html" anchor="a63ffae576fbf74e2700ee1485dffaa8fab213ce22ca6ad4eda8db82966b9b6e5a">F10</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1AbstractXApplication_1_1KeyEvent.html" anchor="a63ffae576fbf74e2700ee1485dffaa8fa643b0662422d1d0dffa3fca2e2bf28a8">F11</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1AbstractXApplication_1_1KeyEvent.html" anchor="a63ffae576fbf74e2700ee1485dffaa8fae902674982fc99aa343cdd94da7476c3">F12</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1AbstractXApplication_1_1KeyEvent.html" anchor="a63ffae576fbf74e2700ee1485dffaa8fa8cf04a9734132302f96da8e113e80ce5">Home</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1AbstractXApplication_1_1KeyEvent.html" anchor="a63ffae576fbf74e2700ee1485dffaa8fa87557f11575c0ad78e4e28abedc13b6e">End</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1AbstractXApplication_1_1KeyEvent.html" anchor="a63ffae576fbf74e2700ee1485dffaa8fa9b869c510c75c5827ac82e49d4340927">PageUp</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1AbstractXApplication_1_1KeyEvent.html" anchor="a63ffae576fbf74e2700ee1485dffaa8faee3677bcca83ece9384b01e43952bf33">PageDown</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1AbstractXApplication_1_1KeyEvent.html" anchor="a63ffae576fbf74e2700ee1485dffaa8fad511f8439ecde36647437fbba67a4394">Space</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1AbstractXApplication_1_1KeyEvent.html" anchor="a63ffae576fbf74e2700ee1485dffaa8fa58be47db9455679e6a44df2eff9c9fa6">Comma</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1AbstractXApplication_1_1KeyEvent.html" anchor="a63ffae576fbf74e2700ee1485dffaa8fa1901606ea069a83dc7beea17881ef95a">Period</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1AbstractXApplication_1_1KeyEvent.html" anchor="a63ffae576fbf74e2700ee1485dffaa8fa453fb623e752c5993f65bc410fd74fe5">Minus</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1AbstractXApplication_1_1KeyEvent.html" anchor="a63ffae576fbf74e2700ee1485dffaa8fa32ba78fe43257d3e7f88e3935a8ea0d4">Plus</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1AbstractXApplication_1_1KeyEvent.html" anchor="a63ffae576fbf74e2700ee1485dffaa8fa358cfe58715d680d9ab09f82e4010cbc">Slash</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1AbstractXApplication_1_1KeyEvent.html" anchor="a63ffae576fbf74e2700ee1485dffaa8faadaaee4b22041c27198d410c68d952c9">Percent</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1AbstractXApplication_1_1KeyEvent.html" anchor="a63ffae576fbf74e2700ee1485dffaa8faf5f286e73bda105e538310b3190f75c5">Equal</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1AbstractXApplication_1_1KeyEvent.html" anchor="a63ffae576fbf74e2700ee1485dffaa8fad7ed4ee1df437474d005188535f74875">Zero</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1AbstractXApplication_1_1KeyEvent.html" anchor="a63ffae576fbf74e2700ee1485dffaa8fa06c2cea18679d64399783748fa367bdd">One</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1AbstractXApplication_1_1KeyEvent.html" anchor="a63ffae576fbf74e2700ee1485dffaa8faaada29daee1d64ed0fe907043855cb7e">Two</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1AbstractXApplication_1_1KeyEvent.html" anchor="a63ffae576fbf74e2700ee1485dffaa8faca8a2087e5557e317599344687a57391">Three</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1AbstractXApplication_1_1KeyEvent.html" anchor="a63ffae576fbf74e2700ee1485dffaa8fa981b8fcee42e1e726a67a2b9a98ea6e9">Four</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1AbstractXApplication_1_1KeyEvent.html" anchor="a63ffae576fbf74e2700ee1485dffaa8fae5d9de39f7ca1ba2637e5640af3ae8aa">Five</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1AbstractXApplication_1_1KeyEvent.html" anchor="a63ffae576fbf74e2700ee1485dffaa8fae6fbc0b9673f8c86726688d7607fc8f5">Six</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1AbstractXApplication_1_1KeyEvent.html" anchor="a63ffae576fbf74e2700ee1485dffaa8fa12e67aac3e7f9227cc35f8f047d7dc74">Seven</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1AbstractXApplication_1_1KeyEvent.html" anchor="a63ffae576fbf74e2700ee1485dffaa8fabaca0ca6729684fd54206793ae4b5bd5">Eight</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1AbstractXApplication_1_1KeyEvent.html" anchor="a63ffae576fbf74e2700ee1485dffaa8fa24db11216549ee55172c33cf3def2f3f">Nine</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1AbstractXApplication_1_1KeyEvent.html" anchor="a63ffae576fbf74e2700ee1485dffaa8fa7fc56270e7a70fa81a5935b72eacbe29">A</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1AbstractXApplication_1_1KeyEvent.html" anchor="a63ffae576fbf74e2700ee1485dffaa8fa9d5ed678fe57bcca610140957afab571">B</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1AbstractXApplication_1_1KeyEvent.html" anchor="a63ffae576fbf74e2700ee1485dffaa8fa0d61f8370cad1d412f80b84d143e1257">C</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1AbstractXApplication_1_1KeyEvent.html" anchor="a63ffae576fbf74e2700ee1485dffaa8faf623e75af30e62bbd73d6df5b50bb7b5">D</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1AbstractXApplication_1_1KeyEvent.html" anchor="a63ffae576fbf74e2700ee1485dffaa8fa3a3ea00cfc35332cedf6e5e9a32e94da">E</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1AbstractXApplication_1_1KeyEvent.html" anchor="a63ffae576fbf74e2700ee1485dffaa8fa800618943025315f869e4e1f09471012">F</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1AbstractXApplication_1_1KeyEvent.html" anchor="a63ffae576fbf74e2700ee1485dffaa8fadfcf28d0734569a6a693bc8194de62bf">G</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1AbstractXApplication_1_1KeyEvent.html" anchor="a63ffae576fbf74e2700ee1485dffaa8fac1d9f50f86825a1a2302ec2449c17196">H</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1AbstractXApplication_1_1KeyEvent.html" anchor="a63ffae576fbf74e2700ee1485dffaa8fadd7536794b63bf90eccfd37f9b147d7f">I</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1AbstractXApplication_1_1KeyEvent.html" anchor="a63ffae576fbf74e2700ee1485dffaa8faff44570aca8241914870afbc310cdb85">J</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1AbstractXApplication_1_1KeyEvent.html" anchor="a63ffae576fbf74e2700ee1485dffaa8faa5f3c6a11b03839d46af9fb43c97c188">K</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1AbstractXApplication_1_1KeyEvent.html" anchor="a63ffae576fbf74e2700ee1485dffaa8fad20caec3b48a1eef164cb4ca81ba2587">L</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1AbstractXApplication_1_1KeyEvent.html" anchor="a63ffae576fbf74e2700ee1485dffaa8fa69691c7bdcc3ce6d5d8a1361f22d04ac">M</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1AbstractXApplication_1_1KeyEvent.html" anchor="a63ffae576fbf74e2700ee1485dffaa8fa8d9c307cb7f3c4a32822a51922d1ceaa">N</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1AbstractXApplication_1_1KeyEvent.html" anchor="a63ffae576fbf74e2700ee1485dffaa8faf186217753c37b9b9f958d906208506e">O</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1AbstractXApplication_1_1KeyEvent.html" anchor="a63ffae576fbf74e2700ee1485dffaa8fa44c29edb103a2872f519ad0c9a0fdaaa">P</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1AbstractXApplication_1_1KeyEvent.html" anchor="a63ffae576fbf74e2700ee1485dffaa8faf09564c9ca56850d4cd6b3319e541aee">Q</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1AbstractXApplication_1_1KeyEvent.html" anchor="a63ffae576fbf74e2700ee1485dffaa8fae1e1d3d40573127e9ee0480caf1283d6">R</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1AbstractXApplication_1_1KeyEvent.html" anchor="a63ffae576fbf74e2700ee1485dffaa8fa5dbc98dcc983a70728bd082d1a47546e">S</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1AbstractXApplication_1_1KeyEvent.html" anchor="a63ffae576fbf74e2700ee1485dffaa8fab9ece18c950afbfa6b0fdbfa4ff731d3">T</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1AbstractXApplication_1_1KeyEvent.html" anchor="a63ffae576fbf74e2700ee1485dffaa8fa4c614360da93c0a041b22e537de151eb">U</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1AbstractXApplication_1_1KeyEvent.html" anchor="a63ffae576fbf74e2700ee1485dffaa8fa5206560a306a2e085a437fd258eb57ce">V</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1AbstractXApplication_1_1KeyEvent.html" anchor="a63ffae576fbf74e2700ee1485dffaa8fa61e9c06ea9a85a5088a499df6458d276">W</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1AbstractXApplication_1_1KeyEvent.html" anchor="a63ffae576fbf74e2700ee1485dffaa8fa02129bb861061d1a052c592e2dc6b383">X</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1AbstractXApplication_1_1KeyEvent.html" anchor="a63ffae576fbf74e2700ee1485dffaa8fa57cec4137b614c87cb4e24a3d003a3e0">Y</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1AbstractXApplication_1_1KeyEvent.html" anchor="a63ffae576fbf74e2700ee1485dffaa8fa21c2e59531c8710156d34a3c30ac81d5">Z</enumvalue>
    </member>
    <member kind="function">
      <type>constexpr Key</type>
      <name>key</name>
      <anchorfile>classMagnum_1_1Platform_1_1AbstractXApplication_1_1KeyEvent.html</anchorfile>
      <anchor>afa9ad5fe3e27d344cfaaf05e19a16cfe</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>constexpr Vector2i</type>
      <name>position</name>
      <anchorfile>classMagnum_1_1Platform_1_1AbstractXApplication_1_1KeyEvent.html</anchorfile>
      <anchor>a25a2e58bcd86db71db9e6d027b6b35ae</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Magnum::Platform::AbstractXApplication::MouseEvent</name>
    <filename>classMagnum_1_1Platform_1_1AbstractXApplication_1_1MouseEvent.html</filename>
    <base>Magnum::Platform::AbstractXApplication::InputEvent</base>
    <member kind="enumeration">
      <type></type>
      <name>Button</name>
      <anchorfile>classMagnum_1_1Platform_1_1AbstractXApplication_1_1MouseEvent.html</anchorfile>
      <anchor>a764326cd502ad1038ce66d8e8ffce588</anchor>
      <arglist></arglist>
      <enumvalue file="classMagnum_1_1Platform_1_1AbstractXApplication_1_1MouseEvent.html" anchor="a764326cd502ad1038ce66d8e8ffce588a945d5e233cf7d6240f6b783b36a374ff">Left</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1AbstractXApplication_1_1MouseEvent.html" anchor="a764326cd502ad1038ce66d8e8ffce588ab1ca34f82e83c52b010f86955f264e05">Middle</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1AbstractXApplication_1_1MouseEvent.html" anchor="a764326cd502ad1038ce66d8e8ffce588a92b09c7c48c520c3c55e497875da437c">Right</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1AbstractXApplication_1_1MouseEvent.html" anchor="a764326cd502ad1038ce66d8e8ffce588a050f568559dcada95ba3ecb63de39971">WheelUp</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1AbstractXApplication_1_1MouseEvent.html" anchor="a764326cd502ad1038ce66d8e8ffce588a95cf2a3dc58aff6d85e53738a089d9d1">WheelDown</enumvalue>
    </member>
    <member kind="function">
      <type>constexpr Button</type>
      <name>button</name>
      <anchorfile>classMagnum_1_1Platform_1_1AbstractXApplication_1_1MouseEvent.html</anchorfile>
      <anchor>a6244e74b1ffce177e0cc8035cab89e83</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>constexpr Vector2i</type>
      <name>position</name>
      <anchorfile>classMagnum_1_1Platform_1_1AbstractXApplication_1_1MouseEvent.html</anchorfile>
      <anchor>a5bebaeb6ce7ffe8f684e1aa2185e9035</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Magnum::Platform::AbstractXApplication::MouseMoveEvent</name>
    <filename>classMagnum_1_1Platform_1_1AbstractXApplication_1_1MouseMoveEvent.html</filename>
    <base>Magnum::Platform::AbstractXApplication::InputEvent</base>
    <member kind="function">
      <type>constexpr Vector2i</type>
      <name>position</name>
      <anchorfile>classMagnum_1_1Platform_1_1AbstractXApplication_1_1MouseMoveEvent.html</anchorfile>
      <anchor>a04716c4aef3ebbaca948717f98257e83</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Magnum::Platform::AndroidApplication</name>
    <filename>classMagnum_1_1Platform_1_1AndroidApplication.html</filename>
    <class kind="class">Magnum::Platform::AndroidApplication::Configuration</class>
    <class kind="class">Magnum::Platform::AndroidApplication::InputEvent</class>
    <class kind="class">Magnum::Platform::AndroidApplication::MouseEvent</class>
    <class kind="class">Magnum::Platform::AndroidApplication::MouseMoveEvent</class>
    <member kind="typedef">
      <type>android_app *</type>
      <name>Arguments</name>
      <anchorfile>classMagnum_1_1Platform_1_1AndroidApplication.html</anchorfile>
      <anchor>a58c9ea82abc05790ddf2337b4f406264</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AndroidApplication</name>
      <anchorfile>classMagnum_1_1Platform_1_1AndroidApplication.html</anchorfile>
      <anchor>a3e360f1396b908e820dc9283855feee6</anchor>
      <arglist>(const Arguments &amp;arguments, const Configuration &amp;configuration=Configuration())</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AndroidApplication</name>
      <anchorfile>classMagnum_1_1Platform_1_1AndroidApplication.html</anchorfile>
      <anchor>a95a4116cf39c28587de2283c8e8fd837</anchor>
      <arglist>(const Arguments &amp;arguments, NoCreateT)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AndroidApplication</name>
      <anchorfile>classMagnum_1_1Platform_1_1AndroidApplication.html</anchorfile>
      <anchor>a3be643bec8200e6f17a4b37cb001ba0b</anchor>
      <arglist>(const Arguments &amp;arguments, std::nullptr_t)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AndroidApplication</name>
      <anchorfile>classMagnum_1_1Platform_1_1AndroidApplication.html</anchorfile>
      <anchor>aa0fdb76a85a84bf49063c5f464d53d27</anchor>
      <arglist>(const AndroidApplication &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AndroidApplication</name>
      <anchorfile>classMagnum_1_1Platform_1_1AndroidApplication.html</anchorfile>
      <anchor>af2bf1c84681f70fa8261b2c0d7029cf9</anchor>
      <arglist>(AndroidApplication &amp;&amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>AndroidApplication &amp;</type>
      <name>operator=</name>
      <anchorfile>classMagnum_1_1Platform_1_1AndroidApplication.html</anchorfile>
      <anchor>acafb56ac864a1a0b8101cce18930f83f</anchor>
      <arglist>(const AndroidApplication &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>AndroidApplication &amp;</type>
      <name>operator=</name>
      <anchorfile>classMagnum_1_1Platform_1_1AndroidApplication.html</anchorfile>
      <anchor>a7eb6cdbc378fcbb4feec05b29f2826f2</anchor>
      <arglist>(AndroidApplication &amp;&amp;)=delete</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>exec</name>
      <anchorfile>classMagnum_1_1Platform_1_1AndroidApplication.html</anchorfile>
      <anchor>a73b12c11ea115aaf9451583b89c23c70</anchor>
      <arglist>(android_app *state, std::unique_ptr&lt; AndroidApplication &gt;(*instancer)(const Arguments &amp;))</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>createContext</name>
      <anchorfile>classMagnum_1_1Platform_1_1AndroidApplication.html</anchorfile>
      <anchor>a198157603a836d644a6d01cc819f7356</anchor>
      <arglist>(const Configuration &amp;configuration=Configuration())</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>tryCreateContext</name>
      <anchorfile>classMagnum_1_1Platform_1_1AndroidApplication.html</anchorfile>
      <anchor>aa027b536661ded310396461f405070f2</anchor>
      <arglist>(const Configuration &amp;configuration)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>swapBuffers</name>
      <anchorfile>classMagnum_1_1Platform_1_1AndroidApplication.html</anchorfile>
      <anchor>a78801e96db6d013c85c2c2a4d2051788</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>redraw</name>
      <anchorfile>classMagnum_1_1Platform_1_1AndroidApplication.html</anchorfile>
      <anchor>a308e1560c581fe3edd12777fc3444beb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>viewportEvent</name>
      <anchorfile>classMagnum_1_1Platform_1_1AndroidApplication.html</anchorfile>
      <anchor>afcdfe648357b272c838f624f42de3a2f</anchor>
      <arglist>(const Vector2i &amp;size)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual void</type>
      <name>drawEvent</name>
      <anchorfile>classMagnum_1_1Platform_1_1AndroidApplication.html</anchorfile>
      <anchor>a75396810d496499ddb8fc1a45bf9d7fd</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>mousePressEvent</name>
      <anchorfile>classMagnum_1_1Platform_1_1AndroidApplication.html</anchorfile>
      <anchor>a51370e0415a65b7cb967a6fa445a6a62</anchor>
      <arglist>(MouseEvent &amp;event)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>mouseReleaseEvent</name>
      <anchorfile>classMagnum_1_1Platform_1_1AndroidApplication.html</anchorfile>
      <anchor>aad71c338afe32ef72a6329f0e6d66814</anchor>
      <arglist>(MouseEvent &amp;event)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>mouseMoveEvent</name>
      <anchorfile>classMagnum_1_1Platform_1_1AndroidApplication.html</anchorfile>
      <anchor>a1712a5ea421c0833d092c05eee25c0ba</anchor>
      <arglist>(MouseMoveEvent &amp;event)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Magnum::Platform::AndroidApplication::Configuration</name>
    <filename>classMagnum_1_1Platform_1_1AndroidApplication_1_1Configuration.html</filename>
    <member kind="function">
      <type>Configuration &amp;</type>
      <name>setTitle</name>
      <anchorfile>classMagnum_1_1Platform_1_1AndroidApplication_1_1Configuration.html</anchorfile>
      <anchor>a50910221f99afaccfbe6635a81d1eeaf</anchor>
      <arglist>(const T &amp;)</arglist>
    </member>
    <member kind="function">
      <type>Vector2i</type>
      <name>size</name>
      <anchorfile>classMagnum_1_1Platform_1_1AndroidApplication_1_1Configuration.html</anchorfile>
      <anchor>aa9282899ebc80b5c08a4c0f041985289</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Configuration &amp;</type>
      <name>setSize</name>
      <anchorfile>classMagnum_1_1Platform_1_1AndroidApplication_1_1Configuration.html</anchorfile>
      <anchor>a82e2c923bd358531afa0e19d3da4e809</anchor>
      <arglist>(const Vector2i &amp;size)</arglist>
    </member>
    <member kind="function">
      <type>Configuration &amp;</type>
      <name>setVersion</name>
      <anchorfile>classMagnum_1_1Platform_1_1AndroidApplication_1_1Configuration.html</anchorfile>
      <anchor>a82fc2fed6c3c987b6fe262a9c8b8d11b</anchor>
      <arglist>(Version)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Magnum::Platform::AndroidApplication::InputEvent</name>
    <filename>classMagnum_1_1Platform_1_1AndroidApplication_1_1InputEvent.html</filename>
    <member kind="function">
      <type></type>
      <name>InputEvent</name>
      <anchorfile>classMagnum_1_1Platform_1_1AndroidApplication_1_1InputEvent.html</anchorfile>
      <anchor>a008d90905e03f03c4b4f8c3afcf2c721</anchor>
      <arglist>(const InputEvent &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>InputEvent</name>
      <anchorfile>classMagnum_1_1Platform_1_1AndroidApplication_1_1InputEvent.html</anchorfile>
      <anchor>a437c1d44d78c659695e68fb87fba2579</anchor>
      <arglist>(InputEvent &amp;&amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>InputEvent &amp;</type>
      <name>operator=</name>
      <anchorfile>classMagnum_1_1Platform_1_1AndroidApplication_1_1InputEvent.html</anchorfile>
      <anchor>a8cba4f2e77ce1d849aebda12687d336a</anchor>
      <arglist>(const InputEvent &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>InputEvent &amp;</type>
      <name>operator=</name>
      <anchorfile>classMagnum_1_1Platform_1_1AndroidApplication_1_1InputEvent.html</anchorfile>
      <anchor>a96d462d6093274451624aa2953118248</anchor>
      <arglist>(InputEvent &amp;&amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setAccepted</name>
      <anchorfile>classMagnum_1_1Platform_1_1AndroidApplication_1_1InputEvent.html</anchorfile>
      <anchor>a1557b96bd7ebdbc61f52bb9da140d173</anchor>
      <arglist>(bool accepted=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isAccepted</name>
      <anchorfile>classMagnum_1_1Platform_1_1AndroidApplication_1_1InputEvent.html</anchorfile>
      <anchor>a9c2b9a01744154569764304009569911</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Magnum::Platform::AndroidApplication::MouseEvent</name>
    <filename>classMagnum_1_1Platform_1_1AndroidApplication_1_1MouseEvent.html</filename>
    <base>Magnum::Platform::AndroidApplication::InputEvent</base>
    <member kind="enumeration">
      <type></type>
      <name>Button</name>
      <anchorfile>classMagnum_1_1Platform_1_1AndroidApplication_1_1MouseEvent.html</anchorfile>
      <anchor>ab092b366c5ca3c48c38c220d1acb7156</anchor>
      <arglist></arglist>
      <enumvalue file="classMagnum_1_1Platform_1_1AndroidApplication_1_1MouseEvent.html" anchor="ab092b366c5ca3c48c38c220d1acb7156a6adf97f83acf6453d4a6a4b1070f3754">None</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1AndroidApplication_1_1MouseEvent.html" anchor="ab092b366c5ca3c48c38c220d1acb7156a945d5e233cf7d6240f6b783b36a374ff">Left</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1AndroidApplication_1_1MouseEvent.html" anchor="ab092b366c5ca3c48c38c220d1acb7156ab1ca34f82e83c52b010f86955f264e05">Middle</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1AndroidApplication_1_1MouseEvent.html" anchor="ab092b366c5ca3c48c38c220d1acb7156a92b09c7c48c520c3c55e497875da437c">Right</enumvalue>
    </member>
    <member kind="function">
      <type>Button</type>
      <name>button</name>
      <anchorfile>classMagnum_1_1Platform_1_1AndroidApplication_1_1MouseEvent.html</anchorfile>
      <anchor>a7ed21004b68a4a6b7c906f2c795d007d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Vector2i</type>
      <name>position</name>
      <anchorfile>classMagnum_1_1Platform_1_1AndroidApplication_1_1MouseEvent.html</anchorfile>
      <anchor>ad02a9a1317cacbce2ad816dd805fe842</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Magnum::Platform::AndroidApplication::MouseMoveEvent</name>
    <filename>classMagnum_1_1Platform_1_1AndroidApplication_1_1MouseMoveEvent.html</filename>
    <base>Magnum::Platform::AndroidApplication::InputEvent</base>
    <member kind="enumeration">
      <type></type>
      <name>Button</name>
      <anchorfile>classMagnum_1_1Platform_1_1AndroidApplication_1_1MouseMoveEvent.html</anchorfile>
      <anchor>abdcf2c89160e7320cd27e68e4eef9b3e</anchor>
      <arglist></arglist>
      <enumvalue file="classMagnum_1_1Platform_1_1AndroidApplication_1_1MouseMoveEvent.html" anchor="abdcf2c89160e7320cd27e68e4eef9b3ea945d5e233cf7d6240f6b783b36a374ff">Left</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1AndroidApplication_1_1MouseMoveEvent.html" anchor="abdcf2c89160e7320cd27e68e4eef9b3eab1ca34f82e83c52b010f86955f264e05">Middle</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1AndroidApplication_1_1MouseMoveEvent.html" anchor="abdcf2c89160e7320cd27e68e4eef9b3ea92b09c7c48c520c3c55e497875da437c">Right</enumvalue>
    </member>
    <member kind="typedef">
      <type>Containers::EnumSet&lt; Button &gt;</type>
      <name>Buttons</name>
      <anchorfile>classMagnum_1_1Platform_1_1AndroidApplication_1_1MouseMoveEvent.html</anchorfile>
      <anchor>a0daa91452fa905843eeae994d6dc9154</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>Vector2i</type>
      <name>position</name>
      <anchorfile>classMagnum_1_1Platform_1_1AndroidApplication_1_1MouseMoveEvent.html</anchorfile>
      <anchor>a7593b1e72ef5a576430b1c5af5c5efd1</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Buttons</type>
      <name>buttons</name>
      <anchorfile>classMagnum_1_1Platform_1_1AndroidApplication_1_1MouseMoveEvent.html</anchorfile>
      <anchor>a10e72992277e8f391a90c6f65aeb266d</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Magnum::Platform::BasicScreen</name>
    <filename>classMagnum_1_1Platform_1_1BasicScreen.html</filename>
    <templarg></templarg>
    <base protection="private">LinkedListItem&lt; BasicScreen&lt; Application &gt;, BasicScreenedApplication&lt; Application &gt; &gt;</base>
    <member kind="enumeration">
      <type></type>
      <name>PropagatedEvent</name>
      <anchorfile>classMagnum_1_1Platform_1_1BasicScreen.html</anchorfile>
      <anchor>a00413be55df986bc41a8f78cdb290c22</anchor>
      <arglist></arglist>
      <enumvalue file="classMagnum_1_1Platform_1_1BasicScreen.html" anchor="a00413be55df986bc41a8f78cdb290c22a2d03c2d5a7ec65ef4619e0582c272ec2">Draw</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1BasicScreen.html" anchor="a00413be55df986bc41a8f78cdb290c22a324118a6721dd6b8a9b9f4e327df2bf5">Input</enumvalue>
    </member>
    <member kind="typedef">
      <type>Containers::EnumSet&lt; PropagatedEvent &gt;</type>
      <name>PropagatedEvents</name>
      <anchorfile>classMagnum_1_1Platform_1_1BasicScreen.html</anchorfile>
      <anchor>a20783b2906594a1c6a8ddda333527c1f</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>BasicScreenedApplication&lt; Application &gt;::InputEvent</type>
      <name>InputEvent</name>
      <anchorfile>classMagnum_1_1Platform_1_1BasicScreen.html</anchorfile>
      <anchor>ac062cfde71504c82ca701de84ec7ee62</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>BasicScreenedApplication&lt; Application &gt;::KeyEvent</type>
      <name>KeyEvent</name>
      <anchorfile>classMagnum_1_1Platform_1_1BasicScreen.html</anchorfile>
      <anchor>a41c6798b8356feb60d6e79d02a080755</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>BasicScreenedApplication&lt; Application &gt;::MouseEvent</type>
      <name>MouseEvent</name>
      <anchorfile>classMagnum_1_1Platform_1_1BasicScreen.html</anchorfile>
      <anchor>a1531f2e05db360226c48b0d986e8fe57</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>BasicScreenedApplication&lt; Application &gt;::MouseMoveEvent</type>
      <name>MouseMoveEvent</name>
      <anchorfile>classMagnum_1_1Platform_1_1BasicScreen.html</anchorfile>
      <anchor>a32d89d95a29d527d8f5f1d032e9594ad</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>PropagatedEvents</type>
      <name>propagatedEvents</name>
      <anchorfile>classMagnum_1_1Platform_1_1BasicScreen.html</anchorfile>
      <anchor>a1a49c4c8efb964880da777f713e4fe80</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setPropagatedEvents</name>
      <anchorfile>classMagnum_1_1Platform_1_1BasicScreen.html</anchorfile>
      <anchor>a74700edde790d741350a849927d597ca</anchor>
      <arglist>(PropagatedEvents events)</arglist>
    </member>
    <member kind="function">
      <type>T *</type>
      <name>application</name>
      <anchorfile>classMagnum_1_1Platform_1_1BasicScreen.html</anchorfile>
      <anchor>ab03228ac10947c2a06809f542153c0b8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const T *</type>
      <name>application</name>
      <anchorfile>classMagnum_1_1Platform_1_1BasicScreen.html</anchorfile>
      <anchor>a5a6efc43fde41689caaf47ae41dcd26b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>BasicScreen&lt; Application &gt; *</type>
      <name>nextNearerScreen</name>
      <anchorfile>classMagnum_1_1Platform_1_1BasicScreen.html</anchorfile>
      <anchor>a87f1926029c47cd224b1b0f418ca7c25</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const BasicScreen&lt; Application &gt; *</type>
      <name>nextNearerScreen</name>
      <anchorfile>classMagnum_1_1Platform_1_1BasicScreen.html</anchorfile>
      <anchor>ac6b081fc531640a6069924482bd6ce73</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>BasicScreen&lt; Application &gt; *</type>
      <name>nextFartherScreen</name>
      <anchorfile>classMagnum_1_1Platform_1_1BasicScreen.html</anchorfile>
      <anchor>aa20ec0ff557b1add220d8d78fe1fb2b4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const BasicScreen&lt; Application &gt; *</type>
      <name>nextFartherScreen</name>
      <anchorfile>classMagnum_1_1Platform_1_1BasicScreen.html</anchorfile>
      <anchor>aa39baff72795a707c2e305d7c7af848b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>redraw</name>
      <anchorfile>classMagnum_1_1Platform_1_1BasicScreen.html</anchorfile>
      <anchor>ae33347d9790875e95c8a436dcc027109</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual void</type>
      <name>focusEvent</name>
      <anchorfile>classMagnum_1_1Platform_1_1BasicScreen.html</anchorfile>
      <anchor>ae101a96a8fbe63e4fca3154a6aaa40e4</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual void</type>
      <name>blurEvent</name>
      <anchorfile>classMagnum_1_1Platform_1_1BasicScreen.html</anchorfile>
      <anchor>a40fa87267c22313608def6933d216aee</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual void</type>
      <name>viewportEvent</name>
      <anchorfile>classMagnum_1_1Platform_1_1BasicScreen.html</anchorfile>
      <anchor>a07a56723dd251618bea6e80d63056985</anchor>
      <arglist>(const Vector2i &amp;size)=0</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual void</type>
      <name>drawEvent</name>
      <anchorfile>classMagnum_1_1Platform_1_1BasicScreen.html</anchorfile>
      <anchor>a4649b372d245c99c627035b8cd5f6f75</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>keyPressEvent</name>
      <anchorfile>classMagnum_1_1Platform_1_1BasicScreen.html</anchorfile>
      <anchor>a6b671a512908abb85c3d78552b01a597</anchor>
      <arglist>(KeyEvent &amp;event)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>keyReleaseEvent</name>
      <anchorfile>classMagnum_1_1Platform_1_1BasicScreen.html</anchorfile>
      <anchor>a6e8e945cba43b99a7c6e76f8996651d3</anchor>
      <arglist>(KeyEvent &amp;event)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>mousePressEvent</name>
      <anchorfile>classMagnum_1_1Platform_1_1BasicScreen.html</anchorfile>
      <anchor>a46cb5dfe4f0e65ae9eaaeaab64434240</anchor>
      <arglist>(MouseEvent &amp;event)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>mouseReleaseEvent</name>
      <anchorfile>classMagnum_1_1Platform_1_1BasicScreen.html</anchorfile>
      <anchor>a8ae62461e2797944b2238d290e4e1485</anchor>
      <arglist>(MouseEvent &amp;event)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>mouseMoveEvent</name>
      <anchorfile>classMagnum_1_1Platform_1_1BasicScreen.html</anchorfile>
      <anchor>a2320f71394d5e757fb59b8f3fdf3152c</anchor>
      <arglist>(MouseMoveEvent &amp;event)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Magnum::Platform::BasicScreenedApplication</name>
    <filename>classMagnum_1_1Platform_1_1BasicScreenedApplication.html</filename>
    <templarg></templarg>
    <base protection="private">LinkedList&lt; BasicScreen&lt; Application &gt; &gt;</base>
    <member kind="function">
      <type></type>
      <name>BasicScreenedApplication</name>
      <anchorfile>classMagnum_1_1Platform_1_1BasicScreenedApplication.html</anchorfile>
      <anchor>a3bfaa289fd8253c3a2a517fb1e0ffa4a</anchor>
      <arglist>(const typename Application::Arguments &amp;arguments, const typename Application::Configuration &amp;configuration=Application::Configuration())</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>BasicScreenedApplication</name>
      <anchorfile>classMagnum_1_1Platform_1_1BasicScreenedApplication.html</anchorfile>
      <anchor>acfb517aed1e85fcc3642e29b93d41ab2</anchor>
      <arglist>(const typename Application::Arguments &amp;arguments, NoCreateT)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>BasicScreenedApplication</name>
      <anchorfile>classMagnum_1_1Platform_1_1BasicScreenedApplication.html</anchorfile>
      <anchor>ac6d0cc08be14d0a94cdb556046d7d2ce</anchor>
      <arglist>(const typename Application::Arguments &amp;arguments, std::nullptr_t)</arglist>
    </member>
    <member kind="function">
      <type>BasicScreenedApplication&lt; Application &gt; &amp;</type>
      <name>addScreen</name>
      <anchorfile>classMagnum_1_1Platform_1_1BasicScreenedApplication.html</anchorfile>
      <anchor>ad1e3c186a2802bae60207087c443b4c8</anchor>
      <arglist>(BasicScreen&lt; Application &gt; &amp;screen)</arglist>
    </member>
    <member kind="function">
      <type>BasicScreenedApplication&lt; Application &gt; &amp;</type>
      <name>removeScreen</name>
      <anchorfile>classMagnum_1_1Platform_1_1BasicScreenedApplication.html</anchorfile>
      <anchor>a50614a96b1b20376275e7672a5fb2ce9</anchor>
      <arglist>(BasicScreen&lt; Application &gt; &amp;screen)</arglist>
    </member>
    <member kind="function">
      <type>BasicScreenedApplication&lt; Application &gt; &amp;</type>
      <name>focusScreen</name>
      <anchorfile>classMagnum_1_1Platform_1_1BasicScreenedApplication.html</anchorfile>
      <anchor>ad21f7a735f84df27e1192fa778ce7e8a</anchor>
      <arglist>(BasicScreen&lt; Application &gt; &amp;screen)</arglist>
    </member>
    <member kind="function">
      <type>Containers::LinkedList&lt; BasicScreen&lt; Application &gt; &gt; &amp;</type>
      <name>screens</name>
      <anchorfile>classMagnum_1_1Platform_1_1BasicScreenedApplication.html</anchorfile>
      <anchor>a0b9dfc27c41139a1a78dd051e05efbb1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const Containers::LinkedList&lt; BasicScreen&lt; Application &gt; &gt; &amp;</type>
      <name>screens</name>
      <anchorfile>classMagnum_1_1Platform_1_1BasicScreenedApplication.html</anchorfile>
      <anchor>ad24bde5bf1a3581f908edf741b04d74a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>BasicScreen&lt; Application &gt; *</type>
      <name>frontScreen</name>
      <anchorfile>classMagnum_1_1Platform_1_1BasicScreenedApplication.html</anchorfile>
      <anchor>abd4abe41641c0c529dd5591c15e6d542</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const BasicScreen&lt; Application &gt; *</type>
      <name>frontScreen</name>
      <anchorfile>classMagnum_1_1Platform_1_1BasicScreenedApplication.html</anchorfile>
      <anchor>a5b53e4148330884239b1d07d3604172d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>BasicScreen&lt; Application &gt; *</type>
      <name>backScreen</name>
      <anchorfile>classMagnum_1_1Platform_1_1BasicScreenedApplication.html</anchorfile>
      <anchor>a133920ff7704386b53b81ab313cb996f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const BasicScreen&lt; Application &gt; *</type>
      <name>backScreen</name>
      <anchorfile>classMagnum_1_1Platform_1_1BasicScreenedApplication.html</anchorfile>
      <anchor>a5bb146b80fb9865aad3cab88a76137c7</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>globalViewportEvent</name>
      <anchorfile>classMagnum_1_1Platform_1_1BasicScreenedApplication.html</anchorfile>
      <anchor>ad3c10631b67cb188974e2daa7ea42aee</anchor>
      <arglist>(const Vector2i &amp;size)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual void</type>
      <name>globalDrawEvent</name>
      <anchorfile>classMagnum_1_1Platform_1_1BasicScreenedApplication.html</anchorfile>
      <anchor>a7e8fce19853330b675e34e15f9937fdb</anchor>
      <arglist>()=0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Magnum::Platform::Context</name>
    <filename>classMagnum_1_1Platform_1_1Context.html</filename>
    <base>Magnum::Context</base>
    <member kind="function">
      <type></type>
      <name>Context</name>
      <anchorfile>classMagnum_1_1Platform_1_1Context.html</anchorfile>
      <anchor>aa5896e6e4a6c8db1a04e99303c1aeb72</anchor>
      <arglist>(Int argc, const char **argv)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Context</name>
      <anchorfile>classMagnum_1_1Platform_1_1Context.html</anchorfile>
      <anchor>a95f43a10f2038669e9c822fe34f8fd45</anchor>
      <arglist>(Int argc, char **argv)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Context</name>
      <anchorfile>classMagnum_1_1Platform_1_1Context.html</anchorfile>
      <anchor>adcf193e6309d289567d93bdfcf55fa4b</anchor>
      <arglist>(Int argc, std::nullptr_t argv)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Context</name>
      <anchorfile>classMagnum_1_1Platform_1_1Context.html</anchorfile>
      <anchor>a32e7db3fc510b038a268f8e063a98110</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Context</name>
      <anchorfile>classMagnum_1_1Platform_1_1Context.html</anchorfile>
      <anchor>adc6e5a3c6e7cd263dff1b8c770dcefa8</anchor>
      <arglist>(NoCreateT, Int argc, const char **argv)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Context</name>
      <anchorfile>classMagnum_1_1Platform_1_1Context.html</anchorfile>
      <anchor>a00a727947bf7abd3470ef620e56982ef</anchor>
      <arglist>(NoCreateT, Int argc, char **argv)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Context</name>
      <anchorfile>classMagnum_1_1Platform_1_1Context.html</anchorfile>
      <anchor>a04e8f4306d02c5330c128792c6cac03d</anchor>
      <arglist>(NoCreateT, Int argc, std::nullptr_t argv)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>create</name>
      <anchorfile>classMagnum_1_1Platform_1_1Context.html</anchorfile>
      <anchor>af8b0318811ab68997c90de6e1227ba2f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>tryCreate</name>
      <anchorfile>classMagnum_1_1Platform_1_1Context.html</anchorfile>
      <anchor>af7c9f9234030a3724f2af152280f34fe</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Magnum::Platform::GlfwApplication</name>
    <filename>classMagnum_1_1Platform_1_1GlfwApplication.html</filename>
    <class kind="struct">Magnum::Platform::GlfwApplication::Arguments</class>
    <class kind="class">Magnum::Platform::GlfwApplication::Configuration</class>
    <class kind="class">Magnum::Platform::GlfwApplication::InputEvent</class>
    <class kind="class">Magnum::Platform::GlfwApplication::KeyEvent</class>
    <class kind="class">Magnum::Platform::GlfwApplication::MouseEvent</class>
    <class kind="class">Magnum::Platform::GlfwApplication::MouseMoveEvent</class>
    <class kind="class">Magnum::Platform::GlfwApplication::MouseScrollEvent</class>
    <class kind="class">Magnum::Platform::GlfwApplication::TextInputEvent</class>
    <member kind="function">
      <type></type>
      <name>GlfwApplication</name>
      <anchorfile>classMagnum_1_1Platform_1_1GlfwApplication.html</anchorfile>
      <anchor>aab19f7d7dd577afd0e130eaba4b820eb</anchor>
      <arglist>(const Arguments &amp;arguments, const Configuration &amp;configuration=Configuration())</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>GlfwApplication</name>
      <anchorfile>classMagnum_1_1Platform_1_1GlfwApplication.html</anchorfile>
      <anchor>a616194e6b0501f9eb914d275907d1ecc</anchor>
      <arglist>(const Arguments &amp;arguments, NoCreateT)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>GlfwApplication</name>
      <anchorfile>classMagnum_1_1Platform_1_1GlfwApplication.html</anchorfile>
      <anchor>a150c7e81fe69c218cea508517daa7046</anchor>
      <arglist>(const Arguments &amp;arguments, std::nullptr_t)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>GlfwApplication</name>
      <anchorfile>classMagnum_1_1Platform_1_1GlfwApplication.html</anchorfile>
      <anchor>a6e5f3dd9d4e4b68b950d75d915545ec8</anchor>
      <arglist>(const GlfwApplication &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>GlfwApplication</name>
      <anchorfile>classMagnum_1_1Platform_1_1GlfwApplication.html</anchorfile>
      <anchor>a563f6cf43cf00cb204829686c06381eb</anchor>
      <arglist>(GlfwApplication &amp;&amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>GlfwApplication &amp;</type>
      <name>operator=</name>
      <anchorfile>classMagnum_1_1Platform_1_1GlfwApplication.html</anchorfile>
      <anchor>ae03a1033276427626013b9c5b435460f</anchor>
      <arglist>(const GlfwApplication &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>GlfwApplication &amp;</type>
      <name>operator=</name>
      <anchorfile>classMagnum_1_1Platform_1_1GlfwApplication.html</anchorfile>
      <anchor>a960093801384fea7ac5805f29cc02a50</anchor>
      <arglist>(GlfwApplication &amp;&amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>exec</name>
      <anchorfile>classMagnum_1_1Platform_1_1GlfwApplication.html</anchorfile>
      <anchor>a2721b1a89bd4b1685be45505c25cbd27</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>exit</name>
      <anchorfile>classMagnum_1_1Platform_1_1GlfwApplication.html</anchorfile>
      <anchor>ab52d2ddc9de6dd023bf024e79e406325</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>GLFWwindow *</type>
      <name>window</name>
      <anchorfile>classMagnum_1_1Platform_1_1GlfwApplication.html</anchorfile>
      <anchor>a19095cf0b6dfa8d3b7f3d3e30b241bd0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>createContext</name>
      <anchorfile>classMagnum_1_1Platform_1_1GlfwApplication.html</anchorfile>
      <anchor>a4d2181703fd968b9761a14b4c4d67bc8</anchor>
      <arglist>(const Configuration &amp;configuration=Configuration())</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>tryCreateContext</name>
      <anchorfile>classMagnum_1_1Platform_1_1GlfwApplication.html</anchorfile>
      <anchor>a3752ecdeacf04277799caef2932c387c</anchor>
      <arglist>(const Configuration &amp;configuration)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>Vector2i</type>
      <name>windowSize</name>
      <anchorfile>classMagnum_1_1Platform_1_1GlfwApplication.html</anchorfile>
      <anchor>a630319f97d33696ec63ecb79db8137ef</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>swapBuffers</name>
      <anchorfile>classMagnum_1_1Platform_1_1GlfwApplication.html</anchorfile>
      <anchor>ac6db31c9431d95ee8f08ef7137e0ca43</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>setSwapInterval</name>
      <anchorfile>classMagnum_1_1Platform_1_1GlfwApplication.html</anchorfile>
      <anchor>a69162fdc40698223dd64bce75766cb74</anchor>
      <arglist>(Int interval)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>redraw</name>
      <anchorfile>classMagnum_1_1Platform_1_1GlfwApplication.html</anchorfile>
      <anchor>ac78b59f00aa006b24a00a361f63d956a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>viewportEvent</name>
      <anchorfile>classMagnum_1_1Platform_1_1GlfwApplication.html</anchorfile>
      <anchor>a13ea90265fa30653f6e2c4123fe34acc</anchor>
      <arglist>(const Vector2i &amp;size)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual void</type>
      <name>drawEvent</name>
      <anchorfile>classMagnum_1_1Platform_1_1GlfwApplication.html</anchorfile>
      <anchor>a5761ff4826f3d1facfef0e2eed3c90bd</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>keyPressEvent</name>
      <anchorfile>classMagnum_1_1Platform_1_1GlfwApplication.html</anchorfile>
      <anchor>afd3317ee8f0d8a8796906f9cfc402e83</anchor>
      <arglist>(KeyEvent &amp;event)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>keyReleaseEvent</name>
      <anchorfile>classMagnum_1_1Platform_1_1GlfwApplication.html</anchorfile>
      <anchor>a3e41fc05d973695979bd2f40e19df957</anchor>
      <arglist>(KeyEvent &amp;event)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>warpCursor</name>
      <anchorfile>classMagnum_1_1Platform_1_1GlfwApplication.html</anchorfile>
      <anchor>a6f3b26a38e9bce274a6fb77dccf59474</anchor>
      <arglist>(const Vector2i &amp;position)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>mousePressEvent</name>
      <anchorfile>classMagnum_1_1Platform_1_1GlfwApplication.html</anchorfile>
      <anchor>abe83afa1c9c5377195ea7d5994887668</anchor>
      <arglist>(MouseEvent &amp;event)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>mouseReleaseEvent</name>
      <anchorfile>classMagnum_1_1Platform_1_1GlfwApplication.html</anchorfile>
      <anchor>adac83b36392c0701ed1a7e1583a68b11</anchor>
      <arglist>(MouseEvent &amp;event)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>mouseMoveEvent</name>
      <anchorfile>classMagnum_1_1Platform_1_1GlfwApplication.html</anchorfile>
      <anchor>ae3ce8d14de628078a480cab77caa2efe</anchor>
      <arglist>(MouseMoveEvent &amp;event)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>mouseScrollEvent</name>
      <anchorfile>classMagnum_1_1Platform_1_1GlfwApplication.html</anchorfile>
      <anchor>aad142d14117ee8a26c24f9cdc01c577d</anchor>
      <arglist>(MouseScrollEvent &amp;event)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isTextInputActive</name>
      <anchorfile>classMagnum_1_1Platform_1_1GlfwApplication.html</anchorfile>
      <anchor>a9ba50706bc1124c445680efb9d3f2868</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>startTextInput</name>
      <anchorfile>classMagnum_1_1Platform_1_1GlfwApplication.html</anchorfile>
      <anchor>ac1294c1dad8d766f05624b790e5c59f6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>stopTextInput</name>
      <anchorfile>classMagnum_1_1Platform_1_1GlfwApplication.html</anchorfile>
      <anchor>a37032f7784b2a82e29ec8dd5960d16e7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>textInputEvent</name>
      <anchorfile>classMagnum_1_1Platform_1_1GlfwApplication.html</anchorfile>
      <anchor>a8483f136c94f1fc651257fcf8c90f72b</anchor>
      <arglist>(TextInputEvent &amp;event)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Magnum::Platform::GlfwApplication::Arguments</name>
    <filename>structMagnum_1_1Platform_1_1GlfwApplication_1_1Arguments.html</filename>
    <member kind="function">
      <type>constexpr</type>
      <name>Arguments</name>
      <anchorfile>structMagnum_1_1Platform_1_1GlfwApplication_1_1Arguments.html</anchorfile>
      <anchor>aa71d2287269c4e5433b42d9dba38565d</anchor>
      <arglist>(int &amp;argc, char **argv) noexcept</arglist>
    </member>
    <member kind="variable">
      <type>int &amp;</type>
      <name>argc</name>
      <anchorfile>structMagnum_1_1Platform_1_1GlfwApplication_1_1Arguments.html</anchorfile>
      <anchor>a949d70f2fc4972fbe35bf3df63d302ff</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char **</type>
      <name>argv</name>
      <anchorfile>structMagnum_1_1Platform_1_1GlfwApplication_1_1Arguments.html</anchorfile>
      <anchor>a54ae3b31b5ac3305316b41143fb43584</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Magnum::Platform::GlfwApplication::Configuration</name>
    <filename>classMagnum_1_1Platform_1_1GlfwApplication_1_1Configuration.html</filename>
    <member kind="enumeration">
      <type></type>
      <name>Flag</name>
      <anchorfile>classMagnum_1_1Platform_1_1GlfwApplication_1_1Configuration.html</anchorfile>
      <anchor>ab30c9325495c97835fa49da9605bd8da</anchor>
      <arglist></arglist>
      <enumvalue file="classMagnum_1_1Platform_1_1GlfwApplication_1_1Configuration.html" anchor="ab30c9325495c97835fa49da9605bd8daa70a47cae4eb221930f2663fd244369ea">NoError</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1GlfwApplication_1_1Configuration.html" anchor="ab30c9325495c97835fa49da9605bd8daaa603905470e2a5b8c13e96b579ef0dba">Debug</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1GlfwApplication_1_1Configuration.html" anchor="ab30c9325495c97835fa49da9605bd8daabbc45d9b35436f5f0ed9e33499efcea9">Stereo</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>WindowFlag</name>
      <anchorfile>classMagnum_1_1Platform_1_1GlfwApplication_1_1Configuration.html</anchorfile>
      <anchor>ac329bec3923186c994a8912edb8539b6</anchor>
      <arglist></arglist>
      <enumvalue file="classMagnum_1_1Platform_1_1GlfwApplication_1_1Configuration.html" anchor="ac329bec3923186c994a8912edb8539b6a0829ea6734059d66e6bf87096b215dc1">Fullscreen</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1GlfwApplication_1_1Configuration.html" anchor="ac329bec3923186c994a8912edb8539b6aaff10bf1618da00a8a80b74044e719b2">Resizable</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1GlfwApplication_1_1Configuration.html" anchor="ac329bec3923186c994a8912edb8539b6ac12da3f7389af7d8a5850e8bd08bcda3">Resizeable</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1GlfwApplication_1_1Configuration.html" anchor="ac329bec3923186c994a8912edb8539b6a7acdf85c69cc3c5305456a293524386e">Hidden</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1GlfwApplication_1_1Configuration.html" anchor="ac329bec3923186c994a8912edb8539b6a49d903a5c02560cf79bf6b516cc89457">Maximized</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1GlfwApplication_1_1Configuration.html" anchor="ac329bec3923186c994a8912edb8539b6a074afcc50ae51f248cbae4950845549e">Minimized</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1GlfwApplication_1_1Configuration.html" anchor="ac329bec3923186c994a8912edb8539b6ac8df43648942ec3a9aec140f07f47b7c">Floating</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1GlfwApplication_1_1Configuration.html" anchor="ac329bec3923186c994a8912edb8539b6af1be21488589b6fe6a2c777e0c6ebc1f">AutoIconify</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1GlfwApplication_1_1Configuration.html" anchor="ac329bec3923186c994a8912edb8539b6aa2e08e1fbbc3e1489d688eba112f7964">Focused</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>CursorMode</name>
      <anchorfile>classMagnum_1_1Platform_1_1GlfwApplication_1_1Configuration.html</anchorfile>
      <anchor>ae9dffa3324ddf42435d2e27c7ea5160b</anchor>
      <arglist></arglist>
      <enumvalue file="classMagnum_1_1Platform_1_1GlfwApplication_1_1Configuration.html" anchor="ae9dffa3324ddf42435d2e27c7ea5160ba960b44c579bc2f6818d2daaf9e4c16f0">Normal</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1GlfwApplication_1_1Configuration.html" anchor="ae9dffa3324ddf42435d2e27c7ea5160ba7acdf85c69cc3c5305456a293524386e">Hidden</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1GlfwApplication_1_1Configuration.html" anchor="ae9dffa3324ddf42435d2e27c7ea5160bab9f5c797ebbf55adccdd8539a65a0241">Disabled</enumvalue>
    </member>
    <member kind="typedef">
      <type>Containers::EnumSet&lt; Flag &gt;</type>
      <name>Flags</name>
      <anchorfile>classMagnum_1_1Platform_1_1GlfwApplication_1_1Configuration.html</anchorfile>
      <anchor>a36ee22b7af3d958980b383ce01ddc374</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Containers::EnumSet&lt; WindowFlag &gt;</type>
      <name>WindowFlags</name>
      <anchorfile>classMagnum_1_1Platform_1_1GlfwApplication_1_1Configuration.html</anchorfile>
      <anchor>a36cbc10723ac3c7dbab74d1efb6a65c6</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>title</name>
      <anchorfile>classMagnum_1_1Platform_1_1GlfwApplication_1_1Configuration.html</anchorfile>
      <anchor>af62c0d610f06de799a0d158041d56564</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Configuration &amp;</type>
      <name>setTitle</name>
      <anchorfile>classMagnum_1_1Platform_1_1GlfwApplication_1_1Configuration.html</anchorfile>
      <anchor>a362858c34fa03931d6924bb30a009022</anchor>
      <arglist>(std::string title)</arglist>
    </member>
    <member kind="function">
      <type>Vector2i</type>
      <name>size</name>
      <anchorfile>classMagnum_1_1Platform_1_1GlfwApplication_1_1Configuration.html</anchorfile>
      <anchor>a3bccc304928a0312d0d04c750951a4e8</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Configuration &amp;</type>
      <name>setSize</name>
      <anchorfile>classMagnum_1_1Platform_1_1GlfwApplication_1_1Configuration.html</anchorfile>
      <anchor>a78a30147ed0aaca262a9d81d32c8a0cb</anchor>
      <arglist>(const Vector2i &amp;size)</arglist>
    </member>
    <member kind="function">
      <type>Flags</type>
      <name>flags</name>
      <anchorfile>classMagnum_1_1Platform_1_1GlfwApplication_1_1Configuration.html</anchorfile>
      <anchor>a7a2c606cafe5860c14b63570a8e883b1</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Configuration &amp;</type>
      <name>setFlags</name>
      <anchorfile>classMagnum_1_1Platform_1_1GlfwApplication_1_1Configuration.html</anchorfile>
      <anchor>af57467fea81abef9dc00409522ecd1c9</anchor>
      <arglist>(Flags flags)</arglist>
    </member>
    <member kind="function">
      <type>WindowFlags</type>
      <name>windowFlags</name>
      <anchorfile>classMagnum_1_1Platform_1_1GlfwApplication_1_1Configuration.html</anchorfile>
      <anchor>aa5f4f5000cedf65f68ba9e62ef15c9b4</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Configuration &amp;</type>
      <name>setWindowFlags</name>
      <anchorfile>classMagnum_1_1Platform_1_1GlfwApplication_1_1Configuration.html</anchorfile>
      <anchor>a300c1513737c39cae9050d8d950b21ac</anchor>
      <arglist>(WindowFlags windowFlags)</arglist>
    </member>
    <member kind="function">
      <type>CursorMode</type>
      <name>cursorMode</name>
      <anchorfile>classMagnum_1_1Platform_1_1GlfwApplication_1_1Configuration.html</anchorfile>
      <anchor>a9df6633fb3c54e5740a135093b455684</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Configuration &amp;</type>
      <name>setCursorMode</name>
      <anchorfile>classMagnum_1_1Platform_1_1GlfwApplication_1_1Configuration.html</anchorfile>
      <anchor>a7902d60a5fe76a062ae6f393f9d8288a</anchor>
      <arglist>(CursorMode cursorMode)</arglist>
    </member>
    <member kind="function">
      <type>Version</type>
      <name>version</name>
      <anchorfile>classMagnum_1_1Platform_1_1GlfwApplication_1_1Configuration.html</anchorfile>
      <anchor>a51b59bf688a63a255efaf2f3d35a78fe</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Configuration &amp;</type>
      <name>setVersion</name>
      <anchorfile>classMagnum_1_1Platform_1_1GlfwApplication_1_1Configuration.html</anchorfile>
      <anchor>aab6550143eb7ee2959018abbe26cb28c</anchor>
      <arglist>(Version version)</arglist>
    </member>
    <member kind="function">
      <type>Int</type>
      <name>sampleCount</name>
      <anchorfile>classMagnum_1_1Platform_1_1GlfwApplication_1_1Configuration.html</anchorfile>
      <anchor>af059a68b6ca958453e67c1ece7b0cc1a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Configuration &amp;</type>
      <name>setSampleCount</name>
      <anchorfile>classMagnum_1_1Platform_1_1GlfwApplication_1_1Configuration.html</anchorfile>
      <anchor>a5341054edf3d30478192929b323a4b1e</anchor>
      <arglist>(Int count)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isSRGBCapable</name>
      <anchorfile>classMagnum_1_1Platform_1_1GlfwApplication_1_1Configuration.html</anchorfile>
      <anchor>a41559325e40653acf30e1de94806f0ca</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Configuration &amp;</type>
      <name>setSRGBCapable</name>
      <anchorfile>classMagnum_1_1Platform_1_1GlfwApplication_1_1Configuration.html</anchorfile>
      <anchor>a884ad862d38ece36e78d18b0eda10cb5</anchor>
      <arglist>(bool enabled)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Magnum::Platform::GlfwApplication::InputEvent</name>
    <filename>classMagnum_1_1Platform_1_1GlfwApplication_1_1InputEvent.html</filename>
    <member kind="enumeration">
      <type></type>
      <name>Modifier</name>
      <anchorfile>classMagnum_1_1Platform_1_1GlfwApplication_1_1InputEvent.html</anchorfile>
      <anchor>aa0ab3ab0661751f494bc00ad14a06653</anchor>
      <arglist></arglist>
      <enumvalue file="classMagnum_1_1Platform_1_1GlfwApplication_1_1InputEvent.html" anchor="aa0ab3ab0661751f494bc00ad14a06653a825a3d98017bab11815ad2817201324c">Shift</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1GlfwApplication_1_1InputEvent.html" anchor="aa0ab3ab0661751f494bc00ad14a06653a2b61e0d5977f2e38f06e16281c802b47">Ctrl</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1GlfwApplication_1_1InputEvent.html" anchor="aa0ab3ab0661751f494bc00ad14a06653aa2e92861b757ab878312dd57993d60cf">Alt</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1GlfwApplication_1_1InputEvent.html" anchor="aa0ab3ab0661751f494bc00ad14a06653a0ce3266d4eb71ad50f7a90aee6d21dcd">Super</enumvalue>
    </member>
    <member kind="typedef">
      <type>Containers::EnumSet&lt; Modifier &gt;</type>
      <name>Modifiers</name>
      <anchorfile>classMagnum_1_1Platform_1_1GlfwApplication_1_1InputEvent.html</anchorfile>
      <anchor>ac3a649a7e0b48828bbf93dce4caffe13</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>InputEvent</name>
      <anchorfile>classMagnum_1_1Platform_1_1GlfwApplication_1_1InputEvent.html</anchorfile>
      <anchor>a0897a8ef577ef7ea555e377ceb880ef0</anchor>
      <arglist>(const InputEvent &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>InputEvent</name>
      <anchorfile>classMagnum_1_1Platform_1_1GlfwApplication_1_1InputEvent.html</anchorfile>
      <anchor>ae212573566426faac4461d4883a482cf</anchor>
      <arglist>(InputEvent &amp;&amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>InputEvent &amp;</type>
      <name>operator=</name>
      <anchorfile>classMagnum_1_1Platform_1_1GlfwApplication_1_1InputEvent.html</anchorfile>
      <anchor>a7978c8f420dab764a5b1e6d4e7fb70b6</anchor>
      <arglist>(const InputEvent &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>InputEvent &amp;</type>
      <name>operator=</name>
      <anchorfile>classMagnum_1_1Platform_1_1GlfwApplication_1_1InputEvent.html</anchorfile>
      <anchor>ac51bb2614d67c1f86a0c61d8a45169ff</anchor>
      <arglist>(InputEvent &amp;&amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setAccepted</name>
      <anchorfile>classMagnum_1_1Platform_1_1GlfwApplication_1_1InputEvent.html</anchorfile>
      <anchor>a3b93ef0f2947d02ab98224c2f6270d77</anchor>
      <arglist>(bool accepted=true)</arglist>
    </member>
    <member kind="function">
      <type>constexpr bool</type>
      <name>isAccepted</name>
      <anchorfile>classMagnum_1_1Platform_1_1GlfwApplication_1_1InputEvent.html</anchorfile>
      <anchor>a424357a4276d1e218b2c2674c8302827</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Magnum::Platform::GlfwApplication::KeyEvent</name>
    <filename>classMagnum_1_1Platform_1_1GlfwApplication_1_1KeyEvent.html</filename>
    <base>Magnum::Platform::GlfwApplication::InputEvent</base>
    <member kind="enumeration">
      <type></type>
      <name>Key</name>
      <anchorfile>classMagnum_1_1Platform_1_1GlfwApplication_1_1KeyEvent.html</anchorfile>
      <anchor>a90b72544e22cdacf39831c53b39c4a48</anchor>
      <arglist></arglist>
      <enumvalue file="classMagnum_1_1Platform_1_1GlfwApplication_1_1KeyEvent.html" anchor="a90b72544e22cdacf39831c53b39c4a48a88183b946cc5f0e8c96b2e66e1c74a7e">Unknown</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1GlfwApplication_1_1KeyEvent.html" anchor="a90b72544e22cdacf39831c53b39c4a48a982621712db76f723b7bb88b631dc64d">LeftShift</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1GlfwApplication_1_1KeyEvent.html" anchor="a90b72544e22cdacf39831c53b39c4a48a317d4a7487ee62605713987d4a037f83">RightShift</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1GlfwApplication_1_1KeyEvent.html" anchor="a90b72544e22cdacf39831c53b39c4a48af2be247d68aadad6e9ba07db1885cd1c">LeftCtrl</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1GlfwApplication_1_1KeyEvent.html" anchor="a90b72544e22cdacf39831c53b39c4a48af298b75d2207818c0459c063a21fd172">RightCtrl</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1GlfwApplication_1_1KeyEvent.html" anchor="a90b72544e22cdacf39831c53b39c4a48a96f9c4eb595a467d02e35c723f63ebf7">LeftAlt</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1GlfwApplication_1_1KeyEvent.html" anchor="a90b72544e22cdacf39831c53b39c4a48ad88bad98046b623323aa6ca28eefa6d5">RightAlt</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1GlfwApplication_1_1KeyEvent.html" anchor="a90b72544e22cdacf39831c53b39c4a48a4bd45bf12e08f60072b6962e9f7794c2">LeftSuper</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1GlfwApplication_1_1KeyEvent.html" anchor="a90b72544e22cdacf39831c53b39c4a48a0cc5a9f113dc1147c8eeae2f0199f9f2">RightSuper</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1GlfwApplication_1_1KeyEvent.html" anchor="a90b72544e22cdacf39831c53b39c4a48af1851d5600eae616ee802a31ac74701b">Enter</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1GlfwApplication_1_1KeyEvent.html" anchor="a90b72544e22cdacf39831c53b39c4a48a91f4253ca587ca8ac4e63b9ceb351f5d">Esc</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1GlfwApplication_1_1KeyEvent.html" anchor="a90b72544e22cdacf39831c53b39c4a48a258f49887ef8d14ac268c92b02503aaa">Up</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1GlfwApplication_1_1KeyEvent.html" anchor="a90b72544e22cdacf39831c53b39c4a48a08a38277b0309070706f6652eeae9a53">Down</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1GlfwApplication_1_1KeyEvent.html" anchor="a90b72544e22cdacf39831c53b39c4a48a945d5e233cf7d6240f6b783b36a374ff">Left</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1GlfwApplication_1_1KeyEvent.html" anchor="a90b72544e22cdacf39831c53b39c4a48a92b09c7c48c520c3c55e497875da437c">Right</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1GlfwApplication_1_1KeyEvent.html" anchor="a90b72544e22cdacf39831c53b39c4a48a8cf04a9734132302f96da8e113e80ce5">Home</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1GlfwApplication_1_1KeyEvent.html" anchor="a90b72544e22cdacf39831c53b39c4a48a87557f11575c0ad78e4e28abedc13b6e">End</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1GlfwApplication_1_1KeyEvent.html" anchor="a90b72544e22cdacf39831c53b39c4a48a9b869c510c75c5827ac82e49d4340927">PageUp</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1GlfwApplication_1_1KeyEvent.html" anchor="a90b72544e22cdacf39831c53b39c4a48aee3677bcca83ece9384b01e43952bf33">PageDown</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1GlfwApplication_1_1KeyEvent.html" anchor="a90b72544e22cdacf39831c53b39c4a48acd7d13ceea728b08555f7c818cfb13ef">Backspace</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1GlfwApplication_1_1KeyEvent.html" anchor="a90b72544e22cdacf39831c53b39c4a48aa458be0f08b7e4ff3c0f633c100176c0">Insert</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1GlfwApplication_1_1KeyEvent.html" anchor="a90b72544e22cdacf39831c53b39c4a48af2a6c498fb90ee345d997f888fce3b18">Delete</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1GlfwApplication_1_1KeyEvent.html" anchor="a90b72544e22cdacf39831c53b39c4a48ae1dffc8709f31a4987c8a88334107e89">F1</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1GlfwApplication_1_1KeyEvent.html" anchor="a90b72544e22cdacf39831c53b39c4a48afe5c3684dce76cdd9f7f42430868aa74">F2</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1GlfwApplication_1_1KeyEvent.html" anchor="a90b72544e22cdacf39831c53b39c4a48a4b6bf4b531770872d4328ce69bef5627">F3</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1GlfwApplication_1_1KeyEvent.html" anchor="a90b72544e22cdacf39831c53b39c4a48ae7e0e72401a9f2718ed0f39f2861d702">F4</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1GlfwApplication_1_1KeyEvent.html" anchor="a90b72544e22cdacf39831c53b39c4a48a37f438df6a6d5ba4c17ef8ca58562f00">F5</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1GlfwApplication_1_1KeyEvent.html" anchor="a90b72544e22cdacf39831c53b39c4a48a1faf42f2823f184eb2c9f0dffe5d73f2">F6</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1GlfwApplication_1_1KeyEvent.html" anchor="a90b72544e22cdacf39831c53b39c4a48a47489eb597b7db34caa24b1fc78fc839">F7</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1GlfwApplication_1_1KeyEvent.html" anchor="a90b72544e22cdacf39831c53b39c4a48a4787509ad9f9d747a81a30e9dde3d4a7">F8</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1GlfwApplication_1_1KeyEvent.html" anchor="a90b72544e22cdacf39831c53b39c4a48a892a245e287c163080b23db737d3c4c9">F9</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1GlfwApplication_1_1KeyEvent.html" anchor="a90b72544e22cdacf39831c53b39c4a48ab213ce22ca6ad4eda8db82966b9b6e5a">F10</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1GlfwApplication_1_1KeyEvent.html" anchor="a90b72544e22cdacf39831c53b39c4a48a643b0662422d1d0dffa3fca2e2bf28a8">F11</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1GlfwApplication_1_1KeyEvent.html" anchor="a90b72544e22cdacf39831c53b39c4a48ae902674982fc99aa343cdd94da7476c3">F12</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1GlfwApplication_1_1KeyEvent.html" anchor="a90b72544e22cdacf39831c53b39c4a48ad511f8439ecde36647437fbba67a4394">Space</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1GlfwApplication_1_1KeyEvent.html" anchor="a90b72544e22cdacf39831c53b39c4a48a5c6ba25104401c9ee0650230fc6ba413">Tab</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1GlfwApplication_1_1KeyEvent.html" anchor="a90b72544e22cdacf39831c53b39c4a48a58be47db9455679e6a44df2eff9c9fa6">Comma</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1GlfwApplication_1_1KeyEvent.html" anchor="a90b72544e22cdacf39831c53b39c4a48a1901606ea069a83dc7beea17881ef95a">Period</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1GlfwApplication_1_1KeyEvent.html" anchor="a90b72544e22cdacf39831c53b39c4a48a453fb623e752c5993f65bc410fd74fe5">Minus</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1GlfwApplication_1_1KeyEvent.html" anchor="a90b72544e22cdacf39831c53b39c4a48a32ba78fe43257d3e7f88e3935a8ea0d4">Plus</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1GlfwApplication_1_1KeyEvent.html" anchor="a90b72544e22cdacf39831c53b39c4a48a358cfe58715d680d9ab09f82e4010cbc">Slash</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1GlfwApplication_1_1KeyEvent.html" anchor="a90b72544e22cdacf39831c53b39c4a48aadaaee4b22041c27198d410c68d952c9">Percent</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1GlfwApplication_1_1KeyEvent.html" anchor="a90b72544e22cdacf39831c53b39c4a48a02c46eec0a232f46ee7080dfb78a65de">Smicolon</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1GlfwApplication_1_1KeyEvent.html" anchor="a90b72544e22cdacf39831c53b39c4a48af5f286e73bda105e538310b3190f75c5">Equal</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1GlfwApplication_1_1KeyEvent.html" anchor="a90b72544e22cdacf39831c53b39c4a48ad7ed4ee1df437474d005188535f74875">Zero</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1GlfwApplication_1_1KeyEvent.html" anchor="a90b72544e22cdacf39831c53b39c4a48a06c2cea18679d64399783748fa367bdd">One</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1GlfwApplication_1_1KeyEvent.html" anchor="a90b72544e22cdacf39831c53b39c4a48aaada29daee1d64ed0fe907043855cb7e">Two</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1GlfwApplication_1_1KeyEvent.html" anchor="a90b72544e22cdacf39831c53b39c4a48aca8a2087e5557e317599344687a57391">Three</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1GlfwApplication_1_1KeyEvent.html" anchor="a90b72544e22cdacf39831c53b39c4a48a981b8fcee42e1e726a67a2b9a98ea6e9">Four</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1GlfwApplication_1_1KeyEvent.html" anchor="a90b72544e22cdacf39831c53b39c4a48ae5d9de39f7ca1ba2637e5640af3ae8aa">Five</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1GlfwApplication_1_1KeyEvent.html" anchor="a90b72544e22cdacf39831c53b39c4a48ae6fbc0b9673f8c86726688d7607fc8f5">Six</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1GlfwApplication_1_1KeyEvent.html" anchor="a90b72544e22cdacf39831c53b39c4a48a12e67aac3e7f9227cc35f8f047d7dc74">Seven</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1GlfwApplication_1_1KeyEvent.html" anchor="a90b72544e22cdacf39831c53b39c4a48abaca0ca6729684fd54206793ae4b5bd5">Eight</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1GlfwApplication_1_1KeyEvent.html" anchor="a90b72544e22cdacf39831c53b39c4a48a24db11216549ee55172c33cf3def2f3f">Nine</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1GlfwApplication_1_1KeyEvent.html" anchor="a90b72544e22cdacf39831c53b39c4a48a7fc56270e7a70fa81a5935b72eacbe29">A</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1GlfwApplication_1_1KeyEvent.html" anchor="a90b72544e22cdacf39831c53b39c4a48a9d5ed678fe57bcca610140957afab571">B</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1GlfwApplication_1_1KeyEvent.html" anchor="a90b72544e22cdacf39831c53b39c4a48a0d61f8370cad1d412f80b84d143e1257">C</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1GlfwApplication_1_1KeyEvent.html" anchor="a90b72544e22cdacf39831c53b39c4a48af623e75af30e62bbd73d6df5b50bb7b5">D</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1GlfwApplication_1_1KeyEvent.html" anchor="a90b72544e22cdacf39831c53b39c4a48a3a3ea00cfc35332cedf6e5e9a32e94da">E</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1GlfwApplication_1_1KeyEvent.html" anchor="a90b72544e22cdacf39831c53b39c4a48a800618943025315f869e4e1f09471012">F</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1GlfwApplication_1_1KeyEvent.html" anchor="a90b72544e22cdacf39831c53b39c4a48adfcf28d0734569a6a693bc8194de62bf">G</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1GlfwApplication_1_1KeyEvent.html" anchor="a90b72544e22cdacf39831c53b39c4a48ac1d9f50f86825a1a2302ec2449c17196">H</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1GlfwApplication_1_1KeyEvent.html" anchor="a90b72544e22cdacf39831c53b39c4a48add7536794b63bf90eccfd37f9b147d7f">I</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1GlfwApplication_1_1KeyEvent.html" anchor="a90b72544e22cdacf39831c53b39c4a48aff44570aca8241914870afbc310cdb85">J</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1GlfwApplication_1_1KeyEvent.html" anchor="a90b72544e22cdacf39831c53b39c4a48aa5f3c6a11b03839d46af9fb43c97c188">K</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1GlfwApplication_1_1KeyEvent.html" anchor="a90b72544e22cdacf39831c53b39c4a48ad20caec3b48a1eef164cb4ca81ba2587">L</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1GlfwApplication_1_1KeyEvent.html" anchor="a90b72544e22cdacf39831c53b39c4a48a69691c7bdcc3ce6d5d8a1361f22d04ac">M</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1GlfwApplication_1_1KeyEvent.html" anchor="a90b72544e22cdacf39831c53b39c4a48a8d9c307cb7f3c4a32822a51922d1ceaa">N</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1GlfwApplication_1_1KeyEvent.html" anchor="a90b72544e22cdacf39831c53b39c4a48af186217753c37b9b9f958d906208506e">O</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1GlfwApplication_1_1KeyEvent.html" anchor="a90b72544e22cdacf39831c53b39c4a48a44c29edb103a2872f519ad0c9a0fdaaa">P</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1GlfwApplication_1_1KeyEvent.html" anchor="a90b72544e22cdacf39831c53b39c4a48af09564c9ca56850d4cd6b3319e541aee">Q</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1GlfwApplication_1_1KeyEvent.html" anchor="a90b72544e22cdacf39831c53b39c4a48ae1e1d3d40573127e9ee0480caf1283d6">R</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1GlfwApplication_1_1KeyEvent.html" anchor="a90b72544e22cdacf39831c53b39c4a48a5dbc98dcc983a70728bd082d1a47546e">S</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1GlfwApplication_1_1KeyEvent.html" anchor="a90b72544e22cdacf39831c53b39c4a48ab9ece18c950afbfa6b0fdbfa4ff731d3">T</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1GlfwApplication_1_1KeyEvent.html" anchor="a90b72544e22cdacf39831c53b39c4a48a4c614360da93c0a041b22e537de151eb">U</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1GlfwApplication_1_1KeyEvent.html" anchor="a90b72544e22cdacf39831c53b39c4a48a5206560a306a2e085a437fd258eb57ce">V</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1GlfwApplication_1_1KeyEvent.html" anchor="a90b72544e22cdacf39831c53b39c4a48a61e9c06ea9a85a5088a499df6458d276">W</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1GlfwApplication_1_1KeyEvent.html" anchor="a90b72544e22cdacf39831c53b39c4a48a02129bb861061d1a052c592e2dc6b383">X</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1GlfwApplication_1_1KeyEvent.html" anchor="a90b72544e22cdacf39831c53b39c4a48a57cec4137b614c87cb4e24a3d003a3e0">Y</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1GlfwApplication_1_1KeyEvent.html" anchor="a90b72544e22cdacf39831c53b39c4a48a21c2e59531c8710156d34a3c30ac81d5">Z</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1GlfwApplication_1_1KeyEvent.html" anchor="a90b72544e22cdacf39831c53b39c4a48a8d0f4171170104d094d8b6d4f8bf49e6">CapsLock</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1GlfwApplication_1_1KeyEvent.html" anchor="a90b72544e22cdacf39831c53b39c4a48a7d7902d5e2998e4fb2b8694a2de4ff65">ScrollLock</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1GlfwApplication_1_1KeyEvent.html" anchor="a90b72544e22cdacf39831c53b39c4a48acf6cc0261135c6d163fd4305375773d2">NumLock</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1GlfwApplication_1_1KeyEvent.html" anchor="a90b72544e22cdacf39831c53b39c4a48abf54024481cd2ad6bbb9ae44b7312472">PrintScreen</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1GlfwApplication_1_1KeyEvent.html" anchor="a90b72544e22cdacf39831c53b39c4a48a105b296a83f9c105355403f3332af50f">Pause</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1GlfwApplication_1_1KeyEvent.html" anchor="a90b72544e22cdacf39831c53b39c4a48a1869dff90f04dc9d3440e15914911c4b">NumZero</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1GlfwApplication_1_1KeyEvent.html" anchor="a90b72544e22cdacf39831c53b39c4a48a434921bdf9c88d2f95dad4c36d7470c7">NumOne</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1GlfwApplication_1_1KeyEvent.html" anchor="a90b72544e22cdacf39831c53b39c4a48a157dafd3675172c7d6e3d1db3328c86d">NumTwo</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1GlfwApplication_1_1KeyEvent.html" anchor="a90b72544e22cdacf39831c53b39c4a48af66a061b82c07e120dfc396b228e89ec">NumThree</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1GlfwApplication_1_1KeyEvent.html" anchor="a90b72544e22cdacf39831c53b39c4a48af56576fa9aa7b5a204e2b14c7e37b19c">NumFour</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1GlfwApplication_1_1KeyEvent.html" anchor="a90b72544e22cdacf39831c53b39c4a48a5ff8650b509a4b11e0ddc38d3703a427">NumFive</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1GlfwApplication_1_1KeyEvent.html" anchor="a90b72544e22cdacf39831c53b39c4a48aaf599848db6b5bb6b851f50ba44c6a98">NumSix</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1GlfwApplication_1_1KeyEvent.html" anchor="a90b72544e22cdacf39831c53b39c4a48a61a96fdbd354c8a5f808b9fb61dc15bc">NumSeven</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1GlfwApplication_1_1KeyEvent.html" anchor="a90b72544e22cdacf39831c53b39c4a48a385f9a2264878bc6c93ec7b5dc287467">NumEight</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1GlfwApplication_1_1KeyEvent.html" anchor="a90b72544e22cdacf39831c53b39c4a48a615aef11d2a108f3ede8bca77e451f87">NumNine</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1GlfwApplication_1_1KeyEvent.html" anchor="a90b72544e22cdacf39831c53b39c4a48a2d7b9bc754ace6e474a3f68c493eb553">NumDecimal</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1GlfwApplication_1_1KeyEvent.html" anchor="a90b72544e22cdacf39831c53b39c4a48a7fee165fee036b58e2e460ca8e006f03">NumDivide</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1GlfwApplication_1_1KeyEvent.html" anchor="a90b72544e22cdacf39831c53b39c4a48ad6c81b855af26854fa89ebf21f8ff972">NumMultiply</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1GlfwApplication_1_1KeyEvent.html" anchor="a90b72544e22cdacf39831c53b39c4a48a8e0411bbc85a52f7986b8ed9beb886ba">NumSubtract</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1GlfwApplication_1_1KeyEvent.html" anchor="a90b72544e22cdacf39831c53b39c4a48af4ddc8457c915e0e241a547fd7153ac4">NumAdd</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1GlfwApplication_1_1KeyEvent.html" anchor="a90b72544e22cdacf39831c53b39c4a48a2c1389c1c9102cf39c69b0f334a0b859">NumEnter</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1GlfwApplication_1_1KeyEvent.html" anchor="a90b72544e22cdacf39831c53b39c4a48a8ac0ce1e964c895dac72be97a4b61177">NumEqual</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1GlfwApplication_1_1KeyEvent.html" anchor="a90b72544e22cdacf39831c53b39c4a48ab61541208db7fa7dba42c85224405911">Menu</enumvalue>
    </member>
    <member kind="function">
      <type>constexpr Key</type>
      <name>key</name>
      <anchorfile>classMagnum_1_1Platform_1_1GlfwApplication_1_1KeyEvent.html</anchorfile>
      <anchor>a2d3f23f4422345e3815b7ffe5f1fa6e5</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>keyName</name>
      <anchorfile>classMagnum_1_1Platform_1_1GlfwApplication_1_1KeyEvent.html</anchorfile>
      <anchor>aef350852ab4f6c1f9cc70e42ffb60327</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>constexpr Modifiers</type>
      <name>modifiers</name>
      <anchorfile>classMagnum_1_1Platform_1_1GlfwApplication_1_1KeyEvent.html</anchorfile>
      <anchor>a8721bca75fd8942d21dbf1440e88078e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>constexpr bool</type>
      <name>isRepeated</name>
      <anchorfile>classMagnum_1_1Platform_1_1GlfwApplication_1_1KeyEvent.html</anchorfile>
      <anchor>a3a5d57421d1dfed079abc4ca2c400a0a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::string</type>
      <name>keyName</name>
      <anchorfile>classMagnum_1_1Platform_1_1GlfwApplication_1_1KeyEvent.html</anchorfile>
      <anchor>a122d7fbe873fbe41cac116c850353e26</anchor>
      <arglist>(Key key)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Magnum::Platform::GlfwApplication::MouseEvent</name>
    <filename>classMagnum_1_1Platform_1_1GlfwApplication_1_1MouseEvent.html</filename>
    <base>Magnum::Platform::GlfwApplication::InputEvent</base>
    <member kind="enumeration">
      <type></type>
      <name>Button</name>
      <anchorfile>classMagnum_1_1Platform_1_1GlfwApplication_1_1MouseEvent.html</anchorfile>
      <anchor>a6dcf802a3aa78c19081f8312fc976377</anchor>
      <arglist></arglist>
      <enumvalue file="classMagnum_1_1Platform_1_1GlfwApplication_1_1MouseEvent.html" anchor="a6dcf802a3aa78c19081f8312fc976377a945d5e233cf7d6240f6b783b36a374ff">Left</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1GlfwApplication_1_1MouseEvent.html" anchor="a6dcf802a3aa78c19081f8312fc976377ab1ca34f82e83c52b010f86955f264e05">Middle</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1GlfwApplication_1_1MouseEvent.html" anchor="a6dcf802a3aa78c19081f8312fc976377a92b09c7c48c520c3c55e497875da437c">Right</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1GlfwApplication_1_1MouseEvent.html" anchor="a6dcf802a3aa78c19081f8312fc976377a6475a3746209a62a6ce6289a3741d07e">Button1</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1GlfwApplication_1_1MouseEvent.html" anchor="a6dcf802a3aa78c19081f8312fc976377ae165925a7c2d5ea94209b91389aa189f">Button2</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1GlfwApplication_1_1MouseEvent.html" anchor="a6dcf802a3aa78c19081f8312fc976377a6d0c69e60d65a93dd244ae95f90e679c">Button3</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1GlfwApplication_1_1MouseEvent.html" anchor="a6dcf802a3aa78c19081f8312fc976377a91ff24acfc01cc2c3a4238a272a37d07">Button4</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1GlfwApplication_1_1MouseEvent.html" anchor="a6dcf802a3aa78c19081f8312fc976377af8849babaeaee3344306b87310664d65">Button5</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1GlfwApplication_1_1MouseEvent.html" anchor="a6dcf802a3aa78c19081f8312fc976377a375ccc6b3a6125cc5c67f2c700a55b72">Button6</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1GlfwApplication_1_1MouseEvent.html" anchor="a6dcf802a3aa78c19081f8312fc976377aa00c628d1b186fa4fe9c7f633426979e">Button7</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1GlfwApplication_1_1MouseEvent.html" anchor="a6dcf802a3aa78c19081f8312fc976377a4f651f24c0b38f6e7ea0d52b0c514e36">Button8</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1GlfwApplication_1_1MouseEvent.html" anchor="a6dcf802a3aa78c19081f8312fc976377a050f568559dcada95ba3ecb63de39971">WheelUp</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1GlfwApplication_1_1MouseEvent.html" anchor="a6dcf802a3aa78c19081f8312fc976377a95cf2a3dc58aff6d85e53738a089d9d1">WheelDown</enumvalue>
    </member>
    <member kind="function">
      <type>constexpr Button</type>
      <name>button</name>
      <anchorfile>classMagnum_1_1Platform_1_1GlfwApplication_1_1MouseEvent.html</anchorfile>
      <anchor>a739ebe220a26ca0a68ad152d77b27482</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>constexpr Vector2i</type>
      <name>position</name>
      <anchorfile>classMagnum_1_1Platform_1_1GlfwApplication_1_1MouseEvent.html</anchorfile>
      <anchor>aa6546220d7ed0f107012163a3aceccd4</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>constexpr Modifiers</type>
      <name>modifiers</name>
      <anchorfile>classMagnum_1_1Platform_1_1GlfwApplication_1_1MouseEvent.html</anchorfile>
      <anchor>a32a013fa8b067221575e0337a5aa6537</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Magnum::Platform::GlfwApplication::MouseMoveEvent</name>
    <filename>classMagnum_1_1Platform_1_1GlfwApplication_1_1MouseMoveEvent.html</filename>
    <base>Magnum::Platform::GlfwApplication::InputEvent</base>
    <member kind="function">
      <type>constexpr Vector2i</type>
      <name>position</name>
      <anchorfile>classMagnum_1_1Platform_1_1GlfwApplication_1_1MouseMoveEvent.html</anchorfile>
      <anchor>a297e18c5a9d2834f74b9dba49b6078c9</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>constexpr Modifiers</type>
      <name>modifiers</name>
      <anchorfile>classMagnum_1_1Platform_1_1GlfwApplication_1_1MouseMoveEvent.html</anchorfile>
      <anchor>ace37bf8a63d1ed98867aa3e0d1e4ec80</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Magnum::Platform::GlfwApplication::MouseScrollEvent</name>
    <filename>classMagnum_1_1Platform_1_1GlfwApplication_1_1MouseScrollEvent.html</filename>
    <base>Magnum::Platform::GlfwApplication::InputEvent</base>
    <member kind="function">
      <type>constexpr Vector2</type>
      <name>offset</name>
      <anchorfile>classMagnum_1_1Platform_1_1GlfwApplication_1_1MouseScrollEvent.html</anchorfile>
      <anchor>a557b0e283ee0c29d4685ec8aa3061ac6</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>constexpr Modifiers</type>
      <name>modifiers</name>
      <anchorfile>classMagnum_1_1Platform_1_1GlfwApplication_1_1MouseScrollEvent.html</anchorfile>
      <anchor>aef03c6d470fcccc158560d9da9520887</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Magnum::Platform::GlfwApplication::TextInputEvent</name>
    <filename>classMagnum_1_1Platform_1_1GlfwApplication_1_1TextInputEvent.html</filename>
    <member kind="function">
      <type></type>
      <name>TextInputEvent</name>
      <anchorfile>classMagnum_1_1Platform_1_1GlfwApplication_1_1TextInputEvent.html</anchorfile>
      <anchor>a5d1a5f5ff7a5d11b44508b7b606a2282</anchor>
      <arglist>(const TextInputEvent &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TextInputEvent</name>
      <anchorfile>classMagnum_1_1Platform_1_1GlfwApplication_1_1TextInputEvent.html</anchorfile>
      <anchor>af443f16d3d78ead1bca3cabf3a7518d5</anchor>
      <arglist>(TextInputEvent &amp;&amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>TextInputEvent &amp;</type>
      <name>operator=</name>
      <anchorfile>classMagnum_1_1Platform_1_1GlfwApplication_1_1TextInputEvent.html</anchorfile>
      <anchor>afa34658405d0eae9ff1ca7c32256170b</anchor>
      <arglist>(const TextInputEvent &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>TextInputEvent &amp;</type>
      <name>operator=</name>
      <anchorfile>classMagnum_1_1Platform_1_1GlfwApplication_1_1TextInputEvent.html</anchorfile>
      <anchor>a5698117de59e1758492db04c2582d032</anchor>
      <arglist>(TextInputEvent &amp;&amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>constexpr bool</type>
      <name>isAccepted</name>
      <anchorfile>classMagnum_1_1Platform_1_1GlfwApplication_1_1TextInputEvent.html</anchorfile>
      <anchor>af9eb49e3a8e057e769e5411e6751355a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setAccepted</name>
      <anchorfile>classMagnum_1_1Platform_1_1GlfwApplication_1_1TextInputEvent.html</anchorfile>
      <anchor>af7d46da1b5b4a69d39d27017c8ab12e9</anchor>
      <arglist>(bool accepted=true)</arglist>
    </member>
    <member kind="function">
      <type>constexpr Containers::ArrayView&lt; const char &gt;</type>
      <name>text</name>
      <anchorfile>classMagnum_1_1Platform_1_1GlfwApplication_1_1TextInputEvent.html</anchorfile>
      <anchor>a5b48ff0f9bce71ea677a4c59518a89e5</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Magnum::Platform::GlutApplication</name>
    <filename>classMagnum_1_1Platform_1_1GlutApplication.html</filename>
    <class kind="struct">Magnum::Platform::GlutApplication::Arguments</class>
    <class kind="class">Magnum::Platform::GlutApplication::Configuration</class>
    <class kind="class">Magnum::Platform::GlutApplication::InputEvent</class>
    <class kind="class">Magnum::Platform::GlutApplication::KeyEvent</class>
    <class kind="class">Magnum::Platform::GlutApplication::MouseEvent</class>
    <class kind="class">Magnum::Platform::GlutApplication::MouseMoveEvent</class>
    <member kind="function">
      <type></type>
      <name>GlutApplication</name>
      <anchorfile>classMagnum_1_1Platform_1_1GlutApplication.html</anchorfile>
      <anchor>a82af04cec6fd0b2dbb6ac76569a9bb45</anchor>
      <arglist>(const Arguments &amp;arguments, const Configuration &amp;configuration=Configuration())</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>GlutApplication</name>
      <anchorfile>classMagnum_1_1Platform_1_1GlutApplication.html</anchorfile>
      <anchor>ae8dfa3bd6b35b57be9cdf2ff0dd6fd48</anchor>
      <arglist>(const Arguments &amp;arguments, NoCreateT)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>GlutApplication</name>
      <anchorfile>classMagnum_1_1Platform_1_1GlutApplication.html</anchorfile>
      <anchor>ae39e27eb26ac3d39f7ea3ede6539e2c2</anchor>
      <arglist>(const Arguments &amp;arguments, std::nullptr_t)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>GlutApplication</name>
      <anchorfile>classMagnum_1_1Platform_1_1GlutApplication.html</anchorfile>
      <anchor>a3a322c939035228c036639008e2fe85d</anchor>
      <arglist>(const GlutApplication &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>GlutApplication</name>
      <anchorfile>classMagnum_1_1Platform_1_1GlutApplication.html</anchorfile>
      <anchor>aeaf2228d7e3c7e1ccf09786b7d884e11</anchor>
      <arglist>(GlutApplication &amp;&amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>GlutApplication &amp;</type>
      <name>operator=</name>
      <anchorfile>classMagnum_1_1Platform_1_1GlutApplication.html</anchorfile>
      <anchor>af7472da3683d62c0d17f667fbac631eb</anchor>
      <arglist>(const GlutApplication &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>GlutApplication &amp;</type>
      <name>operator=</name>
      <anchorfile>classMagnum_1_1Platform_1_1GlutApplication.html</anchorfile>
      <anchor>a85854dd245ede1bb0a450893a8c1cfab</anchor>
      <arglist>(GlutApplication &amp;&amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>exec</name>
      <anchorfile>classMagnum_1_1Platform_1_1GlutApplication.html</anchorfile>
      <anchor>a2d401ae5c4202016b3a614bcaa873cda</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>createContext</name>
      <anchorfile>classMagnum_1_1Platform_1_1GlutApplication.html</anchorfile>
      <anchor>a85ac419827123bd96de62c9b1dafd6f7</anchor>
      <arglist>(const Configuration &amp;configuration=Configuration())</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>tryCreateContext</name>
      <anchorfile>classMagnum_1_1Platform_1_1GlutApplication.html</anchorfile>
      <anchor>a97a879cdee4fd2ab7d30a26c3fa63fdf</anchor>
      <arglist>(const Configuration &amp;configuration)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>swapBuffers</name>
      <anchorfile>classMagnum_1_1Platform_1_1GlutApplication.html</anchorfile>
      <anchor>ae571b79ace8a788856773e1adee998b9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>redraw</name>
      <anchorfile>classMagnum_1_1Platform_1_1GlutApplication.html</anchorfile>
      <anchor>a1b0407ee9f383569449f18a5013b7761</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>viewportEvent</name>
      <anchorfile>classMagnum_1_1Platform_1_1GlutApplication.html</anchorfile>
      <anchor>aa44b0fa80c2a5a2a10d071069b784c5b</anchor>
      <arglist>(const Vector2i &amp;size)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual void</type>
      <name>drawEvent</name>
      <anchorfile>classMagnum_1_1Platform_1_1GlutApplication.html</anchorfile>
      <anchor>aee5b7e6a39ccaf1a669dff8d67a56558</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>keyPressEvent</name>
      <anchorfile>classMagnum_1_1Platform_1_1GlutApplication.html</anchorfile>
      <anchor>a8c7b7ec051c98c01e531cef65df851bf</anchor>
      <arglist>(KeyEvent &amp;event)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>keyReleaseEvent</name>
      <anchorfile>classMagnum_1_1Platform_1_1GlutApplication.html</anchorfile>
      <anchor>a0f77fb738e5f2485c39b1239097b3e66</anchor>
      <arglist>(KeyEvent &amp;event)</arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>MouseCursor</name>
      <anchorfile>classMagnum_1_1Platform_1_1GlutApplication.html</anchorfile>
      <anchor>a4151e704bb857dbc3b64184352a8ebf1</anchor>
      <arglist></arglist>
      <enumvalue file="classMagnum_1_1Platform_1_1GlutApplication.html" anchor="a4151e704bb857dbc3b64184352a8ebf1a7a1920d61156abc05a60135aefe8bc67">Default</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1GlutApplication.html" anchor="a4151e704bb857dbc3b64184352a8ebf1a6adf97f83acf6453d4a6a4b1070f3754">None</enumvalue>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setMouseTracking</name>
      <anchorfile>classMagnum_1_1Platform_1_1GlutApplication.html</anchorfile>
      <anchor>ad5965e1c6b28153353f6a4aaf2e7c05b</anchor>
      <arglist>(bool enabled)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setMouseCursor</name>
      <anchorfile>classMagnum_1_1Platform_1_1GlutApplication.html</anchorfile>
      <anchor>acb9c234eddf85656c9a50a308cb901d2</anchor>
      <arglist>(MouseCursor cursor)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>warpMouseCursor</name>
      <anchorfile>classMagnum_1_1Platform_1_1GlutApplication.html</anchorfile>
      <anchor>a7ef086dcf29445f3e2004354dc0adab7</anchor>
      <arglist>(const Vector2i &amp;position)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>mousePressEvent</name>
      <anchorfile>classMagnum_1_1Platform_1_1GlutApplication.html</anchorfile>
      <anchor>aa1b3478987d5b69d960f8bcf609ab01d</anchor>
      <arglist>(MouseEvent &amp;event)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>mouseReleaseEvent</name>
      <anchorfile>classMagnum_1_1Platform_1_1GlutApplication.html</anchorfile>
      <anchor>a8e7405f446c56f1d5c774e0abf898158</anchor>
      <arglist>(MouseEvent &amp;event)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>mouseMoveEvent</name>
      <anchorfile>classMagnum_1_1Platform_1_1GlutApplication.html</anchorfile>
      <anchor>a6a18e2aa4321e61ce4fe4e759f477570</anchor>
      <arglist>(MouseMoveEvent &amp;event)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Magnum::Platform::GlutApplication::Arguments</name>
    <filename>structMagnum_1_1Platform_1_1GlutApplication_1_1Arguments.html</filename>
    <member kind="function">
      <type>constexpr</type>
      <name>Arguments</name>
      <anchorfile>structMagnum_1_1Platform_1_1GlutApplication_1_1Arguments.html</anchorfile>
      <anchor>a4eeb285a5ee71313c117f616b8030e3e</anchor>
      <arglist>(int &amp;argc, char **argv) noexcept</arglist>
    </member>
    <member kind="variable">
      <type>int &amp;</type>
      <name>argc</name>
      <anchorfile>structMagnum_1_1Platform_1_1GlutApplication_1_1Arguments.html</anchorfile>
      <anchor>ada7da8dcca6b9ba5c00b5d8334a55624</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char **</type>
      <name>argv</name>
      <anchorfile>structMagnum_1_1Platform_1_1GlutApplication_1_1Arguments.html</anchorfile>
      <anchor>a505438315db94d7875b22c1a2fc4aa74</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Magnum::Platform::GlutApplication::Configuration</name>
    <filename>classMagnum_1_1Platform_1_1GlutApplication_1_1Configuration.html</filename>
    <member kind="enumeration">
      <type></type>
      <name>Flag</name>
      <anchorfile>classMagnum_1_1Platform_1_1GlutApplication_1_1Configuration.html</anchorfile>
      <anchor>aca54f9d3919d08b31cee4b0ec3c8e6e3</anchor>
      <arglist></arglist>
      <enumvalue file="classMagnum_1_1Platform_1_1GlutApplication_1_1Configuration.html" anchor="aca54f9d3919d08b31cee4b0ec3c8e6e3aa603905470e2a5b8c13e96b579ef0dba">Debug</enumvalue>
    </member>
    <member kind="typedef">
      <type>Containers::EnumSet&lt; Flag &gt;</type>
      <name>Flags</name>
      <anchorfile>classMagnum_1_1Platform_1_1GlutApplication_1_1Configuration.html</anchorfile>
      <anchor>aec892ec9c8b37eb8ad6f8ebe594e8bd3</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>title</name>
      <anchorfile>classMagnum_1_1Platform_1_1GlutApplication_1_1Configuration.html</anchorfile>
      <anchor>a31041dcecb92ddf46f298b9c5409d2b4</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Configuration &amp;</type>
      <name>setTitle</name>
      <anchorfile>classMagnum_1_1Platform_1_1GlutApplication_1_1Configuration.html</anchorfile>
      <anchor>a44126c317a127e585274fce955cefd44</anchor>
      <arglist>(std::string title)</arglist>
    </member>
    <member kind="function">
      <type>Vector2i</type>
      <name>size</name>
      <anchorfile>classMagnum_1_1Platform_1_1GlutApplication_1_1Configuration.html</anchorfile>
      <anchor>a2d078c8bf441f2565faa10921d168551</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Configuration &amp;</type>
      <name>setSize</name>
      <anchorfile>classMagnum_1_1Platform_1_1GlutApplication_1_1Configuration.html</anchorfile>
      <anchor>ac283f84e623491abb7ca17254f0e7014</anchor>
      <arglist>(const Vector2i &amp;size)</arglist>
    </member>
    <member kind="function">
      <type>Flags</type>
      <name>flags</name>
      <anchorfile>classMagnum_1_1Platform_1_1GlutApplication_1_1Configuration.html</anchorfile>
      <anchor>a01dcacde628a21e820dd64a3792915db</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Configuration &amp;</type>
      <name>setFlags</name>
      <anchorfile>classMagnum_1_1Platform_1_1GlutApplication_1_1Configuration.html</anchorfile>
      <anchor>ab96204f1e19a4429d840f62dffead0b5</anchor>
      <arglist>(Flags flags)</arglist>
    </member>
    <member kind="function">
      <type>Version</type>
      <name>version</name>
      <anchorfile>classMagnum_1_1Platform_1_1GlutApplication_1_1Configuration.html</anchorfile>
      <anchor>a92e7d599aa6b2707158148908a66fe46</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Configuration &amp;</type>
      <name>setVersion</name>
      <anchorfile>classMagnum_1_1Platform_1_1GlutApplication_1_1Configuration.html</anchorfile>
      <anchor>ae5048924da07df440edaa2c8e2ed554c</anchor>
      <arglist>(Version version)</arglist>
    </member>
    <member kind="function">
      <type>Int</type>
      <name>sampleCount</name>
      <anchorfile>classMagnum_1_1Platform_1_1GlutApplication_1_1Configuration.html</anchorfile>
      <anchor>a92f525317bbd3f77d7ad85eb5fa08f32</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Configuration &amp;</type>
      <name>setSampleCount</name>
      <anchorfile>classMagnum_1_1Platform_1_1GlutApplication_1_1Configuration.html</anchorfile>
      <anchor>a7886a96f1c46f5517239ea38818065f5</anchor>
      <arglist>(Int count)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Magnum::Platform::GlutApplication::InputEvent</name>
    <filename>classMagnum_1_1Platform_1_1GlutApplication_1_1InputEvent.html</filename>
    <member kind="function">
      <type></type>
      <name>InputEvent</name>
      <anchorfile>classMagnum_1_1Platform_1_1GlutApplication_1_1InputEvent.html</anchorfile>
      <anchor>ae83557a31ad3552fa6afd76856ee306c</anchor>
      <arglist>(const InputEvent &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>InputEvent</name>
      <anchorfile>classMagnum_1_1Platform_1_1GlutApplication_1_1InputEvent.html</anchorfile>
      <anchor>af8837a4959651217760dfdb02fc48afa</anchor>
      <arglist>(InputEvent &amp;&amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>InputEvent &amp;</type>
      <name>operator=</name>
      <anchorfile>classMagnum_1_1Platform_1_1GlutApplication_1_1InputEvent.html</anchorfile>
      <anchor>ab587b43b612ad27128ee23977376032f</anchor>
      <arglist>(const InputEvent &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>InputEvent &amp;</type>
      <name>operator=</name>
      <anchorfile>classMagnum_1_1Platform_1_1GlutApplication_1_1InputEvent.html</anchorfile>
      <anchor>af047c319ac12451431b453b9c094c425</anchor>
      <arglist>(InputEvent &amp;&amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setAccepted</name>
      <anchorfile>classMagnum_1_1Platform_1_1GlutApplication_1_1InputEvent.html</anchorfile>
      <anchor>a9f6e5fcb9a8963897e7376a1629ba4b1</anchor>
      <arglist>(bool accepted=true)</arglist>
    </member>
    <member kind="function">
      <type>constexpr bool</type>
      <name>isAccepted</name>
      <anchorfile>classMagnum_1_1Platform_1_1GlutApplication_1_1InputEvent.html</anchorfile>
      <anchor>ad74294d02d5ff530d27ff93267e0d5c5</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Magnum::Platform::GlutApplication::KeyEvent</name>
    <filename>classMagnum_1_1Platform_1_1GlutApplication_1_1KeyEvent.html</filename>
    <base>Magnum::Platform::GlutApplication::InputEvent</base>
    <member kind="enumeration">
      <type></type>
      <name>Key</name>
      <anchorfile>classMagnum_1_1Platform_1_1GlutApplication_1_1KeyEvent.html</anchorfile>
      <anchor>ac5382577d505155198ef65863ef6bec1</anchor>
      <arglist></arglist>
      <enumvalue file="classMagnum_1_1Platform_1_1GlutApplication_1_1KeyEvent.html" anchor="ac5382577d505155198ef65863ef6bec1a91f4253ca587ca8ac4e63b9ceb351f5d">Esc</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1GlutApplication_1_1KeyEvent.html" anchor="ac5382577d505155198ef65863ef6bec1a258f49887ef8d14ac268c92b02503aaa">Up</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1GlutApplication_1_1KeyEvent.html" anchor="ac5382577d505155198ef65863ef6bec1a08a38277b0309070706f6652eeae9a53">Down</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1GlutApplication_1_1KeyEvent.html" anchor="ac5382577d505155198ef65863ef6bec1a945d5e233cf7d6240f6b783b36a374ff">Left</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1GlutApplication_1_1KeyEvent.html" anchor="ac5382577d505155198ef65863ef6bec1a92b09c7c48c520c3c55e497875da437c">Right</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1GlutApplication_1_1KeyEvent.html" anchor="ac5382577d505155198ef65863ef6bec1ae1dffc8709f31a4987c8a88334107e89">F1</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1GlutApplication_1_1KeyEvent.html" anchor="ac5382577d505155198ef65863ef6bec1afe5c3684dce76cdd9f7f42430868aa74">F2</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1GlutApplication_1_1KeyEvent.html" anchor="ac5382577d505155198ef65863ef6bec1a4b6bf4b531770872d4328ce69bef5627">F3</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1GlutApplication_1_1KeyEvent.html" anchor="ac5382577d505155198ef65863ef6bec1ae7e0e72401a9f2718ed0f39f2861d702">F4</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1GlutApplication_1_1KeyEvent.html" anchor="ac5382577d505155198ef65863ef6bec1a37f438df6a6d5ba4c17ef8ca58562f00">F5</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1GlutApplication_1_1KeyEvent.html" anchor="ac5382577d505155198ef65863ef6bec1a1faf42f2823f184eb2c9f0dffe5d73f2">F6</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1GlutApplication_1_1KeyEvent.html" anchor="ac5382577d505155198ef65863ef6bec1a47489eb597b7db34caa24b1fc78fc839">F7</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1GlutApplication_1_1KeyEvent.html" anchor="ac5382577d505155198ef65863ef6bec1a4787509ad9f9d747a81a30e9dde3d4a7">F8</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1GlutApplication_1_1KeyEvent.html" anchor="ac5382577d505155198ef65863ef6bec1a892a245e287c163080b23db737d3c4c9">F9</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1GlutApplication_1_1KeyEvent.html" anchor="ac5382577d505155198ef65863ef6bec1ab213ce22ca6ad4eda8db82966b9b6e5a">F10</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1GlutApplication_1_1KeyEvent.html" anchor="ac5382577d505155198ef65863ef6bec1a643b0662422d1d0dffa3fca2e2bf28a8">F11</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1GlutApplication_1_1KeyEvent.html" anchor="ac5382577d505155198ef65863ef6bec1ae902674982fc99aa343cdd94da7476c3">F12</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1GlutApplication_1_1KeyEvent.html" anchor="ac5382577d505155198ef65863ef6bec1a8cf04a9734132302f96da8e113e80ce5">Home</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1GlutApplication_1_1KeyEvent.html" anchor="ac5382577d505155198ef65863ef6bec1a87557f11575c0ad78e4e28abedc13b6e">End</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1GlutApplication_1_1KeyEvent.html" anchor="ac5382577d505155198ef65863ef6bec1a9b869c510c75c5827ac82e49d4340927">PageUp</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1GlutApplication_1_1KeyEvent.html" anchor="ac5382577d505155198ef65863ef6bec1aee3677bcca83ece9384b01e43952bf33">PageDown</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1GlutApplication_1_1KeyEvent.html" anchor="ac5382577d505155198ef65863ef6bec1ad511f8439ecde36647437fbba67a4394">Space</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1GlutApplication_1_1KeyEvent.html" anchor="ac5382577d505155198ef65863ef6bec1a58be47db9455679e6a44df2eff9c9fa6">Comma</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1GlutApplication_1_1KeyEvent.html" anchor="ac5382577d505155198ef65863ef6bec1a1901606ea069a83dc7beea17881ef95a">Period</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1GlutApplication_1_1KeyEvent.html" anchor="ac5382577d505155198ef65863ef6bec1a453fb623e752c5993f65bc410fd74fe5">Minus</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1GlutApplication_1_1KeyEvent.html" anchor="ac5382577d505155198ef65863ef6bec1a32ba78fe43257d3e7f88e3935a8ea0d4">Plus</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1GlutApplication_1_1KeyEvent.html" anchor="ac5382577d505155198ef65863ef6bec1a358cfe58715d680d9ab09f82e4010cbc">Slash</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1GlutApplication_1_1KeyEvent.html" anchor="ac5382577d505155198ef65863ef6bec1aadaaee4b22041c27198d410c68d952c9">Percent</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1GlutApplication_1_1KeyEvent.html" anchor="ac5382577d505155198ef65863ef6bec1af5f286e73bda105e538310b3190f75c5">Equal</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1GlutApplication_1_1KeyEvent.html" anchor="ac5382577d505155198ef65863ef6bec1ad7ed4ee1df437474d005188535f74875">Zero</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1GlutApplication_1_1KeyEvent.html" anchor="ac5382577d505155198ef65863ef6bec1a06c2cea18679d64399783748fa367bdd">One</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1GlutApplication_1_1KeyEvent.html" anchor="ac5382577d505155198ef65863ef6bec1aaada29daee1d64ed0fe907043855cb7e">Two</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1GlutApplication_1_1KeyEvent.html" anchor="ac5382577d505155198ef65863ef6bec1aca8a2087e5557e317599344687a57391">Three</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1GlutApplication_1_1KeyEvent.html" anchor="ac5382577d505155198ef65863ef6bec1a981b8fcee42e1e726a67a2b9a98ea6e9">Four</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1GlutApplication_1_1KeyEvent.html" anchor="ac5382577d505155198ef65863ef6bec1ae5d9de39f7ca1ba2637e5640af3ae8aa">Five</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1GlutApplication_1_1KeyEvent.html" anchor="ac5382577d505155198ef65863ef6bec1ae6fbc0b9673f8c86726688d7607fc8f5">Six</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1GlutApplication_1_1KeyEvent.html" anchor="ac5382577d505155198ef65863ef6bec1a12e67aac3e7f9227cc35f8f047d7dc74">Seven</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1GlutApplication_1_1KeyEvent.html" anchor="ac5382577d505155198ef65863ef6bec1abaca0ca6729684fd54206793ae4b5bd5">Eight</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1GlutApplication_1_1KeyEvent.html" anchor="ac5382577d505155198ef65863ef6bec1a24db11216549ee55172c33cf3def2f3f">Nine</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1GlutApplication_1_1KeyEvent.html" anchor="ac5382577d505155198ef65863ef6bec1a7fc56270e7a70fa81a5935b72eacbe29">A</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1GlutApplication_1_1KeyEvent.html" anchor="ac5382577d505155198ef65863ef6bec1a9d5ed678fe57bcca610140957afab571">B</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1GlutApplication_1_1KeyEvent.html" anchor="ac5382577d505155198ef65863ef6bec1a0d61f8370cad1d412f80b84d143e1257">C</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1GlutApplication_1_1KeyEvent.html" anchor="ac5382577d505155198ef65863ef6bec1af623e75af30e62bbd73d6df5b50bb7b5">D</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1GlutApplication_1_1KeyEvent.html" anchor="ac5382577d505155198ef65863ef6bec1a3a3ea00cfc35332cedf6e5e9a32e94da">E</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1GlutApplication_1_1KeyEvent.html" anchor="ac5382577d505155198ef65863ef6bec1a800618943025315f869e4e1f09471012">F</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1GlutApplication_1_1KeyEvent.html" anchor="ac5382577d505155198ef65863ef6bec1adfcf28d0734569a6a693bc8194de62bf">G</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1GlutApplication_1_1KeyEvent.html" anchor="ac5382577d505155198ef65863ef6bec1ac1d9f50f86825a1a2302ec2449c17196">H</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1GlutApplication_1_1KeyEvent.html" anchor="ac5382577d505155198ef65863ef6bec1add7536794b63bf90eccfd37f9b147d7f">I</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1GlutApplication_1_1KeyEvent.html" anchor="ac5382577d505155198ef65863ef6bec1aff44570aca8241914870afbc310cdb85">J</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1GlutApplication_1_1KeyEvent.html" anchor="ac5382577d505155198ef65863ef6bec1aa5f3c6a11b03839d46af9fb43c97c188">K</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1GlutApplication_1_1KeyEvent.html" anchor="ac5382577d505155198ef65863ef6bec1ad20caec3b48a1eef164cb4ca81ba2587">L</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1GlutApplication_1_1KeyEvent.html" anchor="ac5382577d505155198ef65863ef6bec1a69691c7bdcc3ce6d5d8a1361f22d04ac">M</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1GlutApplication_1_1KeyEvent.html" anchor="ac5382577d505155198ef65863ef6bec1a8d9c307cb7f3c4a32822a51922d1ceaa">N</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1GlutApplication_1_1KeyEvent.html" anchor="ac5382577d505155198ef65863ef6bec1af186217753c37b9b9f958d906208506e">O</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1GlutApplication_1_1KeyEvent.html" anchor="ac5382577d505155198ef65863ef6bec1a44c29edb103a2872f519ad0c9a0fdaaa">P</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1GlutApplication_1_1KeyEvent.html" anchor="ac5382577d505155198ef65863ef6bec1af09564c9ca56850d4cd6b3319e541aee">Q</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1GlutApplication_1_1KeyEvent.html" anchor="ac5382577d505155198ef65863ef6bec1ae1e1d3d40573127e9ee0480caf1283d6">R</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1GlutApplication_1_1KeyEvent.html" anchor="ac5382577d505155198ef65863ef6bec1a5dbc98dcc983a70728bd082d1a47546e">S</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1GlutApplication_1_1KeyEvent.html" anchor="ac5382577d505155198ef65863ef6bec1ab9ece18c950afbfa6b0fdbfa4ff731d3">T</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1GlutApplication_1_1KeyEvent.html" anchor="ac5382577d505155198ef65863ef6bec1a4c614360da93c0a041b22e537de151eb">U</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1GlutApplication_1_1KeyEvent.html" anchor="ac5382577d505155198ef65863ef6bec1a5206560a306a2e085a437fd258eb57ce">V</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1GlutApplication_1_1KeyEvent.html" anchor="ac5382577d505155198ef65863ef6bec1a61e9c06ea9a85a5088a499df6458d276">W</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1GlutApplication_1_1KeyEvent.html" anchor="ac5382577d505155198ef65863ef6bec1a02129bb861061d1a052c592e2dc6b383">X</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1GlutApplication_1_1KeyEvent.html" anchor="ac5382577d505155198ef65863ef6bec1a57cec4137b614c87cb4e24a3d003a3e0">Y</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1GlutApplication_1_1KeyEvent.html" anchor="ac5382577d505155198ef65863ef6bec1a21c2e59531c8710156d34a3c30ac81d5">Z</enumvalue>
    </member>
    <member kind="function">
      <type>constexpr Key</type>
      <name>key</name>
      <anchorfile>classMagnum_1_1Platform_1_1GlutApplication_1_1KeyEvent.html</anchorfile>
      <anchor>a8757dbcf166b5bcfe266e232c7a82bcf</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>constexpr Vector2i</type>
      <name>position</name>
      <anchorfile>classMagnum_1_1Platform_1_1GlutApplication_1_1KeyEvent.html</anchorfile>
      <anchor>ac0b375e65351efd2462d5c7da0ea87f4</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Magnum::Platform::GlutApplication::MouseEvent</name>
    <filename>classMagnum_1_1Platform_1_1GlutApplication_1_1MouseEvent.html</filename>
    <base>Magnum::Platform::GlutApplication::InputEvent</base>
    <member kind="enumeration">
      <type></type>
      <name>Button</name>
      <anchorfile>classMagnum_1_1Platform_1_1GlutApplication_1_1MouseEvent.html</anchorfile>
      <anchor>abf9af54eefb9d796daf07a5ac1225cfc</anchor>
      <arglist></arglist>
      <enumvalue file="classMagnum_1_1Platform_1_1GlutApplication_1_1MouseEvent.html" anchor="abf9af54eefb9d796daf07a5ac1225cfca945d5e233cf7d6240f6b783b36a374ff">Left</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1GlutApplication_1_1MouseEvent.html" anchor="abf9af54eefb9d796daf07a5ac1225cfcab1ca34f82e83c52b010f86955f264e05">Middle</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1GlutApplication_1_1MouseEvent.html" anchor="abf9af54eefb9d796daf07a5ac1225cfca92b09c7c48c520c3c55e497875da437c">Right</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1GlutApplication_1_1MouseEvent.html" anchor="abf9af54eefb9d796daf07a5ac1225cfca050f568559dcada95ba3ecb63de39971">WheelUp</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1GlutApplication_1_1MouseEvent.html" anchor="abf9af54eefb9d796daf07a5ac1225cfca95cf2a3dc58aff6d85e53738a089d9d1">WheelDown</enumvalue>
    </member>
    <member kind="function">
      <type>constexpr Button</type>
      <name>button</name>
      <anchorfile>classMagnum_1_1Platform_1_1GlutApplication_1_1MouseEvent.html</anchorfile>
      <anchor>a1f90482fc4d894282a84e3d18314c007</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>constexpr Vector2i</type>
      <name>position</name>
      <anchorfile>classMagnum_1_1Platform_1_1GlutApplication_1_1MouseEvent.html</anchorfile>
      <anchor>aed51e55aa5e841f10031ced1afb012aa</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Magnum::Platform::GlutApplication::MouseMoveEvent</name>
    <filename>classMagnum_1_1Platform_1_1GlutApplication_1_1MouseMoveEvent.html</filename>
    <base>Magnum::Platform::GlutApplication::InputEvent</base>
    <member kind="enumeration">
      <type></type>
      <name>Button</name>
      <anchorfile>classMagnum_1_1Platform_1_1GlutApplication_1_1MouseMoveEvent.html</anchorfile>
      <anchor>aff098631710a12b27aed35858293e71c</anchor>
      <arglist></arglist>
      <enumvalue file="classMagnum_1_1Platform_1_1GlutApplication_1_1MouseMoveEvent.html" anchor="aff098631710a12b27aed35858293e71ca945d5e233cf7d6240f6b783b36a374ff">Left</enumvalue>
    </member>
    <member kind="typedef">
      <type>Containers::EnumSet&lt; Button &gt;</type>
      <name>Buttons</name>
      <anchorfile>classMagnum_1_1Platform_1_1GlutApplication_1_1MouseMoveEvent.html</anchorfile>
      <anchor>afab099c940b22c66df36a5caa8c51b7e</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>constexpr Vector2i</type>
      <name>position</name>
      <anchorfile>classMagnum_1_1Platform_1_1GlutApplication_1_1MouseMoveEvent.html</anchorfile>
      <anchor>aaf7ae21a9e435cbc63446c667ec5b538</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>constexpr Buttons</type>
      <name>buttons</name>
      <anchorfile>classMagnum_1_1Platform_1_1GlutApplication_1_1MouseMoveEvent.html</anchorfile>
      <anchor>ae244d24275fc9435b2d0eb98abac8a9c</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Magnum::Platform::GlxApplication</name>
    <filename>classMagnum_1_1Platform_1_1GlxApplication.html</filename>
    <base>Magnum::Platform::AbstractXApplication</base>
    <member kind="function">
      <type></type>
      <name>GlxApplication</name>
      <anchorfile>classMagnum_1_1Platform_1_1GlxApplication.html</anchorfile>
      <anchor>a0d30c0a8cf66b8df70bc9676d4b77c68</anchor>
      <arglist>(const Arguments &amp;arguments, const Configuration &amp;configuration=Configuration())</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>GlxApplication</name>
      <anchorfile>classMagnum_1_1Platform_1_1GlxApplication.html</anchorfile>
      <anchor>a00a8886216281413691a539ce6658792</anchor>
      <arglist>(const Arguments &amp;arguments, NoCreateT)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>GlxApplication</name>
      <anchorfile>classMagnum_1_1Platform_1_1GlxApplication.html</anchorfile>
      <anchor>ab8e7cf24b6ddb31637cbcb2b649a2708</anchor>
      <arglist>(const Arguments &amp;arguments, std::nullptr_t)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Magnum::Platform::Sdl2Application</name>
    <filename>classMagnum_1_1Platform_1_1Sdl2Application.html</filename>
    <class kind="struct">Magnum::Platform::Sdl2Application::Arguments</class>
    <class kind="class">Magnum::Platform::Sdl2Application::Configuration</class>
    <class kind="class">Magnum::Platform::Sdl2Application::InputEvent</class>
    <class kind="class">Magnum::Platform::Sdl2Application::KeyEvent</class>
    <class kind="class">Magnum::Platform::Sdl2Application::MouseEvent</class>
    <class kind="class">Magnum::Platform::Sdl2Application::MouseMoveEvent</class>
    <class kind="class">Magnum::Platform::Sdl2Application::MouseScrollEvent</class>
    <class kind="class">Magnum::Platform::Sdl2Application::MultiGestureEvent</class>
    <class kind="class">Magnum::Platform::Sdl2Application::TextEditingEvent</class>
    <class kind="class">Magnum::Platform::Sdl2Application::TextInputEvent</class>
    <member kind="function">
      <type></type>
      <name>Sdl2Application</name>
      <anchorfile>classMagnum_1_1Platform_1_1Sdl2Application.html</anchorfile>
      <anchor>ac2af3fd5a84d174079efb1dc765ffe20</anchor>
      <arglist>(const Arguments &amp;arguments, const Configuration &amp;configuration=Configuration())</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Sdl2Application</name>
      <anchorfile>classMagnum_1_1Platform_1_1Sdl2Application.html</anchorfile>
      <anchor>a53504f1d4812366ba3f5aefc2f4668b7</anchor>
      <arglist>(const Arguments &amp;arguments, NoCreateT)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Sdl2Application</name>
      <anchorfile>classMagnum_1_1Platform_1_1Sdl2Application.html</anchorfile>
      <anchor>a7f337a4db236642195240d4773967a58</anchor>
      <arglist>(const Arguments &amp;arguments, std::nullptr_t)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Sdl2Application</name>
      <anchorfile>classMagnum_1_1Platform_1_1Sdl2Application.html</anchorfile>
      <anchor>adf305172a1238dc4ee154d309d80752b</anchor>
      <arglist>(const Sdl2Application &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Sdl2Application</name>
      <anchorfile>classMagnum_1_1Platform_1_1Sdl2Application.html</anchorfile>
      <anchor>a5cdfbec176e6bf05db1eaf9fd9d61c5b</anchor>
      <arglist>(Sdl2Application &amp;&amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>Sdl2Application &amp;</type>
      <name>operator=</name>
      <anchorfile>classMagnum_1_1Platform_1_1Sdl2Application.html</anchorfile>
      <anchor>a4db049866c383dc95b2e1321ee4e51a0</anchor>
      <arglist>(const Sdl2Application &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>Sdl2Application &amp;</type>
      <name>operator=</name>
      <anchorfile>classMagnum_1_1Platform_1_1Sdl2Application.html</anchorfile>
      <anchor>acd991e06cc66b2b213d577d50c06817e</anchor>
      <arglist>(Sdl2Application &amp;&amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>exec</name>
      <anchorfile>classMagnum_1_1Platform_1_1Sdl2Application.html</anchorfile>
      <anchor>a8ca499010e9c76be83acc7220489a174</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>exit</name>
      <anchorfile>classMagnum_1_1Platform_1_1Sdl2Application.html</anchorfile>
      <anchor>a69aba64c4514c0c61670aa303e5c32c1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>mainLoopIteration</name>
      <anchorfile>classMagnum_1_1Platform_1_1Sdl2Application.html</anchorfile>
      <anchor>a75b6be5ecc7def9f65da122b966d45d4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>SDL_Window *</type>
      <name>window</name>
      <anchorfile>classMagnum_1_1Platform_1_1Sdl2Application.html</anchorfile>
      <anchor>aaf7814899eda4398287ad5a61a40a784</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>createContext</name>
      <anchorfile>classMagnum_1_1Platform_1_1Sdl2Application.html</anchorfile>
      <anchor>a214e1f1eab5c1d8216f6f2d5b926f07f</anchor>
      <arglist>(const Configuration &amp;configuration=Configuration())</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>tryCreateContext</name>
      <anchorfile>classMagnum_1_1Platform_1_1Sdl2Application.html</anchorfile>
      <anchor>afaf3e25c5ba26c738077f7020f3fd6e5</anchor>
      <arglist>(const Configuration &amp;configuration)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>Vector2i</type>
      <name>windowSize</name>
      <anchorfile>classMagnum_1_1Platform_1_1Sdl2Application.html</anchorfile>
      <anchor>a90646c1ce8863041867b695db6271fab</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>swapBuffers</name>
      <anchorfile>classMagnum_1_1Platform_1_1Sdl2Application.html</anchorfile>
      <anchor>a2e6c2689b7f733fb4949e7d35664e993</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>Int</type>
      <name>swapInterval</name>
      <anchorfile>classMagnum_1_1Platform_1_1Sdl2Application.html</anchorfile>
      <anchor>a4bdbbcfb7067a7ea4d1f7c556464232f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>setSwapInterval</name>
      <anchorfile>classMagnum_1_1Platform_1_1Sdl2Application.html</anchorfile>
      <anchor>a745b3b3793fb1a65e30d1fce72c0625e</anchor>
      <arglist>(Int interval)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>setMinimalLoopPeriod</name>
      <anchorfile>classMagnum_1_1Platform_1_1Sdl2Application.html</anchorfile>
      <anchor>a296b443b1cfb30460417f0e897042764</anchor>
      <arglist>(UnsignedInt milliseconds)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>redraw</name>
      <anchorfile>classMagnum_1_1Platform_1_1Sdl2Application.html</anchorfile>
      <anchor>a07b8148f0f212659259d060c7b6ad2bc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>tickEvent</name>
      <anchorfile>classMagnum_1_1Platform_1_1Sdl2Application.html</anchorfile>
      <anchor>a487227b0018f9999555595bbf8e8b8f5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>viewportEvent</name>
      <anchorfile>classMagnum_1_1Platform_1_1Sdl2Application.html</anchorfile>
      <anchor>afa87bd8a7a55f1d3cd88c920dcf8326b</anchor>
      <arglist>(const Vector2i &amp;size)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual void</type>
      <name>drawEvent</name>
      <anchorfile>classMagnum_1_1Platform_1_1Sdl2Application.html</anchorfile>
      <anchor>af9354a5fca56b4c1aa5e95151e4f60c5</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>keyPressEvent</name>
      <anchorfile>classMagnum_1_1Platform_1_1Sdl2Application.html</anchorfile>
      <anchor>a6f5d00985cb306c5a510da091e45a7ca</anchor>
      <arglist>(KeyEvent &amp;event)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>keyReleaseEvent</name>
      <anchorfile>classMagnum_1_1Platform_1_1Sdl2Application.html</anchorfile>
      <anchor>a813c21092b0705d411a272e59c6c12d6</anchor>
      <arglist>(KeyEvent &amp;event)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isMouseLocked</name>
      <anchorfile>classMagnum_1_1Platform_1_1Sdl2Application.html</anchorfile>
      <anchor>a3aa67d64a52896dd3731d1b290e9100c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setMouseLocked</name>
      <anchorfile>classMagnum_1_1Platform_1_1Sdl2Application.html</anchorfile>
      <anchor>add8dcb7f6d2a04afc25dc88f4761a1d8</anchor>
      <arglist>(bool enabled)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>mousePressEvent</name>
      <anchorfile>classMagnum_1_1Platform_1_1Sdl2Application.html</anchorfile>
      <anchor>acef081f3f7b1d171336baed4c24af66b</anchor>
      <arglist>(MouseEvent &amp;event)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>mouseReleaseEvent</name>
      <anchorfile>classMagnum_1_1Platform_1_1Sdl2Application.html</anchorfile>
      <anchor>ab1bfe00e5e47fc4ab450542e56c61826</anchor>
      <arglist>(MouseEvent &amp;event)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>mouseMoveEvent</name>
      <anchorfile>classMagnum_1_1Platform_1_1Sdl2Application.html</anchorfile>
      <anchor>a49a81c84de790329bd4263c5366d28d3</anchor>
      <arglist>(MouseMoveEvent &amp;event)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>mouseScrollEvent</name>
      <anchorfile>classMagnum_1_1Platform_1_1Sdl2Application.html</anchorfile>
      <anchor>a220138d8fec37f22282e1e6e856ae0d9</anchor>
      <arglist>(MouseScrollEvent &amp;event)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>multiGestureEvent</name>
      <anchorfile>classMagnum_1_1Platform_1_1Sdl2Application.html</anchorfile>
      <anchor>aa38a60935f9414ad81597a45577781c7</anchor>
      <arglist>(MultiGestureEvent &amp;event)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isTextInputActive</name>
      <anchorfile>classMagnum_1_1Platform_1_1Sdl2Application.html</anchorfile>
      <anchor>acf205218076ba4214fed12bd9f1dcd90</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>startTextInput</name>
      <anchorfile>classMagnum_1_1Platform_1_1Sdl2Application.html</anchorfile>
      <anchor>a91245cb15aa5af835d1e507be67ec2c8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>stopTextInput</name>
      <anchorfile>classMagnum_1_1Platform_1_1Sdl2Application.html</anchorfile>
      <anchor>a08cc9a843c9e9b21bfd5ea27b24de224</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setTextInputRect</name>
      <anchorfile>classMagnum_1_1Platform_1_1Sdl2Application.html</anchorfile>
      <anchor>a520389bdebe2c243cab7fde3aba4e883</anchor>
      <arglist>(const Range2Di &amp;rect)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>textInputEvent</name>
      <anchorfile>classMagnum_1_1Platform_1_1Sdl2Application.html</anchorfile>
      <anchor>a42f61cd43beae72388d69479d242afdc</anchor>
      <arglist>(TextInputEvent &amp;event)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>textEditingEvent</name>
      <anchorfile>classMagnum_1_1Platform_1_1Sdl2Application.html</anchorfile>
      <anchor>af700c9491a5c748a897001d373b2be6a</anchor>
      <arglist>(TextEditingEvent &amp;event)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Magnum::Platform::Sdl2Application::Arguments</name>
    <filename>structMagnum_1_1Platform_1_1Sdl2Application_1_1Arguments.html</filename>
    <member kind="function">
      <type>constexpr</type>
      <name>Arguments</name>
      <anchorfile>structMagnum_1_1Platform_1_1Sdl2Application_1_1Arguments.html</anchorfile>
      <anchor>a38cdf0a8ebffa15d03806e8275612081</anchor>
      <arglist>(int &amp;argc, char **argv) noexcept</arglist>
    </member>
    <member kind="variable">
      <type>int &amp;</type>
      <name>argc</name>
      <anchorfile>structMagnum_1_1Platform_1_1Sdl2Application_1_1Arguments.html</anchorfile>
      <anchor>ae06e1fd5a4291fce50ce98a38ccba772</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char **</type>
      <name>argv</name>
      <anchorfile>structMagnum_1_1Platform_1_1Sdl2Application_1_1Arguments.html</anchorfile>
      <anchor>afd395254543cd1ad28b31f14c3cfa122</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Magnum::Platform::Sdl2Application::Configuration</name>
    <filename>classMagnum_1_1Platform_1_1Sdl2Application_1_1Configuration.html</filename>
    <member kind="enumeration">
      <type></type>
      <name>Flag</name>
      <anchorfile>classMagnum_1_1Platform_1_1Sdl2Application_1_1Configuration.html</anchorfile>
      <anchor>a874a969a58cd29f3fcfb4c29471640cf</anchor>
      <arglist></arglist>
      <enumvalue file="classMagnum_1_1Platform_1_1Sdl2Application_1_1Configuration.html" anchor="a874a969a58cd29f3fcfb4c29471640cfaa603905470e2a5b8c13e96b579ef0dba">Debug</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1Sdl2Application_1_1Configuration.html" anchor="a874a969a58cd29f3fcfb4c29471640cfaef797a197a966bf786c3075d041793ab">RobustAccess</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1Sdl2Application_1_1Configuration.html" anchor="a874a969a58cd29f3fcfb4c29471640cfa97791223c6d1bf656e8114d7f822d7bd">ResetIsolation</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>WindowFlag</name>
      <anchorfile>classMagnum_1_1Platform_1_1Sdl2Application_1_1Configuration.html</anchorfile>
      <anchor>aaedcde29393bd4be1788b5d0ebb7a0bf</anchor>
      <arglist></arglist>
      <enumvalue file="classMagnum_1_1Platform_1_1Sdl2Application_1_1Configuration.html" anchor="aaedcde29393bd4be1788b5d0ebb7a0bfaaff10bf1618da00a8a80b74044e719b2">Resizable</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1Sdl2Application_1_1Configuration.html" anchor="aaedcde29393bd4be1788b5d0ebb7a0bfa0829ea6734059d66e6bf87096b215dc1">Fullscreen</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1Sdl2Application_1_1Configuration.html" anchor="aaedcde29393bd4be1788b5d0ebb7a0bfa78f0192ac55eba33ee88d026452952e5">Borderless</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1Sdl2Application_1_1Configuration.html" anchor="aaedcde29393bd4be1788b5d0ebb7a0bfa03047a86a12fd0de50c60eb5e8fa3a00">AllowHighDpi</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1Sdl2Application_1_1Configuration.html" anchor="aaedcde29393bd4be1788b5d0ebb7a0bfa7acdf85c69cc3c5305456a293524386e">Hidden</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1Sdl2Application_1_1Configuration.html" anchor="aaedcde29393bd4be1788b5d0ebb7a0bfa49d903a5c02560cf79bf6b516cc89457">Maximized</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1Sdl2Application_1_1Configuration.html" anchor="aaedcde29393bd4be1788b5d0ebb7a0bfa074afcc50ae51f248cbae4950845549e">Minimized</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1Sdl2Application_1_1Configuration.html" anchor="aaedcde29393bd4be1788b5d0ebb7a0bfa3cabee44dc8e0f3eaaa976a0b9a8f280">MouseLocked</enumvalue>
    </member>
    <member kind="typedef">
      <type>Containers::EnumSet&lt; Flag &gt;</type>
      <name>Flags</name>
      <anchorfile>classMagnum_1_1Platform_1_1Sdl2Application_1_1Configuration.html</anchorfile>
      <anchor>ac08d4f75846cd607421add655e59db69</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Containers::EnumSet&lt; WindowFlag &gt;</type>
      <name>WindowFlags</name>
      <anchorfile>classMagnum_1_1Platform_1_1Sdl2Application_1_1Configuration.html</anchorfile>
      <anchor>a7a39952d1ce94fa385b74f5e0644fc66</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>title</name>
      <anchorfile>classMagnum_1_1Platform_1_1Sdl2Application_1_1Configuration.html</anchorfile>
      <anchor>a71d38d27d8dfbaab2222255b471efac7</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Configuration &amp;</type>
      <name>setTitle</name>
      <anchorfile>classMagnum_1_1Platform_1_1Sdl2Application_1_1Configuration.html</anchorfile>
      <anchor>afdbff6fad143fa1e8bb18371475c2083</anchor>
      <arglist>(std::string title)</arglist>
    </member>
    <member kind="function">
      <type>Vector2i</type>
      <name>size</name>
      <anchorfile>classMagnum_1_1Platform_1_1Sdl2Application_1_1Configuration.html</anchorfile>
      <anchor>a0cd0ee88fb1fb37e05a2b654a5286f8d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Configuration &amp;</type>
      <name>setSize</name>
      <anchorfile>classMagnum_1_1Platform_1_1Sdl2Application_1_1Configuration.html</anchorfile>
      <anchor>ac1efd89834c6e2b8518bb862588a161c</anchor>
      <arglist>(const Vector2i &amp;size)</arglist>
    </member>
    <member kind="function">
      <type>WindowFlags</type>
      <name>windowFlags</name>
      <anchorfile>classMagnum_1_1Platform_1_1Sdl2Application_1_1Configuration.html</anchorfile>
      <anchor>a62cc64450da264327e7f07e33be43ad4</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Configuration &amp;</type>
      <name>setWindowFlags</name>
      <anchorfile>classMagnum_1_1Platform_1_1Sdl2Application_1_1Configuration.html</anchorfile>
      <anchor>a52f1e601a16f78b6870de3e9da61224b</anchor>
      <arglist>(WindowFlags flags)</arglist>
    </member>
    <member kind="function">
      <type>Flags</type>
      <name>flags</name>
      <anchorfile>classMagnum_1_1Platform_1_1Sdl2Application_1_1Configuration.html</anchorfile>
      <anchor>a645f4740ff0831b24cd80fcff95e8a8e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Configuration &amp;</type>
      <name>setFlags</name>
      <anchorfile>classMagnum_1_1Platform_1_1Sdl2Application_1_1Configuration.html</anchorfile>
      <anchor>a196117cfeeb453ae31442b5c76b06b29</anchor>
      <arglist>(Flags flags)</arglist>
    </member>
    <member kind="function">
      <type>Version</type>
      <name>version</name>
      <anchorfile>classMagnum_1_1Platform_1_1Sdl2Application_1_1Configuration.html</anchorfile>
      <anchor>ab760dba894b98f2ae0474fc0b0dfd415</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Configuration &amp;</type>
      <name>setVersion</name>
      <anchorfile>classMagnum_1_1Platform_1_1Sdl2Application_1_1Configuration.html</anchorfile>
      <anchor>affb42c399709ee50a8634bd0af899b95</anchor>
      <arglist>(Version version)</arglist>
    </member>
    <member kind="function">
      <type>Int</type>
      <name>sampleCount</name>
      <anchorfile>classMagnum_1_1Platform_1_1Sdl2Application_1_1Configuration.html</anchorfile>
      <anchor>a538f69e4dff9938e2e1a10e440d4d55b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Configuration &amp;</type>
      <name>setSampleCount</name>
      <anchorfile>classMagnum_1_1Platform_1_1Sdl2Application_1_1Configuration.html</anchorfile>
      <anchor>a5faba5de2c1c18f283c2fb194a226778</anchor>
      <arglist>(Int count)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isSRGBCapable</name>
      <anchorfile>classMagnum_1_1Platform_1_1Sdl2Application_1_1Configuration.html</anchorfile>
      <anchor>a878cf62d7622cf25ca141ec998cc7131</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Configuration &amp;</type>
      <name>setSRGBCapable</name>
      <anchorfile>classMagnum_1_1Platform_1_1Sdl2Application_1_1Configuration.html</anchorfile>
      <anchor>a4eff60325bb8b8d3bf13c1dbd5d8480e</anchor>
      <arglist>(bool enabled)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Magnum::Platform::Sdl2Application::InputEvent</name>
    <filename>classMagnum_1_1Platform_1_1Sdl2Application_1_1InputEvent.html</filename>
    <member kind="enumeration">
      <type></type>
      <name>Modifier</name>
      <anchorfile>classMagnum_1_1Platform_1_1Sdl2Application_1_1InputEvent.html</anchorfile>
      <anchor>aa10e8a5d31cc11f1d2dbe9195c7f65b2</anchor>
      <arglist></arglist>
      <enumvalue file="classMagnum_1_1Platform_1_1Sdl2Application_1_1InputEvent.html" anchor="aa10e8a5d31cc11f1d2dbe9195c7f65b2a825a3d98017bab11815ad2817201324c">Shift</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1Sdl2Application_1_1InputEvent.html" anchor="aa10e8a5d31cc11f1d2dbe9195c7f65b2a2b61e0d5977f2e38f06e16281c802b47">Ctrl</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1Sdl2Application_1_1InputEvent.html" anchor="aa10e8a5d31cc11f1d2dbe9195c7f65b2aa2e92861b757ab878312dd57993d60cf">Alt</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1Sdl2Application_1_1InputEvent.html" anchor="aa10e8a5d31cc11f1d2dbe9195c7f65b2a0ce3266d4eb71ad50f7a90aee6d21dcd">Super</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1Sdl2Application_1_1InputEvent.html" anchor="aa10e8a5d31cc11f1d2dbe9195c7f65b2a571dc3ee993d6e9a33bdc851be52b995">AltGr</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1Sdl2Application_1_1InputEvent.html" anchor="aa10e8a5d31cc11f1d2dbe9195c7f65b2a8d0f4171170104d094d8b6d4f8bf49e6">CapsLock</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1Sdl2Application_1_1InputEvent.html" anchor="aa10e8a5d31cc11f1d2dbe9195c7f65b2acf6cc0261135c6d163fd4305375773d2">NumLock</enumvalue>
    </member>
    <member kind="typedef">
      <type>Containers::EnumSet&lt; Modifier &gt;</type>
      <name>Modifiers</name>
      <anchorfile>classMagnum_1_1Platform_1_1Sdl2Application_1_1InputEvent.html</anchorfile>
      <anchor>a0e0241129f46fe775273ac014a2b7f81</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>InputEvent</name>
      <anchorfile>classMagnum_1_1Platform_1_1Sdl2Application_1_1InputEvent.html</anchorfile>
      <anchor>a27a2ede3e8e96f3d2f06a4ec862fde8a</anchor>
      <arglist>(const InputEvent &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>InputEvent</name>
      <anchorfile>classMagnum_1_1Platform_1_1Sdl2Application_1_1InputEvent.html</anchorfile>
      <anchor>a9ac318eef525daa857d91aa8e3d0a74e</anchor>
      <arglist>(InputEvent &amp;&amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>InputEvent &amp;</type>
      <name>operator=</name>
      <anchorfile>classMagnum_1_1Platform_1_1Sdl2Application_1_1InputEvent.html</anchorfile>
      <anchor>a24218b791112cf5dd0588ce206f05ca4</anchor>
      <arglist>(const InputEvent &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>InputEvent &amp;</type>
      <name>operator=</name>
      <anchorfile>classMagnum_1_1Platform_1_1Sdl2Application_1_1InputEvent.html</anchorfile>
      <anchor>a55d6fd86685605ec932fa30d456bea5d</anchor>
      <arglist>(InputEvent &amp;&amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>constexpr bool</type>
      <name>isAccepted</name>
      <anchorfile>classMagnum_1_1Platform_1_1Sdl2Application_1_1InputEvent.html</anchorfile>
      <anchor>a3240d6c6f4e6e0f2ec444fa76a77dda9</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setAccepted</name>
      <anchorfile>classMagnum_1_1Platform_1_1Sdl2Application_1_1InputEvent.html</anchorfile>
      <anchor>a32f98bcf019844dc25f07cffd804be66</anchor>
      <arglist>(bool accepted=true)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Magnum::Platform::Sdl2Application::KeyEvent</name>
    <filename>classMagnum_1_1Platform_1_1Sdl2Application_1_1KeyEvent.html</filename>
    <base>Magnum::Platform::Sdl2Application::InputEvent</base>
    <member kind="enumeration">
      <type></type>
      <name>Key</name>
      <anchorfile>classMagnum_1_1Platform_1_1Sdl2Application_1_1KeyEvent.html</anchorfile>
      <anchor>ae83b84c36f8fab8c50ad8d5353f0cd9d</anchor>
      <arglist></arglist>
      <enumvalue file="classMagnum_1_1Platform_1_1Sdl2Application_1_1KeyEvent.html" anchor="ae83b84c36f8fab8c50ad8d5353f0cd9da88183b946cc5f0e8c96b2e66e1c74a7e">Unknown</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1Sdl2Application_1_1KeyEvent.html" anchor="ae83b84c36f8fab8c50ad8d5353f0cd9da982621712db76f723b7bb88b631dc64d">LeftShift</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1Sdl2Application_1_1KeyEvent.html" anchor="ae83b84c36f8fab8c50ad8d5353f0cd9da317d4a7487ee62605713987d4a037f83">RightShift</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1Sdl2Application_1_1KeyEvent.html" anchor="ae83b84c36f8fab8c50ad8d5353f0cd9daf2be247d68aadad6e9ba07db1885cd1c">LeftCtrl</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1Sdl2Application_1_1KeyEvent.html" anchor="ae83b84c36f8fab8c50ad8d5353f0cd9daf298b75d2207818c0459c063a21fd172">RightCtrl</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1Sdl2Application_1_1KeyEvent.html" anchor="ae83b84c36f8fab8c50ad8d5353f0cd9da96f9c4eb595a467d02e35c723f63ebf7">LeftAlt</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1Sdl2Application_1_1KeyEvent.html" anchor="ae83b84c36f8fab8c50ad8d5353f0cd9dad88bad98046b623323aa6ca28eefa6d5">RightAlt</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1Sdl2Application_1_1KeyEvent.html" anchor="ae83b84c36f8fab8c50ad8d5353f0cd9da4bd45bf12e08f60072b6962e9f7794c2">LeftSuper</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1Sdl2Application_1_1KeyEvent.html" anchor="ae83b84c36f8fab8c50ad8d5353f0cd9da0cc5a9f113dc1147c8eeae2f0199f9f2">RightSuper</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1Sdl2Application_1_1KeyEvent.html" anchor="ae83b84c36f8fab8c50ad8d5353f0cd9da571dc3ee993d6e9a33bdc851be52b995">AltGr</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1Sdl2Application_1_1KeyEvent.html" anchor="ae83b84c36f8fab8c50ad8d5353f0cd9daf1851d5600eae616ee802a31ac74701b">Enter</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1Sdl2Application_1_1KeyEvent.html" anchor="ae83b84c36f8fab8c50ad8d5353f0cd9da91f4253ca587ca8ac4e63b9ceb351f5d">Esc</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1Sdl2Application_1_1KeyEvent.html" anchor="ae83b84c36f8fab8c50ad8d5353f0cd9da258f49887ef8d14ac268c92b02503aaa">Up</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1Sdl2Application_1_1KeyEvent.html" anchor="ae83b84c36f8fab8c50ad8d5353f0cd9da08a38277b0309070706f6652eeae9a53">Down</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1Sdl2Application_1_1KeyEvent.html" anchor="ae83b84c36f8fab8c50ad8d5353f0cd9da945d5e233cf7d6240f6b783b36a374ff">Left</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1Sdl2Application_1_1KeyEvent.html" anchor="ae83b84c36f8fab8c50ad8d5353f0cd9da92b09c7c48c520c3c55e497875da437c">Right</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1Sdl2Application_1_1KeyEvent.html" anchor="ae83b84c36f8fab8c50ad8d5353f0cd9da8cf04a9734132302f96da8e113e80ce5">Home</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1Sdl2Application_1_1KeyEvent.html" anchor="ae83b84c36f8fab8c50ad8d5353f0cd9da87557f11575c0ad78e4e28abedc13b6e">End</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1Sdl2Application_1_1KeyEvent.html" anchor="ae83b84c36f8fab8c50ad8d5353f0cd9da9b869c510c75c5827ac82e49d4340927">PageUp</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1Sdl2Application_1_1KeyEvent.html" anchor="ae83b84c36f8fab8c50ad8d5353f0cd9daee3677bcca83ece9384b01e43952bf33">PageDown</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1Sdl2Application_1_1KeyEvent.html" anchor="ae83b84c36f8fab8c50ad8d5353f0cd9dacd7d13ceea728b08555f7c818cfb13ef">Backspace</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1Sdl2Application_1_1KeyEvent.html" anchor="ae83b84c36f8fab8c50ad8d5353f0cd9daa458be0f08b7e4ff3c0f633c100176c0">Insert</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1Sdl2Application_1_1KeyEvent.html" anchor="ae83b84c36f8fab8c50ad8d5353f0cd9daf2a6c498fb90ee345d997f888fce3b18">Delete</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1Sdl2Application_1_1KeyEvent.html" anchor="ae83b84c36f8fab8c50ad8d5353f0cd9dae1dffc8709f31a4987c8a88334107e89">F1</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1Sdl2Application_1_1KeyEvent.html" anchor="ae83b84c36f8fab8c50ad8d5353f0cd9dafe5c3684dce76cdd9f7f42430868aa74">F2</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1Sdl2Application_1_1KeyEvent.html" anchor="ae83b84c36f8fab8c50ad8d5353f0cd9da4b6bf4b531770872d4328ce69bef5627">F3</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1Sdl2Application_1_1KeyEvent.html" anchor="ae83b84c36f8fab8c50ad8d5353f0cd9dae7e0e72401a9f2718ed0f39f2861d702">F4</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1Sdl2Application_1_1KeyEvent.html" anchor="ae83b84c36f8fab8c50ad8d5353f0cd9da37f438df6a6d5ba4c17ef8ca58562f00">F5</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1Sdl2Application_1_1KeyEvent.html" anchor="ae83b84c36f8fab8c50ad8d5353f0cd9da1faf42f2823f184eb2c9f0dffe5d73f2">F6</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1Sdl2Application_1_1KeyEvent.html" anchor="ae83b84c36f8fab8c50ad8d5353f0cd9da47489eb597b7db34caa24b1fc78fc839">F7</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1Sdl2Application_1_1KeyEvent.html" anchor="ae83b84c36f8fab8c50ad8d5353f0cd9da4787509ad9f9d747a81a30e9dde3d4a7">F8</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1Sdl2Application_1_1KeyEvent.html" anchor="ae83b84c36f8fab8c50ad8d5353f0cd9da892a245e287c163080b23db737d3c4c9">F9</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1Sdl2Application_1_1KeyEvent.html" anchor="ae83b84c36f8fab8c50ad8d5353f0cd9dab213ce22ca6ad4eda8db82966b9b6e5a">F10</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1Sdl2Application_1_1KeyEvent.html" anchor="ae83b84c36f8fab8c50ad8d5353f0cd9da643b0662422d1d0dffa3fca2e2bf28a8">F11</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1Sdl2Application_1_1KeyEvent.html" anchor="ae83b84c36f8fab8c50ad8d5353f0cd9dae902674982fc99aa343cdd94da7476c3">F12</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1Sdl2Application_1_1KeyEvent.html" anchor="ae83b84c36f8fab8c50ad8d5353f0cd9dad511f8439ecde36647437fbba67a4394">Space</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1Sdl2Application_1_1KeyEvent.html" anchor="ae83b84c36f8fab8c50ad8d5353f0cd9da5c6ba25104401c9ee0650230fc6ba413">Tab</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1Sdl2Application_1_1KeyEvent.html" anchor="ae83b84c36f8fab8c50ad8d5353f0cd9da58be47db9455679e6a44df2eff9c9fa6">Comma</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1Sdl2Application_1_1KeyEvent.html" anchor="ae83b84c36f8fab8c50ad8d5353f0cd9da1901606ea069a83dc7beea17881ef95a">Period</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1Sdl2Application_1_1KeyEvent.html" anchor="ae83b84c36f8fab8c50ad8d5353f0cd9da453fb623e752c5993f65bc410fd74fe5">Minus</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1Sdl2Application_1_1KeyEvent.html" anchor="ae83b84c36f8fab8c50ad8d5353f0cd9da32ba78fe43257d3e7f88e3935a8ea0d4">Plus</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1Sdl2Application_1_1KeyEvent.html" anchor="ae83b84c36f8fab8c50ad8d5353f0cd9da358cfe58715d680d9ab09f82e4010cbc">Slash</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1Sdl2Application_1_1KeyEvent.html" anchor="ae83b84c36f8fab8c50ad8d5353f0cd9daadaaee4b22041c27198d410c68d952c9">Percent</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1Sdl2Application_1_1KeyEvent.html" anchor="ae83b84c36f8fab8c50ad8d5353f0cd9da9806fa37a3ecd39bf637c203aa011ed0">Semicolon</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1Sdl2Application_1_1KeyEvent.html" anchor="ae83b84c36f8fab8c50ad8d5353f0cd9daf5f286e73bda105e538310b3190f75c5">Equal</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1Sdl2Application_1_1KeyEvent.html" anchor="ae83b84c36f8fab8c50ad8d5353f0cd9dad7ed4ee1df437474d005188535f74875">Zero</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1Sdl2Application_1_1KeyEvent.html" anchor="ae83b84c36f8fab8c50ad8d5353f0cd9da06c2cea18679d64399783748fa367bdd">One</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1Sdl2Application_1_1KeyEvent.html" anchor="ae83b84c36f8fab8c50ad8d5353f0cd9daaada29daee1d64ed0fe907043855cb7e">Two</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1Sdl2Application_1_1KeyEvent.html" anchor="ae83b84c36f8fab8c50ad8d5353f0cd9daca8a2087e5557e317599344687a57391">Three</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1Sdl2Application_1_1KeyEvent.html" anchor="ae83b84c36f8fab8c50ad8d5353f0cd9da981b8fcee42e1e726a67a2b9a98ea6e9">Four</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1Sdl2Application_1_1KeyEvent.html" anchor="ae83b84c36f8fab8c50ad8d5353f0cd9dae5d9de39f7ca1ba2637e5640af3ae8aa">Five</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1Sdl2Application_1_1KeyEvent.html" anchor="ae83b84c36f8fab8c50ad8d5353f0cd9dae6fbc0b9673f8c86726688d7607fc8f5">Six</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1Sdl2Application_1_1KeyEvent.html" anchor="ae83b84c36f8fab8c50ad8d5353f0cd9da12e67aac3e7f9227cc35f8f047d7dc74">Seven</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1Sdl2Application_1_1KeyEvent.html" anchor="ae83b84c36f8fab8c50ad8d5353f0cd9dabaca0ca6729684fd54206793ae4b5bd5">Eight</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1Sdl2Application_1_1KeyEvent.html" anchor="ae83b84c36f8fab8c50ad8d5353f0cd9da24db11216549ee55172c33cf3def2f3f">Nine</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1Sdl2Application_1_1KeyEvent.html" anchor="ae83b84c36f8fab8c50ad8d5353f0cd9da7fc56270e7a70fa81a5935b72eacbe29">A</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1Sdl2Application_1_1KeyEvent.html" anchor="ae83b84c36f8fab8c50ad8d5353f0cd9da9d5ed678fe57bcca610140957afab571">B</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1Sdl2Application_1_1KeyEvent.html" anchor="ae83b84c36f8fab8c50ad8d5353f0cd9da0d61f8370cad1d412f80b84d143e1257">C</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1Sdl2Application_1_1KeyEvent.html" anchor="ae83b84c36f8fab8c50ad8d5353f0cd9daf623e75af30e62bbd73d6df5b50bb7b5">D</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1Sdl2Application_1_1KeyEvent.html" anchor="ae83b84c36f8fab8c50ad8d5353f0cd9da3a3ea00cfc35332cedf6e5e9a32e94da">E</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1Sdl2Application_1_1KeyEvent.html" anchor="ae83b84c36f8fab8c50ad8d5353f0cd9da800618943025315f869e4e1f09471012">F</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1Sdl2Application_1_1KeyEvent.html" anchor="ae83b84c36f8fab8c50ad8d5353f0cd9dadfcf28d0734569a6a693bc8194de62bf">G</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1Sdl2Application_1_1KeyEvent.html" anchor="ae83b84c36f8fab8c50ad8d5353f0cd9dac1d9f50f86825a1a2302ec2449c17196">H</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1Sdl2Application_1_1KeyEvent.html" anchor="ae83b84c36f8fab8c50ad8d5353f0cd9dadd7536794b63bf90eccfd37f9b147d7f">I</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1Sdl2Application_1_1KeyEvent.html" anchor="ae83b84c36f8fab8c50ad8d5353f0cd9daff44570aca8241914870afbc310cdb85">J</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1Sdl2Application_1_1KeyEvent.html" anchor="ae83b84c36f8fab8c50ad8d5353f0cd9daa5f3c6a11b03839d46af9fb43c97c188">K</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1Sdl2Application_1_1KeyEvent.html" anchor="ae83b84c36f8fab8c50ad8d5353f0cd9dad20caec3b48a1eef164cb4ca81ba2587">L</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1Sdl2Application_1_1KeyEvent.html" anchor="ae83b84c36f8fab8c50ad8d5353f0cd9da69691c7bdcc3ce6d5d8a1361f22d04ac">M</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1Sdl2Application_1_1KeyEvent.html" anchor="ae83b84c36f8fab8c50ad8d5353f0cd9da8d9c307cb7f3c4a32822a51922d1ceaa">N</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1Sdl2Application_1_1KeyEvent.html" anchor="ae83b84c36f8fab8c50ad8d5353f0cd9daf186217753c37b9b9f958d906208506e">O</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1Sdl2Application_1_1KeyEvent.html" anchor="ae83b84c36f8fab8c50ad8d5353f0cd9da44c29edb103a2872f519ad0c9a0fdaaa">P</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1Sdl2Application_1_1KeyEvent.html" anchor="ae83b84c36f8fab8c50ad8d5353f0cd9daf09564c9ca56850d4cd6b3319e541aee">Q</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1Sdl2Application_1_1KeyEvent.html" anchor="ae83b84c36f8fab8c50ad8d5353f0cd9dae1e1d3d40573127e9ee0480caf1283d6">R</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1Sdl2Application_1_1KeyEvent.html" anchor="ae83b84c36f8fab8c50ad8d5353f0cd9da5dbc98dcc983a70728bd082d1a47546e">S</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1Sdl2Application_1_1KeyEvent.html" anchor="ae83b84c36f8fab8c50ad8d5353f0cd9dab9ece18c950afbfa6b0fdbfa4ff731d3">T</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1Sdl2Application_1_1KeyEvent.html" anchor="ae83b84c36f8fab8c50ad8d5353f0cd9da4c614360da93c0a041b22e537de151eb">U</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1Sdl2Application_1_1KeyEvent.html" anchor="ae83b84c36f8fab8c50ad8d5353f0cd9da5206560a306a2e085a437fd258eb57ce">V</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1Sdl2Application_1_1KeyEvent.html" anchor="ae83b84c36f8fab8c50ad8d5353f0cd9da61e9c06ea9a85a5088a499df6458d276">W</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1Sdl2Application_1_1KeyEvent.html" anchor="ae83b84c36f8fab8c50ad8d5353f0cd9da02129bb861061d1a052c592e2dc6b383">X</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1Sdl2Application_1_1KeyEvent.html" anchor="ae83b84c36f8fab8c50ad8d5353f0cd9da57cec4137b614c87cb4e24a3d003a3e0">Y</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1Sdl2Application_1_1KeyEvent.html" anchor="ae83b84c36f8fab8c50ad8d5353f0cd9da21c2e59531c8710156d34a3c30ac81d5">Z</enumvalue>
    </member>
    <member kind="function">
      <type>constexpr Key</type>
      <name>key</name>
      <anchorfile>classMagnum_1_1Platform_1_1Sdl2Application_1_1KeyEvent.html</anchorfile>
      <anchor>a6a6e101b4e323060f5b402005c93dc97</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>keyName</name>
      <anchorfile>classMagnum_1_1Platform_1_1Sdl2Application_1_1KeyEvent.html</anchorfile>
      <anchor>a3824f5302ca3562534b2dd8c98fe1c5b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>constexpr Modifiers</type>
      <name>modifiers</name>
      <anchorfile>classMagnum_1_1Platform_1_1Sdl2Application_1_1KeyEvent.html</anchorfile>
      <anchor>a3efa711c4d3de7a82d8fa63845ec5e77</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>constexpr bool</type>
      <name>isRepeated</name>
      <anchorfile>classMagnum_1_1Platform_1_1Sdl2Application_1_1KeyEvent.html</anchorfile>
      <anchor>a787e85c5e7be96357be55a7c2dc62dda</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::string</type>
      <name>keyName</name>
      <anchorfile>classMagnum_1_1Platform_1_1Sdl2Application_1_1KeyEvent.html</anchorfile>
      <anchor>a8ce012422f0aed921aa5298ad8dd5d38</anchor>
      <arglist>(Key key)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Magnum::Platform::Sdl2Application::MouseEvent</name>
    <filename>classMagnum_1_1Platform_1_1Sdl2Application_1_1MouseEvent.html</filename>
    <base>Magnum::Platform::Sdl2Application::InputEvent</base>
    <member kind="enumeration">
      <type></type>
      <name>Button</name>
      <anchorfile>classMagnum_1_1Platform_1_1Sdl2Application_1_1MouseEvent.html</anchorfile>
      <anchor>a5fb1402365ce5585b402e27dc7702e16</anchor>
      <arglist></arglist>
      <enumvalue file="classMagnum_1_1Platform_1_1Sdl2Application_1_1MouseEvent.html" anchor="a5fb1402365ce5585b402e27dc7702e16a945d5e233cf7d6240f6b783b36a374ff">Left</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1Sdl2Application_1_1MouseEvent.html" anchor="a5fb1402365ce5585b402e27dc7702e16ab1ca34f82e83c52b010f86955f264e05">Middle</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1Sdl2Application_1_1MouseEvent.html" anchor="a5fb1402365ce5585b402e27dc7702e16a92b09c7c48c520c3c55e497875da437c">Right</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1Sdl2Application_1_1MouseEvent.html" anchor="a5fb1402365ce5585b402e27dc7702e16abb7f5ae6220c9828e5ec91faf054197c">X1</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1Sdl2Application_1_1MouseEvent.html" anchor="a5fb1402365ce5585b402e27dc7702e16a54105bddbfe3f639d49cbe8f5182c958">X2</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1Sdl2Application_1_1MouseEvent.html" anchor="a5fb1402365ce5585b402e27dc7702e16a050f568559dcada95ba3ecb63de39971">WheelUp</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1Sdl2Application_1_1MouseEvent.html" anchor="a5fb1402365ce5585b402e27dc7702e16a95cf2a3dc58aff6d85e53738a089d9d1">WheelDown</enumvalue>
    </member>
    <member kind="function">
      <type>constexpr Button</type>
      <name>button</name>
      <anchorfile>classMagnum_1_1Platform_1_1Sdl2Application_1_1MouseEvent.html</anchorfile>
      <anchor>a34c36fd60cbf842519b99fd9faef9144</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>constexpr Vector2i</type>
      <name>position</name>
      <anchorfile>classMagnum_1_1Platform_1_1Sdl2Application_1_1MouseEvent.html</anchorfile>
      <anchor>abf6555bb6d77d38859ab442b1f9b8915</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>constexpr Int</type>
      <name>clickCount</name>
      <anchorfile>classMagnum_1_1Platform_1_1Sdl2Application_1_1MouseEvent.html</anchorfile>
      <anchor>a1bb314e16511507dda77c4283880dc9f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Modifiers</type>
      <name>modifiers</name>
      <anchorfile>classMagnum_1_1Platform_1_1Sdl2Application_1_1MouseEvent.html</anchorfile>
      <anchor>ad38c8e8c232ab99ab932d482ab6fc7d3</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Magnum::Platform::Sdl2Application::MouseMoveEvent</name>
    <filename>classMagnum_1_1Platform_1_1Sdl2Application_1_1MouseMoveEvent.html</filename>
    <base>Magnum::Platform::Sdl2Application::InputEvent</base>
    <member kind="enumeration">
      <type></type>
      <name>Button</name>
      <anchorfile>classMagnum_1_1Platform_1_1Sdl2Application_1_1MouseMoveEvent.html</anchorfile>
      <anchor>aa7dd5455a3f77a31d58523e8bafe6a08</anchor>
      <arglist></arglist>
      <enumvalue file="classMagnum_1_1Platform_1_1Sdl2Application_1_1MouseMoveEvent.html" anchor="aa7dd5455a3f77a31d58523e8bafe6a08a945d5e233cf7d6240f6b783b36a374ff">Left</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1Sdl2Application_1_1MouseMoveEvent.html" anchor="aa7dd5455a3f77a31d58523e8bafe6a08ab1ca34f82e83c52b010f86955f264e05">Middle</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1Sdl2Application_1_1MouseMoveEvent.html" anchor="aa7dd5455a3f77a31d58523e8bafe6a08a92b09c7c48c520c3c55e497875da437c">Right</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1Sdl2Application_1_1MouseMoveEvent.html" anchor="aa7dd5455a3f77a31d58523e8bafe6a08abb7f5ae6220c9828e5ec91faf054197c">X1</enumvalue>
      <enumvalue file="classMagnum_1_1Platform_1_1Sdl2Application_1_1MouseMoveEvent.html" anchor="aa7dd5455a3f77a31d58523e8bafe6a08a54105bddbfe3f639d49cbe8f5182c958">X2</enumvalue>
    </member>
    <member kind="typedef">
      <type>Containers::EnumSet&lt; Button &gt;</type>
      <name>Buttons</name>
      <anchorfile>classMagnum_1_1Platform_1_1Sdl2Application_1_1MouseMoveEvent.html</anchorfile>
      <anchor>a5f223a6ac627de0b9eafce6b38994601</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>constexpr Vector2i</type>
      <name>position</name>
      <anchorfile>classMagnum_1_1Platform_1_1Sdl2Application_1_1MouseMoveEvent.html</anchorfile>
      <anchor>a0ae7e2be03dffa2376d0d15041cb3e0e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>constexpr Vector2i</type>
      <name>relativePosition</name>
      <anchorfile>classMagnum_1_1Platform_1_1Sdl2Application_1_1MouseMoveEvent.html</anchorfile>
      <anchor>a9b6e91e7723aa55585bb35aa6869cce8</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>constexpr Buttons</type>
      <name>buttons</name>
      <anchorfile>classMagnum_1_1Platform_1_1Sdl2Application_1_1MouseMoveEvent.html</anchorfile>
      <anchor>aa4e81cbc17063b3ffa87981172e4f9b5</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Modifiers</type>
      <name>modifiers</name>
      <anchorfile>classMagnum_1_1Platform_1_1Sdl2Application_1_1MouseMoveEvent.html</anchorfile>
      <anchor>a538119f2ca46ab7bbd19e7b6affe8a07</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Magnum::Platform::Sdl2Application::MouseScrollEvent</name>
    <filename>classMagnum_1_1Platform_1_1Sdl2Application_1_1MouseScrollEvent.html</filename>
    <base>Magnum::Platform::Sdl2Application::InputEvent</base>
    <member kind="function">
      <type>constexpr Vector2</type>
      <name>offset</name>
      <anchorfile>classMagnum_1_1Platform_1_1Sdl2Application_1_1MouseScrollEvent.html</anchorfile>
      <anchor>a87fe8c8df214de5b152d5da0f6c5e559</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Modifiers</type>
      <name>modifiers</name>
      <anchorfile>classMagnum_1_1Platform_1_1Sdl2Application_1_1MouseScrollEvent.html</anchorfile>
      <anchor>abf59deab23ca2c3fabc5863f8c152121</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Magnum::Platform::Sdl2Application::MultiGestureEvent</name>
    <filename>classMagnum_1_1Platform_1_1Sdl2Application_1_1MultiGestureEvent.html</filename>
    <member kind="function">
      <type></type>
      <name>MultiGestureEvent</name>
      <anchorfile>classMagnum_1_1Platform_1_1Sdl2Application_1_1MultiGestureEvent.html</anchorfile>
      <anchor>aa5f12716fe554a20d1eb3789b678c49c</anchor>
      <arglist>(const MultiGestureEvent &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>MultiGestureEvent</name>
      <anchorfile>classMagnum_1_1Platform_1_1Sdl2Application_1_1MultiGestureEvent.html</anchorfile>
      <anchor>a7854e6a2712694d48ce9d9d68eb6e238</anchor>
      <arglist>(MultiGestureEvent &amp;&amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>MultiGestureEvent &amp;</type>
      <name>operator=</name>
      <anchorfile>classMagnum_1_1Platform_1_1Sdl2Application_1_1MultiGestureEvent.html</anchorfile>
      <anchor>af369083009a73105f8465d573d94dffb</anchor>
      <arglist>(const MultiGestureEvent &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>MultiGestureEvent &amp;</type>
      <name>operator=</name>
      <anchorfile>classMagnum_1_1Platform_1_1Sdl2Application_1_1MultiGestureEvent.html</anchorfile>
      <anchor>a5429398828cad52a7adde350d911c9ba</anchor>
      <arglist>(MultiGestureEvent &amp;&amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>constexpr bool</type>
      <name>isAccepted</name>
      <anchorfile>classMagnum_1_1Platform_1_1Sdl2Application_1_1MultiGestureEvent.html</anchorfile>
      <anchor>a275320e8bf90f526d0fe241e6167c848</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setAccepted</name>
      <anchorfile>classMagnum_1_1Platform_1_1Sdl2Application_1_1MultiGestureEvent.html</anchorfile>
      <anchor>a2825c2a0534db701a2c3dbd757f95850</anchor>
      <arglist>(bool accepted=true)</arglist>
    </member>
    <member kind="function">
      <type>Vector2</type>
      <name>center</name>
      <anchorfile>classMagnum_1_1Platform_1_1Sdl2Application_1_1MultiGestureEvent.html</anchorfile>
      <anchor>a7118c8364fec756bab81797e9cf77dde</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Float</type>
      <name>relativeRotation</name>
      <anchorfile>classMagnum_1_1Platform_1_1Sdl2Application_1_1MultiGestureEvent.html</anchorfile>
      <anchor>a964d907cae5b81e61e474c83eb84b5be</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Float</type>
      <name>relativeDistance</name>
      <anchorfile>classMagnum_1_1Platform_1_1Sdl2Application_1_1MultiGestureEvent.html</anchorfile>
      <anchor>af73f0b7eebb9affcd2994188ad69db60</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Int</type>
      <name>fingerCount</name>
      <anchorfile>classMagnum_1_1Platform_1_1Sdl2Application_1_1MultiGestureEvent.html</anchorfile>
      <anchor>a8c4127eb43892becffe087b572536e5a</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Magnum::Platform::Sdl2Application::TextEditingEvent</name>
    <filename>classMagnum_1_1Platform_1_1Sdl2Application_1_1TextEditingEvent.html</filename>
    <member kind="function">
      <type></type>
      <name>TextEditingEvent</name>
      <anchorfile>classMagnum_1_1Platform_1_1Sdl2Application_1_1TextEditingEvent.html</anchorfile>
      <anchor>ac94965b04b81348a5f04a2902ee3aace</anchor>
      <arglist>(const TextEditingEvent &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TextEditingEvent</name>
      <anchorfile>classMagnum_1_1Platform_1_1Sdl2Application_1_1TextEditingEvent.html</anchorfile>
      <anchor>ae1dfe307dff247d3effa82e4185972cf</anchor>
      <arglist>(TextEditingEvent &amp;&amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>TextEditingEvent &amp;</type>
      <name>operator=</name>
      <anchorfile>classMagnum_1_1Platform_1_1Sdl2Application_1_1TextEditingEvent.html</anchorfile>
      <anchor>a8f268a2248dee0b9a871a0586cd91760</anchor>
      <arglist>(const TextEditingEvent &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>TextEditingEvent &amp;</type>
      <name>operator=</name>
      <anchorfile>classMagnum_1_1Platform_1_1Sdl2Application_1_1TextEditingEvent.html</anchorfile>
      <anchor>aa220d01ca2b47682d271f2f8e6e143b6</anchor>
      <arglist>(TextEditingEvent &amp;&amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>constexpr bool</type>
      <name>isAccepted</name>
      <anchorfile>classMagnum_1_1Platform_1_1Sdl2Application_1_1TextEditingEvent.html</anchorfile>
      <anchor>ae021026a02a0a1ab7063b060ddad761a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setAccepted</name>
      <anchorfile>classMagnum_1_1Platform_1_1Sdl2Application_1_1TextEditingEvent.html</anchorfile>
      <anchor>af50ea4a191c6a3c97202457c41498449</anchor>
      <arglist>(bool accepted=true)</arglist>
    </member>
    <member kind="function">
      <type>constexpr Containers::ArrayView&lt; const char &gt;</type>
      <name>text</name>
      <anchorfile>classMagnum_1_1Platform_1_1Sdl2Application_1_1TextEditingEvent.html</anchorfile>
      <anchor>af7c7878cb74c2a7a683248079491dc91</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>constexpr Int</type>
      <name>start</name>
      <anchorfile>classMagnum_1_1Platform_1_1Sdl2Application_1_1TextEditingEvent.html</anchorfile>
      <anchor>ac4f0edec8b79d10396f3ae922308ab4f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>constexpr Int</type>
      <name>length</name>
      <anchorfile>classMagnum_1_1Platform_1_1Sdl2Application_1_1TextEditingEvent.html</anchorfile>
      <anchor>a3cce4f819bcd9d63329f6c04a6d878b4</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Magnum::Platform::Sdl2Application::TextInputEvent</name>
    <filename>classMagnum_1_1Platform_1_1Sdl2Application_1_1TextInputEvent.html</filename>
    <member kind="function">
      <type></type>
      <name>TextInputEvent</name>
      <anchorfile>classMagnum_1_1Platform_1_1Sdl2Application_1_1TextInputEvent.html</anchorfile>
      <anchor>a17fe6b90aa6650203f91f751b76c1616</anchor>
      <arglist>(const TextInputEvent &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TextInputEvent</name>
      <anchorfile>classMagnum_1_1Platform_1_1Sdl2Application_1_1TextInputEvent.html</anchorfile>
      <anchor>a78eff0bbce14e4cddd6ffc9293b5df03</anchor>
      <arglist>(TextInputEvent &amp;&amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>TextInputEvent &amp;</type>
      <name>operator=</name>
      <anchorfile>classMagnum_1_1Platform_1_1Sdl2Application_1_1TextInputEvent.html</anchorfile>
      <anchor>ab462b749f4ebcf563a0406e2ca3bb932</anchor>
      <arglist>(const TextInputEvent &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>TextInputEvent &amp;</type>
      <name>operator=</name>
      <anchorfile>classMagnum_1_1Platform_1_1Sdl2Application_1_1TextInputEvent.html</anchorfile>
      <anchor>af14980857be4f0b12360605133ce840f</anchor>
      <arglist>(TextInputEvent &amp;&amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>constexpr bool</type>
      <name>isAccepted</name>
      <anchorfile>classMagnum_1_1Platform_1_1Sdl2Application_1_1TextInputEvent.html</anchorfile>
      <anchor>ad8695f90b498c56fe7aa402d5468d642</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setAccepted</name>
      <anchorfile>classMagnum_1_1Platform_1_1Sdl2Application_1_1TextInputEvent.html</anchorfile>
      <anchor>ae8f318bc4391e661860ed202eff91386</anchor>
      <arglist>(bool accepted=true)</arglist>
    </member>
    <member kind="function">
      <type>constexpr Containers::ArrayView&lt; const char &gt;</type>
      <name>text</name>
      <anchorfile>classMagnum_1_1Platform_1_1Sdl2Application_1_1TextInputEvent.html</anchorfile>
      <anchor>a170da715eb84e126f741a17e3ca3e7dc</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Magnum::Platform::WindowlessCglApplication</name>
    <filename>classMagnum_1_1Platform_1_1WindowlessCglApplication.html</filename>
    <class kind="struct">Magnum::Platform::WindowlessCglApplication::Arguments</class>
    <member kind="typedef">
      <type>WindowlessCglContext::Configuration</type>
      <name>Configuration</name>
      <anchorfile>classMagnum_1_1Platform_1_1WindowlessCglApplication.html</anchorfile>
      <anchor>a813a4d8667074782ea4cf58006922600</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WindowlessCglApplication</name>
      <anchorfile>classMagnum_1_1Platform_1_1WindowlessCglApplication.html</anchorfile>
      <anchor>a2191aafb32af4f3894a685d57af65e75</anchor>
      <arglist>(const Arguments &amp;arguments, const Configuration &amp;configuration=Configuration())</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WindowlessCglApplication</name>
      <anchorfile>classMagnum_1_1Platform_1_1WindowlessCglApplication.html</anchorfile>
      <anchor>a7c0a4438ecd953ed9a1c07151d4e6b9c</anchor>
      <arglist>(const Arguments &amp;arguments, NoCreateT)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WindowlessCglApplication</name>
      <anchorfile>classMagnum_1_1Platform_1_1WindowlessCglApplication.html</anchorfile>
      <anchor>a0ca387c0a697617ffd70ed02efa66b35</anchor>
      <arglist>(const Arguments &amp;arguments, std::nullptr_t)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WindowlessCglApplication</name>
      <anchorfile>classMagnum_1_1Platform_1_1WindowlessCglApplication.html</anchorfile>
      <anchor>a6fc2e1d200842961f859f2faff32272a</anchor>
      <arglist>(const WindowlessCglApplication &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WindowlessCglApplication</name>
      <anchorfile>classMagnum_1_1Platform_1_1WindowlessCglApplication.html</anchorfile>
      <anchor>aa2d31f8cde3b30c2ef4c5625f416f0c3</anchor>
      <arglist>(WindowlessCglApplication &amp;&amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>WindowlessCglApplication &amp;</type>
      <name>operator=</name>
      <anchorfile>classMagnum_1_1Platform_1_1WindowlessCglApplication.html</anchorfile>
      <anchor>ae8a0afc4e6c1767c9134c44f76d42880</anchor>
      <arglist>(const WindowlessCglApplication &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>WindowlessCglApplication &amp;</type>
      <name>operator=</name>
      <anchorfile>classMagnum_1_1Platform_1_1WindowlessCglApplication.html</anchorfile>
      <anchor>a7913bfa163b49bd255ed193a22b62260</anchor>
      <arglist>(WindowlessCglApplication &amp;&amp;)=delete</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual int</type>
      <name>exec</name>
      <anchorfile>classMagnum_1_1Platform_1_1WindowlessCglApplication.html</anchorfile>
      <anchor>a86ea9d89395c9012fb2c51dfd5edcd28</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>createContext</name>
      <anchorfile>classMagnum_1_1Platform_1_1WindowlessCglApplication.html</anchorfile>
      <anchor>a07afb18e09fb028abdfdb100bcd40f4d</anchor>
      <arglist>(const Configuration &amp;configuration=Configuration())</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>tryCreateContext</name>
      <anchorfile>classMagnum_1_1Platform_1_1WindowlessCglApplication.html</anchorfile>
      <anchor>acb0a1a3f7d8dbcc39d178d6f4a4a2f43</anchor>
      <arglist>(const Configuration &amp;configuration)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Magnum::Platform::WindowlessCglApplication::Arguments</name>
    <filename>structMagnum_1_1Platform_1_1WindowlessCglApplication_1_1Arguments.html</filename>
    <member kind="function">
      <type>constexpr</type>
      <name>Arguments</name>
      <anchorfile>structMagnum_1_1Platform_1_1WindowlessCglApplication_1_1Arguments.html</anchorfile>
      <anchor>ad4a42b501fe2091ef0b597997fb37099</anchor>
      <arglist>(int &amp;argc, char **argv) noexcept</arglist>
    </member>
    <member kind="variable">
      <type>int &amp;</type>
      <name>argc</name>
      <anchorfile>structMagnum_1_1Platform_1_1WindowlessCglApplication_1_1Arguments.html</anchorfile>
      <anchor>a36aba7e70b7c3fea13cbbd02a71af4e4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char **</type>
      <name>argv</name>
      <anchorfile>structMagnum_1_1Platform_1_1WindowlessCglApplication_1_1Arguments.html</anchorfile>
      <anchor>a0021631b18f4fadc30f9e3394b320170</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Magnum::Platform::WindowlessCglContext</name>
    <filename>classMagnum_1_1Platform_1_1WindowlessCglContext.html</filename>
    <class kind="class">Magnum::Platform::WindowlessCglContext::Configuration</class>
    <member kind="function">
      <type></type>
      <name>WindowlessCglContext</name>
      <anchorfile>classMagnum_1_1Platform_1_1WindowlessCglContext.html</anchorfile>
      <anchor>a18ae047c0375943aca20d2ddcc2b5882</anchor>
      <arglist>(const Configuration &amp;configuration, Context *context=nullptr)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WindowlessCglContext</name>
      <anchorfile>classMagnum_1_1Platform_1_1WindowlessCglContext.html</anchorfile>
      <anchor>a526199ffb7273e26daa38392bb24724d</anchor>
      <arglist>(NoCreateT)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WindowlessCglContext</name>
      <anchorfile>classMagnum_1_1Platform_1_1WindowlessCglContext.html</anchorfile>
      <anchor>a906031dec3e3880e7ba999ada9025550</anchor>
      <arglist>(const WindowlessCglContext &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WindowlessCglContext</name>
      <anchorfile>classMagnum_1_1Platform_1_1WindowlessCglContext.html</anchorfile>
      <anchor>a847124a18ccdd928f5a2a7a09134797a</anchor>
      <arglist>(WindowlessCglContext &amp;&amp;other)</arglist>
    </member>
    <member kind="function">
      <type>WindowlessCglContext &amp;</type>
      <name>operator=</name>
      <anchorfile>classMagnum_1_1Platform_1_1WindowlessCglContext.html</anchorfile>
      <anchor>a7e98bd05f2cc8411e6bc63a61f06e0cc</anchor>
      <arglist>(const WindowlessCglContext &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>WindowlessCglContext &amp;</type>
      <name>operator=</name>
      <anchorfile>classMagnum_1_1Platform_1_1WindowlessCglContext.html</anchorfile>
      <anchor>a4f2af20ddcc1fa01814c05295a1d2cbe</anchor>
      <arglist>(WindowlessCglContext &amp;&amp;other)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~WindowlessCglContext</name>
      <anchorfile>classMagnum_1_1Platform_1_1WindowlessCglContext.html</anchorfile>
      <anchor>ad7ef5bddc65706eb7e7ef386095e9b5f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isCreated</name>
      <anchorfile>classMagnum_1_1Platform_1_1WindowlessCglContext.html</anchorfile>
      <anchor>acc317ef9e68540635d3a0fdee54f28d0</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>makeCurrent</name>
      <anchorfile>classMagnum_1_1Platform_1_1WindowlessCglContext.html</anchorfile>
      <anchor>aa026bf363ab2233ca915bb2bc8db1a99</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Magnum::Platform::WindowlessCglContext::Configuration</name>
    <filename>classMagnum_1_1Platform_1_1WindowlessCglContext_1_1Configuration.html</filename>
  </compound>
  <compound kind="class">
    <name>Magnum::Platform::WindowlessEglApplication</name>
    <filename>classMagnum_1_1Platform_1_1WindowlessEglApplication.html</filename>
    <class kind="struct">Magnum::Platform::WindowlessEglApplication::Arguments</class>
    <member kind="typedef">
      <type>WindowlessEglContext::Configuration</type>
      <name>Configuration</name>
      <anchorfile>classMagnum_1_1Platform_1_1WindowlessEglApplication.html</anchorfile>
      <anchor>a428c1bfe41a293ed331331d0de2392d1</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WindowlessEglApplication</name>
      <anchorfile>classMagnum_1_1Platform_1_1WindowlessEglApplication.html</anchorfile>
      <anchor>ac2cc667cd7bea6e05cde7da26a9d020f</anchor>
      <arglist>(const Arguments &amp;arguments, const Configuration &amp;configuration=Configuration())</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WindowlessEglApplication</name>
      <anchorfile>classMagnum_1_1Platform_1_1WindowlessEglApplication.html</anchorfile>
      <anchor>ab678cd7284690ec54b2d971cedf12fe3</anchor>
      <arglist>(const Arguments &amp;arguments, NoCreateT)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WindowlessEglApplication</name>
      <anchorfile>classMagnum_1_1Platform_1_1WindowlessEglApplication.html</anchorfile>
      <anchor>a723f1036d9abf19038886625234c7251</anchor>
      <arglist>(const Arguments &amp;arguments, std::nullptr_t)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WindowlessEglApplication</name>
      <anchorfile>classMagnum_1_1Platform_1_1WindowlessEglApplication.html</anchorfile>
      <anchor>ac057147d0dfcbfbfe627304af939df0a</anchor>
      <arglist>(const WindowlessEglApplication &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WindowlessEglApplication</name>
      <anchorfile>classMagnum_1_1Platform_1_1WindowlessEglApplication.html</anchorfile>
      <anchor>a0b858d41108723e873490afb620015a6</anchor>
      <arglist>(WindowlessEglApplication &amp;&amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>WindowlessEglApplication &amp;</type>
      <name>operator=</name>
      <anchorfile>classMagnum_1_1Platform_1_1WindowlessEglApplication.html</anchorfile>
      <anchor>ae7402d648aee764db7154d83ac87a438</anchor>
      <arglist>(const WindowlessEglApplication &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>WindowlessEglApplication &amp;</type>
      <name>operator=</name>
      <anchorfile>classMagnum_1_1Platform_1_1WindowlessEglApplication.html</anchorfile>
      <anchor>a0510988aa4c7ba06fbed2349694201ba</anchor>
      <arglist>(WindowlessEglApplication &amp;&amp;)=delete</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual int</type>
      <name>exec</name>
      <anchorfile>classMagnum_1_1Platform_1_1WindowlessEglApplication.html</anchorfile>
      <anchor>a248fd3bacdd697671c549cefa5ef3832</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>createContext</name>
      <anchorfile>classMagnum_1_1Platform_1_1WindowlessEglApplication.html</anchorfile>
      <anchor>a72984bdf2c6dac2f0e68c469d28c46dc</anchor>
      <arglist>(const Configuration &amp;configuration=Configuration())</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>tryCreateContext</name>
      <anchorfile>classMagnum_1_1Platform_1_1WindowlessEglApplication.html</anchorfile>
      <anchor>a9e023637c96818fc8bae26a0265f3b86</anchor>
      <arglist>(const Configuration &amp;configuration)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Magnum::Platform::WindowlessEglApplication::Arguments</name>
    <filename>structMagnum_1_1Platform_1_1WindowlessEglApplication_1_1Arguments.html</filename>
    <member kind="function">
      <type>constexpr</type>
      <name>Arguments</name>
      <anchorfile>structMagnum_1_1Platform_1_1WindowlessEglApplication_1_1Arguments.html</anchorfile>
      <anchor>ad7736f997a2781eddb3ab17de9e87019</anchor>
      <arglist>(int &amp;argc, char **argv) noexcept</arglist>
    </member>
    <member kind="variable">
      <type>int &amp;</type>
      <name>argc</name>
      <anchorfile>structMagnum_1_1Platform_1_1WindowlessEglApplication_1_1Arguments.html</anchorfile>
      <anchor>a0809b0cb33cbfb2af99f9411dcbf8259</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char **</type>
      <name>argv</name>
      <anchorfile>structMagnum_1_1Platform_1_1WindowlessEglApplication_1_1Arguments.html</anchorfile>
      <anchor>afaa841ebaa96a3252b5f77e6c3e8a81b</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Magnum::Platform::WindowlessEglContext</name>
    <filename>classMagnum_1_1Platform_1_1WindowlessEglContext.html</filename>
    <class kind="class">Magnum::Platform::WindowlessEglContext::Configuration</class>
    <member kind="function">
      <type></type>
      <name>WindowlessEglContext</name>
      <anchorfile>classMagnum_1_1Platform_1_1WindowlessEglContext.html</anchorfile>
      <anchor>ae6eac068ac5900f687224cff83dfe13f</anchor>
      <arglist>(const Configuration &amp;configuration, Context *context=nullptr)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WindowlessEglContext</name>
      <anchorfile>classMagnum_1_1Platform_1_1WindowlessEglContext.html</anchorfile>
      <anchor>ad5543d5a84f844e3190e8e7f1b0ca043</anchor>
      <arglist>(NoCreateT)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WindowlessEglContext</name>
      <anchorfile>classMagnum_1_1Platform_1_1WindowlessEglContext.html</anchorfile>
      <anchor>a3285885bb6e6780e44f25fe9c8ff3999</anchor>
      <arglist>(const WindowlessEglContext &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WindowlessEglContext</name>
      <anchorfile>classMagnum_1_1Platform_1_1WindowlessEglContext.html</anchorfile>
      <anchor>a97dd19135f367c72b9f59103a9727895</anchor>
      <arglist>(WindowlessEglContext &amp;&amp;other)</arglist>
    </member>
    <member kind="function">
      <type>WindowlessEglContext &amp;</type>
      <name>operator=</name>
      <anchorfile>classMagnum_1_1Platform_1_1WindowlessEglContext.html</anchorfile>
      <anchor>a2607c1eff707c119a8b14e8ae26e6ad6</anchor>
      <arglist>(const WindowlessEglContext &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>WindowlessEglContext &amp;</type>
      <name>operator=</name>
      <anchorfile>classMagnum_1_1Platform_1_1WindowlessEglContext.html</anchorfile>
      <anchor>a5e66ccc4ebea2d776f33427f885ae76b</anchor>
      <arglist>(WindowlessEglContext &amp;&amp;other)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~WindowlessEglContext</name>
      <anchorfile>classMagnum_1_1Platform_1_1WindowlessEglContext.html</anchorfile>
      <anchor>ab96a6058a03733c6657e03ad139b83c5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isCreated</name>
      <anchorfile>classMagnum_1_1Platform_1_1WindowlessEglContext.html</anchorfile>
      <anchor>aece52da60245d290b4337744b8fc9fde</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>makeCurrent</name>
      <anchorfile>classMagnum_1_1Platform_1_1WindowlessEglContext.html</anchorfile>
      <anchor>a47ef8bb6258d9dc60d52c2125de0a620</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Magnum::Platform::WindowlessEglContext::Configuration</name>
    <filename>classMagnum_1_1Platform_1_1WindowlessEglContext_1_1Configuration.html</filename>
    <member kind="enumeration">
      <type></type>
      <name>Flag</name>
      <anchorfile>classMagnum_1_1Platform_1_1WindowlessEglContext_1_1Configuration.html</anchorfile>
      <anchor>aa6e4dc0b822ebc5c3488170fbd170e1a</anchor>
      <arglist></arglist>
      <enumvalue file="classMagnum_1_1Platform_1_1WindowlessEglContext_1_1Configuration.html" anchor="aa6e4dc0b822ebc5c3488170fbd170e1aaa603905470e2a5b8c13e96b579ef0dba">Debug</enumvalue>
    </member>
    <member kind="typedef">
      <type>Containers::EnumSet&lt; Flag &gt;</type>
      <name>Flags</name>
      <anchorfile>classMagnum_1_1Platform_1_1WindowlessEglContext_1_1Configuration.html</anchorfile>
      <anchor>a9008f831919548647a1fe5e087b6657a</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>Flags</type>
      <name>flags</name>
      <anchorfile>classMagnum_1_1Platform_1_1WindowlessEglContext_1_1Configuration.html</anchorfile>
      <anchor>a7544e6f29278903b0ce284c988258296</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Configuration &amp;</type>
      <name>setFlags</name>
      <anchorfile>classMagnum_1_1Platform_1_1WindowlessEglContext_1_1Configuration.html</anchorfile>
      <anchor>a9b4d1483075b7e45a23f781c65c73070</anchor>
      <arglist>(Flags flags)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Magnum::Platform::WindowlessGlxApplication</name>
    <filename>classMagnum_1_1Platform_1_1WindowlessGlxApplication.html</filename>
    <class kind="struct">Magnum::Platform::WindowlessGlxApplication::Arguments</class>
    <member kind="typedef">
      <type>WindowlessGlxContext::Configuration</type>
      <name>Configuration</name>
      <anchorfile>classMagnum_1_1Platform_1_1WindowlessGlxApplication.html</anchorfile>
      <anchor>a2cf861642117601b928f9fa9e92a6999</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WindowlessGlxApplication</name>
      <anchorfile>classMagnum_1_1Platform_1_1WindowlessGlxApplication.html</anchorfile>
      <anchor>ab0807c4ef03ef235a6a77570a4832890</anchor>
      <arglist>(const Arguments &amp;arguments, const Configuration &amp;configuration=Configuration())</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WindowlessGlxApplication</name>
      <anchorfile>classMagnum_1_1Platform_1_1WindowlessGlxApplication.html</anchorfile>
      <anchor>a3d161bf8dbcf4c44c5cb2a4a9a7bfd30</anchor>
      <arglist>(const Arguments &amp;arguments, NoCreateT)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WindowlessGlxApplication</name>
      <anchorfile>classMagnum_1_1Platform_1_1WindowlessGlxApplication.html</anchorfile>
      <anchor>a31b1fc73901686bfe010270dcc797c50</anchor>
      <arglist>(const Arguments &amp;arguments, std::nullptr_t)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WindowlessGlxApplication</name>
      <anchorfile>classMagnum_1_1Platform_1_1WindowlessGlxApplication.html</anchorfile>
      <anchor>af7a066ca26d4dc1bead3b5f72c9be80a</anchor>
      <arglist>(const WindowlessGlxApplication &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WindowlessGlxApplication</name>
      <anchorfile>classMagnum_1_1Platform_1_1WindowlessGlxApplication.html</anchorfile>
      <anchor>a9ff29722633201400bc56d7be9708f1c</anchor>
      <arglist>(WindowlessGlxApplication &amp;&amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>WindowlessGlxApplication &amp;</type>
      <name>operator=</name>
      <anchorfile>classMagnum_1_1Platform_1_1WindowlessGlxApplication.html</anchorfile>
      <anchor>a738682711607e0a1a13098f2224ad930</anchor>
      <arglist>(const WindowlessGlxApplication &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>WindowlessGlxApplication &amp;</type>
      <name>operator=</name>
      <anchorfile>classMagnum_1_1Platform_1_1WindowlessGlxApplication.html</anchorfile>
      <anchor>ac4c8046dca69bc76c17178f39d6d354e</anchor>
      <arglist>(WindowlessGlxApplication &amp;&amp;)=delete</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual int</type>
      <name>exec</name>
      <anchorfile>classMagnum_1_1Platform_1_1WindowlessGlxApplication.html</anchorfile>
      <anchor>a2e6bd6d97129a46192f86a79fa7e6698</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>createContext</name>
      <anchorfile>classMagnum_1_1Platform_1_1WindowlessGlxApplication.html</anchorfile>
      <anchor>aa93b3136a911a4f2fa91a104ba857dad</anchor>
      <arglist>(const Configuration &amp;configuration=Configuration())</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>tryCreateContext</name>
      <anchorfile>classMagnum_1_1Platform_1_1WindowlessGlxApplication.html</anchorfile>
      <anchor>a91443b4db4ce576c5ddbf534e08eab9f</anchor>
      <arglist>(const Configuration &amp;configuration)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Magnum::Platform::WindowlessGlxApplication::Arguments</name>
    <filename>structMagnum_1_1Platform_1_1WindowlessGlxApplication_1_1Arguments.html</filename>
    <member kind="function">
      <type>constexpr</type>
      <name>Arguments</name>
      <anchorfile>structMagnum_1_1Platform_1_1WindowlessGlxApplication_1_1Arguments.html</anchorfile>
      <anchor>afb45829eabfce26d8a0eb91f53dc6558</anchor>
      <arglist>(int &amp;argc, char **argv) noexcept</arglist>
    </member>
    <member kind="variable">
      <type>int &amp;</type>
      <name>argc</name>
      <anchorfile>structMagnum_1_1Platform_1_1WindowlessGlxApplication_1_1Arguments.html</anchorfile>
      <anchor>a0b586e2c013454829832321777b66a46</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char **</type>
      <name>argv</name>
      <anchorfile>structMagnum_1_1Platform_1_1WindowlessGlxApplication_1_1Arguments.html</anchorfile>
      <anchor>aac443fa259cfb1355c37256c2f2662d9</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Magnum::Platform::WindowlessGlxContext</name>
    <filename>classMagnum_1_1Platform_1_1WindowlessGlxContext.html</filename>
    <class kind="class">Magnum::Platform::WindowlessGlxContext::Configuration</class>
    <member kind="function">
      <type></type>
      <name>WindowlessGlxContext</name>
      <anchorfile>classMagnum_1_1Platform_1_1WindowlessGlxContext.html</anchorfile>
      <anchor>a3cb04567f306bec59fce20131ef6811e</anchor>
      <arglist>(const Configuration &amp;configuration, Context *context=nullptr)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WindowlessGlxContext</name>
      <anchorfile>classMagnum_1_1Platform_1_1WindowlessGlxContext.html</anchorfile>
      <anchor>a2dbde18f8784e89f9073793191062fc1</anchor>
      <arglist>(NoCreateT)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WindowlessGlxContext</name>
      <anchorfile>classMagnum_1_1Platform_1_1WindowlessGlxContext.html</anchorfile>
      <anchor>ac5ebc9aaae4c14d73626f7901e78ae3b</anchor>
      <arglist>(const WindowlessGlxContext &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WindowlessGlxContext</name>
      <anchorfile>classMagnum_1_1Platform_1_1WindowlessGlxContext.html</anchorfile>
      <anchor>a1cc2a00bc29494ae282b2072e993eaf8</anchor>
      <arglist>(WindowlessGlxContext &amp;&amp;other)</arglist>
    </member>
    <member kind="function">
      <type>WindowlessGlxContext &amp;</type>
      <name>operator=</name>
      <anchorfile>classMagnum_1_1Platform_1_1WindowlessGlxContext.html</anchorfile>
      <anchor>a88be6fc7a6f3e81c68c125466bf62c63</anchor>
      <arglist>(const WindowlessGlxContext &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>WindowlessGlxContext &amp;</type>
      <name>operator=</name>
      <anchorfile>classMagnum_1_1Platform_1_1WindowlessGlxContext.html</anchorfile>
      <anchor>ae32460940068326ed56cd93cd0a9959a</anchor>
      <arglist>(WindowlessGlxContext &amp;&amp;other)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~WindowlessGlxContext</name>
      <anchorfile>classMagnum_1_1Platform_1_1WindowlessGlxContext.html</anchorfile>
      <anchor>adaa8595f6382f26b83877fb61c20e5f1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isCreated</name>
      <anchorfile>classMagnum_1_1Platform_1_1WindowlessGlxContext.html</anchorfile>
      <anchor>a23f6d6ba0267f2e3ad083b6c8f738000</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>makeCurrent</name>
      <anchorfile>classMagnum_1_1Platform_1_1WindowlessGlxContext.html</anchorfile>
      <anchor>a8a7c8906d17f06e7138cb64ffcc6000f</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Magnum::Platform::WindowlessGlxContext::Configuration</name>
    <filename>classMagnum_1_1Platform_1_1WindowlessGlxContext_1_1Configuration.html</filename>
    <member kind="enumeration">
      <type></type>
      <name>Flag</name>
      <anchorfile>classMagnum_1_1Platform_1_1WindowlessGlxContext_1_1Configuration.html</anchorfile>
      <anchor>a20dbc9e0b4c6595a33c9fbb45c1fa31f</anchor>
      <arglist></arglist>
      <enumvalue file="classMagnum_1_1Platform_1_1WindowlessGlxContext_1_1Configuration.html" anchor="a20dbc9e0b4c6595a33c9fbb45c1fa31faa603905470e2a5b8c13e96b579ef0dba">Debug</enumvalue>
    </member>
    <member kind="typedef">
      <type>Containers::EnumSet&lt; Flag &gt;</type>
      <name>Flags</name>
      <anchorfile>classMagnum_1_1Platform_1_1WindowlessGlxContext_1_1Configuration.html</anchorfile>
      <anchor>a5dd923446990e3feeff013b60bfc4806</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>Flags</type>
      <name>flags</name>
      <anchorfile>classMagnum_1_1Platform_1_1WindowlessGlxContext_1_1Configuration.html</anchorfile>
      <anchor>aaa10080586e29de578450e07be72f76d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Configuration &amp;</type>
      <name>setFlags</name>
      <anchorfile>classMagnum_1_1Platform_1_1WindowlessGlxContext_1_1Configuration.html</anchorfile>
      <anchor>a3ee3937a22361d821c3fc9b541931ea0</anchor>
      <arglist>(Flags flags)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Magnum::Platform::WindowlessIosApplication</name>
    <filename>classMagnum_1_1Platform_1_1WindowlessIosApplication.html</filename>
    <class kind="struct">Magnum::Platform::WindowlessIosApplication::Arguments</class>
    <member kind="typedef">
      <type>WindowlessIosContext::Configuration</type>
      <name>Configuration</name>
      <anchorfile>classMagnum_1_1Platform_1_1WindowlessIosApplication.html</anchorfile>
      <anchor>a1b15cd2528985a7306585ce5a09d2fba</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WindowlessIosApplication</name>
      <anchorfile>classMagnum_1_1Platform_1_1WindowlessIosApplication.html</anchorfile>
      <anchor>ac4690c600a36c9dc770a756d020f5f7e</anchor>
      <arglist>(const Arguments &amp;arguments, const Configuration &amp;configuration=Configuration())</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WindowlessIosApplication</name>
      <anchorfile>classMagnum_1_1Platform_1_1WindowlessIosApplication.html</anchorfile>
      <anchor>a74da505407174f8dcaa2562f5d95f944</anchor>
      <arglist>(const Arguments &amp;arguments, NoCreateT)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WindowlessIosApplication</name>
      <anchorfile>classMagnum_1_1Platform_1_1WindowlessIosApplication.html</anchorfile>
      <anchor>ac6a87ed2c5b257e3f620951780fad25a</anchor>
      <arglist>(const Arguments &amp;arguments, std::nullptr_t)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WindowlessIosApplication</name>
      <anchorfile>classMagnum_1_1Platform_1_1WindowlessIosApplication.html</anchorfile>
      <anchor>afa857eca574f94b508aba7c3dc711a75</anchor>
      <arglist>(const WindowlessIosApplication &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WindowlessIosApplication</name>
      <anchorfile>classMagnum_1_1Platform_1_1WindowlessIosApplication.html</anchorfile>
      <anchor>ab282ab731aaed8dc1fb409f31137f201</anchor>
      <arglist>(WindowlessIosApplication &amp;&amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>WindowlessIosApplication &amp;</type>
      <name>operator=</name>
      <anchorfile>classMagnum_1_1Platform_1_1WindowlessIosApplication.html</anchorfile>
      <anchor>a9d8da663b37f2b4c4e08971a580135c7</anchor>
      <arglist>(const WindowlessIosApplication &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>WindowlessIosApplication &amp;</type>
      <name>operator=</name>
      <anchorfile>classMagnum_1_1Platform_1_1WindowlessIosApplication.html</anchorfile>
      <anchor>a630ae0c5ba68c8c5dd51684775c50a84</anchor>
      <arglist>(WindowlessIosApplication &amp;&amp;)=delete</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual int</type>
      <name>exec</name>
      <anchorfile>classMagnum_1_1Platform_1_1WindowlessIosApplication.html</anchorfile>
      <anchor>a8dc6e1987cdd379d9bb2eb21654becc2</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>createContext</name>
      <anchorfile>classMagnum_1_1Platform_1_1WindowlessIosApplication.html</anchorfile>
      <anchor>afca9d718f131c914c3be45fea40fbb9f</anchor>
      <arglist>(const Configuration &amp;configuration=Configuration())</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>tryCreateContext</name>
      <anchorfile>classMagnum_1_1Platform_1_1WindowlessIosApplication.html</anchorfile>
      <anchor>a0b509ffbff615b30d85d67a5dddf5439</anchor>
      <arglist>(const Configuration &amp;configuration)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Magnum::Platform::WindowlessIosApplication::Arguments</name>
    <filename>structMagnum_1_1Platform_1_1WindowlessIosApplication_1_1Arguments.html</filename>
    <member kind="function">
      <type>constexpr</type>
      <name>Arguments</name>
      <anchorfile>structMagnum_1_1Platform_1_1WindowlessIosApplication_1_1Arguments.html</anchorfile>
      <anchor>a1b0ab960dbc233b0aa897d2fd0d454a7</anchor>
      <arglist>(int &amp;argc, char **argv) noexcept</arglist>
    </member>
    <member kind="variable">
      <type>int &amp;</type>
      <name>argc</name>
      <anchorfile>structMagnum_1_1Platform_1_1WindowlessIosApplication_1_1Arguments.html</anchorfile>
      <anchor>acfa62220dc1ee408fd9adb275e8b8c5e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char **</type>
      <name>argv</name>
      <anchorfile>structMagnum_1_1Platform_1_1WindowlessIosApplication_1_1Arguments.html</anchorfile>
      <anchor>a773d7ab5ba7202a39f1ffb4534364ff1</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Magnum::Platform::WindowlessIosContext</name>
    <filename>classMagnum_1_1Platform_1_1WindowlessIosContext.html</filename>
    <class kind="class">Magnum::Platform::WindowlessIosContext::Configuration</class>
    <member kind="function">
      <type></type>
      <name>WindowlessIosContext</name>
      <anchorfile>classMagnum_1_1Platform_1_1WindowlessIosContext.html</anchorfile>
      <anchor>ac35e0c699f96bc6a53455fb637424e9b</anchor>
      <arglist>(const Configuration &amp;configuration, Context *context=nullptr)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WindowlessIosContext</name>
      <anchorfile>classMagnum_1_1Platform_1_1WindowlessIosContext.html</anchorfile>
      <anchor>aba59533bfd54e0767e6c57a245b685a6</anchor>
      <arglist>(NoCreateT)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WindowlessIosContext</name>
      <anchorfile>classMagnum_1_1Platform_1_1WindowlessIosContext.html</anchorfile>
      <anchor>a8a210f1defafe46395d17d30c52d6f01</anchor>
      <arglist>(const WindowlessIosContext &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WindowlessIosContext</name>
      <anchorfile>classMagnum_1_1Platform_1_1WindowlessIosContext.html</anchorfile>
      <anchor>a505312584dd4854513522be2e9442150</anchor>
      <arglist>(WindowlessIosContext &amp;&amp;other)</arglist>
    </member>
    <member kind="function">
      <type>WindowlessIosContext &amp;</type>
      <name>operator=</name>
      <anchorfile>classMagnum_1_1Platform_1_1WindowlessIosContext.html</anchorfile>
      <anchor>abcbf9ae00c0fa86fcbc4f4d89d5f092a</anchor>
      <arglist>(const WindowlessIosContext &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>WindowlessIosContext &amp;</type>
      <name>operator=</name>
      <anchorfile>classMagnum_1_1Platform_1_1WindowlessIosContext.html</anchorfile>
      <anchor>a7942dffe7bdaacc674df308b3c3867fd</anchor>
      <arglist>(WindowlessIosContext &amp;&amp;other)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~WindowlessIosContext</name>
      <anchorfile>classMagnum_1_1Platform_1_1WindowlessIosContext.html</anchorfile>
      <anchor>a18abca4ee3879a90c2395c4614e60644</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isCreated</name>
      <anchorfile>classMagnum_1_1Platform_1_1WindowlessIosContext.html</anchorfile>
      <anchor>afd18ad7c7f7fe689f990d59e54fdc4b8</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>makeCurrent</name>
      <anchorfile>classMagnum_1_1Platform_1_1WindowlessIosContext.html</anchorfile>
      <anchor>a62252c4e7b8d20baef75d15d4977d106</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Magnum::Platform::WindowlessIosContext::Configuration</name>
    <filename>classMagnum_1_1Platform_1_1WindowlessIosContext_1_1Configuration.html</filename>
  </compound>
  <compound kind="class">
    <name>Magnum::Platform::WindowlessWglApplication</name>
    <filename>classMagnum_1_1Platform_1_1WindowlessWglApplication.html</filename>
    <class kind="struct">Magnum::Platform::WindowlessWglApplication::Arguments</class>
    <member kind="typedef">
      <type>WindowlessWglContext::Configuration</type>
      <name>Configuration</name>
      <anchorfile>classMagnum_1_1Platform_1_1WindowlessWglApplication.html</anchorfile>
      <anchor>a749ebd05ffbf5e063074196efa1c8c23</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WindowlessWglApplication</name>
      <anchorfile>classMagnum_1_1Platform_1_1WindowlessWglApplication.html</anchorfile>
      <anchor>a5a28493128d18880e9a41224f9755f3c</anchor>
      <arglist>(const Arguments &amp;arguments, const Configuration &amp;configuration=Configuration())</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WindowlessWglApplication</name>
      <anchorfile>classMagnum_1_1Platform_1_1WindowlessWglApplication.html</anchorfile>
      <anchor>abcce35f3676ff09b1f630ef0e301915e</anchor>
      <arglist>(const Arguments &amp;arguments, NoCreateT)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WindowlessWglApplication</name>
      <anchorfile>classMagnum_1_1Platform_1_1WindowlessWglApplication.html</anchorfile>
      <anchor>a5366e5822e0b45bd4c8b3fe05272a1c6</anchor>
      <arglist>(const Arguments &amp;arguments, std::nullptr_t)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WindowlessWglApplication</name>
      <anchorfile>classMagnum_1_1Platform_1_1WindowlessWglApplication.html</anchorfile>
      <anchor>a179f40b70993d043816f06a42cdfb22e</anchor>
      <arglist>(const WindowlessWglApplication &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WindowlessWglApplication</name>
      <anchorfile>classMagnum_1_1Platform_1_1WindowlessWglApplication.html</anchorfile>
      <anchor>a464c4a613d5d3d0c22875ce85961122a</anchor>
      <arglist>(WindowlessWglApplication &amp;&amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>WindowlessWglApplication &amp;</type>
      <name>operator=</name>
      <anchorfile>classMagnum_1_1Platform_1_1WindowlessWglApplication.html</anchorfile>
      <anchor>a784d493cc00f7817515b876d4bc099c2</anchor>
      <arglist>(const WindowlessWglApplication &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>WindowlessWglApplication &amp;</type>
      <name>operator=</name>
      <anchorfile>classMagnum_1_1Platform_1_1WindowlessWglApplication.html</anchorfile>
      <anchor>aec7c60abec550810adb2d46aa077c03d</anchor>
      <arglist>(WindowlessWglApplication &amp;&amp;)=delete</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual int</type>
      <name>exec</name>
      <anchorfile>classMagnum_1_1Platform_1_1WindowlessWglApplication.html</anchorfile>
      <anchor>a6a6d96f8022db194c043dc6825551723</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>createContext</name>
      <anchorfile>classMagnum_1_1Platform_1_1WindowlessWglApplication.html</anchorfile>
      <anchor>a2f57ee44605db24c87cbcae3885d0cd4</anchor>
      <arglist>(const Configuration &amp;configuration=Configuration())</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>tryCreateContext</name>
      <anchorfile>classMagnum_1_1Platform_1_1WindowlessWglApplication.html</anchorfile>
      <anchor>a18429f31ca98d129e85e20cf5bfbf544</anchor>
      <arglist>(const Configuration &amp;configuration)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Magnum::Platform::WindowlessWglApplication::Arguments</name>
    <filename>structMagnum_1_1Platform_1_1WindowlessWglApplication_1_1Arguments.html</filename>
    <member kind="function">
      <type>constexpr</type>
      <name>Arguments</name>
      <anchorfile>structMagnum_1_1Platform_1_1WindowlessWglApplication_1_1Arguments.html</anchorfile>
      <anchor>a2becf6415cfe4927d5d5ae4f00f00078</anchor>
      <arglist>(int &amp;argc, char **argv) noexcept</arglist>
    </member>
    <member kind="variable">
      <type>int &amp;</type>
      <name>argc</name>
      <anchorfile>structMagnum_1_1Platform_1_1WindowlessWglApplication_1_1Arguments.html</anchorfile>
      <anchor>a9d343d4da5a4f03d56fa53ddb1e7d3d3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char **</type>
      <name>argv</name>
      <anchorfile>structMagnum_1_1Platform_1_1WindowlessWglApplication_1_1Arguments.html</anchorfile>
      <anchor>adb8be39f1115bf1819cfd9082f7284a5</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Magnum::Platform::WindowlessWglContext</name>
    <filename>classMagnum_1_1Platform_1_1WindowlessWglContext.html</filename>
    <class kind="class">Magnum::Platform::WindowlessWglContext::Configuration</class>
    <member kind="function">
      <type></type>
      <name>WindowlessWglContext</name>
      <anchorfile>classMagnum_1_1Platform_1_1WindowlessWglContext.html</anchorfile>
      <anchor>a30fe4560073d55804bfbfdb3e6b64cd0</anchor>
      <arglist>(const Configuration &amp;configuration, Context *context=nullptr)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WindowlessWglContext</name>
      <anchorfile>classMagnum_1_1Platform_1_1WindowlessWglContext.html</anchorfile>
      <anchor>afbb48451bf9fdbccfe87d57a6c16778d</anchor>
      <arglist>(NoCreateT)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WindowlessWglContext</name>
      <anchorfile>classMagnum_1_1Platform_1_1WindowlessWglContext.html</anchorfile>
      <anchor>a2b85fef0d38f78e0b2073f08eadc0e8e</anchor>
      <arglist>(const WindowlessWglContext &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WindowlessWglContext</name>
      <anchorfile>classMagnum_1_1Platform_1_1WindowlessWglContext.html</anchorfile>
      <anchor>abbdb8365e3a0c54d6af62b6a56103327</anchor>
      <arglist>(WindowlessWglContext &amp;&amp;other)</arglist>
    </member>
    <member kind="function">
      <type>WindowlessWglContext &amp;</type>
      <name>operator=</name>
      <anchorfile>classMagnum_1_1Platform_1_1WindowlessWglContext.html</anchorfile>
      <anchor>a386ff19280c6ee249f856168f37844fa</anchor>
      <arglist>(const WindowlessWglContext &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>WindowlessWglContext &amp;</type>
      <name>operator=</name>
      <anchorfile>classMagnum_1_1Platform_1_1WindowlessWglContext.html</anchorfile>
      <anchor>add03b4fbd95703729fa66fc5ae666656</anchor>
      <arglist>(WindowlessWglContext &amp;&amp;other)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~WindowlessWglContext</name>
      <anchorfile>classMagnum_1_1Platform_1_1WindowlessWglContext.html</anchorfile>
      <anchor>ac712252dae607d3ee6115493c7fd8989</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isCreated</name>
      <anchorfile>classMagnum_1_1Platform_1_1WindowlessWglContext.html</anchorfile>
      <anchor>a706d1d4a40d9d5c58d64e5f6a4539625</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>makeCurrent</name>
      <anchorfile>classMagnum_1_1Platform_1_1WindowlessWglContext.html</anchorfile>
      <anchor>a935c3dae4f7ad41b632f05c9831b6324</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Magnum::Platform::WindowlessWglContext::Configuration</name>
    <filename>classMagnum_1_1Platform_1_1WindowlessWglContext_1_1Configuration.html</filename>
    <member kind="enumeration">
      <type></type>
      <name>Flag</name>
      <anchorfile>classMagnum_1_1Platform_1_1WindowlessWglContext_1_1Configuration.html</anchorfile>
      <anchor>a5d5156eb3c5fbb51fe8b7aaf0f205a1e</anchor>
      <arglist></arglist>
      <enumvalue file="classMagnum_1_1Platform_1_1WindowlessWglContext_1_1Configuration.html" anchor="a5d5156eb3c5fbb51fe8b7aaf0f205a1eaa603905470e2a5b8c13e96b579ef0dba">Debug</enumvalue>
    </member>
    <member kind="typedef">
      <type>Containers::EnumSet&lt; Flag &gt;</type>
      <name>Flags</name>
      <anchorfile>classMagnum_1_1Platform_1_1WindowlessWglContext_1_1Configuration.html</anchorfile>
      <anchor>aa42e08d5060849e7442a9deffaa94168</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>Flags</type>
      <name>flags</name>
      <anchorfile>classMagnum_1_1Platform_1_1WindowlessWglContext_1_1Configuration.html</anchorfile>
      <anchor>abd4d1432dab301d2abf32c4d63914a46</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Configuration &amp;</type>
      <name>setFlags</name>
      <anchorfile>classMagnum_1_1Platform_1_1WindowlessWglContext_1_1Configuration.html</anchorfile>
      <anchor>a9b1d1c0a2636905811a160975e461f9f</anchor>
      <arglist>(Flags flags)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Magnum::Platform::WindowlessWindowsEglApplication</name>
    <filename>classMagnum_1_1Platform_1_1WindowlessWindowsEglApplication.html</filename>
    <class kind="struct">Magnum::Platform::WindowlessWindowsEglApplication::Arguments</class>
    <member kind="typedef">
      <type>WindowlessWindowsEglContext::Configuration</type>
      <name>Configuration</name>
      <anchorfile>classMagnum_1_1Platform_1_1WindowlessWindowsEglApplication.html</anchorfile>
      <anchor>ae921584b994f8520d814f514558bd9f2</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WindowlessWindowsEglApplication</name>
      <anchorfile>classMagnum_1_1Platform_1_1WindowlessWindowsEglApplication.html</anchorfile>
      <anchor>aca7cf751001033002242b43e9da609b0</anchor>
      <arglist>(const Arguments &amp;arguments, const Configuration &amp;configuration=Configuration())</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WindowlessWindowsEglApplication</name>
      <anchorfile>classMagnum_1_1Platform_1_1WindowlessWindowsEglApplication.html</anchorfile>
      <anchor>aa1a1ff4caabccec315b7fb9cc51d0e9c</anchor>
      <arglist>(const Arguments &amp;arguments, NoCreateT)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WindowlessWindowsEglApplication</name>
      <anchorfile>classMagnum_1_1Platform_1_1WindowlessWindowsEglApplication.html</anchorfile>
      <anchor>acc474bef94ba63f983b3c80f751e963f</anchor>
      <arglist>(const Arguments &amp;arguments, std::nullptr_t)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WindowlessWindowsEglApplication</name>
      <anchorfile>classMagnum_1_1Platform_1_1WindowlessWindowsEglApplication.html</anchorfile>
      <anchor>afd2ce5cc3045248876ebc666359e29d6</anchor>
      <arglist>(const WindowlessWindowsEglApplication &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WindowlessWindowsEglApplication</name>
      <anchorfile>classMagnum_1_1Platform_1_1WindowlessWindowsEglApplication.html</anchorfile>
      <anchor>af6771c4c4153d655aa53956817860bef</anchor>
      <arglist>(WindowlessWindowsEglApplication &amp;&amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>WindowlessWindowsEglApplication &amp;</type>
      <name>operator=</name>
      <anchorfile>classMagnum_1_1Platform_1_1WindowlessWindowsEglApplication.html</anchorfile>
      <anchor>aa87e9b5f4978f7fe63ad5e5219bb0bc0</anchor>
      <arglist>(const WindowlessWindowsEglApplication &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>WindowlessWindowsEglApplication &amp;</type>
      <name>operator=</name>
      <anchorfile>classMagnum_1_1Platform_1_1WindowlessWindowsEglApplication.html</anchorfile>
      <anchor>ab3a2795340cc55338b8e812ed818992e</anchor>
      <arglist>(WindowlessWindowsEglApplication &amp;&amp;)=delete</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual int</type>
      <name>exec</name>
      <anchorfile>classMagnum_1_1Platform_1_1WindowlessWindowsEglApplication.html</anchorfile>
      <anchor>a2bb730ce7287b37bac9157aa61d012f9</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>createContext</name>
      <anchorfile>classMagnum_1_1Platform_1_1WindowlessWindowsEglApplication.html</anchorfile>
      <anchor>a0a2dbdd3056ab677440bcf30331d1a67</anchor>
      <arglist>(const Configuration &amp;configuration=Configuration())</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>tryCreateContext</name>
      <anchorfile>classMagnum_1_1Platform_1_1WindowlessWindowsEglApplication.html</anchorfile>
      <anchor>a032e40a2e04cae4b468ad19dffbe9011</anchor>
      <arglist>(const Configuration &amp;configuration)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Magnum::Platform::WindowlessWindowsEglApplication::Arguments</name>
    <filename>structMagnum_1_1Platform_1_1WindowlessWindowsEglApplication_1_1Arguments.html</filename>
    <member kind="function">
      <type>constexpr</type>
      <name>Arguments</name>
      <anchorfile>structMagnum_1_1Platform_1_1WindowlessWindowsEglApplication_1_1Arguments.html</anchorfile>
      <anchor>aeac4c49474dae84a7409f1be304b8f9f</anchor>
      <arglist>(int &amp;argc, char **argv) noexcept</arglist>
    </member>
    <member kind="variable">
      <type>int &amp;</type>
      <name>argc</name>
      <anchorfile>structMagnum_1_1Platform_1_1WindowlessWindowsEglApplication_1_1Arguments.html</anchorfile>
      <anchor>a7f881190e6e05b491ec8302f23fe9c3b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char **</type>
      <name>argv</name>
      <anchorfile>structMagnum_1_1Platform_1_1WindowlessWindowsEglApplication_1_1Arguments.html</anchorfile>
      <anchor>a9545a5ca7a8a9bea0a6fdbd16597ec39</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Magnum::Platform::WindowlessWindowsEglContext</name>
    <filename>classMagnum_1_1Platform_1_1WindowlessWindowsEglContext.html</filename>
    <class kind="class">Magnum::Platform::WindowlessWindowsEglContext::Configuration</class>
    <member kind="function">
      <type></type>
      <name>WindowlessWindowsEglContext</name>
      <anchorfile>classMagnum_1_1Platform_1_1WindowlessWindowsEglContext.html</anchorfile>
      <anchor>ab2085c2425bd8c2eef36c2f318c6c7ec</anchor>
      <arglist>(const Configuration &amp;configuration, Context *context=nullptr)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WindowlessWindowsEglContext</name>
      <anchorfile>classMagnum_1_1Platform_1_1WindowlessWindowsEglContext.html</anchorfile>
      <anchor>a4c4156c0a46ea313670882cb4a487721</anchor>
      <arglist>(NoCreateT)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WindowlessWindowsEglContext</name>
      <anchorfile>classMagnum_1_1Platform_1_1WindowlessWindowsEglContext.html</anchorfile>
      <anchor>a52fb351ee6d7407968537584c1277a63</anchor>
      <arglist>(const WindowlessWindowsEglContext &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WindowlessWindowsEglContext</name>
      <anchorfile>classMagnum_1_1Platform_1_1WindowlessWindowsEglContext.html</anchorfile>
      <anchor>af9a270952ae256700335ca87f0929eb3</anchor>
      <arglist>(WindowlessWindowsEglContext &amp;&amp;other)</arglist>
    </member>
    <member kind="function">
      <type>WindowlessWindowsEglContext &amp;</type>
      <name>operator=</name>
      <anchorfile>classMagnum_1_1Platform_1_1WindowlessWindowsEglContext.html</anchorfile>
      <anchor>a6b4055f71d074473cd9772dd662bf0cd</anchor>
      <arglist>(const WindowlessWindowsEglContext &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>WindowlessWindowsEglContext &amp;</type>
      <name>operator=</name>
      <anchorfile>classMagnum_1_1Platform_1_1WindowlessWindowsEglContext.html</anchorfile>
      <anchor>ab9b7e2a89f77602022a3740394039fcc</anchor>
      <arglist>(WindowlessWindowsEglContext &amp;&amp;other)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~WindowlessWindowsEglContext</name>
      <anchorfile>classMagnum_1_1Platform_1_1WindowlessWindowsEglContext.html</anchorfile>
      <anchor>a498ecf1246e32f7839b8db566ce064a3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isCreated</name>
      <anchorfile>classMagnum_1_1Platform_1_1WindowlessWindowsEglContext.html</anchorfile>
      <anchor>a3ccb990c19651bd7599992077d8e9337</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>makeCurrent</name>
      <anchorfile>classMagnum_1_1Platform_1_1WindowlessWindowsEglContext.html</anchorfile>
      <anchor>a2f9ba6668d9de469a34046f42caed601</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Magnum::Platform::WindowlessWindowsEglContext::Configuration</name>
    <filename>classMagnum_1_1Platform_1_1WindowlessWindowsEglContext_1_1Configuration.html</filename>
    <member kind="enumeration">
      <type></type>
      <name>Flag</name>
      <anchorfile>classMagnum_1_1Platform_1_1WindowlessWindowsEglContext_1_1Configuration.html</anchorfile>
      <anchor>a6e71606831c8ab217c747df35b76ffdb</anchor>
      <arglist></arglist>
      <enumvalue file="classMagnum_1_1Platform_1_1WindowlessWindowsEglContext_1_1Configuration.html" anchor="a6e71606831c8ab217c747df35b76ffdbaa603905470e2a5b8c13e96b579ef0dba">Debug</enumvalue>
    </member>
    <member kind="typedef">
      <type>Containers::EnumSet&lt; Flag &gt;</type>
      <name>Flags</name>
      <anchorfile>classMagnum_1_1Platform_1_1WindowlessWindowsEglContext_1_1Configuration.html</anchorfile>
      <anchor>aa357dcbe96009ec2fadb42adb0aa580d</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>Flags</type>
      <name>flags</name>
      <anchorfile>classMagnum_1_1Platform_1_1WindowlessWindowsEglContext_1_1Configuration.html</anchorfile>
      <anchor>a885f37ac160bccd93ba8cc4e3c2f59b5</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Configuration &amp;</type>
      <name>setFlags</name>
      <anchorfile>classMagnum_1_1Platform_1_1WindowlessWindowsEglContext_1_1Configuration.html</anchorfile>
      <anchor>a0104cc8d6c540fe501b80f09a6d8bf50</anchor>
      <arglist>(Flags flags)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Magnum::Platform::XEglApplication</name>
    <filename>classMagnum_1_1Platform_1_1XEglApplication.html</filename>
    <base>Magnum::Platform::AbstractXApplication</base>
    <member kind="function">
      <type></type>
      <name>XEglApplication</name>
      <anchorfile>classMagnum_1_1Platform_1_1XEglApplication.html</anchorfile>
      <anchor>ae946a150cccb500813a1d1753fba1a84</anchor>
      <arglist>(const Arguments &amp;arguments, const Configuration &amp;configuration=Configuration())</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>XEglApplication</name>
      <anchorfile>classMagnum_1_1Platform_1_1XEglApplication.html</anchorfile>
      <anchor>ad2b5c9e06ed9df1c66288409e3074faf</anchor>
      <arglist>(const Arguments &amp;arguments, NoCreateT)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>XEglApplication</name>
      <anchorfile>classMagnum_1_1Platform_1_1XEglApplication.html</anchorfile>
      <anchor>a06fd8eade92d19690c9c93ec711b2a19</anchor>
      <arglist>(const Arguments &amp;arguments, std::nullptr_t)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Magnum::PrimitiveQuery</name>
    <filename>classMagnum_1_1PrimitiveQuery.html</filename>
    <base>Magnum::AbstractQuery</base>
    <member kind="enumeration">
      <type></type>
      <name>Target</name>
      <anchorfile>classMagnum_1_1PrimitiveQuery.html</anchorfile>
      <anchor>a063323ad6efbbb947a201a7ab4fdebd0</anchor>
      <arglist></arglist>
      <enumvalue file="classMagnum_1_1PrimitiveQuery.html" anchor="a063323ad6efbbb947a201a7ab4fdebd0a4717ea25be625eeec8f5c57d6daad6e8">PrimitivesGenerated</enumvalue>
      <enumvalue file="classMagnum_1_1PrimitiveQuery.html" anchor="a063323ad6efbbb947a201a7ab4fdebd0a0d15d17800f04e17d0f690daccf871a2">TransformFeedbackPrimitivesWritten</enumvalue>
      <enumvalue file="classMagnum_1_1PrimitiveQuery.html" anchor="a063323ad6efbbb947a201a7ab4fdebd0a26d072b157181569387d1360487801fe">TransformFeedbackOverflow</enumvalue>
      <enumvalue file="classMagnum_1_1PrimitiveQuery.html" anchor="a063323ad6efbbb947a201a7ab4fdebd0ab4264ac87ca05d818474c3266164b61a">TransformFeedbackStreamOverflow</enumvalue>
    </member>
    <member kind="function">
      <type></type>
      <name>PrimitiveQuery</name>
      <anchorfile>classMagnum_1_1PrimitiveQuery.html</anchorfile>
      <anchor>ac9b8d56edc1b3ec520686582c873b0d8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PrimitiveQuery</name>
      <anchorfile>classMagnum_1_1PrimitiveQuery.html</anchorfile>
      <anchor>a771126dcf295a9eeb7f7361bad428b88</anchor>
      <arglist>(Target target)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PrimitiveQuery</name>
      <anchorfile>classMagnum_1_1PrimitiveQuery.html</anchorfile>
      <anchor>ae864696c8c131012515b256f8687be47</anchor>
      <arglist>(NoCreateT) noexcept</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>begin</name>
      <anchorfile>classMagnum_1_1PrimitiveQuery.html</anchorfile>
      <anchor>a706dec53f5684b2340441974956b8e91</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>begin</name>
      <anchorfile>classMagnum_1_1PrimitiveQuery.html</anchorfile>
      <anchor>a22c64a25a9df7eda8f07598400c5dd63</anchor>
      <arglist>(Target target)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>begin</name>
      <anchorfile>classMagnum_1_1PrimitiveQuery.html</anchorfile>
      <anchor>afc068c7ac8ecb601d0027b03d4f78a92</anchor>
      <arglist>(UnsignedInt index)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>end</name>
      <anchorfile>classMagnum_1_1PrimitiveQuery.html</anchorfile>
      <anchor>ab2e3ff5fb0349507e38da0fd913204e1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static PrimitiveQuery</type>
      <name>wrap</name>
      <anchorfile>classMagnum_1_1PrimitiveQuery.html</anchorfile>
      <anchor>a17f546a422a90a437be068419cd1e6eb</anchor>
      <arglist>(GLuint id, Target target, ObjectFlags flags={})</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Magnum::Primitives::Capsule2D</name>
    <filename>classMagnum_1_1Primitives_1_1Capsule2D.html</filename>
    <member kind="function" static="yes">
      <type>static Trade::MeshData2D</type>
      <name>wireframe</name>
      <anchorfile>classMagnum_1_1Primitives_1_1Capsule2D.html</anchorfile>
      <anchor>a2360cbaee6510cb6af1913dfa78515c1</anchor>
      <arglist>(UnsignedInt hemisphereRings, UnsignedInt cylinderRings, Float halfLength)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Magnum::Primitives::Capsule3D</name>
    <filename>classMagnum_1_1Primitives_1_1Capsule3D.html</filename>
    <member kind="enumeration">
      <type></type>
      <name>TextureCoords</name>
      <anchorfile>classMagnum_1_1Primitives_1_1Capsule3D.html</anchorfile>
      <anchor>ae07ad8a786bead82d7f579e4289f59c5</anchor>
      <arglist></arglist>
      <enumvalue file="classMagnum_1_1Primitives_1_1Capsule3D.html" anchor="ae07ad8a786bead82d7f579e4289f59c5a32b919d18cfaca89383f6000dcc9c031">Generate</enumvalue>
      <enumvalue file="classMagnum_1_1Primitives_1_1Capsule3D.html" anchor="ae07ad8a786bead82d7f579e4289f59c5a1f3b10de72bb2edffce9811a94d44019">DontGenerate</enumvalue>
    </member>
    <member kind="function" static="yes">
      <type>static Trade::MeshData3D</type>
      <name>solid</name>
      <anchorfile>classMagnum_1_1Primitives_1_1Capsule3D.html</anchorfile>
      <anchor>a1dee7b1b4cc24c0d2c302d7a62d7e84d</anchor>
      <arglist>(UnsignedInt hemisphereRings, UnsignedInt cylinderRings, UnsignedInt segments, Float halfLength, TextureCoords textureCoords=TextureCoords::DontGenerate)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Trade::MeshData3D</type>
      <name>wireframe</name>
      <anchorfile>classMagnum_1_1Primitives_1_1Capsule3D.html</anchorfile>
      <anchor>afbec88ee5b012a5611cd3c3a613eb149</anchor>
      <arglist>(UnsignedInt hemisphereRings, UnsignedInt cylinderRings, UnsignedInt segments, Float halfLength)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Magnum::Primitives::Circle</name>
    <filename>classMagnum_1_1Primitives_1_1Circle.html</filename>
    <member kind="function" static="yes">
      <type>static Trade::MeshData2D</type>
      <name>solid</name>
      <anchorfile>classMagnum_1_1Primitives_1_1Circle.html</anchorfile>
      <anchor>a9cb5722664064b3b0c891a574b0499c1</anchor>
      <arglist>(UnsignedInt segments)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Trade::MeshData2D</type>
      <name>wireframe</name>
      <anchorfile>classMagnum_1_1Primitives_1_1Circle.html</anchorfile>
      <anchor>aeb0e82b343995342206467d9046a190f</anchor>
      <arglist>(UnsignedInt segments)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Magnum::Primitives::Crosshair2D</name>
    <filename>classMagnum_1_1Primitives_1_1Crosshair2D.html</filename>
    <member kind="function" static="yes">
      <type>static Trade::MeshData2D</type>
      <name>wireframe</name>
      <anchorfile>classMagnum_1_1Primitives_1_1Crosshair2D.html</anchorfile>
      <anchor>aa9c5c92d11630d5477c07c366e878560</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Magnum::Primitives::Crosshair3D</name>
    <filename>classMagnum_1_1Primitives_1_1Crosshair3D.html</filename>
    <member kind="function" static="yes">
      <type>static Trade::MeshData3D</type>
      <name>wireframe</name>
      <anchorfile>classMagnum_1_1Primitives_1_1Crosshair3D.html</anchorfile>
      <anchor>ac7b7a54145387674871127693f344893</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Magnum::Primitives::Cube</name>
    <filename>classMagnum_1_1Primitives_1_1Cube.html</filename>
    <member kind="function" static="yes">
      <type>static Trade::MeshData3D</type>
      <name>solid</name>
      <anchorfile>classMagnum_1_1Primitives_1_1Cube.html</anchorfile>
      <anchor>a97f4f6361070b274adde84228e7b6983</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Trade::MeshData3D</type>
      <name>solidStrip</name>
      <anchorfile>classMagnum_1_1Primitives_1_1Cube.html</anchorfile>
      <anchor>a770d4d0c71a07b23dda5885eadc8a5f0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Trade::MeshData3D</type>
      <name>wireframe</name>
      <anchorfile>classMagnum_1_1Primitives_1_1Cube.html</anchorfile>
      <anchor>a45ad646fea50b85d6b9e36485d6c0621</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Magnum::Primitives::Cylinder</name>
    <filename>classMagnum_1_1Primitives_1_1Cylinder.html</filename>
    <member kind="enumeration">
      <type></type>
      <name>Flag</name>
      <anchorfile>classMagnum_1_1Primitives_1_1Cylinder.html</anchorfile>
      <anchor>a8988145432e26684f1568388c9908cac</anchor>
      <arglist></arglist>
      <enumvalue file="classMagnum_1_1Primitives_1_1Cylinder.html" anchor="a8988145432e26684f1568388c9908caca1e6b6c618ee6976c127199d69394b8f5">GenerateTextureCoords</enumvalue>
      <enumvalue file="classMagnum_1_1Primitives_1_1Cylinder.html" anchor="a8988145432e26684f1568388c9908caca2160dc2c41ed697f0eec7dc9c241318c">CapEnds</enumvalue>
    </member>
    <member kind="typedef">
      <type>Containers::EnumSet&lt; Flag &gt;</type>
      <name>Flags</name>
      <anchorfile>classMagnum_1_1Primitives_1_1Cylinder.html</anchorfile>
      <anchor>a748609dbb32a106eb15472bb596b98cb</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Trade::MeshData3D</type>
      <name>solid</name>
      <anchorfile>classMagnum_1_1Primitives_1_1Cylinder.html</anchorfile>
      <anchor>a606576d3f0e3cd6dab2251b462b950ff</anchor>
      <arglist>(UnsignedInt rings, UnsignedInt segments, Float halfLength, Flags flags=Flags())</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Trade::MeshData3D</type>
      <name>wireframe</name>
      <anchorfile>classMagnum_1_1Primitives_1_1Cylinder.html</anchorfile>
      <anchor>a33bc0d8c572498f84c1d561a1f92f956</anchor>
      <arglist>(UnsignedInt rings, UnsignedInt segments, Float halfLength)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Magnum::Primitives::Icosphere</name>
    <filename>classMagnum_1_1Primitives_1_1Icosphere.html</filename>
    <member kind="function" static="yes">
      <type>static Trade::MeshData3D</type>
      <name>solid</name>
      <anchorfile>classMagnum_1_1Primitives_1_1Icosphere.html</anchorfile>
      <anchor>a5ed215781bd64dd41d51adb024bd64b3</anchor>
      <arglist>(UnsignedInt subdivisions)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Magnum::Primitives::Line2D</name>
    <filename>classMagnum_1_1Primitives_1_1Line2D.html</filename>
    <member kind="function" static="yes">
      <type>static Trade::MeshData2D</type>
      <name>wireframe</name>
      <anchorfile>classMagnum_1_1Primitives_1_1Line2D.html</anchorfile>
      <anchor>a313ed20b33ae78462ed3b70e38a596dc</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Magnum::Primitives::Line3D</name>
    <filename>classMagnum_1_1Primitives_1_1Line3D.html</filename>
    <member kind="function" static="yes">
      <type>static Trade::MeshData3D</type>
      <name>wireframe</name>
      <anchorfile>classMagnum_1_1Primitives_1_1Line3D.html</anchorfile>
      <anchor>af98d08b58ec13caaffe492486e669a4a</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Magnum::Primitives::Plane</name>
    <filename>classMagnum_1_1Primitives_1_1Plane.html</filename>
    <member kind="enumeration">
      <type></type>
      <name>TextureCoords</name>
      <anchorfile>classMagnum_1_1Primitives_1_1Plane.html</anchorfile>
      <anchor>a0d0335c809e9d20beb6211ab9f8ff272</anchor>
      <arglist></arglist>
      <enumvalue file="classMagnum_1_1Primitives_1_1Plane.html" anchor="a0d0335c809e9d20beb6211ab9f8ff272a1f3b10de72bb2edffce9811a94d44019">DontGenerate</enumvalue>
      <enumvalue file="classMagnum_1_1Primitives_1_1Plane.html" anchor="a0d0335c809e9d20beb6211ab9f8ff272a32b919d18cfaca89383f6000dcc9c031">Generate</enumvalue>
    </member>
    <member kind="function" static="yes">
      <type>static Trade::MeshData3D</type>
      <name>solid</name>
      <anchorfile>classMagnum_1_1Primitives_1_1Plane.html</anchorfile>
      <anchor>af7ce756fd3ff937526814983803d2f59</anchor>
      <arglist>(TextureCoords textureCoords=TextureCoords::DontGenerate)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Trade::MeshData3D</type>
      <name>wireframe</name>
      <anchorfile>classMagnum_1_1Primitives_1_1Plane.html</anchorfile>
      <anchor>a394711e33e1a309811c6c6c78415b6ba</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Magnum::Primitives::Square</name>
    <filename>classMagnum_1_1Primitives_1_1Square.html</filename>
    <member kind="enumeration">
      <type></type>
      <name>TextureCoords</name>
      <anchorfile>classMagnum_1_1Primitives_1_1Square.html</anchorfile>
      <anchor>a987a8f93e04d41a86ea6380a0534f3e6</anchor>
      <arglist></arglist>
      <enumvalue file="classMagnum_1_1Primitives_1_1Square.html" anchor="a987a8f93e04d41a86ea6380a0534f3e6a1f3b10de72bb2edffce9811a94d44019">DontGenerate</enumvalue>
      <enumvalue file="classMagnum_1_1Primitives_1_1Square.html" anchor="a987a8f93e04d41a86ea6380a0534f3e6a32b919d18cfaca89383f6000dcc9c031">Generate</enumvalue>
    </member>
    <member kind="function" static="yes">
      <type>static Trade::MeshData2D</type>
      <name>solid</name>
      <anchorfile>classMagnum_1_1Primitives_1_1Square.html</anchorfile>
      <anchor>ad1019cbff81ba346e2a76241ad8c9b5e</anchor>
      <arglist>(TextureCoords textureCoords=TextureCoords::DontGenerate)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Trade::MeshData2D</type>
      <name>wireframe</name>
      <anchorfile>classMagnum_1_1Primitives_1_1Square.html</anchorfile>
      <anchor>a87694714b2e07fd02951cc7f6c3e1409</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Magnum::Primitives::UVSphere</name>
    <filename>classMagnum_1_1Primitives_1_1UVSphere.html</filename>
    <member kind="enumeration">
      <type></type>
      <name>TextureCoords</name>
      <anchorfile>classMagnum_1_1Primitives_1_1UVSphere.html</anchorfile>
      <anchor>ae052eaceba799c010685cff0aa0aa27a</anchor>
      <arglist></arglist>
      <enumvalue file="classMagnum_1_1Primitives_1_1UVSphere.html" anchor="ae052eaceba799c010685cff0aa0aa27aa32b919d18cfaca89383f6000dcc9c031">Generate</enumvalue>
      <enumvalue file="classMagnum_1_1Primitives_1_1UVSphere.html" anchor="ae052eaceba799c010685cff0aa0aa27aa1f3b10de72bb2edffce9811a94d44019">DontGenerate</enumvalue>
    </member>
    <member kind="function" static="yes">
      <type>static Trade::MeshData3D</type>
      <name>solid</name>
      <anchorfile>classMagnum_1_1Primitives_1_1UVSphere.html</anchorfile>
      <anchor>a89411abb7c6308711d0f0b92c0ac17a5</anchor>
      <arglist>(UnsignedInt rings, UnsignedInt segments, TextureCoords textureCoords=TextureCoords::DontGenerate)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Trade::MeshData3D</type>
      <name>wireframe</name>
      <anchorfile>classMagnum_1_1Primitives_1_1UVSphere.html</anchorfile>
      <anchor>a5d12bc3124f67b818cc3c83f37e518fd</anchor>
      <arglist>(UnsignedInt rings, UnsignedInt segments)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Magnum::RectangleTexture</name>
    <filename>classMagnum_1_1RectangleTexture.html</filename>
    <base>Magnum::AbstractTexture</base>
    <member kind="function">
      <type></type>
      <name>RectangleTexture</name>
      <anchorfile>classMagnum_1_1RectangleTexture.html</anchorfile>
      <anchor>a149e9b0eba0ea69cb7fef487a11e53ea</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>RectangleTexture</name>
      <anchorfile>classMagnum_1_1RectangleTexture.html</anchorfile>
      <anchor>aa4e49c56f6e1004564b091e3849e9874</anchor>
      <arglist>(NoCreateT) noexcept</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>bindImage</name>
      <anchorfile>classMagnum_1_1RectangleTexture.html</anchorfile>
      <anchor>a16c1c0961518ee547c6fb07ad3962fad</anchor>
      <arglist>(Int imageUnit, ImageAccess access, ImageFormat format)</arglist>
    </member>
    <member kind="function">
      <type>RectangleTexture &amp;</type>
      <name>setMinificationFilter</name>
      <anchorfile>classMagnum_1_1RectangleTexture.html</anchorfile>
      <anchor>a4a2c494ac2b6d8e84be201478e64be27</anchor>
      <arglist>(Sampler::Filter filter)</arglist>
    </member>
    <member kind="function">
      <type>RectangleTexture &amp;</type>
      <name>setMagnificationFilter</name>
      <anchorfile>classMagnum_1_1RectangleTexture.html</anchorfile>
      <anchor>a07f8bf1c77e3485861e1b9e4075bdf09</anchor>
      <arglist>(Sampler::Filter filter)</arglist>
    </member>
    <member kind="function">
      <type>RectangleTexture &amp;</type>
      <name>setWrapping</name>
      <anchorfile>classMagnum_1_1RectangleTexture.html</anchorfile>
      <anchor>a6e1de128ff2aca0564cc726d2257a9ab</anchor>
      <arglist>(const Array2D&lt; Sampler::Wrapping &gt; &amp;wrapping)</arglist>
    </member>
    <member kind="function">
      <type>RectangleTexture &amp;</type>
      <name>setBorderColor</name>
      <anchorfile>classMagnum_1_1RectangleTexture.html</anchorfile>
      <anchor>ad8cbf1429844953bb06614a2e8e99942</anchor>
      <arglist>(const Color4 &amp;color)</arglist>
    </member>
    <member kind="function">
      <type>RectangleTexture &amp;</type>
      <name>setBorderColor</name>
      <anchorfile>classMagnum_1_1RectangleTexture.html</anchorfile>
      <anchor>a5ab8cc725ab29e10e27ae230c2df4bd2</anchor>
      <arglist>(const Vector4ui &amp;color)</arglist>
    </member>
    <member kind="function">
      <type>RectangleTexture &amp;</type>
      <name>setBorderColor</name>
      <anchorfile>classMagnum_1_1RectangleTexture.html</anchorfile>
      <anchor>a9bc01822586c20b7a829c6341714ea1c</anchor>
      <arglist>(const Vector4i &amp;color)</arglist>
    </member>
    <member kind="function">
      <type>RectangleTexture &amp;</type>
      <name>setMaxAnisotropy</name>
      <anchorfile>classMagnum_1_1RectangleTexture.html</anchorfile>
      <anchor>a7c2deeeb841a5101d553387cdb512105</anchor>
      <arglist>(Float anisotropy)</arglist>
    </member>
    <member kind="function">
      <type>RectangleTexture &amp;</type>
      <name>setSRGBDecode</name>
      <anchorfile>classMagnum_1_1RectangleTexture.html</anchorfile>
      <anchor>a2caf19159298ff0796b815460ccbf45d</anchor>
      <arglist>(bool decode)</arglist>
    </member>
    <member kind="function">
      <type>RectangleTexture &amp;</type>
      <name>setSwizzle</name>
      <anchorfile>classMagnum_1_1RectangleTexture.html</anchorfile>
      <anchor>a9a3f257435454e2013ef8f722665da1e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>RectangleTexture &amp;</type>
      <name>setCompareMode</name>
      <anchorfile>classMagnum_1_1RectangleTexture.html</anchorfile>
      <anchor>ac2eaa5f2ddd4bb62d9f6aba2d47bab43</anchor>
      <arglist>(Sampler::CompareMode mode)</arglist>
    </member>
    <member kind="function">
      <type>RectangleTexture &amp;</type>
      <name>setCompareFunction</name>
      <anchorfile>classMagnum_1_1RectangleTexture.html</anchorfile>
      <anchor>a85d3283c124898a56edb09acf6c0d783</anchor>
      <arglist>(Sampler::CompareFunction function)</arglist>
    </member>
    <member kind="function">
      <type>RectangleTexture &amp;</type>
      <name>setDepthStencilMode</name>
      <anchorfile>classMagnum_1_1RectangleTexture.html</anchorfile>
      <anchor>a32ba47e91a137e7c63fbe27c9acd57ca</anchor>
      <arglist>(Sampler::DepthStencilMode mode)</arglist>
    </member>
    <member kind="function">
      <type>RectangleTexture &amp;</type>
      <name>setStorage</name>
      <anchorfile>classMagnum_1_1RectangleTexture.html</anchorfile>
      <anchor>a63e0c5952d93cfb0d14442e47f5253ec</anchor>
      <arglist>(TextureFormat internalFormat, const Vector2i &amp;size)</arglist>
    </member>
    <member kind="function">
      <type>Vector2i</type>
      <name>imageSize</name>
      <anchorfile>classMagnum_1_1RectangleTexture.html</anchorfile>
      <anchor>a86d6e8ba9c360f5b488d0617dd83e8ad</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>image</name>
      <anchorfile>classMagnum_1_1RectangleTexture.html</anchorfile>
      <anchor>adbf9a1d0af7bb77f3907daf93a8bbcbe</anchor>
      <arglist>(Image2D &amp;image)</arglist>
    </member>
    <member kind="function">
      <type>Image2D</type>
      <name>image</name>
      <anchorfile>classMagnum_1_1RectangleTexture.html</anchorfile>
      <anchor>a4c995c8a5f44d2e8c32728cd021f0783</anchor>
      <arglist>(Image2D &amp;&amp;image)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>image</name>
      <anchorfile>classMagnum_1_1RectangleTexture.html</anchorfile>
      <anchor>ab8559e4f456f1f189b9506a408538d87</anchor>
      <arglist>(BufferImage2D &amp;image, BufferUsage usage)</arglist>
    </member>
    <member kind="function">
      <type>BufferImage2D</type>
      <name>image</name>
      <anchorfile>classMagnum_1_1RectangleTexture.html</anchorfile>
      <anchor>a969862ca88d081371b57f1ee65e3b3d4</anchor>
      <arglist>(BufferImage2D &amp;&amp;image, BufferUsage usage)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>compressedImage</name>
      <anchorfile>classMagnum_1_1RectangleTexture.html</anchorfile>
      <anchor>a8d8ee5933e70332070c280cdff87d6b6</anchor>
      <arglist>(CompressedImage2D &amp;image)</arglist>
    </member>
    <member kind="function">
      <type>CompressedImage2D</type>
      <name>compressedImage</name>
      <anchorfile>classMagnum_1_1RectangleTexture.html</anchorfile>
      <anchor>a62419c359a83a402e0c0f6e91b9e0b62</anchor>
      <arglist>(CompressedImage2D &amp;&amp;image)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>compressedImage</name>
      <anchorfile>classMagnum_1_1RectangleTexture.html</anchorfile>
      <anchor>a8ac9d6c2bd2d60f4a84bd052ce65e3e3</anchor>
      <arglist>(CompressedBufferImage2D &amp;image, BufferUsage usage)</arglist>
    </member>
    <member kind="function">
      <type>CompressedBufferImage2D</type>
      <name>compressedImage</name>
      <anchorfile>classMagnum_1_1RectangleTexture.html</anchorfile>
      <anchor>ae3a9a620422a6fef6f369a110073ac83</anchor>
      <arglist>(CompressedBufferImage2D &amp;&amp;image, BufferUsage usage)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>subImage</name>
      <anchorfile>classMagnum_1_1RectangleTexture.html</anchorfile>
      <anchor>a1849545f686a5a9faeb982ec64eb722a</anchor>
      <arglist>(const Range2Di &amp;range, Image2D &amp;image)</arglist>
    </member>
    <member kind="function">
      <type>Image2D</type>
      <name>subImage</name>
      <anchorfile>classMagnum_1_1RectangleTexture.html</anchorfile>
      <anchor>a4ae547c008dd28df69b3ca0ee562b6e2</anchor>
      <arglist>(const Range2Di &amp;range, Image2D &amp;&amp;image)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>subImage</name>
      <anchorfile>classMagnum_1_1RectangleTexture.html</anchorfile>
      <anchor>a734d3c0ad8f90a01b0cc057462c406dd</anchor>
      <arglist>(const Range2Di &amp;range, BufferImage2D &amp;image, BufferUsage usage)</arglist>
    </member>
    <member kind="function">
      <type>BufferImage2D</type>
      <name>subImage</name>
      <anchorfile>classMagnum_1_1RectangleTexture.html</anchorfile>
      <anchor>acda0cb662c71fd4c6a562f6d3aa17d01</anchor>
      <arglist>(const Range2Di &amp;range, BufferImage2D &amp;&amp;image, BufferUsage usage)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>compressedSubImage</name>
      <anchorfile>classMagnum_1_1RectangleTexture.html</anchorfile>
      <anchor>ac9f9c6f198c79880f76259ae5fcbfa10</anchor>
      <arglist>(const Range2Di &amp;range, CompressedImage2D &amp;image)</arglist>
    </member>
    <member kind="function">
      <type>CompressedImage2D</type>
      <name>compressedSubImage</name>
      <anchorfile>classMagnum_1_1RectangleTexture.html</anchorfile>
      <anchor>afddc05587821652da4b91356b83f0063</anchor>
      <arglist>(const Range2Di &amp;range, CompressedImage2D &amp;&amp;image)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>compressedSubImage</name>
      <anchorfile>classMagnum_1_1RectangleTexture.html</anchorfile>
      <anchor>a7980c91bd34f28ad71eaac300f7b5722</anchor>
      <arglist>(const Range2Di &amp;range, CompressedBufferImage2D &amp;image, BufferUsage usage)</arglist>
    </member>
    <member kind="function">
      <type>CompressedBufferImage2D</type>
      <name>compressedSubImage</name>
      <anchorfile>classMagnum_1_1RectangleTexture.html</anchorfile>
      <anchor>ae300c437c9b69f005cacafb56d02f118</anchor>
      <arglist>(const Range2Di &amp;range, CompressedBufferImage2D &amp;&amp;image, BufferUsage usage)</arglist>
    </member>
    <member kind="function">
      <type>RectangleTexture &amp;</type>
      <name>setImage</name>
      <anchorfile>classMagnum_1_1RectangleTexture.html</anchorfile>
      <anchor>a5003327d22d312d6a3b661c2eb5e181b</anchor>
      <arglist>(TextureFormat internalFormat, const ImageView2D &amp;image)</arglist>
    </member>
    <member kind="function">
      <type>RectangleTexture &amp;</type>
      <name>setImage</name>
      <anchorfile>classMagnum_1_1RectangleTexture.html</anchorfile>
      <anchor>a5d75e875e2566e82be14175646a8548e</anchor>
      <arglist>(TextureFormat internalFormat, BufferImage2D &amp;image)</arglist>
    </member>
    <member kind="function">
      <type>RectangleTexture &amp;</type>
      <name>setImage</name>
      <anchorfile>classMagnum_1_1RectangleTexture.html</anchorfile>
      <anchor>af2b1f6c93e318f5291fb3f9b551dd148</anchor>
      <arglist>(TextureFormat internalFormat, BufferImage2D &amp;&amp;image)</arglist>
    </member>
    <member kind="function">
      <type>RectangleTexture &amp;</type>
      <name>setCompressedImage</name>
      <anchorfile>classMagnum_1_1RectangleTexture.html</anchorfile>
      <anchor>a0f43a416c5e646b6558cf9177fb18ec0</anchor>
      <arglist>(const CompressedImageView2D &amp;image)</arglist>
    </member>
    <member kind="function">
      <type>RectangleTexture &amp;</type>
      <name>setCompressedImage</name>
      <anchorfile>classMagnum_1_1RectangleTexture.html</anchorfile>
      <anchor>af8592caf25640f21cbf77a542ea3a9ca</anchor>
      <arglist>(CompressedBufferImage2D &amp;image)</arglist>
    </member>
    <member kind="function">
      <type>RectangleTexture &amp;</type>
      <name>setCompressedImage</name>
      <anchorfile>classMagnum_1_1RectangleTexture.html</anchorfile>
      <anchor>a0ad7d396d3b1edf24e1612b7ec7e43cc</anchor>
      <arglist>(CompressedBufferImage2D &amp;&amp;image)</arglist>
    </member>
    <member kind="function">
      <type>RectangleTexture &amp;</type>
      <name>setSubImage</name>
      <anchorfile>classMagnum_1_1RectangleTexture.html</anchorfile>
      <anchor>adeadbe99595bca4c5194fe9262ef87a3</anchor>
      <arglist>(const Vector2i &amp;offset, const ImageView2D &amp;image)</arglist>
    </member>
    <member kind="function">
      <type>RectangleTexture &amp;</type>
      <name>setSubImage</name>
      <anchorfile>classMagnum_1_1RectangleTexture.html</anchorfile>
      <anchor>a54485f3532c4a50a3a28ea4380aa1b15</anchor>
      <arglist>(const Vector2i &amp;offset, BufferImage2D &amp;image)</arglist>
    </member>
    <member kind="function">
      <type>RectangleTexture &amp;</type>
      <name>setSubImage</name>
      <anchorfile>classMagnum_1_1RectangleTexture.html</anchorfile>
      <anchor>a75571d34418e4ef30658a2feca1dff9c</anchor>
      <arglist>(const Vector2i &amp;offset, BufferImage2D &amp;&amp;image)</arglist>
    </member>
    <member kind="function">
      <type>RectangleTexture &amp;</type>
      <name>setCompressedSubImage</name>
      <anchorfile>classMagnum_1_1RectangleTexture.html</anchorfile>
      <anchor>a12c28368d983df18d7cb625828e27532</anchor>
      <arglist>(const Vector2i &amp;offset, const CompressedImageView2D &amp;image)</arglist>
    </member>
    <member kind="function">
      <type>RectangleTexture &amp;</type>
      <name>setCompressedSubImage</name>
      <anchorfile>classMagnum_1_1RectangleTexture.html</anchorfile>
      <anchor>a69258ce513f56b8485862e1ec0070eca</anchor>
      <arglist>(const Vector2i &amp;offset, CompressedBufferImage2D &amp;image)</arglist>
    </member>
    <member kind="function">
      <type>RectangleTexture &amp;</type>
      <name>setCompressedSubImage</name>
      <anchorfile>classMagnum_1_1RectangleTexture.html</anchorfile>
      <anchor>ae4ee168d3172c6dea7a929d2731faa68</anchor>
      <arglist>(const Vector2i &amp;offset, CompressedBufferImage2D &amp;&amp;image)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>invalidateImage</name>
      <anchorfile>classMagnum_1_1RectangleTexture.html</anchorfile>
      <anchor>a680495de7f89ae18ed927b902a20dd7c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>invalidateSubImage</name>
      <anchorfile>classMagnum_1_1RectangleTexture.html</anchorfile>
      <anchor>ab438c77ffac81f74e16bb78ead431142</anchor>
      <arglist>(const Vector2i &amp;offset, const Vector2i &amp;size)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Vector2i</type>
      <name>maxSize</name>
      <anchorfile>classMagnum_1_1RectangleTexture.html</anchorfile>
      <anchor>ae8e6f7889c96f0bfd7c95bc0975aa796</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Vector2i</type>
      <name>compressedBlockSize</name>
      <anchorfile>classMagnum_1_1RectangleTexture.html</anchorfile>
      <anchor>a519527ba4a08273bef584f0c19c3570a</anchor>
      <arglist>(TextureFormat format)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Int</type>
      <name>compressedBlockDataSize</name>
      <anchorfile>classMagnum_1_1RectangleTexture.html</anchorfile>
      <anchor>a896bafc974a85d8ddd15342b0fb05b8e</anchor>
      <arglist>(TextureFormat format)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static RectangleTexture</type>
      <name>wrap</name>
      <anchorfile>classMagnum_1_1RectangleTexture.html</anchorfile>
      <anchor>ab3754f8e80af911ef26a9202f42b1bfe</anchor>
      <arglist>(GLuint id, ObjectFlags flags={})</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Magnum::Renderbuffer</name>
    <filename>classMagnum_1_1Renderbuffer.html</filename>
    <base>Magnum::AbstractObject</base>
    <member kind="function">
      <type></type>
      <name>Renderbuffer</name>
      <anchorfile>classMagnum_1_1Renderbuffer.html</anchorfile>
      <anchor>a5cca19f146f458180d7176d278065576</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Renderbuffer</name>
      <anchorfile>classMagnum_1_1Renderbuffer.html</anchorfile>
      <anchor>a1331d392d32f82f1f5a9eb49d1b9b0eb</anchor>
      <arglist>(NoCreateT) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Renderbuffer</name>
      <anchorfile>classMagnum_1_1Renderbuffer.html</anchorfile>
      <anchor>ae2f453a7ff569ce5c92a8e805ed3c1e5</anchor>
      <arglist>(const Renderbuffer &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Renderbuffer</name>
      <anchorfile>classMagnum_1_1Renderbuffer.html</anchorfile>
      <anchor>a882c176cca258fee6fa0ee53890be6c0</anchor>
      <arglist>(Renderbuffer &amp;&amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~Renderbuffer</name>
      <anchorfile>classMagnum_1_1Renderbuffer.html</anchorfile>
      <anchor>a977e054a015646f89312b938e8836f6e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Renderbuffer &amp;</type>
      <name>operator=</name>
      <anchorfile>classMagnum_1_1Renderbuffer.html</anchorfile>
      <anchor>a0c0f7e5145de2c9e75e55df7c5b66450</anchor>
      <arglist>(const Renderbuffer &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>Renderbuffer &amp;</type>
      <name>operator=</name>
      <anchorfile>classMagnum_1_1Renderbuffer.html</anchorfile>
      <anchor>a3ca7c4b8e6b8fb5726faf20bde8fc090</anchor>
      <arglist>(Renderbuffer &amp;&amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type>GLuint</type>
      <name>id</name>
      <anchorfile>classMagnum_1_1Renderbuffer.html</anchorfile>
      <anchor>a8d55da8b2d913854965e28d9fd2bbdb1</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>GLuint</type>
      <name>release</name>
      <anchorfile>classMagnum_1_1Renderbuffer.html</anchorfile>
      <anchor>adb228f7ac315c3dc2240f226722dec7d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>label</name>
      <anchorfile>classMagnum_1_1Renderbuffer.html</anchorfile>
      <anchor>aa23db6b28c830f8f101221d5e7a619dc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Renderbuffer &amp;</type>
      <name>setLabel</name>
      <anchorfile>classMagnum_1_1Renderbuffer.html</anchorfile>
      <anchor>aab1f4ce88dc614ef1df05ffb98be4f09</anchor>
      <arglist>(const std::string &amp;label)</arglist>
    </member>
    <member kind="function">
      <type>Renderbuffer &amp;</type>
      <name>setLabel</name>
      <anchorfile>classMagnum_1_1Renderbuffer.html</anchorfile>
      <anchor>a5708e650b42c787ff6e3e34f2373d928</anchor>
      <arglist>(const char(&amp;label)[size])</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setStorage</name>
      <anchorfile>classMagnum_1_1Renderbuffer.html</anchorfile>
      <anchor>a8b03331ea4a61ea56fb7e64a6f609839</anchor>
      <arglist>(RenderbufferFormat internalFormat, const Vector2i &amp;size)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setStorageMultisample</name>
      <anchorfile>classMagnum_1_1Renderbuffer.html</anchorfile>
      <anchor>ac04c932ec8027d72616666be6f533b33</anchor>
      <arglist>(Int samples, RenderbufferFormat internalFormat, const Vector2i &amp;size)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Int</type>
      <name>maxSize</name>
      <anchorfile>classMagnum_1_1Renderbuffer.html</anchorfile>
      <anchor>a15368d5959cf55b1c049891bc5654e8a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Int</type>
      <name>maxSamples</name>
      <anchorfile>classMagnum_1_1Renderbuffer.html</anchorfile>
      <anchor>a14f29c0424b3f371ebb4ccf3f6c8d530</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Renderbuffer</type>
      <name>wrap</name>
      <anchorfile>classMagnum_1_1Renderbuffer.html</anchorfile>
      <anchor>a7394ed340087f6a4ec792a71c6f61d30</anchor>
      <arglist>(GLuint id, ObjectFlags flags={})</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Magnum::Renderer</name>
    <filename>classMagnum_1_1Renderer.html</filename>
    <member kind="enumeration">
      <type></type>
      <name>PolygonFacing</name>
      <anchorfile>classMagnum_1_1Renderer.html</anchorfile>
      <anchor>a21bd10a53fe20b5919b59e5f4910f808</anchor>
      <arglist></arglist>
      <enumvalue file="classMagnum_1_1Renderer.html" anchor="a21bd10a53fe20b5919b59e5f4910f808a5835bab1ade0060909e31a06af2e2cde">Front</enumvalue>
      <enumvalue file="classMagnum_1_1Renderer.html" anchor="a21bd10a53fe20b5919b59e5f4910f808a0557fa923dcee4d0f86b1409f5c2167f">Back</enumvalue>
      <enumvalue file="classMagnum_1_1Renderer.html" anchor="a21bd10a53fe20b5919b59e5f4910f808a8be41da9b58e32ece35a2b5751f6aeb9">FrontAndBack</enumvalue>
    </member>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>classMagnum_1_1Renderer.html</anchorfile>
      <anchor>af5ed7655c31326a82464a3856ce8adaa</anchor>
      <arglist>(Debug &amp;debug, Renderer::Error value)</arglist>
    </member>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>classMagnum_1_1Renderer.html</anchorfile>
      <anchor>a4b42fb5b1eb68a0a42794f44ef20faf5</anchor>
      <arglist>(Debug &amp;debug, Renderer::ResetNotificationStrategy value)</arglist>
    </member>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>classMagnum_1_1Renderer.html</anchorfile>
      <anchor>a41f92605fac305549dc1f4bdb6957fa7</anchor>
      <arglist>(Debug &amp;debug, Renderer::GraphicsResetStatus value)</arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>Feature</name>
      <anchorfile>classMagnum_1_1Renderer.html</anchorfile>
      <anchor>ac6c8c3ec2d562983d90d2fff6ba550d5</anchor>
      <arglist></arglist>
      <enumvalue file="classMagnum_1_1Renderer.html" anchor="ac6c8c3ec2d562983d90d2fff6ba550d5aca2057d8cabd019c66599d583b2d392a">BlendAdvancedCoherent</enumvalue>
      <enumvalue file="classMagnum_1_1Renderer.html" anchor="ac6c8c3ec2d562983d90d2fff6ba550d5a84e358c0cfad27b29c41c888167828f3">Blending</enumvalue>
      <enumvalue file="classMagnum_1_1Renderer.html" anchor="ac6c8c3ec2d562983d90d2fff6ba550d5a754353eebf385a2b27a911c08f3a21a8">DebugOutput</enumvalue>
      <enumvalue file="classMagnum_1_1Renderer.html" anchor="ac6c8c3ec2d562983d90d2fff6ba550d5a6bbee5ecbabad03dca096d64a8a18534">DebugOutputSynchronous</enumvalue>
      <enumvalue file="classMagnum_1_1Renderer.html" anchor="ac6c8c3ec2d562983d90d2fff6ba550d5a0001d730ec06e6528bbdcbd9084c74ad">DepthClamp</enumvalue>
      <enumvalue file="classMagnum_1_1Renderer.html" anchor="ac6c8c3ec2d562983d90d2fff6ba550d5a16704bc95ff0bd3291ba157e6f06e0ee">DepthTest</enumvalue>
      <enumvalue file="classMagnum_1_1Renderer.html" anchor="ac6c8c3ec2d562983d90d2fff6ba550d5a5f53f71072ea59a25ea1e38ed78baa4b">Dithering</enumvalue>
      <enumvalue file="classMagnum_1_1Renderer.html" anchor="ac6c8c3ec2d562983d90d2fff6ba550d5a5d38f487681199992492e86e0f406536">FaceCulling</enumvalue>
      <enumvalue file="classMagnum_1_1Renderer.html" anchor="ac6c8c3ec2d562983d90d2fff6ba550d5a2435f99a7026a00f4326d7e758db8018">FramebufferSRGB</enumvalue>
      <enumvalue file="classMagnum_1_1Renderer.html" anchor="ac6c8c3ec2d562983d90d2fff6ba550d5a1c7a8732a549e71eaf8d9c028b66b7c5">LogicOperation</enumvalue>
      <enumvalue file="classMagnum_1_1Renderer.html" anchor="ac6c8c3ec2d562983d90d2fff6ba550d5af700a9560a1f9466894710793d64d28a">Multisampling</enumvalue>
      <enumvalue file="classMagnum_1_1Renderer.html" anchor="ac6c8c3ec2d562983d90d2fff6ba550d5a0ac58d9a025260b3fee2d3fa3484336d">PolygonOffsetFill</enumvalue>
      <enumvalue file="classMagnum_1_1Renderer.html" anchor="ac6c8c3ec2d562983d90d2fff6ba550d5aad364373805413abc61172b2e330d8d9">PolygonOffsetLine</enumvalue>
      <enumvalue file="classMagnum_1_1Renderer.html" anchor="ac6c8c3ec2d562983d90d2fff6ba550d5a54a7b2d52d3bb5f9a314551b6a224c57">PolygonOffsetPoint</enumvalue>
      <enumvalue file="classMagnum_1_1Renderer.html" anchor="ac6c8c3ec2d562983d90d2fff6ba550d5aef24c4936bda67d8de6ccab9770b84de">ProgramPointSize</enumvalue>
      <enumvalue file="classMagnum_1_1Renderer.html" anchor="ac6c8c3ec2d562983d90d2fff6ba550d5a86e4d6e28a5b5ef8d4a3a0cac8ecc9ed">RasterizerDiscard</enumvalue>
      <enumvalue file="classMagnum_1_1Renderer.html" anchor="ac6c8c3ec2d562983d90d2fff6ba550d5a0942d76ddbe5cf23a36a17b8501324aa">ScissorTest</enumvalue>
      <enumvalue file="classMagnum_1_1Renderer.html" anchor="ac6c8c3ec2d562983d90d2fff6ba550d5aa77e3a53fa44e4d967c93df46f5d820d">SeamlessCubeMapTexture</enumvalue>
      <enumvalue file="classMagnum_1_1Renderer.html" anchor="ac6c8c3ec2d562983d90d2fff6ba550d5afb91927d3dded1a83eb78dd7725d7efc">StencilTest</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>Hint</name>
      <anchorfile>classMagnum_1_1Renderer.html</anchorfile>
      <anchor>a561856a64015755bd67d4714cd2ae6a6</anchor>
      <arglist></arglist>
      <enumvalue file="classMagnum_1_1Renderer.html" anchor="a561856a64015755bd67d4714cd2ae6a6ad6026a84408fed42c5f1db8d19df1bd2">FragmentShaderDerivative</enumvalue>
      <enumvalue file="classMagnum_1_1Renderer.html" anchor="a561856a64015755bd67d4714cd2ae6a6a2dbe0dc786db7f87a39524d4571b02da">TextureCompression</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>HintMode</name>
      <anchorfile>classMagnum_1_1Renderer.html</anchorfile>
      <anchor>a830668c191a1ef7d39cf8720739fb53f</anchor>
      <arglist></arglist>
      <enumvalue file="classMagnum_1_1Renderer.html" anchor="a830668c191a1ef7d39cf8720739fb53fa90fd7fdf6f41406a75e5265b9583bb4e">Fastest</enumvalue>
      <enumvalue file="classMagnum_1_1Renderer.html" anchor="a830668c191a1ef7d39cf8720739fb53fa7dd754d7715f2ce24b4b153c4cd66c3a">Nicest</enumvalue>
      <enumvalue file="classMagnum_1_1Renderer.html" anchor="a830668c191a1ef7d39cf8720739fb53fa60a3629ef6a8f991f45d7a85f2458544">DontCare</enumvalue>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>enable</name>
      <anchorfile>classMagnum_1_1Renderer.html</anchorfile>
      <anchor>aa18ea71beb69bdfd254b1e6a88bd9de4</anchor>
      <arglist>(Feature feature)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>disable</name>
      <anchorfile>classMagnum_1_1Renderer.html</anchorfile>
      <anchor>acd927ceff0f6325c534758a9b3e42385</anchor>
      <arglist>(Feature feature)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>setFeature</name>
      <anchorfile>classMagnum_1_1Renderer.html</anchorfile>
      <anchor>afbeff9cfde40df89deabc1dee331b8c1</anchor>
      <arglist>(Feature feature, bool enabled)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>setHint</name>
      <anchorfile>classMagnum_1_1Renderer.html</anchorfile>
      <anchor>aae6ac3586025f7a39a1430eacaa2e039</anchor>
      <arglist>(Hint target, HintMode mode)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>setClearColor</name>
      <anchorfile>classMagnum_1_1Renderer.html</anchorfile>
      <anchor>a19365b6b55bfa5e7d97ceeead2db64f5</anchor>
      <arglist>(const Color4 &amp;color)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>setClearDepth</name>
      <anchorfile>classMagnum_1_1Renderer.html</anchorfile>
      <anchor>ab7d5283fc30abaac4b9dd42ef598f0b1</anchor>
      <arglist>(Double depth)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>setClearDepth</name>
      <anchorfile>classMagnum_1_1Renderer.html</anchorfile>
      <anchor>a34060f8e189b7861327caaf305754535</anchor>
      <arglist>(Float depth)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>setClearStencil</name>
      <anchorfile>classMagnum_1_1Renderer.html</anchorfile>
      <anchor>ad9adba3bef11c6cfb106a60f4c89705c</anchor>
      <arglist>(Int stencil)</arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>FrontFace</name>
      <anchorfile>classMagnum_1_1Renderer.html</anchorfile>
      <anchor>a62b59513774b3e9424e212fdb27f1c88</anchor>
      <arglist></arglist>
      <enumvalue file="classMagnum_1_1Renderer.html" anchor="a62b59513774b3e9424e212fdb27f1c88a5a8821d3fbf32174429e2b28bc3b031b">CounterClockWise</enumvalue>
      <enumvalue file="classMagnum_1_1Renderer.html" anchor="a62b59513774b3e9424e212fdb27f1c88ad5a4d3410a83d1bcdf2ae918a53aabd6">ClockWise</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>ProvokingVertex</name>
      <anchorfile>classMagnum_1_1Renderer.html</anchorfile>
      <anchor>a9f64a81b91f0de8510beb52eb8e835a1</anchor>
      <arglist></arglist>
      <enumvalue file="classMagnum_1_1Renderer.html" anchor="a9f64a81b91f0de8510beb52eb8e835a1affb1c6970bb6dfc3c38ff6a1fe5268e9">FirstVertexConvention</enumvalue>
      <enumvalue file="classMagnum_1_1Renderer.html" anchor="a9f64a81b91f0de8510beb52eb8e835a1a8cc96752640b5d7727a4383badf00713">LastVertexConvention</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>PolygonMode</name>
      <anchorfile>classMagnum_1_1Renderer.html</anchorfile>
      <anchor>a12c43d632c288c911e523adfec438fad</anchor>
      <arglist></arglist>
      <enumvalue file="classMagnum_1_1Renderer.html" anchor="a12c43d632c288c911e523adfec438fadadb3e3f51c9107e26c9bccf9a188ce2ed">Fill</enumvalue>
      <enumvalue file="classMagnum_1_1Renderer.html" anchor="a12c43d632c288c911e523adfec438fada4803e6b9e63dabf04de980788d6a13c4">Line</enumvalue>
      <enumvalue file="classMagnum_1_1Renderer.html" anchor="a12c43d632c288c911e523adfec438fada2a3cd5946cfd317eb99c3d32e35e2d4c">Point</enumvalue>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>setFrontFace</name>
      <anchorfile>classMagnum_1_1Renderer.html</anchorfile>
      <anchor>a55847369e3c70a09d58e6b2302f76bf1</anchor>
      <arglist>(FrontFace mode)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>setFaceCullingMode</name>
      <anchorfile>classMagnum_1_1Renderer.html</anchorfile>
      <anchor>a0bac2a9f702179b51f660102c1b53fd6</anchor>
      <arglist>(PolygonFacing mode)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>setProvokingVertex</name>
      <anchorfile>classMagnum_1_1Renderer.html</anchorfile>
      <anchor>adfa4465a92b06e88f225a897a0d45913</anchor>
      <arglist>(ProvokingVertex mode)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>setPolygonMode</name>
      <anchorfile>classMagnum_1_1Renderer.html</anchorfile>
      <anchor>af0a303a85ca2cea52f6d9cb2bac2a220</anchor>
      <arglist>(PolygonMode mode)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>setPolygonOffset</name>
      <anchorfile>classMagnum_1_1Renderer.html</anchorfile>
      <anchor>a5ca10d237638d0cf877a60fcd5fc362d</anchor>
      <arglist>(Float factor, Float units)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>setLineWidth</name>
      <anchorfile>classMagnum_1_1Renderer.html</anchorfile>
      <anchor>a6f5be2c7235a191b19a855ccad895331</anchor>
      <arglist>(Float width)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>setPointSize</name>
      <anchorfile>classMagnum_1_1Renderer.html</anchorfile>
      <anchor>ac81d7c565f13f6614d46ece51cb92c5c</anchor>
      <arglist>(Float size)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>setScissor</name>
      <anchorfile>classMagnum_1_1Renderer.html</anchorfile>
      <anchor>a2ed8e9fb24c5ad15e3395e512b71760b</anchor>
      <arglist>(const Range2Di &amp;rectangle)</arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>StencilFunction</name>
      <anchorfile>classMagnum_1_1Renderer.html</anchorfile>
      <anchor>a20b4f2e93c3d5411d3ef26f2cfb25aad</anchor>
      <arglist></arglist>
      <enumvalue file="classMagnum_1_1Renderer.html" anchor="a20b4f2e93c3d5411d3ef26f2cfb25aada6e7b34fa59e1bd229b207892956dc41c">Never</enumvalue>
      <enumvalue file="classMagnum_1_1Renderer.html" anchor="a20b4f2e93c3d5411d3ef26f2cfb25aada68eec46437c384d8dad18d5464ebc35c">Always</enumvalue>
      <enumvalue file="classMagnum_1_1Renderer.html" anchor="a20b4f2e93c3d5411d3ef26f2cfb25aada1cfdf0e8d0c87a228c1f40d9bee7888b">Less</enumvalue>
      <enumvalue file="classMagnum_1_1Renderer.html" anchor="a20b4f2e93c3d5411d3ef26f2cfb25aadaa4cbdbb6070a5abb35fc95ecf1e22c14">LessOrEqual</enumvalue>
      <enumvalue file="classMagnum_1_1Renderer.html" anchor="a20b4f2e93c3d5411d3ef26f2cfb25aadaf5f286e73bda105e538310b3190f75c5">Equal</enumvalue>
      <enumvalue file="classMagnum_1_1Renderer.html" anchor="a20b4f2e93c3d5411d3ef26f2cfb25aada19bb0af2c3c530538cb41aff7f235b96">NotEqual</enumvalue>
      <enumvalue file="classMagnum_1_1Renderer.html" anchor="a20b4f2e93c3d5411d3ef26f2cfb25aada6f2f0aefb3d22da0f3839453add5f937">GreaterOrEqual</enumvalue>
      <enumvalue file="classMagnum_1_1Renderer.html" anchor="a20b4f2e93c3d5411d3ef26f2cfb25aada8768a6821cd735aea4f5b0df88c1fc6a">Greater</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>StencilOperation</name>
      <anchorfile>classMagnum_1_1Renderer.html</anchorfile>
      <anchor>a45ef56d3506b954e0dd760bbec6fe383</anchor>
      <arglist></arglist>
      <enumvalue file="classMagnum_1_1Renderer.html" anchor="a45ef56d3506b954e0dd760bbec6fe383a02bce93bff905887ad2233110bf9c49e">Keep</enumvalue>
      <enumvalue file="classMagnum_1_1Renderer.html" anchor="a45ef56d3506b954e0dd760bbec6fe383ad7ed4ee1df437474d005188535f74875">Zero</enumvalue>
      <enumvalue file="classMagnum_1_1Renderer.html" anchor="a45ef56d3506b954e0dd760bbec6fe383a0ebe6df8a3ac338e0512acc741823fdb">Replace</enumvalue>
      <enumvalue file="classMagnum_1_1Renderer.html" anchor="a45ef56d3506b954e0dd760bbec6fe383a6f15bdfa71aa83b0d197cad75757d580">Increment</enumvalue>
      <enumvalue file="classMagnum_1_1Renderer.html" anchor="a45ef56d3506b954e0dd760bbec6fe383aaa91cb7f033b90dec9582dc5e9611732">IncrementWrap</enumvalue>
      <enumvalue file="classMagnum_1_1Renderer.html" anchor="a45ef56d3506b954e0dd760bbec6fe383a6182913ea7b5c02fe2773ea87177d4f9">Decrement</enumvalue>
      <enumvalue file="classMagnum_1_1Renderer.html" anchor="a45ef56d3506b954e0dd760bbec6fe383a6ec565c329385c8d59333abc6a1003d1">DecrementWrap</enumvalue>
      <enumvalue file="classMagnum_1_1Renderer.html" anchor="a45ef56d3506b954e0dd760bbec6fe383a9b8958acb7be504bb5f55f17c0eea366">Invert</enumvalue>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>setStencilFunction</name>
      <anchorfile>classMagnum_1_1Renderer.html</anchorfile>
      <anchor>a4dd9f49dee21d31b96d28bf1b08b8890</anchor>
      <arglist>(PolygonFacing facing, StencilFunction function, Int referenceValue, UnsignedInt mask)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>setStencilFunction</name>
      <anchorfile>classMagnum_1_1Renderer.html</anchorfile>
      <anchor>a87a2e5f7d62733e6b72e32b802eca8c5</anchor>
      <arglist>(StencilFunction function, Int referenceValue, UnsignedInt mask)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>setStencilOperation</name>
      <anchorfile>classMagnum_1_1Renderer.html</anchorfile>
      <anchor>a9f142fae451a277d7b4c60da15694ac4</anchor>
      <arglist>(PolygonFacing facing, StencilOperation stencilFail, StencilOperation depthFail, StencilOperation depthPass)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>setStencilOperation</name>
      <anchorfile>classMagnum_1_1Renderer.html</anchorfile>
      <anchor>a0bdae22cccc4dfd81a6ce4737e10f185</anchor>
      <arglist>(StencilOperation stencilFail, StencilOperation depthFail, StencilOperation depthPass)</arglist>
    </member>
    <member kind="typedef">
      <type>StencilFunction</type>
      <name>DepthFunction</name>
      <anchorfile>classMagnum_1_1Renderer.html</anchorfile>
      <anchor>ac612fd0597f4ccb9bf678d6a367de557</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>setDepthFunction</name>
      <anchorfile>classMagnum_1_1Renderer.html</anchorfile>
      <anchor>a5864bfc13ed301152be1b714cc6d60be</anchor>
      <arglist>(DepthFunction function)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>setColorMask</name>
      <anchorfile>classMagnum_1_1Renderer.html</anchorfile>
      <anchor>a91b1b15fcc024c88a1cb3e1989dfbe4e</anchor>
      <arglist>(GLboolean allowRed, GLboolean allowGreen, GLboolean allowBlue, GLboolean allowAlpha)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>setDepthMask</name>
      <anchorfile>classMagnum_1_1Renderer.html</anchorfile>
      <anchor>a2ee52b862ea062b4f744bba7f3cc98ed</anchor>
      <arglist>(GLboolean allow)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>setStencilMask</name>
      <anchorfile>classMagnum_1_1Renderer.html</anchorfile>
      <anchor>af691352e9e85b21b2f7f15204a7e4eed</anchor>
      <arglist>(PolygonFacing facing, UnsignedInt allowBits)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>setStencilMask</name>
      <anchorfile>classMagnum_1_1Renderer.html</anchorfile>
      <anchor>a461b04ba4540b8b8b17f33308bf131be</anchor>
      <arglist>(UnsignedInt allowBits)</arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>BlendEquation</name>
      <anchorfile>classMagnum_1_1Renderer.html</anchorfile>
      <anchor>ad603afc2bb28332e71184d4ebc3f02c9</anchor>
      <arglist></arglist>
      <enumvalue file="classMagnum_1_1Renderer.html" anchor="ad603afc2bb28332e71184d4ebc3f02c9aec211f7c20af43e742bf2570c3cb84f9">Add</enumvalue>
      <enumvalue file="classMagnum_1_1Renderer.html" anchor="ad603afc2bb28332e71184d4ebc3f02c9a1d9baf077ee87921f57a8fe42d510b65">Subtract</enumvalue>
      <enumvalue file="classMagnum_1_1Renderer.html" anchor="ad603afc2bb28332e71184d4ebc3f02c9abd5458190996e76988cb2f27a820c685">ReverseSubtract</enumvalue>
      <enumvalue file="classMagnum_1_1Renderer.html" anchor="ad603afc2bb28332e71184d4ebc3f02c9a78d811e98514cd165dda532286610fd2">Min</enumvalue>
      <enumvalue file="classMagnum_1_1Renderer.html" anchor="ad603afc2bb28332e71184d4ebc3f02c9a6a061313d22e51e0f25b7cd4dc065233">Max</enumvalue>
      <enumvalue file="classMagnum_1_1Renderer.html" anchor="ad603afc2bb28332e71184d4ebc3f02c9ae257376d913f3b53cbb4a9b19d770648">Multiply</enumvalue>
      <enumvalue file="classMagnum_1_1Renderer.html" anchor="ad603afc2bb28332e71184d4ebc3f02c9a2fc3359e12b2a9104121dcf04246f6a0">Screen</enumvalue>
      <enumvalue file="classMagnum_1_1Renderer.html" anchor="ad603afc2bb28332e71184d4ebc3f02c9a6b551379c3c0b59326abdaf3b4395bd3">Overlay</enumvalue>
      <enumvalue file="classMagnum_1_1Renderer.html" anchor="ad603afc2bb28332e71184d4ebc3f02c9af367cda25ead743bb0d2ab9c217e0b99">Darken</enumvalue>
      <enumvalue file="classMagnum_1_1Renderer.html" anchor="ad603afc2bb28332e71184d4ebc3f02c9a1371ecd5df513d77a001392435cf4d12">Lighten</enumvalue>
      <enumvalue file="classMagnum_1_1Renderer.html" anchor="ad603afc2bb28332e71184d4ebc3f02c9aee9ea3fbc70cb0f07c7ec4c48712d900">ColorDodge</enumvalue>
      <enumvalue file="classMagnum_1_1Renderer.html" anchor="ad603afc2bb28332e71184d4ebc3f02c9aa061fdf49738be2999f722b45661e825">ColorBurn</enumvalue>
      <enumvalue file="classMagnum_1_1Renderer.html" anchor="ad603afc2bb28332e71184d4ebc3f02c9ad509708d332760c4dac5299aee3aa518">HardLight</enumvalue>
      <enumvalue file="classMagnum_1_1Renderer.html" anchor="ad603afc2bb28332e71184d4ebc3f02c9a0110233d77ea3a1b09b5a5a5e3e48ec3">SoftLight</enumvalue>
      <enumvalue file="classMagnum_1_1Renderer.html" anchor="ad603afc2bb28332e71184d4ebc3f02c9a28ed2ac6c29f64a3692c956004b8ff7a">Difference</enumvalue>
      <enumvalue file="classMagnum_1_1Renderer.html" anchor="ad603afc2bb28332e71184d4ebc3f02c9a25218e43e67f1b1c1c833bc48c7ca7bb">Exclusion</enumvalue>
      <enumvalue file="classMagnum_1_1Renderer.html" anchor="ad603afc2bb28332e71184d4ebc3f02c9a83b236e052d3ba2a6c01cd7be5046cdc">HslHue</enumvalue>
      <enumvalue file="classMagnum_1_1Renderer.html" anchor="ad603afc2bb28332e71184d4ebc3f02c9aaf4674f2a4117022eddf768bcfb4ce91">HslSaturation</enumvalue>
      <enumvalue file="classMagnum_1_1Renderer.html" anchor="ad603afc2bb28332e71184d4ebc3f02c9a28a55c41463d8c364a951330e1a2ae90">HslColor</enumvalue>
      <enumvalue file="classMagnum_1_1Renderer.html" anchor="ad603afc2bb28332e71184d4ebc3f02c9a68a144a811dfd282e5ad14a247c7ad78">HslLuminosity</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>BlendFunction</name>
      <anchorfile>classMagnum_1_1Renderer.html</anchorfile>
      <anchor>af444949c6ffd8cb2d8f692e60e31f754</anchor>
      <arglist></arglist>
      <enumvalue file="classMagnum_1_1Renderer.html" anchor="af444949c6ffd8cb2d8f692e60e31f754ad7ed4ee1df437474d005188535f74875">Zero</enumvalue>
      <enumvalue file="classMagnum_1_1Renderer.html" anchor="af444949c6ffd8cb2d8f692e60e31f754a06c2cea18679d64399783748fa367bdd">One</enumvalue>
      <enumvalue file="classMagnum_1_1Renderer.html" anchor="af444949c6ffd8cb2d8f692e60e31f754aeb8eb99f8eea9079c0e76d5ce7301dd3">ConstantColor</enumvalue>
      <enumvalue file="classMagnum_1_1Renderer.html" anchor="af444949c6ffd8cb2d8f692e60e31f754a13ab8deb1c606ab17745354b4e92f43a">OneMinusConstantColor</enumvalue>
      <enumvalue file="classMagnum_1_1Renderer.html" anchor="af444949c6ffd8cb2d8f692e60e31f754a6f0229db491c3b01860363456dc57288">ConstantAlpha</enumvalue>
      <enumvalue file="classMagnum_1_1Renderer.html" anchor="af444949c6ffd8cb2d8f692e60e31f754a9a1874144125c69e93ec99f17e985e41">OneMinusConstantAlpha</enumvalue>
      <enumvalue file="classMagnum_1_1Renderer.html" anchor="af444949c6ffd8cb2d8f692e60e31f754a1901920023e2275becaae076a28b590a">SourceColor</enumvalue>
      <enumvalue file="classMagnum_1_1Renderer.html" anchor="af444949c6ffd8cb2d8f692e60e31f754a64f89315842022749884e9b7cdd83fb3">SecondSourceColor</enumvalue>
      <enumvalue file="classMagnum_1_1Renderer.html" anchor="af444949c6ffd8cb2d8f692e60e31f754a835824be5decf84a1823ba3a803b7fef">OneMinusSourceColor</enumvalue>
      <enumvalue file="classMagnum_1_1Renderer.html" anchor="af444949c6ffd8cb2d8f692e60e31f754a74e034becb3b0b5c760cd0d8faa152a1">OneMinusSecondSourceColor</enumvalue>
      <enumvalue file="classMagnum_1_1Renderer.html" anchor="af444949c6ffd8cb2d8f692e60e31f754a5660d86f4a66c824e699b26a51201a70">SourceAlpha</enumvalue>
      <enumvalue file="classMagnum_1_1Renderer.html" anchor="af444949c6ffd8cb2d8f692e60e31f754a8d2ffa2fdc89a05ab0bd151d79ae8a6a">SourceAlphaSaturate</enumvalue>
      <enumvalue file="classMagnum_1_1Renderer.html" anchor="af444949c6ffd8cb2d8f692e60e31f754a067bdd4969e200d4892204b371f9f68a">SecondSourceAlpha</enumvalue>
      <enumvalue file="classMagnum_1_1Renderer.html" anchor="af444949c6ffd8cb2d8f692e60e31f754aa1e6a89ebadf4a9ff9a6eaaac32dcd3e">OneMinusSourceAlpha</enumvalue>
      <enumvalue file="classMagnum_1_1Renderer.html" anchor="af444949c6ffd8cb2d8f692e60e31f754a8f641c1bb0e278d58aff95d55ec55456">OneMinusSecondSourceAlpha</enumvalue>
      <enumvalue file="classMagnum_1_1Renderer.html" anchor="af444949c6ffd8cb2d8f692e60e31f754ace2f1c6b2f0f03394c916d88e68157e5">DestinationColor</enumvalue>
      <enumvalue file="classMagnum_1_1Renderer.html" anchor="af444949c6ffd8cb2d8f692e60e31f754a769fa85c954e64b060b2aa3071fa65f8">OneMinusDestinationColor</enumvalue>
      <enumvalue file="classMagnum_1_1Renderer.html" anchor="af444949c6ffd8cb2d8f692e60e31f754a01b896b89509884af9544fec983ef271">DestinationAlpha</enumvalue>
      <enumvalue file="classMagnum_1_1Renderer.html" anchor="af444949c6ffd8cb2d8f692e60e31f754afccdb697ecd743d6a2618b73d9fc53e8">OneMinusDestinationAlpha</enumvalue>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>setBlendEquation</name>
      <anchorfile>classMagnum_1_1Renderer.html</anchorfile>
      <anchor>a8b0b4e299232661b6a6959d11d3f2445</anchor>
      <arglist>(BlendEquation equation)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>setBlendEquation</name>
      <anchorfile>classMagnum_1_1Renderer.html</anchorfile>
      <anchor>a1c3f915b6ea81f86dd80e47596d9b26e</anchor>
      <arglist>(BlendEquation rgb, BlendEquation alpha)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>setBlendFunction</name>
      <anchorfile>classMagnum_1_1Renderer.html</anchorfile>
      <anchor>aded6a645c741dbdff1edd6ad7eb486a5</anchor>
      <arglist>(BlendFunction source, BlendFunction destination)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>setBlendFunction</name>
      <anchorfile>classMagnum_1_1Renderer.html</anchorfile>
      <anchor>aedb43addcea400bc9ff40cdab6b8393e</anchor>
      <arglist>(BlendFunction sourceRgb, BlendFunction destinationRgb, BlendFunction sourceAlpha, BlendFunction destinationAlpha)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>setBlendColor</name>
      <anchorfile>classMagnum_1_1Renderer.html</anchorfile>
      <anchor>af1334339b9160c19bb9671757ab0dbaa</anchor>
      <arglist>(const Color4 &amp;color)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>blendBarrier</name>
      <anchorfile>classMagnum_1_1Renderer.html</anchorfile>
      <anchor>a463abce75e8e95b7ac5eb3daa41bf8a4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>LogicOperation</name>
      <anchorfile>classMagnum_1_1Renderer.html</anchorfile>
      <anchor>ad662867683b1f453d3abddb42091203e</anchor>
      <arglist></arglist>
      <enumvalue file="classMagnum_1_1Renderer.html" anchor="ad662867683b1f453d3abddb42091203eadc30bc0c7914db5918da4263fce93ad2">Clear</enumvalue>
      <enumvalue file="classMagnum_1_1Renderer.html" anchor="ad662867683b1f453d3abddb42091203ea5d5b78699e57104f2fa03bbdf7b9197b">Set</enumvalue>
      <enumvalue file="classMagnum_1_1Renderer.html" anchor="ad662867683b1f453d3abddb42091203ea5fb63579fc981698f97d55bfecb213ea">Copy</enumvalue>
      <enumvalue file="classMagnum_1_1Renderer.html" anchor="ad662867683b1f453d3abddb42091203eae7a387d9808b05131e4906e7655a33a0">CopyInverted</enumvalue>
      <enumvalue file="classMagnum_1_1Renderer.html" anchor="ad662867683b1f453d3abddb42091203ea35721c181ec6a9cca6cdb99dd844d07b">Noop</enumvalue>
      <enumvalue file="classMagnum_1_1Renderer.html" anchor="ad662867683b1f453d3abddb42091203ea9b8958acb7be504bb5f55f17c0eea366">Invert</enumvalue>
      <enumvalue file="classMagnum_1_1Renderer.html" anchor="ad662867683b1f453d3abddb42091203eac33315685a0cba3ce53be378b3c7874b">And</enumvalue>
      <enumvalue file="classMagnum_1_1Renderer.html" anchor="ad662867683b1f453d3abddb42091203ea287b07d4ecc112d0a742eba7d4c845bc">AndReverse</enumvalue>
      <enumvalue file="classMagnum_1_1Renderer.html" anchor="ad662867683b1f453d3abddb42091203eadf0344a044e102673403a03fe8e83d8d">AndInverted</enumvalue>
      <enumvalue file="classMagnum_1_1Renderer.html" anchor="ad662867683b1f453d3abddb42091203ead39e2d62791eb0c18e0bb54315180049">Nand</enumvalue>
      <enumvalue file="classMagnum_1_1Renderer.html" anchor="ad662867683b1f453d3abddb42091203ea3a2d5fe857d8f9541136a124c2edec6c">Or</enumvalue>
      <enumvalue file="classMagnum_1_1Renderer.html" anchor="ad662867683b1f453d3abddb42091203eaabbaa132814b3deb687143a873ab3100">OrReverse</enumvalue>
      <enumvalue file="classMagnum_1_1Renderer.html" anchor="ad662867683b1f453d3abddb42091203eabf95e9e38b3918a85a27125fff7e47ea">OrInverted</enumvalue>
      <enumvalue file="classMagnum_1_1Renderer.html" anchor="ad662867683b1f453d3abddb42091203ea5f61fcb6e17f7a46a46a47c7977c90c1">Nor</enumvalue>
      <enumvalue file="classMagnum_1_1Renderer.html" anchor="ad662867683b1f453d3abddb42091203ea76feb79109026728a20736a8c6504548">Xor</enumvalue>
      <enumvalue file="classMagnum_1_1Renderer.html" anchor="ad662867683b1f453d3abddb42091203ea7ec6afd15884879155163f16bd361350">Equivalence</enumvalue>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>setLogicOperation</name>
      <anchorfile>classMagnum_1_1Renderer.html</anchorfile>
      <anchor>a9b9360ef2f1a8cd919f4394879ad77ae</anchor>
      <arglist>(LogicOperation operation)</arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>MemoryBarrier</name>
      <anchorfile>classMagnum_1_1Renderer.html</anchorfile>
      <anchor>a99ca2b638618eff069815a0a6971e8af</anchor>
      <arglist></arglist>
      <enumvalue file="classMagnum_1_1Renderer.html" anchor="a99ca2b638618eff069815a0a6971e8afa9c1e37497b1150cf1a57a141d327f119">VertexAttributeArray</enumvalue>
      <enumvalue file="classMagnum_1_1Renderer.html" anchor="a99ca2b638618eff069815a0a6971e8afa3726aa2adc65a493586528ddbd070204">ElementArray</enumvalue>
      <enumvalue file="classMagnum_1_1Renderer.html" anchor="a99ca2b638618eff069815a0a6971e8afaf19516d11f2946f894070e92fcb56b6d">Uniform</enumvalue>
      <enumvalue file="classMagnum_1_1Renderer.html" anchor="a99ca2b638618eff069815a0a6971e8afa3a41a29ef811be6590023852674ce727">TextureFetch</enumvalue>
      <enumvalue file="classMagnum_1_1Renderer.html" anchor="a99ca2b638618eff069815a0a6971e8afa24faf38819ef9ddb4fc2f5862023d07e">ShaderImageAccess</enumvalue>
      <enumvalue file="classMagnum_1_1Renderer.html" anchor="a99ca2b638618eff069815a0a6971e8afaee97be03cb04119af45014d815621ce1">Command</enumvalue>
      <enumvalue file="classMagnum_1_1Renderer.html" anchor="a99ca2b638618eff069815a0a6971e8afa231358dbe55a68ad269e1d263d514e54">PixelBuffer</enumvalue>
      <enumvalue file="classMagnum_1_1Renderer.html" anchor="a99ca2b638618eff069815a0a6971e8afa9543f643a50bea52d5ddfd485c0d2d05">TextureUpdate</enumvalue>
      <enumvalue file="classMagnum_1_1Renderer.html" anchor="a99ca2b638618eff069815a0a6971e8afa20639e7aec243042a146df0126031fe2">BufferUpdate</enumvalue>
      <enumvalue file="classMagnum_1_1Renderer.html" anchor="a99ca2b638618eff069815a0a6971e8afa42badd9e49002a3cefeaaf28867add83">Framebuffer</enumvalue>
      <enumvalue file="classMagnum_1_1Renderer.html" anchor="a99ca2b638618eff069815a0a6971e8afaf42c5721f003b0657f081141043576f6">TransformFeedback</enumvalue>
      <enumvalue file="classMagnum_1_1Renderer.html" anchor="a99ca2b638618eff069815a0a6971e8afa718568e47d2de4af4d51fc1114cb3583">AtomicCounter</enumvalue>
      <enumvalue file="classMagnum_1_1Renderer.html" anchor="a99ca2b638618eff069815a0a6971e8afa63d204f04170f5bbf958083589f6572f">ShaderStorage</enumvalue>
    </member>
    <member kind="typedef">
      <type>Containers::EnumSet&lt; MemoryBarrier &gt;</type>
      <name>MemoryBarriers</name>
      <anchorfile>classMagnum_1_1Renderer.html</anchorfile>
      <anchor>a6711c28f4445e12e0f3a42acbe8055fd</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>flush</name>
      <anchorfile>classMagnum_1_1Renderer.html</anchorfile>
      <anchor>ae0538416a330dc577931972d6f763bb9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>finish</name>
      <anchorfile>classMagnum_1_1Renderer.html</anchorfile>
      <anchor>a490718770f2820ad257a8588dbb7d189</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>setMemoryBarrier</name>
      <anchorfile>classMagnum_1_1Renderer.html</anchorfile>
      <anchor>a1ed3b6ff917e1e5a87ab61214061c7d0</anchor>
      <arglist>(MemoryBarriers barriers)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>setMemoryBarrierByRegion</name>
      <anchorfile>classMagnum_1_1Renderer.html</anchorfile>
      <anchor>a406b6481bc7c22156ef8b3fbae3b62b5</anchor>
      <arglist>(MemoryBarriers barriers)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>setTextureBarrier</name>
      <anchorfile>classMagnum_1_1Renderer.html</anchorfile>
      <anchor>acd6aac500cb384d2c83efa780d8c16c7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>Error</name>
      <anchorfile>classMagnum_1_1Renderer.html</anchorfile>
      <anchor>a0b9abbdf518aa9fb0158f7b5db51fb49</anchor>
      <arglist></arglist>
      <enumvalue file="classMagnum_1_1Renderer.html" anchor="a0b9abbdf518aa9fb0158f7b5db51fb49a70a47cae4eb221930f2663fd244369ea">NoError</enumvalue>
      <enumvalue file="classMagnum_1_1Renderer.html" anchor="a0b9abbdf518aa9fb0158f7b5db51fb49abaf0777e3144a52d6fd69816f4ac22c8">InvalidEnum</enumvalue>
      <enumvalue file="classMagnum_1_1Renderer.html" anchor="a0b9abbdf518aa9fb0158f7b5db51fb49a223e81e8afa42c41346a6696560ecc7b">InvalidValue</enumvalue>
      <enumvalue file="classMagnum_1_1Renderer.html" anchor="a0b9abbdf518aa9fb0158f7b5db51fb49a1cd5ecce6fe138df5c3f7e8854a1a66d">InvalidOperation</enumvalue>
      <enumvalue file="classMagnum_1_1Renderer.html" anchor="a0b9abbdf518aa9fb0158f7b5db51fb49a6db2cf069be94db4aef203851a04dfc5">InvalidFramebufferOperation</enumvalue>
      <enumvalue file="classMagnum_1_1Renderer.html" anchor="a0b9abbdf518aa9fb0158f7b5db51fb49ab498327feeb51430af73e07deac268fd">OutOfMemory</enumvalue>
      <enumvalue file="classMagnum_1_1Renderer.html" anchor="a0b9abbdf518aa9fb0158f7b5db51fb49a4ad9b4998eb87ae379db3fd52afd3075">StackUnderflow</enumvalue>
      <enumvalue file="classMagnum_1_1Renderer.html" anchor="a0b9abbdf518aa9fb0158f7b5db51fb49a84d7dc19766c446f5e4084e8fce87f82">StackOverflow</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>ResetNotificationStrategy</name>
      <anchorfile>classMagnum_1_1Renderer.html</anchorfile>
      <anchor>ad4f4c1faca969a1deb493cb1139d0805</anchor>
      <arglist></arglist>
      <enumvalue file="classMagnum_1_1Renderer.html" anchor="ad4f4c1faca969a1deb493cb1139d0805ac09912f69d7a5dc956fc096d47af37f8">NoResetNotification</enumvalue>
      <enumvalue file="classMagnum_1_1Renderer.html" anchor="ad4f4c1faca969a1deb493cb1139d0805a9f11bc17e2495cd2799702f8bb0a3578">LoseContextOnReset</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>GraphicsResetStatus</name>
      <anchorfile>classMagnum_1_1Renderer.html</anchorfile>
      <anchor>a2f4152d8d559f2b58512099bcfe88725</anchor>
      <arglist></arglist>
      <enumvalue file="classMagnum_1_1Renderer.html" anchor="a2f4152d8d559f2b58512099bcfe88725a70a47cae4eb221930f2663fd244369ea">NoError</enumvalue>
      <enumvalue file="classMagnum_1_1Renderer.html" anchor="a2f4152d8d559f2b58512099bcfe88725aa2b79ca50aa8753c550240352a2e4a3d">GuiltyContextReset</enumvalue>
      <enumvalue file="classMagnum_1_1Renderer.html" anchor="a2f4152d8d559f2b58512099bcfe88725ad20617a60ae9fd5eb4df3da499e2ca44">InnocentContextReset</enumvalue>
      <enumvalue file="classMagnum_1_1Renderer.html" anchor="a2f4152d8d559f2b58512099bcfe88725a6db42cace88a4f364ea72b5351a8294a">UnknownContextReset</enumvalue>
    </member>
    <member kind="function" static="yes">
      <type>static Error</type>
      <name>error</name>
      <anchorfile>classMagnum_1_1Renderer.html</anchorfile>
      <anchor>ab2f11c9daf12cbd8482b620639f85823</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static ResetNotificationStrategy</type>
      <name>resetNotificationStrategy</name>
      <anchorfile>classMagnum_1_1Renderer.html</anchorfile>
      <anchor>a739750bf630005be8fe7bf8a89c26cb5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GraphicsResetStatus</type>
      <name>graphicsResetStatus</name>
      <anchorfile>classMagnum_1_1Renderer.html</anchorfile>
      <anchor>a857f039f06ccb6bc482f8aaeef33976b</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Magnum::Resource</name>
    <filename>classMagnum_1_1Resource.html</filename>
    <templarg>T</templarg>
    <templarg>U</templarg>
    <member kind="function">
      <type></type>
      <name>Resource</name>
      <anchorfile>classMagnum_1_1Resource.html</anchorfile>
      <anchor>ab6e1f1b111342c493675cdeee71559a8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Resource</name>
      <anchorfile>classMagnum_1_1Resource.html</anchorfile>
      <anchor>aadfc7b76c1a904524f94b88bd3e4b9ec</anchor>
      <arglist>(const Resource&lt; T, U &gt; &amp;other)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Resource</name>
      <anchorfile>classMagnum_1_1Resource.html</anchorfile>
      <anchor>a28c9e646a89ef0e1b7aaf41bd2126a49</anchor>
      <arglist>(Resource&lt; T, U &gt; &amp;&amp;other)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~Resource</name>
      <anchorfile>classMagnum_1_1Resource.html</anchorfile>
      <anchor>acaa03453bcac81107851500b0cbf2391</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Resource&lt; T, U &gt; &amp;</type>
      <name>operator=</name>
      <anchorfile>classMagnum_1_1Resource.html</anchorfile>
      <anchor>a8f59ed76d3e4eb888959dba5efb853bd</anchor>
      <arglist>(const Resource&lt; T, U &gt; &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>Resource&lt; T, U &gt; &amp;</type>
      <name>operator=</name>
      <anchorfile>classMagnum_1_1Resource.html</anchorfile>
      <anchor>ac990bb8ae690e0a3b2df1126f7e9d064</anchor>
      <arglist>(Resource&lt; T, U &gt; &amp;&amp;other)</arglist>
    </member>
    <member kind="function">
      <type>ResourceKey</type>
      <name>key</name>
      <anchorfile>classMagnum_1_1Resource.html</anchorfile>
      <anchor>a692ee36d9dd046923c4f4c0d1e3d9b35</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>ResourceState</type>
      <name>state</name>
      <anchorfile>classMagnum_1_1Resource.html</anchorfile>
      <anchor>a6b5f26c073b9b9a03f2f66362c714e73</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator bool</name>
      <anchorfile>classMagnum_1_1Resource.html</anchorfile>
      <anchor>a20a00427fdb3862f1f00adadb604d15c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator U *</name>
      <anchorfile>classMagnum_1_1Resource.html</anchorfile>
      <anchor>ac17914776e1ab6dc20cd7ee443ed301f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>U &amp;</type>
      <name>operator*</name>
      <anchorfile>classMagnum_1_1Resource.html</anchorfile>
      <anchor>a037ff89f088feeb9cc6af72e228bb176</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>U *</type>
      <name>operator-&gt;</name>
      <anchorfile>classMagnum_1_1Resource.html</anchorfile>
      <anchor>a918bd916f8acbf70781b2f9af133e8b8</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Magnum::ResourceKey</name>
    <filename>classMagnum_1_1ResourceKey.html</filename>
    <member kind="function">
      <type>constexpr</type>
      <name>ResourceKey</name>
      <anchorfile>classMagnum_1_1ResourceKey.html</anchorfile>
      <anchor>a80ebc35bcd0f0c9a4c9a1b9bd18df6bf</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ResourceKey</name>
      <anchorfile>classMagnum_1_1ResourceKey.html</anchorfile>
      <anchor>a961e553adec4bd564683393517ab1671</anchor>
      <arglist>(std::size_t key)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ResourceKey</name>
      <anchorfile>classMagnum_1_1ResourceKey.html</anchorfile>
      <anchor>afeb8048c13bd9fd802d14e48494bb48e</anchor>
      <arglist>(const std::string &amp;key)</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>ResourceKey</name>
      <anchorfile>classMagnum_1_1ResourceKey.html</anchorfile>
      <anchor>ae7bf1ef01ce0dba14fc692c4f582b5a4</anchor>
      <arglist>(const char(&amp;key)[size])</arglist>
    </member>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>classMagnum_1_1ResourceKey.html</anchorfile>
      <anchor>af79e3aa47905863e951ac3a2ea29e229</anchor>
      <arglist>(Debug &amp;debug, const ResourceKey &amp;value)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Magnum::ResourceManager</name>
    <filename>classMagnum_1_1ResourceManager.html</filename>
    <templarg>Types</templarg>
    <member kind="function">
      <type></type>
      <name>ResourceManager</name>
      <anchorfile>classMagnum_1_1ResourceManager.html</anchorfile>
      <anchor>a25d160783144c133eb877c8d6aa9f939</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~ResourceManager</name>
      <anchorfile>classMagnum_1_1ResourceManager.html</anchorfile>
      <anchor>aa9c0647bafd7df3b3837b4813e1071fa</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::size_t</type>
      <name>count</name>
      <anchorfile>classMagnum_1_1ResourceManager.html</anchorfile>
      <anchor>a2f0908a8657f931ef3bc94d22a09f6d7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Resource&lt; T, U &gt;</type>
      <name>get</name>
      <anchorfile>classMagnum_1_1ResourceManager.html</anchorfile>
      <anchor>ad1153b6b6c1189cb91004b0c4c61738a</anchor>
      <arglist>(ResourceKey key)</arglist>
    </member>
    <member kind="function">
      <type>std::size_t</type>
      <name>referenceCount</name>
      <anchorfile>classMagnum_1_1ResourceManager.html</anchorfile>
      <anchor>a3145d8bbc82ccf4fd1e97fe06278d9bd</anchor>
      <arglist>(ResourceKey key) const </arglist>
    </member>
    <member kind="function">
      <type>ResourceState</type>
      <name>state</name>
      <anchorfile>classMagnum_1_1ResourceManager.html</anchorfile>
      <anchor>adb7e5daab4f700817871d6328e5a8997</anchor>
      <arglist>(ResourceKey key) const </arglist>
    </member>
    <member kind="function">
      <type>ResourceManager&lt; Types... &gt; &amp;</type>
      <name>set</name>
      <anchorfile>classMagnum_1_1ResourceManager.html</anchorfile>
      <anchor>ac6c9c3c5bb05dc3a3b5554334fed9d83</anchor>
      <arglist>(ResourceKey key, T *data, ResourceDataState state, ResourcePolicy policy)</arglist>
    </member>
    <member kind="function">
      <type>ResourceManager&lt; Types... &gt; &amp;</type>
      <name>set</name>
      <anchorfile>classMagnum_1_1ResourceManager.html</anchorfile>
      <anchor>a88eda953e109318ed301ccb91830a024</anchor>
      <arglist>(ResourceKey key, U &amp;&amp;data, ResourceDataState state, ResourcePolicy policy)</arglist>
    </member>
    <member kind="function">
      <type>ResourceManager&lt; Types... &gt; &amp;</type>
      <name>set</name>
      <anchorfile>classMagnum_1_1ResourceManager.html</anchorfile>
      <anchor>a960eb341f146cebba3429f0cc32f4ea1</anchor>
      <arglist>(ResourceKey key, T *data)</arglist>
    </member>
    <member kind="function">
      <type>ResourceManager&lt; Types... &gt; &amp;</type>
      <name>set</name>
      <anchorfile>classMagnum_1_1ResourceManager.html</anchorfile>
      <anchor>a5896cd6ca5bc762efd13aea200380da3</anchor>
      <arglist>(ResourceKey key, U &amp;&amp;data)</arglist>
    </member>
    <member kind="function">
      <type>T *</type>
      <name>fallback</name>
      <anchorfile>classMagnum_1_1ResourceManager.html</anchorfile>
      <anchor>a099b0855d48836741bc8ada7e941df37</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const T *</type>
      <name>fallback</name>
      <anchorfile>classMagnum_1_1ResourceManager.html</anchorfile>
      <anchor>a1b4a90cac4a58e8ccf6380696b1c832d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>ResourceManager&lt; Types... &gt; &amp;</type>
      <name>setFallback</name>
      <anchorfile>classMagnum_1_1ResourceManager.html</anchorfile>
      <anchor>a3dddc7be574c010c93b36601640d6404</anchor>
      <arglist>(T *data)</arglist>
    </member>
    <member kind="function">
      <type>ResourceManager&lt; Types... &gt; &amp;</type>
      <name>setFallback</name>
      <anchorfile>classMagnum_1_1ResourceManager.html</anchorfile>
      <anchor>a91a480b8e3bed251306918a2cb414682</anchor>
      <arglist>(U &amp;&amp;data)</arglist>
    </member>
    <member kind="function">
      <type>ResourceManager&lt; Types... &gt; &amp;</type>
      <name>free</name>
      <anchorfile>classMagnum_1_1ResourceManager.html</anchorfile>
      <anchor>a55efbf88f3640274b675347eb6677c05</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>ResourceManager&lt; Types... &gt; &amp;</type>
      <name>free</name>
      <anchorfile>classMagnum_1_1ResourceManager.html</anchorfile>
      <anchor>abe46f13c5ea07ce85ffb820f1d9559c4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>ResourceManager&lt; Types... &gt; &amp;</type>
      <name>clear</name>
      <anchorfile>classMagnum_1_1ResourceManager.html</anchorfile>
      <anchor>a8abe4e44370beb2aea4efc9005981062</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>ResourceManager&lt; Types... &gt; &amp;</type>
      <name>clear</name>
      <anchorfile>classMagnum_1_1ResourceManager.html</anchorfile>
      <anchor>ab875f4ef82a9ba033a2e508f92027166</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>AbstractResourceLoader&lt; T &gt; *</type>
      <name>loader</name>
      <anchorfile>classMagnum_1_1ResourceManager.html</anchorfile>
      <anchor>aad7fe6159fca5a7f3293f3e618d5e1f3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const AbstractResourceLoader&lt; T &gt; *</type>
      <name>loader</name>
      <anchorfile>classMagnum_1_1ResourceManager.html</anchorfile>
      <anchor>a7134efdd9801ddb55d806d8d1879855f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>ResourceManager&lt; Types... &gt; &amp;</type>
      <name>setLoader</name>
      <anchorfile>classMagnum_1_1ResourceManager.html</anchorfile>
      <anchor>a8d4ce90a9cf2dc1328721e418f8e0a31</anchor>
      <arglist>(AbstractResourceLoader&lt; T &gt; *loader)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static ResourceManager&lt; Types... &gt; &amp;</type>
      <name>instance</name>
      <anchorfile>classMagnum_1_1ResourceManager.html</anchorfile>
      <anchor>ad3aaf3af1453af97dfd57b296bd70a90</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Magnum::SampleQuery</name>
    <filename>classMagnum_1_1SampleQuery.html</filename>
    <base>Magnum::AbstractQuery</base>
    <member kind="enumeration">
      <type></type>
      <name>Target</name>
      <anchorfile>classMagnum_1_1SampleQuery.html</anchorfile>
      <anchor>a383c7670f27a4d18d374347c842586ad</anchor>
      <arglist></arglist>
      <enumvalue file="classMagnum_1_1SampleQuery.html" anchor="a383c7670f27a4d18d374347c842586ada54b43ab4bcabef00ca9685071f9f7ca9">SamplesPassed</enumvalue>
      <enumvalue file="classMagnum_1_1SampleQuery.html" anchor="a383c7670f27a4d18d374347c842586adad9d4f2fa1ac91914ea2db06fd5a16dd1">AnySamplesPassed</enumvalue>
      <enumvalue file="classMagnum_1_1SampleQuery.html" anchor="a383c7670f27a4d18d374347c842586ada7394e2930777769fd60c01b34213051a">AnySamplesPassedConservative</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>ConditionalRenderMode</name>
      <anchorfile>classMagnum_1_1SampleQuery.html</anchorfile>
      <anchor>ade73f28f0179d4a948f337abeed9aaaf</anchor>
      <arglist></arglist>
      <enumvalue file="classMagnum_1_1SampleQuery.html" anchor="ade73f28f0179d4a948f337abeed9aaafa0f68101772bd5397ef8eb1b632798652">Wait</enumvalue>
      <enumvalue file="classMagnum_1_1SampleQuery.html" anchor="ade73f28f0179d4a948f337abeed9aaafae7a55c6ed1939617537247d7dba3fce7">WaitInverted</enumvalue>
      <enumvalue file="classMagnum_1_1SampleQuery.html" anchor="ade73f28f0179d4a948f337abeed9aaafaa79651554c2676976f6848a999d84aac">NoWait</enumvalue>
      <enumvalue file="classMagnum_1_1SampleQuery.html" anchor="ade73f28f0179d4a948f337abeed9aaafa48921ec2c5731edb34e04236d142ddf1">NoWaitInverted</enumvalue>
      <enumvalue file="classMagnum_1_1SampleQuery.html" anchor="ade73f28f0179d4a948f337abeed9aaafa4c6501c4d8976d9221a388263f903b5e">ByRegionWait</enumvalue>
      <enumvalue file="classMagnum_1_1SampleQuery.html" anchor="ade73f28f0179d4a948f337abeed9aaafa2e36dc1aa2f73d40cdecd959a5c7f4c6">ByRegionWaitInverted</enumvalue>
      <enumvalue file="classMagnum_1_1SampleQuery.html" anchor="ade73f28f0179d4a948f337abeed9aaafa1b8df86cdda06c9edf4923bc2018092b">ByRegionNoWait</enumvalue>
      <enumvalue file="classMagnum_1_1SampleQuery.html" anchor="ade73f28f0179d4a948f337abeed9aaafa21e387e80478d49286efae1aed6f202c">ByRegionNoWaitInverted</enumvalue>
    </member>
    <member kind="function">
      <type></type>
      <name>SampleQuery</name>
      <anchorfile>classMagnum_1_1SampleQuery.html</anchorfile>
      <anchor>ab71d136d0063d75ece7e771805dee49a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SampleQuery</name>
      <anchorfile>classMagnum_1_1SampleQuery.html</anchorfile>
      <anchor>a3c2d1042018d05917c21cca99c844a66</anchor>
      <arglist>(Target target)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SampleQuery</name>
      <anchorfile>classMagnum_1_1SampleQuery.html</anchorfile>
      <anchor>a76b959b4e904efbf9e960d293906f9ca</anchor>
      <arglist>(NoCreateT) noexcept</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>begin</name>
      <anchorfile>classMagnum_1_1SampleQuery.html</anchorfile>
      <anchor>a62a4216538fb466674aefa4d69e1adec</anchor>
      <arglist>(Target target)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>beginConditionalRender</name>
      <anchorfile>classMagnum_1_1SampleQuery.html</anchorfile>
      <anchor>a99680c18aa23498064dad2e43a900291</anchor>
      <arglist>(ConditionalRenderMode mode)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>endConditionalRender</name>
      <anchorfile>classMagnum_1_1SampleQuery.html</anchorfile>
      <anchor>a5006e8b85d68110927589534e8ab77c9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>begin</name>
      <anchorfile>classMagnum_1_1SampleQuery.html</anchorfile>
      <anchor>aed5cc4a7b22bd473e30f03666f58e8e3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static SampleQuery</type>
      <name>wrap</name>
      <anchorfile>classMagnum_1_1SampleQuery.html</anchorfile>
      <anchor>a28a15d02feaed3fe1c74a5bb79528249</anchor>
      <arglist>(GLuint id, Target target, ObjectFlags flags={})</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Magnum::Sampler</name>
    <filename>classMagnum_1_1Sampler.html</filename>
    <member kind="enumeration">
      <type></type>
      <name>Filter</name>
      <anchorfile>classMagnum_1_1Sampler.html</anchorfile>
      <anchor>a718f25b75b6d47d98892644bde91a6a2</anchor>
      <arglist></arglist>
      <enumvalue file="classMagnum_1_1Sampler.html" anchor="a718f25b75b6d47d98892644bde91a6a2a60494f02d440f316319dd0fad40ad007">Nearest</enumvalue>
      <enumvalue file="classMagnum_1_1Sampler.html" anchor="a718f25b75b6d47d98892644bde91a6a2a32a843da6ea40ab3b17a3421ccdf671b">Linear</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>Mipmap</name>
      <anchorfile>classMagnum_1_1Sampler.html</anchorfile>
      <anchor>a29191ed3dc8bc783101fa6522508b43a</anchor>
      <arglist></arglist>
      <enumvalue file="classMagnum_1_1Sampler.html" anchor="a29191ed3dc8bc783101fa6522508b43aa095a1b43effec73955e31e790438de49">Base</enumvalue>
      <enumvalue file="classMagnum_1_1Sampler.html" anchor="a29191ed3dc8bc783101fa6522508b43aa60494f02d440f316319dd0fad40ad007">Nearest</enumvalue>
      <enumvalue file="classMagnum_1_1Sampler.html" anchor="a29191ed3dc8bc783101fa6522508b43aa32a843da6ea40ab3b17a3421ccdf671b">Linear</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>Wrapping</name>
      <anchorfile>classMagnum_1_1Sampler.html</anchorfile>
      <anchor>af0178e2642f810016b875f2ac215d95d</anchor>
      <arglist></arglist>
      <enumvalue file="classMagnum_1_1Sampler.html" anchor="af0178e2642f810016b875f2ac215d95da7020426cfb0a204051be4b3053d2acc8">Repeat</enumvalue>
      <enumvalue file="classMagnum_1_1Sampler.html" anchor="af0178e2642f810016b875f2ac215d95da12ce4a5977988214a6b098b8cb0bf695">MirroredRepeat</enumvalue>
      <enumvalue file="classMagnum_1_1Sampler.html" anchor="af0178e2642f810016b875f2ac215d95da74556551231333c36debc3d373261134">ClampToEdge</enumvalue>
      <enumvalue file="classMagnum_1_1Sampler.html" anchor="af0178e2642f810016b875f2ac215d95dafb07f88f6f11cc5ab9c951290716f147">ClampToBorder</enumvalue>
      <enumvalue file="classMagnum_1_1Sampler.html" anchor="af0178e2642f810016b875f2ac215d95da01f488e80fc32761aecfbeb3d1c8f26b">MirrorClampToEdge</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>CompareMode</name>
      <anchorfile>classMagnum_1_1Sampler.html</anchorfile>
      <anchor>a0aca71480708aa673f60ab3a6aa6388a</anchor>
      <arglist></arglist>
      <enumvalue file="classMagnum_1_1Sampler.html" anchor="a0aca71480708aa673f60ab3a6aa6388aa6adf97f83acf6453d4a6a4b1070f3754">None</enumvalue>
      <enumvalue file="classMagnum_1_1Sampler.html" anchor="a0aca71480708aa673f60ab3a6aa6388aa55f2b6a9ca7e6205c9f597b7080c7e2f">CompareRefToTexture</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>CompareFunction</name>
      <anchorfile>classMagnum_1_1Sampler.html</anchorfile>
      <anchor>aeb64d79ca9e16256ead15b145e187098</anchor>
      <arglist></arglist>
      <enumvalue file="classMagnum_1_1Sampler.html" anchor="aeb64d79ca9e16256ead15b145e187098a6e7b34fa59e1bd229b207892956dc41c">Never</enumvalue>
      <enumvalue file="classMagnum_1_1Sampler.html" anchor="aeb64d79ca9e16256ead15b145e187098a68eec46437c384d8dad18d5464ebc35c">Always</enumvalue>
      <enumvalue file="classMagnum_1_1Sampler.html" anchor="aeb64d79ca9e16256ead15b145e187098a1cfdf0e8d0c87a228c1f40d9bee7888b">Less</enumvalue>
      <enumvalue file="classMagnum_1_1Sampler.html" anchor="aeb64d79ca9e16256ead15b145e187098aa4cbdbb6070a5abb35fc95ecf1e22c14">LessOrEqual</enumvalue>
      <enumvalue file="classMagnum_1_1Sampler.html" anchor="aeb64d79ca9e16256ead15b145e187098af5f286e73bda105e538310b3190f75c5">Equal</enumvalue>
      <enumvalue file="classMagnum_1_1Sampler.html" anchor="aeb64d79ca9e16256ead15b145e187098a19bb0af2c3c530538cb41aff7f235b96">NotEqual</enumvalue>
      <enumvalue file="classMagnum_1_1Sampler.html" anchor="aeb64d79ca9e16256ead15b145e187098a6f2f0aefb3d22da0f3839453add5f937">GreaterOrEqual</enumvalue>
      <enumvalue file="classMagnum_1_1Sampler.html" anchor="aeb64d79ca9e16256ead15b145e187098a8768a6821cd735aea4f5b0df88c1fc6a">Greater</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>DepthStencilMode</name>
      <anchorfile>classMagnum_1_1Sampler.html</anchorfile>
      <anchor>a8577f13af3a6a8a3d76a93e3b5990a45</anchor>
      <arglist></arglist>
      <enumvalue file="classMagnum_1_1Sampler.html" anchor="a8577f13af3a6a8a3d76a93e3b5990a45a19c8f1ee3a700e77e87053eee47f6bc8">DepthComponent</enumvalue>
      <enumvalue file="classMagnum_1_1Sampler.html" anchor="a8577f13af3a6a8a3d76a93e3b5990a45ac07ade4f9906db3ee8e4e7053dac1dee">StencilIndex</enumvalue>
    </member>
    <member kind="function" static="yes">
      <type>static Float</type>
      <name>maxMaxAnisotropy</name>
      <anchorfile>classMagnum_1_1Sampler.html</anchorfile>
      <anchor>a0d5c0d86c59a857390bf75442d25097c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>classMagnum_1_1Sampler.html</anchorfile>
      <anchor>a5bca7b2fd3e0d6816c5652267f8079c1</anchor>
      <arglist>(Debug &amp;debug, Sampler::Filter value)</arglist>
    </member>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>classMagnum_1_1Sampler.html</anchorfile>
      <anchor>ae5c6fc0d71ff3d74d3f4b90dbfef1d88</anchor>
      <arglist>(Debug &amp;debug, Sampler::Mipmap value)</arglist>
    </member>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>classMagnum_1_1Sampler.html</anchorfile>
      <anchor>ace21573458a560752b4fb03849511f6b</anchor>
      <arglist>(Debug &amp;debug, Sampler::Wrapping value)</arglist>
    </member>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>classMagnum_1_1Sampler.html</anchorfile>
      <anchor>ae45b4c75690c3eafb4c65c1874ef78ec</anchor>
      <arglist>(Debug &amp;debug, Sampler::CompareMode value)</arglist>
    </member>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>classMagnum_1_1Sampler.html</anchorfile>
      <anchor>a0e03d2522cbe925f70e0187d0658a9e6</anchor>
      <arglist>(Debug &amp;debug, Sampler::CompareFunction value)</arglist>
    </member>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>classMagnum_1_1Sampler.html</anchorfile>
      <anchor>a657ebfc7cc47efce2d5c377b1f9ec362</anchor>
      <arglist>(Debug &amp;debug, Sampler::DepthStencilMode value)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Magnum::SceneGraph::AbstractBasicTranslationRotation2D</name>
    <filename>classMagnum_1_1SceneGraph_1_1AbstractBasicTranslationRotation2D.html</filename>
    <templarg></templarg>
    <base>Magnum::SceneGraph::AbstractTranslation</base>
    <member kind="function">
      <type>AbstractBasicTranslationRotation2D&lt; T &gt; &amp;</type>
      <name>rotate</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1AbstractBasicTranslationRotation2D.html</anchorfile>
      <anchor>a9ab46d798624ad339c327b16492fecba</anchor>
      <arglist>(Math::Rad&lt; T &gt; angle)</arglist>
    </member>
    <member kind="function">
      <type>AbstractBasicTranslationRotation2D&lt; T &gt; &amp;</type>
      <name>rotateLocal</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1AbstractBasicTranslationRotation2D.html</anchorfile>
      <anchor>aa5a76f29510aa14a150bad9b37568baa</anchor>
      <arglist>(Math::Rad&lt; T &gt; angle)</arglist>
    </member>
    <member kind="function">
      <type>AbstractBasicTranslationRotation2D&lt; T &gt; &amp;</type>
      <name>rotate</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1AbstractBasicTranslationRotation2D.html</anchorfile>
      <anchor>acb7d918570d2743545babc7334f29948</anchor>
      <arglist>(Math::Rad&lt; T &gt; angle, TransformationType type)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual void</type>
      <name>doRotate</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1AbstractBasicTranslationRotation2D.html</anchorfile>
      <anchor>aae4cee3694c1b570dd5bcc0bcac11c9f</anchor>
      <arglist>(Math::Rad&lt; T &gt; angle)=0</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual void</type>
      <name>doRotateLocal</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1AbstractBasicTranslationRotation2D.html</anchorfile>
      <anchor>a974eaaf0f1144de9c6229a52ee7f0a91</anchor>
      <arglist>(Math::Rad&lt; T &gt; angle)=0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Magnum::SceneGraph::AbstractBasicTranslationRotation3D</name>
    <filename>classMagnum_1_1SceneGraph_1_1AbstractBasicTranslationRotation3D.html</filename>
    <templarg>T</templarg>
    <base>Magnum::SceneGraph::AbstractTranslation</base>
    <member kind="function">
      <type>AbstractBasicTranslationRotation3D&lt; T &gt; &amp;</type>
      <name>rotate</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1AbstractBasicTranslationRotation3D.html</anchorfile>
      <anchor>a0bd51880d3a81804056476390a0a6107</anchor>
      <arglist>(Math::Rad&lt; T &gt; angle, const Math::Vector3&lt; T &gt; &amp;normalizedAxis)</arglist>
    </member>
    <member kind="function">
      <type>AbstractBasicTranslationRotation3D&lt; T &gt; &amp;</type>
      <name>rotateLocal</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1AbstractBasicTranslationRotation3D.html</anchorfile>
      <anchor>a82e9eb5eef081b6c8456185c0f3a2cf9</anchor>
      <arglist>(Math::Rad&lt; T &gt; angle, const Math::Vector3&lt; T &gt; &amp;normalizedAxis)</arglist>
    </member>
    <member kind="function">
      <type>AbstractBasicTranslationRotation3D&lt; T &gt; &amp;</type>
      <name>rotate</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1AbstractBasicTranslationRotation3D.html</anchorfile>
      <anchor>a2d2398d9b6c1bc62bd17025cfa25923d</anchor>
      <arglist>(Math::Rad&lt; T &gt; angle, const Math::Vector3&lt; T &gt; &amp;normalizedAxis, TransformationType type)</arglist>
    </member>
    <member kind="function">
      <type>AbstractBasicTranslationRotation3D&lt; T &gt; &amp;</type>
      <name>rotateX</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1AbstractBasicTranslationRotation3D.html</anchorfile>
      <anchor>a64f7281a7cf5a346bdd17c361462149a</anchor>
      <arglist>(Math::Rad&lt; T &gt; angle)</arglist>
    </member>
    <member kind="function">
      <type>AbstractBasicTranslationRotation3D&lt; T &gt; &amp;</type>
      <name>rotateXLocal</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1AbstractBasicTranslationRotation3D.html</anchorfile>
      <anchor>aa474a071ab087ea66f66e05534467af2</anchor>
      <arglist>(Math::Rad&lt; T &gt; angle)</arglist>
    </member>
    <member kind="function">
      <type>AbstractBasicTranslationRotation3D&lt; T &gt; &amp;</type>
      <name>rotateX</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1AbstractBasicTranslationRotation3D.html</anchorfile>
      <anchor>a2cca30e9632d9d56b71de76b13df47b7</anchor>
      <arglist>(Math::Rad&lt; T &gt; angle, TransformationType type)</arglist>
    </member>
    <member kind="function">
      <type>AbstractBasicTranslationRotation3D&lt; T &gt; &amp;</type>
      <name>rotateY</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1AbstractBasicTranslationRotation3D.html</anchorfile>
      <anchor>a173e0633663b8b735042b2937e12b0c3</anchor>
      <arglist>(Math::Rad&lt; T &gt; angle)</arglist>
    </member>
    <member kind="function">
      <type>AbstractBasicTranslationRotation3D&lt; T &gt; &amp;</type>
      <name>rotateYLocal</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1AbstractBasicTranslationRotation3D.html</anchorfile>
      <anchor>ad80f968e497178612267004c0873235b</anchor>
      <arglist>(Math::Rad&lt; T &gt; angle)</arglist>
    </member>
    <member kind="function">
      <type>AbstractBasicTranslationRotation3D&lt; T &gt; &amp;</type>
      <name>rotateY</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1AbstractBasicTranslationRotation3D.html</anchorfile>
      <anchor>a36d705dcfbc546dd79791373a5bdd848</anchor>
      <arglist>(Math::Rad&lt; T &gt; angle, TransformationType type)</arglist>
    </member>
    <member kind="function">
      <type>AbstractBasicTranslationRotation3D&lt; T &gt; &amp;</type>
      <name>rotateZ</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1AbstractBasicTranslationRotation3D.html</anchorfile>
      <anchor>a3d8f9942fcba8fb49ea2ea7d928d6422</anchor>
      <arglist>(Math::Rad&lt; T &gt; angle)</arglist>
    </member>
    <member kind="function">
      <type>AbstractBasicTranslationRotation3D&lt; T &gt; &amp;</type>
      <name>rotateZLocal</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1AbstractBasicTranslationRotation3D.html</anchorfile>
      <anchor>a82fe5b472338a31166abdbcd47e2bd5e</anchor>
      <arglist>(Math::Rad&lt; T &gt; angle)</arglist>
    </member>
    <member kind="function">
      <type>AbstractBasicTranslationRotation3D&lt; T &gt; &amp;</type>
      <name>rotateZ</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1AbstractBasicTranslationRotation3D.html</anchorfile>
      <anchor>aed51880474fd556821f99231e49b8bc6</anchor>
      <arglist>(Math::Rad&lt; T &gt; angle, TransformationType type)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual void</type>
      <name>doRotate</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1AbstractBasicTranslationRotation3D.html</anchorfile>
      <anchor>ad0a53ace7dace831a04645b506e38b3b</anchor>
      <arglist>(Math::Rad&lt; T &gt; angle, const Math::Vector3&lt; T &gt; &amp;normalizedAxis)=0</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual void</type>
      <name>doRotateLocal</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1AbstractBasicTranslationRotation3D.html</anchorfile>
      <anchor>ad1fd68194dd06f6eca323ccc01356914</anchor>
      <arglist>(Math::Rad&lt; T &gt; angle, const Math::Vector3&lt; T &gt; &amp;normalizedAxis)=0</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>doRotateX</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1AbstractBasicTranslationRotation3D.html</anchorfile>
      <anchor>ad1c6934dbd6184e051cdf68ecc7bff9d</anchor>
      <arglist>(Math::Rad&lt; T &gt; angle)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>doRotateXLocal</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1AbstractBasicTranslationRotation3D.html</anchorfile>
      <anchor>ae178eb9da782ad4dd49dfae458919c65</anchor>
      <arglist>(Math::Rad&lt; T &gt; angle)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>doRotateY</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1AbstractBasicTranslationRotation3D.html</anchorfile>
      <anchor>a5029eaa35ec05d318f49af5aa7226494</anchor>
      <arglist>(Math::Rad&lt; T &gt; angle)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>doRotateYLocal</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1AbstractBasicTranslationRotation3D.html</anchorfile>
      <anchor>a731255196c113375304ac8f668da2efe</anchor>
      <arglist>(Math::Rad&lt; T &gt; angle)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>doRotateZ</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1AbstractBasicTranslationRotation3D.html</anchorfile>
      <anchor>a87ca173ab4afe918be59544ca749d41d</anchor>
      <arglist>(Math::Rad&lt; T &gt; angle)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>doRotateZLocal</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1AbstractBasicTranslationRotation3D.html</anchorfile>
      <anchor>aa72727d90a1e236694992d65c6f88012</anchor>
      <arglist>(Math::Rad&lt; T &gt; angle)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Magnum::SceneGraph::AbstractBasicTranslationRotationScaling2D</name>
    <filename>classMagnum_1_1SceneGraph_1_1AbstractBasicTranslationRotationScaling2D.html</filename>
    <templarg></templarg>
    <base>Magnum::SceneGraph::AbstractBasicTranslationRotation2D</base>
    <member kind="function">
      <type>AbstractBasicTranslationRotationScaling2D&lt; T &gt; &amp;</type>
      <name>scale</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1AbstractBasicTranslationRotationScaling2D.html</anchorfile>
      <anchor>a43306672971d960e742956eef3f88db5</anchor>
      <arglist>(const Math::Vector2&lt; T &gt; &amp;vector)</arglist>
    </member>
    <member kind="function">
      <type>AbstractBasicTranslationRotationScaling2D&lt; T &gt; &amp;</type>
      <name>scaleLocal</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1AbstractBasicTranslationRotationScaling2D.html</anchorfile>
      <anchor>adc3c925300c7087c7f6c5b2f68fbcf46</anchor>
      <arglist>(const Math::Vector2&lt; T &gt; &amp;vector)</arglist>
    </member>
    <member kind="function">
      <type>AbstractBasicTranslationRotationScaling2D&lt; T &gt; &amp;</type>
      <name>scale</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1AbstractBasicTranslationRotationScaling2D.html</anchorfile>
      <anchor>af96265c5fdd52f73af8917aeec65b836</anchor>
      <arglist>(const Math::Vector2&lt; T &gt; &amp;vector, TransformationType type)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual void</type>
      <name>doScale</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1AbstractBasicTranslationRotationScaling2D.html</anchorfile>
      <anchor>a4fececff7bd5b2960e9f92751059c285</anchor>
      <arglist>(const Math::Vector2&lt; T &gt; &amp;vector)=0</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual void</type>
      <name>doScaleLocal</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1AbstractBasicTranslationRotationScaling2D.html</anchorfile>
      <anchor>aaa28c3d95dd34fba7870cd4c96e2cecd</anchor>
      <arglist>(const Math::Vector2&lt; T &gt; &amp;vector)=0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Magnum::SceneGraph::AbstractBasicTranslationRotationScaling3D</name>
    <filename>classMagnum_1_1SceneGraph_1_1AbstractBasicTranslationRotationScaling3D.html</filename>
    <templarg></templarg>
    <base>Magnum::SceneGraph::AbstractBasicTranslationRotation3D</base>
    <member kind="function">
      <type>AbstractBasicTranslationRotationScaling3D&lt; T &gt; &amp;</type>
      <name>scale</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1AbstractBasicTranslationRotationScaling3D.html</anchorfile>
      <anchor>a6116f24ecd36d1630f5646701cc7022f</anchor>
      <arglist>(const Math::Vector3&lt; T &gt; &amp;vector)</arglist>
    </member>
    <member kind="function">
      <type>AbstractBasicTranslationRotationScaling3D&lt; T &gt; &amp;</type>
      <name>scaleLocal</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1AbstractBasicTranslationRotationScaling3D.html</anchorfile>
      <anchor>a5ea5aad54eabe1046d34da359d37a0df</anchor>
      <arglist>(const Math::Vector3&lt; T &gt; &amp;vector)</arglist>
    </member>
    <member kind="function">
      <type>AbstractBasicTranslationRotationScaling3D&lt; T &gt; &amp;</type>
      <name>scale</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1AbstractBasicTranslationRotationScaling3D.html</anchorfile>
      <anchor>a1806844528dd996321ee4c53f310cbd2</anchor>
      <arglist>(const Math::Vector3&lt; T &gt; &amp;vector, TransformationType type)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual void</type>
      <name>doScale</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1AbstractBasicTranslationRotationScaling3D.html</anchorfile>
      <anchor>a597453e2e3e4e65feac5e25ab2fbd3f6</anchor>
      <arglist>(const Math::Vector3&lt; T &gt; &amp;vector)=0</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual void</type>
      <name>doScaleLocal</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1AbstractBasicTranslationRotationScaling3D.html</anchorfile>
      <anchor>ab2301eb63018f23885456685189f070e</anchor>
      <arglist>(const Math::Vector3&lt; T &gt; &amp;vector)=0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Magnum::SceneGraph::AbstractFeature</name>
    <filename>classMagnum_1_1SceneGraph_1_1AbstractFeature.html</filename>
    <templarg>dimensions</templarg>
    <templarg>T</templarg>
    <member kind="function">
      <type></type>
      <name>AbstractFeature</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1AbstractFeature.html</anchorfile>
      <anchor>a78a530462af23b21680c6aa75685c252</anchor>
      <arglist>(AbstractObject&lt; dimensions, T &gt; &amp;object)</arglist>
    </member>
    <member kind="function">
      <type>AbstractObject&lt; dimensions, T &gt; &amp;</type>
      <name>object</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1AbstractFeature.html</anchorfile>
      <anchor>adc44a031112415d9cd010380fc670b6f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const AbstractObject&lt; dimensions, T &gt; &amp;</type>
      <name>object</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1AbstractFeature.html</anchorfile>
      <anchor>a525e96b63f8e0ad224f7d8f9ed7059cb</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>AbstractFeature&lt; dimensions, T &gt; *</type>
      <name>previousFeature</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1AbstractFeature.html</anchorfile>
      <anchor>abe61d4c55eda93fdb415a3734b9a45d4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const AbstractFeature&lt; dimensions, T &gt; *</type>
      <name>previousFeature</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1AbstractFeature.html</anchorfile>
      <anchor>a76aea9de17b4af7d0e8d5b9452d03677</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>AbstractFeature&lt; dimensions, T &gt; *</type>
      <name>nextFeature</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1AbstractFeature.html</anchorfile>
      <anchor>a1647868b435f6b609f26bccecf38194a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const AbstractFeature&lt; dimensions, T &gt; *</type>
      <name>nextFeature</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1AbstractFeature.html</anchorfile>
      <anchor>ab4fd5c13cf364305908a4809f412eab2</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>CachedTransformations</type>
      <name>cachedTransformations</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1AbstractFeature.html</anchorfile>
      <anchor>ae9738f358e3822026145969b2f76dbe0</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>setCachedTransformations</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1AbstractFeature.html</anchorfile>
      <anchor>a4b357ec06a582d0eef270eca88134a33</anchor>
      <arglist>(CachedTransformations transformations)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>markDirty</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1AbstractFeature.html</anchorfile>
      <anchor>af0c9721f8f2614db3364575d58695263</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>clean</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1AbstractFeature.html</anchorfile>
      <anchor>ac7f9f08cd976bc728589cc5eb607b814</anchor>
      <arglist>(const MatrixTypeFor&lt; dimensions, T &gt; &amp;absoluteTransformationMatrix)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>cleanInverted</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1AbstractFeature.html</anchorfile>
      <anchor>a38a4e3c18ff8a2636a533af17f6f79db</anchor>
      <arglist>(const MatrixTypeFor&lt; dimensions, T &gt; &amp;invertedAbsoluteTransformationMatrix)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Magnum::SceneGraph::AbstractFeatureGroup</name>
    <filename>classMagnum_1_1SceneGraph_1_1AbstractFeatureGroup.html</filename>
    <templarg>dimensions</templarg>
    <templarg>T</templarg>
  </compound>
  <compound kind="class">
    <name>Magnum::SceneGraph::AbstractGroupedFeature</name>
    <filename>classMagnum_1_1SceneGraph_1_1AbstractGroupedFeature.html</filename>
    <templarg>dimensions</templarg>
    <templarg>Derived</templarg>
    <templarg>T</templarg>
    <base>Magnum::SceneGraph::AbstractFeature</base>
    <member kind="function">
      <type></type>
      <name>AbstractGroupedFeature</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1AbstractGroupedFeature.html</anchorfile>
      <anchor>a2c0d4b144aea6e54c7a12fb0a8965827</anchor>
      <arglist>(AbstractObject&lt; dimensions, T &gt; &amp;object, FeatureGroup&lt; dimensions, Derived, T &gt; *group=nullptr)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~AbstractGroupedFeature</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1AbstractGroupedFeature.html</anchorfile>
      <anchor>ad05374ec9886805cd53d6f32f0a2dedd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>FeatureGroup&lt; dimensions, Derived, T &gt; *</type>
      <name>group</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1AbstractGroupedFeature.html</anchorfile>
      <anchor>a670e9a5ed8e81ed9ea5b819e3af01ee6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const FeatureGroup&lt; dimensions, Derived, T &gt; *</type>
      <name>group</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1AbstractGroupedFeature.html</anchorfile>
      <anchor>aef1a64d67e5ca02b3424cd380b398fb6</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Magnum::SceneGraph::AbstractObject</name>
    <filename>classMagnum_1_1SceneGraph_1_1AbstractObject.html</filename>
    <templarg>dimensions</templarg>
    <templarg>T</templarg>
    <member kind="typedef">
      <type>MatrixTypeFor&lt; dimensions, T &gt;</type>
      <name>MatrixType</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1AbstractObject.html</anchorfile>
      <anchor>aea88321960cf363a0b35952364d1ab3c</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>AbstractFeature&lt; dimensions, T &gt;</type>
      <name>FeatureType</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1AbstractObject.html</anchorfile>
      <anchor>ae8eb1f97426f2316226d1977ac762664</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>Containers::LinkedList&lt; AbstractFeature&lt; dimensions, T &gt; &gt; &amp;</type>
      <name>features</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1AbstractObject.html</anchorfile>
      <anchor>aa663eab19821dcb91e48d2f09eb4661f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const Containers::LinkedList&lt; AbstractFeature&lt; dimensions, T &gt; &gt; &amp;</type>
      <name>features</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1AbstractObject.html</anchorfile>
      <anchor>a0a50acca5095237046e0e122eee49ecd</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>hasFeatures</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1AbstractObject.html</anchorfile>
      <anchor>a99e1045b5871bf9cb4025a2218a0eccf</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>FeatureType *</type>
      <name>firstFeature</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1AbstractObject.html</anchorfile>
      <anchor>a12a5fc6a9dbba55dee974da1f2c5246a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const FeatureType *</type>
      <name>firstFeature</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1AbstractObject.html</anchorfile>
      <anchor>a9a0bd06208c6e79b542d1abaa7fffd91</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>FeatureType *</type>
      <name>lastFeature</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1AbstractObject.html</anchorfile>
      <anchor>a53945f3ebd1275eceee089760a1b5e7c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const FeatureType *</type>
      <name>lastFeature</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1AbstractObject.html</anchorfile>
      <anchor>a5f90364be104b60297d864f3274a5d21</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>U &amp;</type>
      <name>addFeature</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1AbstractObject.html</anchorfile>
      <anchor>afdf207c77155b474cabb615dfefaa55b</anchor>
      <arglist>(Args...args)</arglist>
    </member>
    <member kind="function">
      <type>AbstractObject&lt; dimensions, T &gt; *</type>
      <name>scene</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1AbstractObject.html</anchorfile>
      <anchor>aa456e847f56bd37b21307b7867e7498e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const AbstractObject&lt; dimensions, T &gt; *</type>
      <name>scene</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1AbstractObject.html</anchorfile>
      <anchor>a1195fa78a772da4dca22abd516a4cd93</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>AbstractObject&lt; dimensions, T &gt; *</type>
      <name>parent</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1AbstractObject.html</anchorfile>
      <anchor>ac52e5679ebdb34c4639dddeaad14be8a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const AbstractObject&lt; dimensions, T &gt; *</type>
      <name>parent</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1AbstractObject.html</anchorfile>
      <anchor>a2e1322ac186484652fb4397ba9204a4b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>MatrixType</type>
      <name>transformationMatrix</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1AbstractObject.html</anchorfile>
      <anchor>ab02e1c4ce34f19bb423bd24f801e0415</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>MatrixType</type>
      <name>absoluteTransformationMatrix</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1AbstractObject.html</anchorfile>
      <anchor>a7f71da8e25a8af4460e76b8418425771</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; MatrixType &gt;</type>
      <name>transformationMatrices</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1AbstractObject.html</anchorfile>
      <anchor>a158ba36b0e80a3f5fdad281edfb114fe</anchor>
      <arglist>(const std::vector&lt; std::reference_wrapper&lt; AbstractObject&lt; dimensions, T &gt;&gt;&gt; &amp;objects, const MatrixType &amp;initialTransformationMatrix=MatrixType()) const </arglist>
    </member>
    <member kind="function">
      <type>MatrixType</type>
      <name>transformationMatrix</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1AbstractObject.html</anchorfile>
      <anchor>ab02e1c4ce34f19bb423bd24f801e0415</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>MatrixType</type>
      <name>absoluteTransformationMatrix</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1AbstractObject.html</anchorfile>
      <anchor>a7f71da8e25a8af4460e76b8418425771</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; MatrixType &gt;</type>
      <name>transformationMatrices</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1AbstractObject.html</anchorfile>
      <anchor>a158ba36b0e80a3f5fdad281edfb114fe</anchor>
      <arglist>(const std::vector&lt; std::reference_wrapper&lt; AbstractObject&lt; dimensions, T &gt;&gt;&gt; &amp;objects, const MatrixType &amp;initialTransformationMatrix=MatrixType()) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isDirty</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1AbstractObject.html</anchorfile>
      <anchor>ae1577787aa21165255049d230bcd8dc5</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setDirty</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1AbstractObject.html</anchorfile>
      <anchor>a5c3d16b95cb6955188cd710cd01faca5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setClean</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1AbstractObject.html</anchorfile>
      <anchor>aed9299e2b1248ad3fdd9e06c0b9297af</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>setClean</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1AbstractObject.html</anchorfile>
      <anchor>a355409a5a8fb73443fbced50092462dd</anchor>
      <arglist>(const std::vector&lt; std::reference_wrapper&lt; AbstractObject&lt; dimensions, T &gt;&gt;&gt; &amp;objects)</arglist>
    </member>
    <docanchor file="classMagnum_1_1SceneGraph_1_1AbstractObject">SceneGraph-AbstractObject-explicit-specializations</docanchor>
  </compound>
  <compound kind="class">
    <name>Magnum::SceneGraph::AbstractTransformation</name>
    <filename>classMagnum_1_1SceneGraph_1_1AbstractTransformation.html</filename>
    <templarg>dimensions</templarg>
    <templarg></templarg>
    <member kind="enumvalue">
      <name>Dimensions</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1AbstractTransformation.html</anchorfile>
      <anchor>a88e3a04c3fcadf5f98d20ff58767758eaab4b51d27025c067bdbdc2a4868b829c</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>T</type>
      <name>Type</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1AbstractTransformation.html</anchorfile>
      <anchor>a84e81e78a2f61e8a8b975e76e091555a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Dimensions</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1AbstractTransformation.html</anchorfile>
      <anchor>a88e3a04c3fcadf5f98d20ff58767758eaab4b51d27025c067bdbdc2a4868b829c</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>AbstractTransformation&lt; dimensions, T &gt; &amp;</type>
      <name>resetTransformation</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1AbstractTransformation.html</anchorfile>
      <anchor>af323d01b729d3f3302c427db2111f9b5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual void</type>
      <name>doResetTransformation</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1AbstractTransformation.html</anchorfile>
      <anchor>af5a594c7ccdfa4c2e402f6dc584a385f</anchor>
      <arglist>()=0</arglist>
    </member>
    <docanchor file="classMagnum_1_1SceneGraph_1_1AbstractTransformation">SceneGraph-AbstractTransformation-explicit-specializations</docanchor>
  </compound>
  <compound kind="class">
    <name>Magnum::SceneGraph::AbstractTranslation</name>
    <filename>classMagnum_1_1SceneGraph_1_1AbstractTranslation.html</filename>
    <templarg>dimensions</templarg>
    <templarg></templarg>
    <templarg></templarg>
    <base>Magnum::SceneGraph::AbstractTransformation</base>
    <member kind="function">
      <type>AbstractTranslation&lt; dimensions, T, TranslationType &gt; &amp;</type>
      <name>translate</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1AbstractTranslation.html</anchorfile>
      <anchor>a7481034b7b3cd395f5646f6b16fcce91</anchor>
      <arglist>(const VectorTypeFor&lt; dimensions, TranslationType &gt; &amp;vector)</arglist>
    </member>
    <member kind="function">
      <type>AbstractTranslation&lt; dimensions, T, TranslationType &gt; &amp;</type>
      <name>translateLocal</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1AbstractTranslation.html</anchorfile>
      <anchor>a67e76d3cba00fcfa4b047a7ef1791962</anchor>
      <arglist>(const VectorTypeFor&lt; dimensions, TranslationType &gt; &amp;vector)</arglist>
    </member>
    <member kind="function">
      <type>AbstractTranslation&lt; dimensions, T, TranslationType &gt; &amp;</type>
      <name>translate</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1AbstractTranslation.html</anchorfile>
      <anchor>a0ca8ca53390d7f748b7741f2a335c97d</anchor>
      <arglist>(const VectorTypeFor&lt; dimensions, TranslationType &gt; &amp;vector, TransformationType type)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual void</type>
      <name>doTranslate</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1AbstractTranslation.html</anchorfile>
      <anchor>a39a0126de16ebc08e95c07956bd1c29b</anchor>
      <arglist>(const VectorTypeFor&lt; dimensions, TranslationType &gt; &amp;vector)=0</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual void</type>
      <name>doTranslateLocal</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1AbstractTranslation.html</anchorfile>
      <anchor>a7b56c5c9c96ac27e81690ded1f9393ad</anchor>
      <arglist>(const VectorTypeFor&lt; dimensions, TranslationType &gt; &amp;vector)=0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Magnum::SceneGraph::Animable</name>
    <filename>classMagnum_1_1SceneGraph_1_1Animable.html</filename>
    <templarg>dimensions</templarg>
    <templarg></templarg>
    <base>AbstractGroupedFeature&lt; dimensions, Animable&lt; dimensions, T &gt;, T &gt;</base>
    <member kind="function">
      <type></type>
      <name>Animable</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1Animable.html</anchorfile>
      <anchor>a7d7fd4c0a6f61fefa2269d2fb6e27d1c</anchor>
      <arglist>(AbstractObject&lt; dimensions, T &gt; &amp;object, AnimableGroup&lt; dimensions, T &gt; *group=nullptr)</arglist>
    </member>
    <member kind="function">
      <type>Float</type>
      <name>duration</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1Animable.html</anchorfile>
      <anchor>aa9386789a05e862e20aaae1330334283</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>AnimationState</type>
      <name>state</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1Animable.html</anchorfile>
      <anchor>aae1181f7b3db3215b068cd3ba295c376</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Animable&lt; dimensions, T &gt; &amp;</type>
      <name>setState</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1Animable.html</anchorfile>
      <anchor>a7c5efe6e435f8abe07500ce28c4b3c36</anchor>
      <arglist>(AnimationState state)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isRepeated</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1Animable.html</anchorfile>
      <anchor>a6fce430c6259acca269523a960b76cb6</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Animable&lt; dimensions, T &gt; &amp;</type>
      <name>setRepeated</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1Animable.html</anchorfile>
      <anchor>ab6aac83f12fea72dd782703f93902d1b</anchor>
      <arglist>(bool repeated)</arglist>
    </member>
    <member kind="function">
      <type>UnsignedShort</type>
      <name>repeatCount</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1Animable.html</anchorfile>
      <anchor>a64f928f525efa1584fe56558b3ce9ed7</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Animable&lt; dimensions, T &gt; &amp;</type>
      <name>setRepeatCount</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1Animable.html</anchorfile>
      <anchor>a950af073a374f57d6ea0af0710a7753a</anchor>
      <arglist>(UnsignedShort count)</arglist>
    </member>
    <member kind="function">
      <type>AnimableGroup&lt; dimensions, T &gt; *</type>
      <name>animables</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1Animable.html</anchorfile>
      <anchor>a1f37c33203ce12871ca892cf6617d3ed</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const AnimableGroup&lt; dimensions, T &gt; *</type>
      <name>animables</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1Animable.html</anchorfile>
      <anchor>a1dd945d39df7486bd0647c985b5ab408</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>Animable&lt; dimensions, T &gt; &amp;</type>
      <name>setDuration</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1Animable.html</anchorfile>
      <anchor>ac465e10841ccd88347e9d730d1b903a6</anchor>
      <arglist>(Float duration)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual void</type>
      <name>animationStep</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1Animable.html</anchorfile>
      <anchor>a9c83d1b936d70b47e4e1f2b81ece2cdd</anchor>
      <arglist>(Float time, Float delta)=0</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>animationStarted</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1Animable.html</anchorfile>
      <anchor>aa1005df0f3f1b7c0214547979c82ed27</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>animationPaused</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1Animable.html</anchorfile>
      <anchor>a754ee9cfe33464a59afcccff1f680f6e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>animationResumed</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1Animable.html</anchorfile>
      <anchor>a80529c8da87527ea107a5c82aa07ec86</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>animationStopped</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1Animable.html</anchorfile>
      <anchor>a6bf1c8d14d02afa5a9eaf6455c23a1de</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Magnum::SceneGraph::AnimableGroup</name>
    <filename>classMagnum_1_1SceneGraph_1_1AnimableGroup.html</filename>
    <templarg>dimensions</templarg>
    <templarg></templarg>
    <base>FeatureGroup&lt; dimensions, Animable&lt; dimensions, T &gt;, T &gt;</base>
    <member kind="function">
      <type></type>
      <name>AnimableGroup</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1AnimableGroup.html</anchorfile>
      <anchor>a769e8645f41c7bb136ddfd889d389067</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::size_t</type>
      <name>runningCount</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1AnimableGroup.html</anchorfile>
      <anchor>a8e68784bc2a87ed6a137d9ad0a454379</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>step</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1AnimableGroup.html</anchorfile>
      <anchor>af1c3e99042cad19e93924fe200a86e27</anchor>
      <arglist>(Float time, Float delta)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Magnum::SceneGraph::BasicDualComplexTransformation</name>
    <filename>classMagnum_1_1SceneGraph_1_1BasicDualComplexTransformation.html</filename>
    <templarg></templarg>
    <base>Magnum::SceneGraph::AbstractBasicTranslationRotation2D</base>
    <member kind="typedef">
      <type>Math::DualComplex&lt; T &gt;</type>
      <name>DataType</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1BasicDualComplexTransformation.html</anchorfile>
      <anchor>a79cad670c076f5b89d39751c90c94b1d</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>Math::DualComplex&lt; T &gt;</type>
      <name>transformation</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1BasicDualComplexTransformation.html</anchorfile>
      <anchor>abde1f629e56b678ebab0308f91e20814</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Object&lt; BasicDualComplexTransformation&lt; T &gt; &gt; &amp;</type>
      <name>setTransformation</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1BasicDualComplexTransformation.html</anchorfile>
      <anchor>a9595d19a73b3625374776bcb16dacc64</anchor>
      <arglist>(const Math::DualComplex&lt; T &gt; &amp;transformation)</arglist>
    </member>
    <member kind="function">
      <type>Object&lt; BasicDualComplexTransformation&lt; T &gt; &gt; &amp;</type>
      <name>resetTransformation</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1BasicDualComplexTransformation.html</anchorfile>
      <anchor>a0eaf68cb1f147502a935001fa80f3e33</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Object&lt; BasicDualComplexTransformation&lt; T &gt; &gt; &amp;</type>
      <name>normalizeRotation</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1BasicDualComplexTransformation.html</anchorfile>
      <anchor>a78034af65a3ddd339a0eb2b7906f6ce3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Object&lt; BasicDualComplexTransformation&lt; T &gt; &gt; &amp;</type>
      <name>transform</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1BasicDualComplexTransformation.html</anchorfile>
      <anchor>a4de87f6bf273db3180f8c6241ba4d0de</anchor>
      <arglist>(const Math::DualComplex&lt; T &gt; &amp;transformation)</arglist>
    </member>
    <member kind="function">
      <type>Object&lt; BasicDualComplexTransformation&lt; T &gt; &gt; &amp;</type>
      <name>transformLocal</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1BasicDualComplexTransformation.html</anchorfile>
      <anchor>aa1164b15bedd818419143ea355b7a854</anchor>
      <arglist>(const Math::DualComplex&lt; T &gt; &amp;transformation)</arglist>
    </member>
    <member kind="function">
      <type>Object&lt; BasicDualComplexTransformation&lt; T &gt; &gt; &amp;</type>
      <name>transform</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1BasicDualComplexTransformation.html</anchorfile>
      <anchor>a548ab6aa8fa0b677c87c072d40d31520</anchor>
      <arglist>(const Math::DualComplex&lt; T &gt; &amp;transformation, TransformationType type)</arglist>
    </member>
    <member kind="function">
      <type>Object&lt; BasicDualComplexTransformation&lt; T &gt; &gt; &amp;</type>
      <name>translate</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1BasicDualComplexTransformation.html</anchorfile>
      <anchor>a08ec9c6276d80337342c35535d872ba5</anchor>
      <arglist>(const Math::Vector2&lt; T &gt; &amp;vector)</arglist>
    </member>
    <member kind="function">
      <type>Object&lt; BasicDualComplexTransformation&lt; T &gt; &gt; &amp;</type>
      <name>translateLocal</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1BasicDualComplexTransformation.html</anchorfile>
      <anchor>a2d0e5fa93a88d8b0506496c5da6b8b87</anchor>
      <arglist>(const Math::Vector2&lt; T &gt; &amp;vector)</arglist>
    </member>
    <member kind="function">
      <type>Object&lt; BasicDualComplexTransformation&lt; T &gt; &gt; &amp;</type>
      <name>translate</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1BasicDualComplexTransformation.html</anchorfile>
      <anchor>a7fc4b6939fda7d992530ff7f4b18b500</anchor>
      <arglist>(const Math::Vector2&lt; T &gt; &amp;vector, TransformationType type)</arglist>
    </member>
    <member kind="function">
      <type>Object&lt; BasicDualComplexTransformation&lt; T &gt; &gt; &amp;</type>
      <name>rotate</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1BasicDualComplexTransformation.html</anchorfile>
      <anchor>aba3342519f0b88a1bf65d6e44d572b9d</anchor>
      <arglist>(Math::Rad&lt; T &gt; angle)</arglist>
    </member>
    <member kind="function">
      <type>Object&lt; BasicDualComplexTransformation&lt; T &gt; &gt; &amp;</type>
      <name>rotateLocal</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1BasicDualComplexTransformation.html</anchorfile>
      <anchor>a3c31abaa8d562049cf005bc548742ff3</anchor>
      <arglist>(Math::Rad&lt; T &gt; angle)</arglist>
    </member>
    <member kind="function">
      <type>Object&lt; BasicDualComplexTransformation&lt; T &gt; &gt; &amp;</type>
      <name>rotate</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1BasicDualComplexTransformation.html</anchorfile>
      <anchor>a7483ae84b2d892c63de7bc95288a2f8a</anchor>
      <arglist>(Math::Rad&lt; T &gt; angle, TransformationType type)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Magnum::SceneGraph::BasicDualQuaternionTransformation</name>
    <filename>classMagnum_1_1SceneGraph_1_1BasicDualQuaternionTransformation.html</filename>
    <templarg></templarg>
    <base>Magnum::SceneGraph::AbstractBasicTranslationRotation3D</base>
    <member kind="typedef">
      <type>Math::DualQuaternion&lt; T &gt;</type>
      <name>DataType</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1BasicDualQuaternionTransformation.html</anchorfile>
      <anchor>a5aacd8b66cd89e0160451e11b0ae5171</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>Math::DualQuaternion&lt; T &gt;</type>
      <name>transformation</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1BasicDualQuaternionTransformation.html</anchorfile>
      <anchor>ab78c7138fcff8b9a5832f39699660ed5</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Object&lt; BasicDualQuaternionTransformation&lt; T &gt; &gt; &amp;</type>
      <name>setTransformation</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1BasicDualQuaternionTransformation.html</anchorfile>
      <anchor>a748d517b3494acf2069f5478f53ee3b0</anchor>
      <arglist>(const Math::DualQuaternion&lt; T &gt; &amp;transformation)</arglist>
    </member>
    <member kind="function">
      <type>Object&lt; BasicDualQuaternionTransformation&lt; T &gt; &gt; &amp;</type>
      <name>resetTransformation</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1BasicDualQuaternionTransformation.html</anchorfile>
      <anchor>ad014bf5367fe7f88601ba0a1bbdd6335</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Object&lt; BasicDualQuaternionTransformation&lt; T &gt; &gt; &amp;</type>
      <name>normalizeRotation</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1BasicDualQuaternionTransformation.html</anchorfile>
      <anchor>a14ca67f0f63c00974183d3f0f0608c3f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Object&lt; BasicDualQuaternionTransformation&lt; T &gt; &gt; &amp;</type>
      <name>transform</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1BasicDualQuaternionTransformation.html</anchorfile>
      <anchor>a35412d742e9db7653b9e128da63a446a</anchor>
      <arglist>(const Math::DualQuaternion&lt; T &gt; &amp;transformation)</arglist>
    </member>
    <member kind="function">
      <type>Object&lt; BasicDualQuaternionTransformation&lt; T &gt; &gt; &amp;</type>
      <name>transformLocal</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1BasicDualQuaternionTransformation.html</anchorfile>
      <anchor>a43a495fb2a719914be464a399c4238bb</anchor>
      <arglist>(const Math::DualQuaternion&lt; T &gt; &amp;transformation)</arglist>
    </member>
    <member kind="function">
      <type>Object&lt; BasicDualQuaternionTransformation&lt; T &gt; &gt; &amp;</type>
      <name>transform</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1BasicDualQuaternionTransformation.html</anchorfile>
      <anchor>a9143c758657aff68285393991aab2260</anchor>
      <arglist>(const Math::DualQuaternion&lt; T &gt; &amp;transformation, TransformationType type)</arglist>
    </member>
    <member kind="function">
      <type>Object&lt; BasicDualQuaternionTransformation&lt; T &gt; &gt; &amp;</type>
      <name>translate</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1BasicDualQuaternionTransformation.html</anchorfile>
      <anchor>ac2340be3381261d094ea3d3006b04ac6</anchor>
      <arglist>(const Math::Vector3&lt; T &gt; &amp;vector)</arglist>
    </member>
    <member kind="function">
      <type>Object&lt; BasicDualQuaternionTransformation&lt; T &gt; &gt; &amp;</type>
      <name>translateLocal</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1BasicDualQuaternionTransformation.html</anchorfile>
      <anchor>a7a7f99815420729dff23533c398229e1</anchor>
      <arglist>(const Math::Vector3&lt; T &gt; &amp;vector)</arglist>
    </member>
    <member kind="function">
      <type>Object&lt; BasicDualQuaternionTransformation&lt; T &gt; &gt; &amp;</type>
      <name>translate</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1BasicDualQuaternionTransformation.html</anchorfile>
      <anchor>abe5c2cd5d9dece09cf137a3b3196e7c4</anchor>
      <arglist>(const Math::Vector3&lt; T &gt; &amp;vector, TransformationType type)</arglist>
    </member>
    <member kind="function">
      <type>Object&lt; BasicDualQuaternionTransformation&lt; T &gt; &gt; &amp;</type>
      <name>rotate</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1BasicDualQuaternionTransformation.html</anchorfile>
      <anchor>a683bb4d12662351fff4c2d67fc548b9f</anchor>
      <arglist>(Math::Rad&lt; T &gt; angle, const Math::Vector3&lt; T &gt; &amp;normalizedAxis)</arglist>
    </member>
    <member kind="function">
      <type>Object&lt; BasicDualQuaternionTransformation&lt; T &gt; &gt; &amp;</type>
      <name>rotateLocal</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1BasicDualQuaternionTransformation.html</anchorfile>
      <anchor>a28cf50b377ce64feaf4e05bc666ca690</anchor>
      <arglist>(Math::Rad&lt; T &gt; angle, const Math::Vector3&lt; T &gt; &amp;normalizedAxis)</arglist>
    </member>
    <member kind="function">
      <type>Object&lt; BasicDualQuaternionTransformation&lt; T &gt; &gt; &amp;</type>
      <name>rotate</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1BasicDualQuaternionTransformation.html</anchorfile>
      <anchor>a8311b5940b3d8772d55643c75700caa8</anchor>
      <arglist>(Math::Rad&lt; T &gt; angle, const Math::Vector3&lt; T &gt; &amp;normalizedAxis, TransformationType type)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Magnum::SceneGraph::BasicMatrixTransformation2D</name>
    <filename>classMagnum_1_1SceneGraph_1_1BasicMatrixTransformation2D.html</filename>
    <templarg></templarg>
    <base>Magnum::SceneGraph::AbstractBasicTranslationRotationScaling2D</base>
    <member kind="typedef">
      <type>Math::Matrix3&lt; T &gt;</type>
      <name>DataType</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1BasicMatrixTransformation2D.html</anchorfile>
      <anchor>a1041a31765f8d90d698422375d1071b1</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>Math::Matrix3&lt; T &gt;</type>
      <name>transformation</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1BasicMatrixTransformation2D.html</anchorfile>
      <anchor>acfea1274efbea98a3a0537e4fbfbd47f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Object&lt; BasicMatrixTransformation2D&lt; T &gt; &gt; &amp;</type>
      <name>setTransformation</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1BasicMatrixTransformation2D.html</anchorfile>
      <anchor>ab8d3fcdeb00259c87c9027e01ac83a46</anchor>
      <arglist>(const Math::Matrix3&lt; T &gt; &amp;transformation)</arglist>
    </member>
    <member kind="function">
      <type>Object&lt; BasicMatrixTransformation2D&lt; T &gt; &gt; &amp;</type>
      <name>transform</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1BasicMatrixTransformation2D.html</anchorfile>
      <anchor>a640e96c324594e55a3c9c40bb2ce4bdf</anchor>
      <arglist>(const Math::Matrix3&lt; T &gt; &amp;transformation)</arglist>
    </member>
    <member kind="function">
      <type>Object&lt; BasicMatrixTransformation2D&lt; T &gt; &gt; &amp;</type>
      <name>transformLocal</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1BasicMatrixTransformation2D.html</anchorfile>
      <anchor>aaae6f985bb2d55f6b13b2c354feb6fd6</anchor>
      <arglist>(const Math::Matrix3&lt; T &gt; &amp;transformation)</arglist>
    </member>
    <member kind="function">
      <type>Object&lt; BasicMatrixTransformation2D&lt; T &gt; &gt; &amp;</type>
      <name>transform</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1BasicMatrixTransformation2D.html</anchorfile>
      <anchor>a02527a07f78a81620430b4bee0692685</anchor>
      <arglist>(const Math::Matrix3&lt; T &gt; &amp;transformation, TransformationType type)</arglist>
    </member>
    <member kind="function">
      <type>Object&lt; BasicMatrixTransformation2D&lt; T &gt; &gt; &amp;</type>
      <name>resetTransformation</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1BasicMatrixTransformation2D.html</anchorfile>
      <anchor>adf39992f397c34eee4627624d20c989e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Object&lt; BasicMatrixTransformation2D&lt; T &gt; &gt; &amp;</type>
      <name>translate</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1BasicMatrixTransformation2D.html</anchorfile>
      <anchor>a2e2c47adc2d85329cf755a0e427660d7</anchor>
      <arglist>(const Math::Vector2&lt; T &gt; &amp;vector)</arglist>
    </member>
    <member kind="function">
      <type>Object&lt; BasicMatrixTransformation2D&lt; T &gt; &gt; &amp;</type>
      <name>translateLocal</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1BasicMatrixTransformation2D.html</anchorfile>
      <anchor>a4061d89a84663eb800eba21ef66db68d</anchor>
      <arglist>(const Math::Vector2&lt; T &gt; &amp;vector)</arglist>
    </member>
    <member kind="function">
      <type>Object&lt; BasicMatrixTransformation2D&lt; T &gt; &gt; &amp;</type>
      <name>translate</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1BasicMatrixTransformation2D.html</anchorfile>
      <anchor>afc1bf644b8d2dcccff7cb61cfe32cd07</anchor>
      <arglist>(const Math::Vector2&lt; T &gt; &amp;vector, TransformationType type)</arglist>
    </member>
    <member kind="function">
      <type>Object&lt; BasicMatrixTransformation2D&lt; T &gt; &gt; &amp;</type>
      <name>rotate</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1BasicMatrixTransformation2D.html</anchorfile>
      <anchor>a238c61d484dfbbbcd3350521a7c6fde9</anchor>
      <arglist>(Math::Rad&lt; T &gt; angle)</arglist>
    </member>
    <member kind="function">
      <type>Object&lt; BasicMatrixTransformation2D&lt; T &gt; &gt; &amp;</type>
      <name>rotateLocal</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1BasicMatrixTransformation2D.html</anchorfile>
      <anchor>a7282e1e796c83b7e70f67a845d279ad2</anchor>
      <arglist>(Math::Rad&lt; T &gt; angle)</arglist>
    </member>
    <member kind="function">
      <type>Object&lt; BasicMatrixTransformation2D&lt; T &gt; &gt; &amp;</type>
      <name>rotate</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1BasicMatrixTransformation2D.html</anchorfile>
      <anchor>aab9b148394998df30495394a1779a7e1</anchor>
      <arglist>(Math::Rad&lt; T &gt; angle, TransformationType type)</arglist>
    </member>
    <member kind="function">
      <type>Object&lt; BasicMatrixTransformation2D&lt; T &gt; &gt; &amp;</type>
      <name>scale</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1BasicMatrixTransformation2D.html</anchorfile>
      <anchor>a6e174b011569a470b184ffe0158f262e</anchor>
      <arglist>(const Math::Vector2&lt; T &gt; &amp;vector)</arglist>
    </member>
    <member kind="function">
      <type>Object&lt; BasicMatrixTransformation2D&lt; T &gt; &gt; &amp;</type>
      <name>scaleLocal</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1BasicMatrixTransformation2D.html</anchorfile>
      <anchor>a48ccef58faa19a2aa838fb33a20cfba1</anchor>
      <arglist>(const Math::Vector2&lt; T &gt; &amp;vector)</arglist>
    </member>
    <member kind="function">
      <type>Object&lt; BasicMatrixTransformation2D&lt; T &gt; &gt; &amp;</type>
      <name>scale</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1BasicMatrixTransformation2D.html</anchorfile>
      <anchor>a61e7923e7613140ea61adf0fd1527644</anchor>
      <arglist>(const Math::Vector2&lt; T &gt; &amp;vector, TransformationType type)</arglist>
    </member>
    <member kind="function">
      <type>Object&lt; BasicMatrixTransformation2D&lt; T &gt; &gt; &amp;</type>
      <name>reflect</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1BasicMatrixTransformation2D.html</anchorfile>
      <anchor>a8b50c8cb2763a93b3f9aed2260948dc0</anchor>
      <arglist>(const Math::Vector2&lt; T &gt; &amp;normal)</arglist>
    </member>
    <member kind="function">
      <type>Object&lt; BasicMatrixTransformation2D&lt; T &gt; &gt; &amp;</type>
      <name>reflectLocal</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1BasicMatrixTransformation2D.html</anchorfile>
      <anchor>ae95ee4a6de8f7784ad5c212bdb3b44e2</anchor>
      <arglist>(const Math::Vector2&lt; T &gt; &amp;normal)</arglist>
    </member>
    <member kind="function">
      <type>Object&lt; BasicMatrixTransformation2D&lt; T &gt; &gt; &amp;</type>
      <name>reflect</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1BasicMatrixTransformation2D.html</anchorfile>
      <anchor>accbf6ed71ced243696bea2c9f280c617</anchor>
      <arglist>(const Math::Vector2&lt; T &gt; &amp;normal, TransformationType type)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Magnum::SceneGraph::BasicMatrixTransformation3D</name>
    <filename>classMagnum_1_1SceneGraph_1_1BasicMatrixTransformation3D.html</filename>
    <templarg></templarg>
    <base>Magnum::SceneGraph::AbstractBasicTranslationRotationScaling3D</base>
    <member kind="typedef">
      <type>Math::Matrix4&lt; T &gt;</type>
      <name>DataType</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1BasicMatrixTransformation3D.html</anchorfile>
      <anchor>a29f9a8ea1099bf2257ede6874ef327a0</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>Math::Matrix4&lt; T &gt;</type>
      <name>transformation</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1BasicMatrixTransformation3D.html</anchorfile>
      <anchor>ab866292a6302d5311d90e3cb839514ec</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Object&lt; BasicMatrixTransformation3D&lt; T &gt; &gt; &amp;</type>
      <name>setTransformation</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1BasicMatrixTransformation3D.html</anchorfile>
      <anchor>a3b7fafd2d71d27708dd42686cd6206d4</anchor>
      <arglist>(const Math::Matrix4&lt; T &gt; &amp;transformation)</arglist>
    </member>
    <member kind="function">
      <type>Object&lt; BasicMatrixTransformation3D&lt; T &gt; &gt; &amp;</type>
      <name>resetTransformation</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1BasicMatrixTransformation3D.html</anchorfile>
      <anchor>a705b15ca0d9ee1220ae1c84695d1ac99</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Object&lt; BasicMatrixTransformation3D&lt; T &gt; &gt; &amp;</type>
      <name>transform</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1BasicMatrixTransformation3D.html</anchorfile>
      <anchor>a8a8966123f7e70a16527c2bbb3af8224</anchor>
      <arglist>(const Math::Matrix4&lt; T &gt; &amp;transformation)</arglist>
    </member>
    <member kind="function">
      <type>Object&lt; BasicMatrixTransformation3D&lt; T &gt; &gt; &amp;</type>
      <name>transformLocal</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1BasicMatrixTransformation3D.html</anchorfile>
      <anchor>ada1f6afa75f31923b99a14a1be8791d5</anchor>
      <arglist>(const Math::Matrix4&lt; T &gt; &amp;transformation)</arglist>
    </member>
    <member kind="function">
      <type>Object&lt; BasicMatrixTransformation3D&lt; T &gt; &gt; &amp;</type>
      <name>transform</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1BasicMatrixTransformation3D.html</anchorfile>
      <anchor>a18c6190c4384c3b127cbb590df8abac4</anchor>
      <arglist>(const Math::Matrix4&lt; T &gt; &amp;transformation, TransformationType type)</arglist>
    </member>
    <member kind="function">
      <type>Object&lt; BasicMatrixTransformation3D&lt; T &gt; &gt; &amp;</type>
      <name>translate</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1BasicMatrixTransformation3D.html</anchorfile>
      <anchor>abe1ab302fb5780baa7c90d8aa1cae848</anchor>
      <arglist>(const Math::Vector3&lt; T &gt; &amp;vector)</arglist>
    </member>
    <member kind="function">
      <type>Object&lt; BasicMatrixTransformation3D&lt; T &gt; &gt; &amp;</type>
      <name>translateLocal</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1BasicMatrixTransformation3D.html</anchorfile>
      <anchor>a49911d49eccb1d70a6934c3e82599616</anchor>
      <arglist>(const Math::Vector3&lt; T &gt; &amp;vector)</arglist>
    </member>
    <member kind="function">
      <type>Object&lt; BasicMatrixTransformation3D&lt; T &gt; &gt; &amp;</type>
      <name>translate</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1BasicMatrixTransformation3D.html</anchorfile>
      <anchor>a926728687cb1ef0d55fd873cad2d8713</anchor>
      <arglist>(const Math::Vector3&lt; T &gt; &amp;vector, TransformationType type)</arglist>
    </member>
    <member kind="function">
      <type>Object&lt; BasicMatrixTransformation3D&lt; T &gt; &gt; &amp;</type>
      <name>rotate</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1BasicMatrixTransformation3D.html</anchorfile>
      <anchor>afb383ecce4b5e9b5c366fad546b39142</anchor>
      <arglist>(Math::Rad&lt; T &gt; angle, const Math::Vector3&lt; T &gt; &amp;normalizedAxis)</arglist>
    </member>
    <member kind="function">
      <type>Object&lt; BasicMatrixTransformation3D&lt; T &gt; &gt; &amp;</type>
      <name>rotateLocal</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1BasicMatrixTransformation3D.html</anchorfile>
      <anchor>a0a73dd495830c996149d6417b8212b60</anchor>
      <arglist>(Math::Rad&lt; T &gt; angle, const Math::Vector3&lt; T &gt; &amp;normalizedAxis)</arglist>
    </member>
    <member kind="function">
      <type>Object&lt; BasicMatrixTransformation3D&lt; T &gt; &gt; &amp;</type>
      <name>rotate</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1BasicMatrixTransformation3D.html</anchorfile>
      <anchor>a11d920e892f7ce8bccab35d160d4d7ad</anchor>
      <arglist>(Math::Rad&lt; T &gt; angle, const Math::Vector3&lt; T &gt; &amp;normalizedAxis, TransformationType type)</arglist>
    </member>
    <member kind="function">
      <type>Object&lt; BasicMatrixTransformation3D&lt; T &gt; &gt; &amp;</type>
      <name>rotateX</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1BasicMatrixTransformation3D.html</anchorfile>
      <anchor>a286c8fca037067ccec9f1c7d7d7caf86</anchor>
      <arglist>(Math::Rad&lt; T &gt; angle)</arglist>
    </member>
    <member kind="function">
      <type>Object&lt; BasicMatrixTransformation3D&lt; T &gt; &gt; &amp;</type>
      <name>rotateXLocal</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1BasicMatrixTransformation3D.html</anchorfile>
      <anchor>a1bb27cb9fcdfc952d5e9044920fa4f3b</anchor>
      <arglist>(Math::Rad&lt; T &gt; angle)</arglist>
    </member>
    <member kind="function">
      <type>Object&lt; BasicMatrixTransformation3D&lt; T &gt; &gt; &amp;</type>
      <name>rotateX</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1BasicMatrixTransformation3D.html</anchorfile>
      <anchor>a084cf761dd81f4fff772b201239e3f02</anchor>
      <arglist>(Math::Rad&lt; T &gt; angle, TransformationType type)</arglist>
    </member>
    <member kind="function">
      <type>Object&lt; BasicMatrixTransformation3D&lt; T &gt; &gt; &amp;</type>
      <name>rotateY</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1BasicMatrixTransformation3D.html</anchorfile>
      <anchor>ab2ca9ce4095e88115747666cfe278bef</anchor>
      <arglist>(Math::Rad&lt; T &gt; angle)</arglist>
    </member>
    <member kind="function">
      <type>Object&lt; BasicMatrixTransformation3D&lt; T &gt; &gt; &amp;</type>
      <name>rotateYLocal</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1BasicMatrixTransformation3D.html</anchorfile>
      <anchor>ad69b5c98901d77b14b1d02f0cc475c3d</anchor>
      <arglist>(Math::Rad&lt; T &gt; angle)</arglist>
    </member>
    <member kind="function">
      <type>Object&lt; BasicMatrixTransformation3D&lt; T &gt; &gt; &amp;</type>
      <name>rotateY</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1BasicMatrixTransformation3D.html</anchorfile>
      <anchor>ac9e2e37dd021ea984a76939014ba3066</anchor>
      <arglist>(Math::Rad&lt; T &gt; angle, TransformationType type)</arglist>
    </member>
    <member kind="function">
      <type>Object&lt; BasicMatrixTransformation3D&lt; T &gt; &gt; &amp;</type>
      <name>rotateZ</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1BasicMatrixTransformation3D.html</anchorfile>
      <anchor>aea4efac356d1be3b9480884b1e2beda6</anchor>
      <arglist>(Math::Rad&lt; T &gt; angle)</arglist>
    </member>
    <member kind="function">
      <type>Object&lt; BasicMatrixTransformation3D&lt; T &gt; &gt; &amp;</type>
      <name>rotateZLocal</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1BasicMatrixTransformation3D.html</anchorfile>
      <anchor>adef05f084bf4d154a0e27cd18dade2da</anchor>
      <arglist>(Math::Rad&lt; T &gt; angle)</arglist>
    </member>
    <member kind="function">
      <type>Object&lt; BasicMatrixTransformation3D&lt; T &gt; &gt; &amp;</type>
      <name>rotateZ</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1BasicMatrixTransformation3D.html</anchorfile>
      <anchor>a34e446b4423b95a90409fdfa216704c5</anchor>
      <arglist>(Math::Rad&lt; T &gt; angle, TransformationType type)</arglist>
    </member>
    <member kind="function">
      <type>Object&lt; BasicMatrixTransformation3D&lt; T &gt; &gt; &amp;</type>
      <name>scale</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1BasicMatrixTransformation3D.html</anchorfile>
      <anchor>aaa1fc94becd8b46f3ab3b101e200c48a</anchor>
      <arglist>(const Math::Vector3&lt; T &gt; &amp;vector)</arglist>
    </member>
    <member kind="function">
      <type>Object&lt; BasicMatrixTransformation3D&lt; T &gt; &gt; &amp;</type>
      <name>scaleLocal</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1BasicMatrixTransformation3D.html</anchorfile>
      <anchor>ac8d3d0962bfaf321416fda27f95d5fa5</anchor>
      <arglist>(const Math::Vector3&lt; T &gt; &amp;vector)</arglist>
    </member>
    <member kind="function">
      <type>Object&lt; BasicMatrixTransformation3D&lt; T &gt; &gt; &amp;</type>
      <name>scale</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1BasicMatrixTransformation3D.html</anchorfile>
      <anchor>ab6e103812223795a1cffec6386c61c8a</anchor>
      <arglist>(const Math::Vector3&lt; T &gt; &amp;vector, TransformationType type)</arglist>
    </member>
    <member kind="function">
      <type>Object&lt; BasicMatrixTransformation3D&lt; T &gt; &gt; &amp;</type>
      <name>reflect</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1BasicMatrixTransformation3D.html</anchorfile>
      <anchor>a0fa1449be9bb71e786f1d42b09305846</anchor>
      <arglist>(const Math::Vector3&lt; T &gt; &amp;normal)</arglist>
    </member>
    <member kind="function">
      <type>Object&lt; BasicMatrixTransformation3D&lt; T &gt; &gt; &amp;</type>
      <name>reflectLocal</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1BasicMatrixTransformation3D.html</anchorfile>
      <anchor>a0296a5459a53c34b1bfec4ee8125d5aa</anchor>
      <arglist>(const Math::Vector3&lt; T &gt; &amp;normal)</arglist>
    </member>
    <member kind="function">
      <type>Object&lt; BasicMatrixTransformation3D&lt; T &gt; &gt; &amp;</type>
      <name>reflect</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1BasicMatrixTransformation3D.html</anchorfile>
      <anchor>a9e73f951656d915ac485ec177f086069</anchor>
      <arglist>(const Math::Vector3&lt; T &gt; &amp;normal, TransformationType type)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Magnum::SceneGraph::BasicRigidMatrixTransformation2D</name>
    <filename>classMagnum_1_1SceneGraph_1_1BasicRigidMatrixTransformation2D.html</filename>
    <templarg></templarg>
    <base>Magnum::SceneGraph::AbstractBasicTranslationRotation2D</base>
    <member kind="typedef">
      <type>Math::Matrix3&lt; T &gt;</type>
      <name>DataType</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1BasicRigidMatrixTransformation2D.html</anchorfile>
      <anchor>a28c618a2c071347a0962ab8c99e5fbb7</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>Math::Matrix3&lt; T &gt;</type>
      <name>transformation</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1BasicRigidMatrixTransformation2D.html</anchorfile>
      <anchor>a6ec8613fda02cbf06d2ad7eaac410ce1</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Object&lt; BasicRigidMatrixTransformation2D&lt; T &gt; &gt; &amp;</type>
      <name>setTransformation</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1BasicRigidMatrixTransformation2D.html</anchorfile>
      <anchor>ad572ebd6ce688430c684d1761273a76e</anchor>
      <arglist>(const Math::Matrix3&lt; T &gt; &amp;transformation)</arglist>
    </member>
    <member kind="function">
      <type>Object&lt; BasicRigidMatrixTransformation2D&lt; T &gt; &gt; &amp;</type>
      <name>resetTransformation</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1BasicRigidMatrixTransformation2D.html</anchorfile>
      <anchor>a238893dc181bee1c24617aaa6ff185f0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Object&lt; BasicRigidMatrixTransformation2D&lt; T &gt; &gt; &amp;</type>
      <name>normalizeRotation</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1BasicRigidMatrixTransformation2D.html</anchorfile>
      <anchor>a5225af161307a3b0e605d4b7abb7d5cf</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Object&lt; BasicRigidMatrixTransformation2D&lt; T &gt; &gt; &amp;</type>
      <name>transform</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1BasicRigidMatrixTransformation2D.html</anchorfile>
      <anchor>aa0e70d85f08cfe851019f78119ad4011</anchor>
      <arglist>(const Math::Matrix3&lt; T &gt; &amp;transformation)</arglist>
    </member>
    <member kind="function">
      <type>Object&lt; BasicRigidMatrixTransformation2D&lt; T &gt; &gt; &amp;</type>
      <name>transformLocal</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1BasicRigidMatrixTransformation2D.html</anchorfile>
      <anchor>a5b675c5c22adf37eee29bb97aa10fd1f</anchor>
      <arglist>(const Math::Matrix3&lt; T &gt; &amp;transformation)</arglist>
    </member>
    <member kind="function">
      <type>Object&lt; BasicRigidMatrixTransformation2D&lt; T &gt; &gt; &amp;</type>
      <name>transform</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1BasicRigidMatrixTransformation2D.html</anchorfile>
      <anchor>a6658087ac3c25dc6a11266421bb5e3c3</anchor>
      <arglist>(const Math::Matrix3&lt; T &gt; &amp;transformation, TransformationType type)</arglist>
    </member>
    <member kind="function">
      <type>Object&lt; BasicRigidMatrixTransformation2D&lt; T &gt; &gt; &amp;</type>
      <name>translate</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1BasicRigidMatrixTransformation2D.html</anchorfile>
      <anchor>a14db772bf69171e772930f177879fc36</anchor>
      <arglist>(const Math::Vector2&lt; T &gt; &amp;vector)</arglist>
    </member>
    <member kind="function">
      <type>Object&lt; BasicRigidMatrixTransformation2D&lt; T &gt; &gt; &amp;</type>
      <name>translateLocal</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1BasicRigidMatrixTransformation2D.html</anchorfile>
      <anchor>ac09f7a34beb30048da61cdbbf2b3168f</anchor>
      <arglist>(const Math::Vector2&lt; T &gt; &amp;vector)</arglist>
    </member>
    <member kind="function">
      <type>Object&lt; BasicRigidMatrixTransformation2D&lt; T &gt; &gt; &amp;</type>
      <name>translate</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1BasicRigidMatrixTransformation2D.html</anchorfile>
      <anchor>ab0f8075989843eb884b038c03e11955f</anchor>
      <arglist>(const Math::Vector2&lt; T &gt; &amp;vector, TransformationType type)</arglist>
    </member>
    <member kind="function">
      <type>Object&lt; BasicRigidMatrixTransformation2D&lt; T &gt; &gt; &amp;</type>
      <name>rotate</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1BasicRigidMatrixTransformation2D.html</anchorfile>
      <anchor>a6cd85be04dfbf6882cf2f5e36b3f06da</anchor>
      <arglist>(Math::Rad&lt; T &gt; angle)</arglist>
    </member>
    <member kind="function">
      <type>Object&lt; BasicRigidMatrixTransformation2D&lt; T &gt; &gt; &amp;</type>
      <name>rotateLocal</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1BasicRigidMatrixTransformation2D.html</anchorfile>
      <anchor>a3f7c7f16e3b0c59e25385d7274e74a44</anchor>
      <arglist>(Math::Rad&lt; T &gt; angle)</arglist>
    </member>
    <member kind="function">
      <type>Object&lt; BasicRigidMatrixTransformation2D&lt; T &gt; &gt; &amp;</type>
      <name>rotate</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1BasicRigidMatrixTransformation2D.html</anchorfile>
      <anchor>af57fcc18211ed376441696001b4816fb</anchor>
      <arglist>(Math::Rad&lt; T &gt; angle, TransformationType type)</arglist>
    </member>
    <member kind="function">
      <type>Object&lt; BasicRigidMatrixTransformation2D&lt; T &gt; &gt; &amp;</type>
      <name>reflect</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1BasicRigidMatrixTransformation2D.html</anchorfile>
      <anchor>a2b67fae00e9ee5467f0146f91b5ce702</anchor>
      <arglist>(const Math::Vector2&lt; T &gt; &amp;normal)</arglist>
    </member>
    <member kind="function">
      <type>Object&lt; BasicRigidMatrixTransformation2D&lt; T &gt; &gt; &amp;</type>
      <name>reflectLocal</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1BasicRigidMatrixTransformation2D.html</anchorfile>
      <anchor>a0a1c6b0b726b120bf7f2b3604fe08037</anchor>
      <arglist>(const Math::Vector2&lt; T &gt; &amp;normal)</arglist>
    </member>
    <member kind="function">
      <type>Object&lt; BasicRigidMatrixTransformation2D&lt; T &gt; &gt; &amp;</type>
      <name>reflect</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1BasicRigidMatrixTransformation2D.html</anchorfile>
      <anchor>a9541ee1f46a768ed83a6771ce2f35392</anchor>
      <arglist>(const Math::Vector2&lt; T &gt; &amp;normal, TransformationType type)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Magnum::SceneGraph::BasicRigidMatrixTransformation3D</name>
    <filename>classMagnum_1_1SceneGraph_1_1BasicRigidMatrixTransformation3D.html</filename>
    <templarg></templarg>
    <base>Magnum::SceneGraph::AbstractBasicTranslationRotation3D</base>
    <member kind="typedef">
      <type>Math::Matrix4&lt; T &gt;</type>
      <name>DataType</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1BasicRigidMatrixTransformation3D.html</anchorfile>
      <anchor>a9fdcfdb64f113a38294e85296345a727</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>Math::Matrix4&lt; T &gt;</type>
      <name>transformation</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1BasicRigidMatrixTransformation3D.html</anchorfile>
      <anchor>a9fc703a33a924d57b50634d1945d10ea</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Object&lt; BasicRigidMatrixTransformation3D&lt; T &gt; &gt; &amp;</type>
      <name>setTransformation</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1BasicRigidMatrixTransformation3D.html</anchorfile>
      <anchor>a7efb1242d80a2a21a78441a9623bee51</anchor>
      <arglist>(const Math::Matrix4&lt; T &gt; &amp;transformation)</arglist>
    </member>
    <member kind="function">
      <type>Object&lt; BasicRigidMatrixTransformation3D&lt; T &gt; &gt; &amp;</type>
      <name>resetTransformation</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1BasicRigidMatrixTransformation3D.html</anchorfile>
      <anchor>aa87ddb4282b9bfccd1d911a67146f82d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Object&lt; BasicRigidMatrixTransformation3D&lt; T &gt; &gt; &amp;</type>
      <name>normalizeRotation</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1BasicRigidMatrixTransformation3D.html</anchorfile>
      <anchor>a3dc9965204248b90d639e7c5af12141c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Object&lt; BasicRigidMatrixTransformation3D&lt; T &gt; &gt; &amp;</type>
      <name>transform</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1BasicRigidMatrixTransformation3D.html</anchorfile>
      <anchor>aced9862045891cc3606a2bdd74f96855</anchor>
      <arglist>(const Math::Matrix4&lt; T &gt; &amp;transformation)</arglist>
    </member>
    <member kind="function">
      <type>Object&lt; BasicRigidMatrixTransformation3D&lt; T &gt; &gt; &amp;</type>
      <name>transformLocal</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1BasicRigidMatrixTransformation3D.html</anchorfile>
      <anchor>ab7c2675c173d4c182fb2108d2102d1d8</anchor>
      <arglist>(const Math::Matrix4&lt; T &gt; &amp;transformation)</arglist>
    </member>
    <member kind="function">
      <type>Object&lt; BasicRigidMatrixTransformation3D&lt; T &gt; &gt; &amp;</type>
      <name>transform</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1BasicRigidMatrixTransformation3D.html</anchorfile>
      <anchor>a4d6b4a5929f5b30c56060b37a4301909</anchor>
      <arglist>(const Math::Matrix4&lt; T &gt; &amp;transformation, TransformationType type)</arglist>
    </member>
    <member kind="function">
      <type>Object&lt; BasicRigidMatrixTransformation3D&lt; T &gt; &gt; &amp;</type>
      <name>translate</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1BasicRigidMatrixTransformation3D.html</anchorfile>
      <anchor>aeb6af8a17804d1422e7a4146d95a9e35</anchor>
      <arglist>(const Math::Vector3&lt; T &gt; &amp;vector)</arglist>
    </member>
    <member kind="function">
      <type>Object&lt; BasicRigidMatrixTransformation3D&lt; T &gt; &gt; &amp;</type>
      <name>translateLocal</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1BasicRigidMatrixTransformation3D.html</anchorfile>
      <anchor>a09a1c0f14580fe120a8fb73fd8802b5f</anchor>
      <arglist>(const Math::Vector3&lt; T &gt; &amp;vector)</arglist>
    </member>
    <member kind="function">
      <type>Object&lt; BasicRigidMatrixTransformation3D&lt; T &gt; &gt; &amp;</type>
      <name>translate</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1BasicRigidMatrixTransformation3D.html</anchorfile>
      <anchor>a3a74997813e5752115cb4efaaeebf7b4</anchor>
      <arglist>(const Math::Vector3&lt; T &gt; &amp;vector, TransformationType type)</arglist>
    </member>
    <member kind="function">
      <type>Object&lt; BasicRigidMatrixTransformation3D&lt; T &gt; &gt; &amp;</type>
      <name>rotate</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1BasicRigidMatrixTransformation3D.html</anchorfile>
      <anchor>a677c947f7c876b3ddd0eb6defb6243ef</anchor>
      <arglist>(Math::Rad&lt; T &gt; angle, const Math::Vector3&lt; T &gt; &amp;normalizedAxis)</arglist>
    </member>
    <member kind="function">
      <type>Object&lt; BasicRigidMatrixTransformation3D&lt; T &gt; &gt; &amp;</type>
      <name>rotateLocal</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1BasicRigidMatrixTransformation3D.html</anchorfile>
      <anchor>a30a013a86c00592208e9bbc9d7c2fd81</anchor>
      <arglist>(Math::Rad&lt; T &gt; angle, const Math::Vector3&lt; T &gt; &amp;normalizedAxis)</arglist>
    </member>
    <member kind="function">
      <type>Object&lt; BasicRigidMatrixTransformation3D&lt; T &gt; &gt; &amp;</type>
      <name>rotate</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1BasicRigidMatrixTransformation3D.html</anchorfile>
      <anchor>a6d46c7d284ff8490b3ddbd43ac570972</anchor>
      <arglist>(Math::Rad&lt; T &gt; angle, const Math::Vector3&lt; T &gt; &amp;normalizedAxis, TransformationType type)</arglist>
    </member>
    <member kind="function">
      <type>Object&lt; BasicRigidMatrixTransformation3D&lt; T &gt; &gt; &amp;</type>
      <name>rotateX</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1BasicRigidMatrixTransformation3D.html</anchorfile>
      <anchor>af6608b12a65b944fe4948cf663588e97</anchor>
      <arglist>(Math::Rad&lt; T &gt; angle)</arglist>
    </member>
    <member kind="function">
      <type>Object&lt; BasicRigidMatrixTransformation3D&lt; T &gt; &gt; &amp;</type>
      <name>rotateXLocal</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1BasicRigidMatrixTransformation3D.html</anchorfile>
      <anchor>af63d570d548d54932b7d13293d89df4b</anchor>
      <arglist>(Math::Rad&lt; T &gt; angle)</arglist>
    </member>
    <member kind="function">
      <type>Object&lt; BasicRigidMatrixTransformation3D&lt; T &gt; &gt; &amp;</type>
      <name>rotateX</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1BasicRigidMatrixTransformation3D.html</anchorfile>
      <anchor>af62fccab713ebd8323dfe2e2e2218da2</anchor>
      <arglist>(Math::Rad&lt; T &gt; angle, TransformationType type)</arglist>
    </member>
    <member kind="function">
      <type>Object&lt; BasicRigidMatrixTransformation3D&lt; T &gt; &gt; &amp;</type>
      <name>rotateY</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1BasicRigidMatrixTransformation3D.html</anchorfile>
      <anchor>a6f1fe940110a8bd250df07419bbddb19</anchor>
      <arglist>(Math::Rad&lt; T &gt; angle)</arglist>
    </member>
    <member kind="function">
      <type>Object&lt; BasicRigidMatrixTransformation3D&lt; T &gt; &gt; &amp;</type>
      <name>rotateYLocal</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1BasicRigidMatrixTransformation3D.html</anchorfile>
      <anchor>a76e02938a8aee1cbaab20260edbf9c8c</anchor>
      <arglist>(Math::Rad&lt; T &gt; angle)</arglist>
    </member>
    <member kind="function">
      <type>Object&lt; BasicRigidMatrixTransformation3D&lt; T &gt; &gt; &amp;</type>
      <name>rotateY</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1BasicRigidMatrixTransformation3D.html</anchorfile>
      <anchor>ab214ce3346157c4a2c913446c1688d69</anchor>
      <arglist>(Math::Rad&lt; T &gt; angle, TransformationType type)</arglist>
    </member>
    <member kind="function">
      <type>Object&lt; BasicRigidMatrixTransformation3D&lt; T &gt; &gt; &amp;</type>
      <name>rotateZ</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1BasicRigidMatrixTransformation3D.html</anchorfile>
      <anchor>aa528a299a35da30970f524264d4e0598</anchor>
      <arglist>(Math::Rad&lt; T &gt; angle)</arglist>
    </member>
    <member kind="function">
      <type>Object&lt; BasicRigidMatrixTransformation3D&lt; T &gt; &gt; &amp;</type>
      <name>rotateZLocal</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1BasicRigidMatrixTransformation3D.html</anchorfile>
      <anchor>a4b22934d5276fc19eba6ff98bd6e183b</anchor>
      <arglist>(Math::Rad&lt; T &gt; angle)</arglist>
    </member>
    <member kind="function">
      <type>Object&lt; BasicRigidMatrixTransformation3D&lt; T &gt; &gt; &amp;</type>
      <name>rotateZ</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1BasicRigidMatrixTransformation3D.html</anchorfile>
      <anchor>a51a448b4341398e4a2cbec0c1418bd72</anchor>
      <arglist>(Math::Rad&lt; T &gt; angle, TransformationType type)</arglist>
    </member>
    <member kind="function">
      <type>Object&lt; BasicRigidMatrixTransformation3D&lt; T &gt; &gt; &amp;</type>
      <name>reflect</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1BasicRigidMatrixTransformation3D.html</anchorfile>
      <anchor>a6d0099c75faaaffc132edc27f45c4dee</anchor>
      <arglist>(const Math::Vector3&lt; T &gt; &amp;normal)</arglist>
    </member>
    <member kind="function">
      <type>Object&lt; BasicRigidMatrixTransformation3D&lt; T &gt; &gt; &amp;</type>
      <name>reflectLocal</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1BasicRigidMatrixTransformation3D.html</anchorfile>
      <anchor>a9bab33ce538ae9a73b5dd6fd3406e157</anchor>
      <arglist>(const Math::Vector3&lt; T &gt; &amp;normal)</arglist>
    </member>
    <member kind="function">
      <type>Object&lt; BasicRigidMatrixTransformation3D&lt; T &gt; &gt; &amp;</type>
      <name>reflect</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1BasicRigidMatrixTransformation3D.html</anchorfile>
      <anchor>a3afa78785bbfac9ad13c74b4b330a71e</anchor>
      <arglist>(const Math::Vector3&lt; T &gt; &amp;normal, TransformationType type)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Magnum::SceneGraph::Camera</name>
    <filename>classMagnum_1_1SceneGraph_1_1Camera.html</filename>
    <templarg>dimensions</templarg>
    <templarg></templarg>
    <base>Magnum::SceneGraph::AbstractFeature</base>
    <member kind="function">
      <type></type>
      <name>Camera</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1Camera.html</anchorfile>
      <anchor>a578d010e143a0262ff5128bd7cb80973</anchor>
      <arglist>(AbstractObject&lt; dimensions, T &gt; &amp;object)</arglist>
    </member>
    <member kind="function">
      <type>AspectRatioPolicy</type>
      <name>aspectRatioPolicy</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1Camera.html</anchorfile>
      <anchor>a952f874cc54f8ead6e734678c9b594fe</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Camera&lt; dimensions, T &gt; &amp;</type>
      <name>setAspectRatioPolicy</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1Camera.html</anchorfile>
      <anchor>a98f200ca05c1e0a7fa06845b3510f8f2</anchor>
      <arglist>(AspectRatioPolicy policy)</arglist>
    </member>
    <member kind="function">
      <type>MatrixTypeFor&lt; dimensions, T &gt;</type>
      <name>cameraMatrix</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1Camera.html</anchorfile>
      <anchor>aae8dcaa154588aeb050b5c865c8e7ae0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>MatrixTypeFor&lt; dimensions, T &gt;</type>
      <name>projectionMatrix</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1Camera.html</anchorfile>
      <anchor>ac74d730bfe8f78858968f3b1a602f6df</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Camera&lt; dimensions, T &gt; &amp;</type>
      <name>setProjectionMatrix</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1Camera.html</anchorfile>
      <anchor>aa49ddcf71071d54dd7134aaceb66738a</anchor>
      <arglist>(const MatrixTypeFor&lt; dimensions, T &gt; &amp;matrix)</arglist>
    </member>
    <member kind="function">
      <type>BasicCamera2D&lt; T &gt; &amp;</type>
      <name>setProjection</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1Camera.html</anchorfile>
      <anchor>afa40fafd3d71d8d3dc779be8b90aebaa</anchor>
      <arglist>(const Math::Vector2&lt; T &gt; &amp;size)</arglist>
    </member>
    <member kind="function">
      <type>BasicCamera3D&lt; T &gt; &amp;</type>
      <name>setOrthographic</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1Camera.html</anchorfile>
      <anchor>a67173f61e0feea28f7866e5c9048b88a</anchor>
      <arglist>(const Math::Vector2&lt; T &gt; &amp;size, T near, T far)</arglist>
    </member>
    <member kind="function">
      <type>BasicCamera3D&lt; T &gt; &amp;</type>
      <name>setPerspective</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1Camera.html</anchorfile>
      <anchor>a45d8df7f4b91cffa2139ba61adccc7ed</anchor>
      <arglist>(const Math::Vector2&lt; T &gt; &amp;size, T near, T far)</arglist>
    </member>
    <member kind="function">
      <type>BasicCamera3D&lt; T &gt; &amp;</type>
      <name>setPerspective</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1Camera.html</anchorfile>
      <anchor>a6269976571dcd62e06d3ad98d2cf6dda</anchor>
      <arglist>(Math::Rad&lt; T &gt; fov, T aspectRatio, T near, T far)</arglist>
    </member>
    <member kind="function">
      <type>Math::Vector2&lt; T &gt;</type>
      <name>projectionSize</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1Camera.html</anchorfile>
      <anchor>a8ebcd0dbda786bea8417f276e85e89db</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Vector2i</type>
      <name>viewport</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1Camera.html</anchorfile>
      <anchor>af574b2ed2b9bf7babc085ed1d0f02d49</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setViewport</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1Camera.html</anchorfile>
      <anchor>a28b1c826c81e11ebc40ff329f8f4eb33</anchor>
      <arglist>(const Vector2i &amp;size)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>draw</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1Camera.html</anchorfile>
      <anchor>a4fb306aae49309025b41ff298f5bacc0</anchor>
      <arglist>(DrawableGroup&lt; dimensions, T &gt; &amp;group)</arglist>
    </member>
    <docanchor file="classMagnum_1_1SceneGraph_1_1Camera">SceneGraph-Camera-explicit-specializations</docanchor>
  </compound>
  <compound kind="class">
    <name>Magnum::SceneGraph::Drawable</name>
    <filename>classMagnum_1_1SceneGraph_1_1Drawable.html</filename>
    <templarg>dimensions</templarg>
    <templarg>T</templarg>
    <base>AbstractGroupedFeature&lt; dimensions, Drawable&lt; dimensions, T &gt;, T &gt;</base>
    <member kind="function">
      <type></type>
      <name>Drawable</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1Drawable.html</anchorfile>
      <anchor>adaca26dbdfd13c56651a7287936bfea5</anchor>
      <arglist>(AbstractObject&lt; dimensions, T &gt; &amp;object, DrawableGroup&lt; dimensions, T &gt; *drawables=nullptr)</arglist>
    </member>
    <member kind="function">
      <type>DrawableGroup&lt; dimensions, T &gt; *</type>
      <name>drawables</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1Drawable.html</anchorfile>
      <anchor>a032ddbc32002122cc6af40eaa30136cf</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const DrawableGroup&lt; dimensions, T &gt; *</type>
      <name>drawables</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1Drawable.html</anchorfile>
      <anchor>acc8c44d5fd0c5255f260f3a5e340b1d9</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>draw</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1Drawable.html</anchorfile>
      <anchor>aca0d0a219aa4d7712316de55d67f2134</anchor>
      <arglist>(const MatrixTypeFor&lt; dimensions, T &gt; &amp;transformationMatrix, Camera&lt; dimensions, T &gt; &amp;camera)=0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Magnum::SceneGraph::FeatureGroup</name>
    <filename>classMagnum_1_1SceneGraph_1_1FeatureGroup.html</filename>
    <templarg>dimensions</templarg>
    <templarg>Feature</templarg>
    <templarg>T</templarg>
    <base>Magnum::SceneGraph::AbstractFeatureGroup</base>
    <member kind="function">
      <type></type>
      <name>~FeatureGroup</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1FeatureGroup.html</anchorfile>
      <anchor>a352fd0f8f6d4a53a5780773a16e00b09</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isEmpty</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1FeatureGroup.html</anchorfile>
      <anchor>a4aabdf6cb5903acff7240fe766415315</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>std::size_t</type>
      <name>size</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1FeatureGroup.html</anchorfile>
      <anchor>acd03a60e7677bcd97e5b6a73ea4d08c8</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Feature &amp;</type>
      <name>operator[]</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1FeatureGroup.html</anchorfile>
      <anchor>a2da5b140149a69381b8e252f606ed232</anchor>
      <arglist>(std::size_t index)</arglist>
    </member>
    <member kind="function">
      <type>const Feature &amp;</type>
      <name>operator[]</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1FeatureGroup.html</anchorfile>
      <anchor>af5afd6cbff67483b326c4e06679331ea</anchor>
      <arglist>(std::size_t index) const </arglist>
    </member>
    <member kind="function">
      <type>FeatureGroup&lt; dimensions, Feature, T &gt; &amp;</type>
      <name>add</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1FeatureGroup.html</anchorfile>
      <anchor>a2091e5d70dde6675b31a52527ce9513b</anchor>
      <arglist>(Feature &amp;feature)</arglist>
    </member>
    <member kind="function">
      <type>FeatureGroup&lt; dimensions, Feature, T &gt; &amp;</type>
      <name>remove</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1FeatureGroup.html</anchorfile>
      <anchor>a527ccb9c991144fc37fada509aaf4901</anchor>
      <arglist>(Feature &amp;feature)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Magnum::SceneGraph::Object</name>
    <filename>classMagnum_1_1SceneGraph_1_1Object.html</filename>
    <templarg></templarg>
    <base>AbstractObject&lt; Transformation::Dimensions, Transformation::Type &gt;</base>
    <member kind="typedef">
      <type>MatrixTypeFor&lt; Transformation::Dimensions, typename Transformation::Type &gt;</type>
      <name>MatrixType</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1Object.html</anchorfile>
      <anchor>a2912dd8485a1cac4f265cd939319eaa1</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Object</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1Object.html</anchorfile>
      <anchor>a0a7911ce5cf1e790f8b8643376ca615e</anchor>
      <arglist>(Object&lt; Transformation &gt; *parent=nullptr)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Object</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1Object.html</anchorfile>
      <anchor>a1ecc75ce8d8270ba636ecfce35513211</anchor>
      <arglist>(const Object&lt; Transformation &gt; &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Object</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1Object.html</anchorfile>
      <anchor>a7e398bd5e9157616c37682b290217657</anchor>
      <arglist>(Object&lt; Transformation &gt; &amp;&amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~Object</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1Object.html</anchorfile>
      <anchor>a04b6e40a2b0d585d8a1db5d8939a40c6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Object&lt; Transformation &gt; &amp;</type>
      <name>operator=</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1Object.html</anchorfile>
      <anchor>a77fcedb7ca6b4b8c9af8eaa8c550c457</anchor>
      <arglist>(const Object&lt; Transformation &gt; &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>Object&lt; Transformation &gt; &amp;</type>
      <name>operator=</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1Object.html</anchorfile>
      <anchor>a4e7f44e5f9553c1288d24c710f09e339</anchor>
      <arglist>(Object&lt; Transformation &gt; &amp;&amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>Scene&lt; Transformation &gt; *</type>
      <name>scene</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1Object.html</anchorfile>
      <anchor>afebc7b5eddc9e2d40cd25fe7c02a4d6c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const Scene&lt; Transformation &gt; *</type>
      <name>scene</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1Object.html</anchorfile>
      <anchor>a09fbb6db1e4ace6649d88a9f945c40d2</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Object&lt; Transformation &gt; *</type>
      <name>parent</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1Object.html</anchorfile>
      <anchor>a2fca1eacd2243f94a8af53ad72fadafa</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const Object&lt; Transformation &gt; *</type>
      <name>parent</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1Object.html</anchorfile>
      <anchor>a66006c58b95503368ce38a7ca2f95ef3</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Object&lt; Transformation &gt; *</type>
      <name>previousSibling</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1Object.html</anchorfile>
      <anchor>aeef8597223b64f748cf964a47bb6d0ec</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const Object&lt; Transformation &gt; *</type>
      <name>previousSibling</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1Object.html</anchorfile>
      <anchor>ae9431bdaeaa8db44530676352ef2ffda</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Object&lt; Transformation &gt; *</type>
      <name>nextSibling</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1Object.html</anchorfile>
      <anchor>a945fb696b260345f44bd9fc3e0683d37</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const Object&lt; Transformation &gt; *</type>
      <name>nextSibling</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1Object.html</anchorfile>
      <anchor>a04b60b72edffa902e76f7a2e539e2f29</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Containers::LinkedList&lt; Object&lt; Transformation &gt; &gt; &amp;</type>
      <name>children</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1Object.html</anchorfile>
      <anchor>a7f66683bb5de999350c10c31c08e4879</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const Containers::LinkedList&lt; Object&lt; Transformation &gt; &gt; &amp;</type>
      <name>children</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1Object.html</anchorfile>
      <anchor>a10ee92cb9a0b2a1da83e1f7fcd277c22</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>hasChildren</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1Object.html</anchorfile>
      <anchor>a54a96a81c396edcd9b6bb5e25f4e803d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Object&lt; Transformation &gt; *</type>
      <name>firstChild</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1Object.html</anchorfile>
      <anchor>a466daab14bd3bbbae4bbe6e7ddfa3e41</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const Object&lt; Transformation &gt; *</type>
      <name>firstChild</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1Object.html</anchorfile>
      <anchor>ad6fe5774101a4f9cc2e4b28177908f9c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Object&lt; Transformation &gt; *</type>
      <name>lastChild</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1Object.html</anchorfile>
      <anchor>ab3ef47569d4cc2e3d29701fdeb300608</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const Object&lt; Transformation &gt; *</type>
      <name>lastChild</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1Object.html</anchorfile>
      <anchor>a7eabdfc87ca00bb1f2ac097cebba6a87</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>T &amp;</type>
      <name>addChild</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1Object.html</anchorfile>
      <anchor>a9778dc43004e3433dd3d1f0380c94d11</anchor>
      <arglist>(Args...args)</arglist>
    </member>
    <member kind="function">
      <type>Object&lt; Transformation &gt; &amp;</type>
      <name>setParent</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1Object.html</anchorfile>
      <anchor>acdd0a4ffb79b30fab72acfb62a99695a</anchor>
      <arglist>(Object&lt; Transformation &gt; *parent)</arglist>
    </member>
    <member kind="function">
      <type>Object&lt; Transformation &gt; &amp;</type>
      <name>setParentKeepTransformation</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1Object.html</anchorfile>
      <anchor>accec48044b393db9a309a511ca320e36</anchor>
      <arglist>(Object&lt; Transformation &gt; *parent)</arglist>
    </member>
    <member kind="function">
      <type>MatrixType</type>
      <name>transformationMatrix</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1Object.html</anchorfile>
      <anchor>ad01c245c6264cf274086ca8fce94f07b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>MatrixType</type>
      <name>absoluteTransformationMatrix</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1Object.html</anchorfile>
      <anchor>a0c084fdccd73463173e7e62b7ed29cae</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Transformation::DataType</type>
      <name>absoluteTransformation</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1Object.html</anchorfile>
      <anchor>a47e252f128c833b0f5bb9a2d25434a7a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; MatrixType &gt;</type>
      <name>transformationMatrices</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1Object.html</anchorfile>
      <anchor>a87a8cd6facd28a091523f5b35c6e86a9</anchor>
      <arglist>(const std::vector&lt; std::reference_wrapper&lt; Object&lt; Transformation &gt;&gt;&gt; &amp;objects, const MatrixType &amp;initialTransformationMatrix=MatrixType()) const </arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; typename Transformation::DataType &gt;</type>
      <name>transformations</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1Object.html</anchorfile>
      <anchor>a051b4e850f456a732abf94e38ff1e634</anchor>
      <arglist>(std::vector&lt; std::reference_wrapper&lt; Object&lt; Transformation &gt;&gt;&gt; objects, const typename Transformation::DataType &amp;initialTransformation=typename Transformation::DataType()) const </arglist>
    </member>
    <member kind="function">
      <type>Scene&lt; Transformation &gt; *</type>
      <name>scene</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1Object.html</anchorfile>
      <anchor>afebc7b5eddc9e2d40cd25fe7c02a4d6c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const Scene&lt; Transformation &gt; *</type>
      <name>scene</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1Object.html</anchorfile>
      <anchor>a09fbb6db1e4ace6649d88a9f945c40d2</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Object&lt; Transformation &gt; *</type>
      <name>parent</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1Object.html</anchorfile>
      <anchor>a2fca1eacd2243f94a8af53ad72fadafa</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const Object&lt; Transformation &gt; *</type>
      <name>parent</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1Object.html</anchorfile>
      <anchor>a66006c58b95503368ce38a7ca2f95ef3</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Object&lt; Transformation &gt; *</type>
      <name>previousSibling</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1Object.html</anchorfile>
      <anchor>aeef8597223b64f748cf964a47bb6d0ec</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const Object&lt; Transformation &gt; *</type>
      <name>previousSibling</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1Object.html</anchorfile>
      <anchor>ae9431bdaeaa8db44530676352ef2ffda</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Object&lt; Transformation &gt; *</type>
      <name>nextSibling</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1Object.html</anchorfile>
      <anchor>a945fb696b260345f44bd9fc3e0683d37</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const Object&lt; Transformation &gt; *</type>
      <name>nextSibling</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1Object.html</anchorfile>
      <anchor>a04b60b72edffa902e76f7a2e539e2f29</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Containers::LinkedList&lt; Object&lt; Transformation &gt; &gt; &amp;</type>
      <name>children</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1Object.html</anchorfile>
      <anchor>a7f66683bb5de999350c10c31c08e4879</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const Containers::LinkedList&lt; Object&lt; Transformation &gt; &gt; &amp;</type>
      <name>children</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1Object.html</anchorfile>
      <anchor>a10ee92cb9a0b2a1da83e1f7fcd277c22</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>hasChildren</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1Object.html</anchorfile>
      <anchor>a54a96a81c396edcd9b6bb5e25f4e803d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Object&lt; Transformation &gt; *</type>
      <name>firstChild</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1Object.html</anchorfile>
      <anchor>a466daab14bd3bbbae4bbe6e7ddfa3e41</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const Object&lt; Transformation &gt; *</type>
      <name>firstChild</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1Object.html</anchorfile>
      <anchor>ad6fe5774101a4f9cc2e4b28177908f9c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Object&lt; Transformation &gt; *</type>
      <name>lastChild</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1Object.html</anchorfile>
      <anchor>ab3ef47569d4cc2e3d29701fdeb300608</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const Object&lt; Transformation &gt; *</type>
      <name>lastChild</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1Object.html</anchorfile>
      <anchor>a7eabdfc87ca00bb1f2ac097cebba6a87</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>T &amp;</type>
      <name>addChild</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1Object.html</anchorfile>
      <anchor>a9778dc43004e3433dd3d1f0380c94d11</anchor>
      <arglist>(Args...args)</arglist>
    </member>
    <member kind="function">
      <type>Object&lt; Transformation &gt; &amp;</type>
      <name>setParent</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1Object.html</anchorfile>
      <anchor>acdd0a4ffb79b30fab72acfb62a99695a</anchor>
      <arglist>(Object&lt; Transformation &gt; *parent)</arglist>
    </member>
    <member kind="function">
      <type>Object&lt; Transformation &gt; &amp;</type>
      <name>setParentKeepTransformation</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1Object.html</anchorfile>
      <anchor>accec48044b393db9a309a511ca320e36</anchor>
      <arglist>(Object&lt; Transformation &gt; *parent)</arglist>
    </member>
    <member kind="function">
      <type>MatrixType</type>
      <name>transformationMatrix</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1Object.html</anchorfile>
      <anchor>ad01c245c6264cf274086ca8fce94f07b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>MatrixType</type>
      <name>absoluteTransformationMatrix</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1Object.html</anchorfile>
      <anchor>a0c084fdccd73463173e7e62b7ed29cae</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Transformation::DataType</type>
      <name>absoluteTransformation</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1Object.html</anchorfile>
      <anchor>a47e252f128c833b0f5bb9a2d25434a7a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; MatrixType &gt;</type>
      <name>transformationMatrices</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1Object.html</anchorfile>
      <anchor>a87a8cd6facd28a091523f5b35c6e86a9</anchor>
      <arglist>(const std::vector&lt; std::reference_wrapper&lt; Object&lt; Transformation &gt;&gt;&gt; &amp;objects, const MatrixType &amp;initialTransformationMatrix=MatrixType()) const </arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; typename Transformation::DataType &gt;</type>
      <name>transformations</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1Object.html</anchorfile>
      <anchor>a051b4e850f456a732abf94e38ff1e634</anchor>
      <arglist>(std::vector&lt; std::reference_wrapper&lt; Object&lt; Transformation &gt;&gt;&gt; objects, const typename Transformation::DataType &amp;initialTransformation=typename Transformation::DataType()) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isDirty</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1Object.html</anchorfile>
      <anchor>a92d905ef11c43b271ea9811ddef20255</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setDirty</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1Object.html</anchorfile>
      <anchor>a58e943fd6339f2bc9b5016c5cbb5bae3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setClean</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1Object.html</anchorfile>
      <anchor>a553758bb91a137261a2058b773c1095b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>setClean</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1Object.html</anchorfile>
      <anchor>adb0b04e0e2f800a907ac2af72c4df4c3</anchor>
      <arglist>(std::vector&lt; std::reference_wrapper&lt; Object&lt; Transformation &gt;&gt;&gt; objects)</arglist>
    </member>
    <docanchor file="classMagnum_1_1SceneGraph_1_1Object">SceneGraph-Object-explicit-specializations</docanchor>
  </compound>
  <compound kind="class">
    <name>Magnum::SceneGraph::Scene</name>
    <filename>classMagnum_1_1SceneGraph_1_1Scene.html</filename>
    <templarg></templarg>
    <base>Magnum::SceneGraph::Object</base>
  </compound>
  <compound kind="class">
    <name>Magnum::SceneGraph::TranslationTransformation</name>
    <filename>classMagnum_1_1SceneGraph_1_1TranslationTransformation.html</filename>
    <templarg>dimensions</templarg>
    <templarg></templarg>
    <templarg></templarg>
    <base>Magnum::SceneGraph::AbstractTranslation</base>
    <member kind="typedef">
      <type>VectorTypeFor&lt; dimensions, TranslationType &gt;</type>
      <name>DataType</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1TranslationTransformation.html</anchorfile>
      <anchor>a57ab43e8b10dc708823c10f961a5a04c</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>VectorTypeFor&lt; dimensions, TranslationType &gt;</type>
      <name>transformation</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1TranslationTransformation.html</anchorfile>
      <anchor>a27da8adfe17518f201d8bc732176f1a8</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Object&lt; TranslationTransformation&lt; dimensions, T, TranslationType &gt; &gt; &amp;</type>
      <name>setTransformation</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1TranslationTransformation.html</anchorfile>
      <anchor>a91d46f02b1615ac8c3aed7d19cf7b71f</anchor>
      <arglist>(const VectorTypeFor&lt; dimensions, TranslationType &gt; &amp;transformation)</arglist>
    </member>
    <member kind="function">
      <type>Object&lt; TranslationTransformation&lt; dimensions, T, TranslationType &gt; &gt; &amp;</type>
      <name>resetTransformation</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1TranslationTransformation.html</anchorfile>
      <anchor>ad634731e981e97b7cb0e85f79ff7789e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Object&lt; TranslationTransformation&lt; dimensions, T, TranslationType &gt; &gt; &amp;</type>
      <name>transform</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1TranslationTransformation.html</anchorfile>
      <anchor>a03d976e79ecea4beaf4223a87f45fc15</anchor>
      <arglist>(const VectorTypeFor&lt; dimensions, TranslationType &gt; &amp;transformation)</arglist>
    </member>
    <member kind="function">
      <type>Object&lt; TranslationTransformation&lt; dimensions, T, TranslationType &gt; &gt; &amp;</type>
      <name>transform</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1TranslationTransformation.html</anchorfile>
      <anchor>ab3f0e5417b50d7c7b4109a902e52276a</anchor>
      <arglist>(const VectorTypeFor&lt; dimensions, TranslationType &gt; &amp;transformation, TransformationType)</arglist>
    </member>
    <member kind="function">
      <type>Object&lt; TranslationTransformation&lt; dimensions, T, TranslationType &gt; &gt; &amp;</type>
      <name>translate</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1TranslationTransformation.html</anchorfile>
      <anchor>a95aecf688d4eb8e2fb238ddb474de40a</anchor>
      <arglist>(const VectorTypeFor&lt; dimensions, TranslationType &gt; &amp;vector)</arglist>
    </member>
    <member kind="function">
      <type>Object&lt; TranslationTransformation&lt; dimensions, T, TranslationType &gt; &gt; &amp;</type>
      <name>translate</name>
      <anchorfile>classMagnum_1_1SceneGraph_1_1TranslationTransformation.html</anchorfile>
      <anchor>a824f34270746f2e0b3b79d72cf04253e</anchor>
      <arglist>(const VectorTypeFor&lt; dimensions, TranslationType &gt; &amp;vector, TransformationType)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Magnum::Shader</name>
    <filename>classMagnum_1_1Shader.html</filename>
    <base>Magnum::AbstractObject</base>
    <member kind="enumeration">
      <type></type>
      <name>Type</name>
      <anchorfile>classMagnum_1_1Shader.html</anchorfile>
      <anchor>aec4ea1a663ac199fce1629e57b82400d</anchor>
      <arglist></arglist>
      <enumvalue file="classMagnum_1_1Shader.html" anchor="aec4ea1a663ac199fce1629e57b82400dab22b929ba52471a02d18bb3a4e4472e6">Vertex</enumvalue>
      <enumvalue file="classMagnum_1_1Shader.html" anchor="aec4ea1a663ac199fce1629e57b82400da91a08ad964ef35c89ae69cd4176cfb4a">TessellationControl</enumvalue>
      <enumvalue file="classMagnum_1_1Shader.html" anchor="aec4ea1a663ac199fce1629e57b82400da85a5d743bd284736223e3c1e95c6b952">TessellationEvaluation</enumvalue>
      <enumvalue file="classMagnum_1_1Shader.html" anchor="aec4ea1a663ac199fce1629e57b82400dad9c6333623e6357515fcbf17be806273">Geometry</enumvalue>
      <enumvalue file="classMagnum_1_1Shader.html" anchor="aec4ea1a663ac199fce1629e57b82400daa623a8d0366bf079411aa30be45b2d10">Compute</enumvalue>
      <enumvalue file="classMagnum_1_1Shader.html" anchor="aec4ea1a663ac199fce1629e57b82400da37d01b98065725fe3a1d30acf3a0064a">Fragment</enumvalue>
    </member>
    <member kind="function">
      <type></type>
      <name>Shader</name>
      <anchorfile>classMagnum_1_1Shader.html</anchorfile>
      <anchor>ab6bfeda75eb57393ce780cec32b7a040</anchor>
      <arglist>(Version version, Type type)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Shader</name>
      <anchorfile>classMagnum_1_1Shader.html</anchorfile>
      <anchor>a1903dfb5434d17afec87c90bddd5e6cb</anchor>
      <arglist>(const Shader &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Shader</name>
      <anchorfile>classMagnum_1_1Shader.html</anchorfile>
      <anchor>a463fe65f574a1bc851b4003430830c0a</anchor>
      <arglist>(Shader &amp;&amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~Shader</name>
      <anchorfile>classMagnum_1_1Shader.html</anchorfile>
      <anchor>abe0d057bf63223a1af3c46f6991f3d94</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Shader &amp;</type>
      <name>operator=</name>
      <anchorfile>classMagnum_1_1Shader.html</anchorfile>
      <anchor>aee1e11cf1b955ccb02b672d59be52ed2</anchor>
      <arglist>(const Shader &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>Shader &amp;</type>
      <name>operator=</name>
      <anchorfile>classMagnum_1_1Shader.html</anchorfile>
      <anchor>ade83557bc4c7b2dfd562b2c908a80712</anchor>
      <arglist>(Shader &amp;&amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type>GLuint</type>
      <name>id</name>
      <anchorfile>classMagnum_1_1Shader.html</anchorfile>
      <anchor>a43495821a27fd92695a2eebc08d2cc1d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>label</name>
      <anchorfile>classMagnum_1_1Shader.html</anchorfile>
      <anchor>a3ba753644daa296b47346db88c95bf91</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Shader &amp;</type>
      <name>setLabel</name>
      <anchorfile>classMagnum_1_1Shader.html</anchorfile>
      <anchor>a06212523a8e35079018a751b68c1a2c5</anchor>
      <arglist>(const std::string &amp;label)</arglist>
    </member>
    <member kind="function">
      <type>Shader &amp;</type>
      <name>setLabel</name>
      <anchorfile>classMagnum_1_1Shader.html</anchorfile>
      <anchor>a253fccf15496e7558f93d104cbf45ba5</anchor>
      <arglist>(const char(&amp;label)[size])</arglist>
    </member>
    <member kind="function">
      <type>Type</type>
      <name>type</name>
      <anchorfile>classMagnum_1_1Shader.html</anchorfile>
      <anchor>a0021e26eb66afcd4e4c63ffa08351ea5</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; std::string &gt;</type>
      <name>sources</name>
      <anchorfile>classMagnum_1_1Shader.html</anchorfile>
      <anchor>aad5bb3dafce6fc5966349eddec20d64f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Shader &amp;</type>
      <name>addSource</name>
      <anchorfile>classMagnum_1_1Shader.html</anchorfile>
      <anchor>a1591d12c4f000854fc7b26fcb6198aa6</anchor>
      <arglist>(std::string source)</arglist>
    </member>
    <member kind="function">
      <type>Shader &amp;</type>
      <name>addFile</name>
      <anchorfile>classMagnum_1_1Shader.html</anchorfile>
      <anchor>a2a5638f4d562c3a0620b9c953b686096</anchor>
      <arglist>(const std::string &amp;filename)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>compile</name>
      <anchorfile>classMagnum_1_1Shader.html</anchorfile>
      <anchor>a632b9cf40e9ed6726c83c412c0a4f8df</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Int</type>
      <name>maxVertexOutputComponents</name>
      <anchorfile>classMagnum_1_1Shader.html</anchorfile>
      <anchor>a0b7de842a25e5b150237ac03d0d26769</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Int</type>
      <name>maxTessellationControlInputComponents</name>
      <anchorfile>classMagnum_1_1Shader.html</anchorfile>
      <anchor>a4fe25f6aa5693e27085cc31408d87af4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Int</type>
      <name>maxTessellationControlOutputComponents</name>
      <anchorfile>classMagnum_1_1Shader.html</anchorfile>
      <anchor>a34a4a17e3de213f81c532b5c9730d48f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Int</type>
      <name>maxTessellationControlTotalOutputComponents</name>
      <anchorfile>classMagnum_1_1Shader.html</anchorfile>
      <anchor>adbf41061a602f268b4bdaf01d32a6fa8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Int</type>
      <name>maxTessellationEvaluationInputComponents</name>
      <anchorfile>classMagnum_1_1Shader.html</anchorfile>
      <anchor>a0dd4a3f41017cf8df1f69bbc6d83153d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Int</type>
      <name>maxTessellationEvaluationOutputComponents</name>
      <anchorfile>classMagnum_1_1Shader.html</anchorfile>
      <anchor>a9b0bdf32c4bf737f5a29b6e090c7cf48</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Int</type>
      <name>maxGeometryInputComponents</name>
      <anchorfile>classMagnum_1_1Shader.html</anchorfile>
      <anchor>a9e02e5c30f068b09514bb47df6d21727</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Int</type>
      <name>maxGeometryOutputComponents</name>
      <anchorfile>classMagnum_1_1Shader.html</anchorfile>
      <anchor>a1df383729209e9ce34cb7520865368f0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Int</type>
      <name>maxGeometryTotalOutputComponents</name>
      <anchorfile>classMagnum_1_1Shader.html</anchorfile>
      <anchor>afc856969023b67c94254afcc9b50db1b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Int</type>
      <name>maxFragmentInputComponents</name>
      <anchorfile>classMagnum_1_1Shader.html</anchorfile>
      <anchor>a52a4d1dc78aa4aa5f5aa922b44384e93</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Int</type>
      <name>maxUniformComponents</name>
      <anchorfile>classMagnum_1_1Shader.html</anchorfile>
      <anchor>a760600cd86d897debabc296b8cc60517</anchor>
      <arglist>(Type type)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Int</type>
      <name>maxAtomicCounterBuffers</name>
      <anchorfile>classMagnum_1_1Shader.html</anchorfile>
      <anchor>af8a1884066463699840031b2bffbaf4f</anchor>
      <arglist>(Type type)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Int</type>
      <name>maxCombinedAtomicCounterBuffers</name>
      <anchorfile>classMagnum_1_1Shader.html</anchorfile>
      <anchor>a0c140210cf06f1b5993e13813e5305f7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Int</type>
      <name>maxAtomicCounters</name>
      <anchorfile>classMagnum_1_1Shader.html</anchorfile>
      <anchor>a3880de514ca5e294e29be0fc9975f5e8</anchor>
      <arglist>(Type type)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Int</type>
      <name>maxCombinedAtomicCounters</name>
      <anchorfile>classMagnum_1_1Shader.html</anchorfile>
      <anchor>ad9d718fba8dcc81e599a05a92176ca09</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Int</type>
      <name>maxImageUniforms</name>
      <anchorfile>classMagnum_1_1Shader.html</anchorfile>
      <anchor>aad6d6dc2bd56099c14914723097f1803</anchor>
      <arglist>(Type type)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Int</type>
      <name>maxCombinedImageUniforms</name>
      <anchorfile>classMagnum_1_1Shader.html</anchorfile>
      <anchor>aaa9e3659e1d322383783fac8d4ad12dc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Int</type>
      <name>maxShaderStorageBlocks</name>
      <anchorfile>classMagnum_1_1Shader.html</anchorfile>
      <anchor>a992fd35da02942d03ef9cc81b05989f2</anchor>
      <arglist>(Type type)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Int</type>
      <name>maxCombinedShaderStorageBlocks</name>
      <anchorfile>classMagnum_1_1Shader.html</anchorfile>
      <anchor>a5850c167c6d5f96fd56e1c762a8e6b8e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Int</type>
      <name>maxTextureImageUnits</name>
      <anchorfile>classMagnum_1_1Shader.html</anchorfile>
      <anchor>a0bdb5bee89ad612f29ebd6cdf194eb3e</anchor>
      <arglist>(Type type)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Int</type>
      <name>maxCombinedTextureImageUnits</name>
      <anchorfile>classMagnum_1_1Shader.html</anchorfile>
      <anchor>a97f60d7feb30f7ee582d9801f792db85</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Int</type>
      <name>maxUniformBlocks</name>
      <anchorfile>classMagnum_1_1Shader.html</anchorfile>
      <anchor>a76fdfa80e7c998012969673511f3bb55</anchor>
      <arglist>(Type type)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Int</type>
      <name>maxCombinedUniformBlocks</name>
      <anchorfile>classMagnum_1_1Shader.html</anchorfile>
      <anchor>a80038b7ce1ae1b076e610f0d54f8c84c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Int</type>
      <name>maxCombinedUniformComponents</name>
      <anchorfile>classMagnum_1_1Shader.html</anchorfile>
      <anchor>a32249b2e67783971c22674bf53d64747</anchor>
      <arglist>(Type type)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>compile</name>
      <anchorfile>classMagnum_1_1Shader.html</anchorfile>
      <anchor>ab107b8406689ff08db361583f251c151</anchor>
      <arglist>(std::initializer_list&lt; std::reference_wrapper&lt; Shader &gt;&gt; shaders)</arglist>
    </member>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>classMagnum_1_1Shader.html</anchorfile>
      <anchor>a7ade40fd2de1c917757f97dbd6c5ab11</anchor>
      <arglist>(Debug &amp;debug, Shader::Type value)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Magnum::Shaders::AbstractVector</name>
    <filename>classMagnum_1_1Shaders_1_1AbstractVector.html</filename>
    <templarg>dimensions</templarg>
    <base>Magnum::AbstractShaderProgram</base>
    <member kind="typedef">
      <type>Generic&lt; dimensions &gt;::Position</type>
      <name>Position</name>
      <anchorfile>classMagnum_1_1Shaders_1_1AbstractVector.html</anchorfile>
      <anchor>a7ed8ee8dbb4bcd63eb009f4c6b074148</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Generic&lt; dimensions &gt;::TextureCoordinates</type>
      <name>TextureCoordinates</name>
      <anchorfile>classMagnum_1_1Shaders_1_1AbstractVector.html</anchorfile>
      <anchor>ad54e673eebca055fcce82f214ba9f399</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>AbstractVector&lt; dimensions &gt; &amp;</type>
      <name>setVectorTexture</name>
      <anchorfile>classMagnum_1_1Shaders_1_1AbstractVector.html</anchorfile>
      <anchor>acb1cc851cef9b16b95953367a72ce48e</anchor>
      <arglist>(Texture2D &amp;texture)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Magnum::Shaders::DistanceFieldVector</name>
    <filename>classMagnum_1_1Shaders_1_1DistanceFieldVector.html</filename>
    <templarg>dimensions</templarg>
    <base>Magnum::Shaders::AbstractVector</base>
    <member kind="function">
      <type></type>
      <name>DistanceFieldVector</name>
      <anchorfile>classMagnum_1_1Shaders_1_1DistanceFieldVector.html</anchorfile>
      <anchor>a3edbb9ad8a0fba4d308502b0688f1fad</anchor>
      <arglist>(NoCreateT) noexcept</arglist>
    </member>
    <member kind="function">
      <type>DistanceFieldVector &amp;</type>
      <name>setTransformationProjectionMatrix</name>
      <anchorfile>classMagnum_1_1Shaders_1_1DistanceFieldVector.html</anchorfile>
      <anchor>a452aaab9cedfa695c2486fa9d16f4eb4</anchor>
      <arglist>(const MatrixTypeFor&lt; dimensions, Float &gt; &amp;matrix)</arglist>
    </member>
    <member kind="function">
      <type>DistanceFieldVector &amp;</type>
      <name>setColor</name>
      <anchorfile>classMagnum_1_1Shaders_1_1DistanceFieldVector.html</anchorfile>
      <anchor>a1eb97a192b1286d558162628416e145e</anchor>
      <arglist>(const Color4 &amp;color)</arglist>
    </member>
    <member kind="function">
      <type>DistanceFieldVector &amp;</type>
      <name>setOutlineColor</name>
      <anchorfile>classMagnum_1_1Shaders_1_1DistanceFieldVector.html</anchorfile>
      <anchor>a0d8337812d29ca7b8f1f1216ecc37b81</anchor>
      <arglist>(const Color4 &amp;color)</arglist>
    </member>
    <member kind="function">
      <type>DistanceFieldVector &amp;</type>
      <name>setOutlineRange</name>
      <anchorfile>classMagnum_1_1Shaders_1_1DistanceFieldVector.html</anchorfile>
      <anchor>a10e77a528a252d166da016d23c499655</anchor>
      <arglist>(Float start, Float end)</arglist>
    </member>
    <member kind="function">
      <type>DistanceFieldVector &amp;</type>
      <name>setSmoothness</name>
      <anchorfile>classMagnum_1_1Shaders_1_1DistanceFieldVector.html</anchorfile>
      <anchor>a5aa7fe5ef127755b16f84273522a5053</anchor>
      <arglist>(Float value)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Magnum::Shaders::Flat</name>
    <filename>classMagnum_1_1Shaders_1_1Flat.html</filename>
    <templarg>dimensions</templarg>
    <base>Magnum::AbstractShaderProgram</base>
    <member kind="enumeration">
      <type></type>
      <name>Flag</name>
      <anchorfile>classMagnum_1_1Shaders_1_1Flat.html</anchorfile>
      <anchor>ac92274219308daf59c02257f197bce8e</anchor>
      <arglist></arglist>
      <enumvalue file="classMagnum_1_1Shaders_1_1Flat.html" anchor="ac92274219308daf59c02257f197bce8ea727faf49bd334ad8c6692934ff652843">Textured</enumvalue>
    </member>
    <member kind="typedef">
      <type>Generic&lt; dimensions &gt;::Position</type>
      <name>Position</name>
      <anchorfile>classMagnum_1_1Shaders_1_1Flat.html</anchorfile>
      <anchor>af85f5f7ae3699a3a3b18d534674611af</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Generic&lt; dimensions &gt;::TextureCoordinates</type>
      <name>TextureCoordinates</name>
      <anchorfile>classMagnum_1_1Shaders_1_1Flat.html</anchorfile>
      <anchor>ad6c77fc99b083a7f052b56eda55360db</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Containers::EnumSet&lt; Flag &gt;</type>
      <name>Flags</name>
      <anchorfile>classMagnum_1_1Shaders_1_1Flat.html</anchorfile>
      <anchor>a4d2b0c2f37cf47089373e6f23906ee6c</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Flat</name>
      <anchorfile>classMagnum_1_1Shaders_1_1Flat.html</anchorfile>
      <anchor>a0357eb935fa1eafb82f8eaf008294611</anchor>
      <arglist>(Flags flags={})</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Flat</name>
      <anchorfile>classMagnum_1_1Shaders_1_1Flat.html</anchorfile>
      <anchor>adfd63e3952d139f3f2bd2f2ffd9e6119</anchor>
      <arglist>(NoCreateT) noexcept</arglist>
    </member>
    <member kind="function">
      <type>Flags</type>
      <name>flags</name>
      <anchorfile>classMagnum_1_1Shaders_1_1Flat.html</anchorfile>
      <anchor>a3a9765b8e8e072b8c840e66b65f7e0e3</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Flat&lt; dimensions &gt; &amp;</type>
      <name>setTransformationProjectionMatrix</name>
      <anchorfile>classMagnum_1_1Shaders_1_1Flat.html</anchorfile>
      <anchor>a10ef3bf7a5372350de4b4a4937957fb7</anchor>
      <arglist>(const MatrixTypeFor&lt; dimensions, Float &gt; &amp;matrix)</arglist>
    </member>
    <member kind="function">
      <type>Flat&lt; dimensions &gt; &amp;</type>
      <name>setColor</name>
      <anchorfile>classMagnum_1_1Shaders_1_1Flat.html</anchorfile>
      <anchor>a9aa404e5f57f34fc7d6dbcb33e480686</anchor>
      <arglist>(const Color4 &amp;color)</arglist>
    </member>
    <member kind="function">
      <type>Flat&lt; dimensions &gt; &amp;</type>
      <name>setTexture</name>
      <anchorfile>classMagnum_1_1Shaders_1_1Flat.html</anchorfile>
      <anchor>a5a1734d3e63a174685e246c342880b83</anchor>
      <arglist>(Texture2D &amp;texture)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Magnum::Shaders::Generic</name>
    <filename>structMagnum_1_1Shaders_1_1Generic.html</filename>
    <templarg>dimensions</templarg>
    <class kind="struct">Magnum::Shaders::Generic::Color</class>
    <member kind="typedef">
      <type>Attribute&lt; 0, T &gt;</type>
      <name>Position</name>
      <anchorfile>structMagnum_1_1Shaders_1_1Generic.html</anchorfile>
      <anchor>a7c8de80446390a6b7508a3d6d5127f0b</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Attribute&lt; 1, Vector2 &gt;</type>
      <name>TextureCoordinates</name>
      <anchorfile>structMagnum_1_1Shaders_1_1Generic.html</anchorfile>
      <anchor>a1c0afd99653fcb7f61a0e9845c1a173d</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Attribute&lt; 2, Vector3 &gt;</type>
      <name>Normal</name>
      <anchorfile>structMagnum_1_1Shaders_1_1Generic.html</anchorfile>
      <anchor>acd6470ad169369719b3cdefdc016c935</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Magnum::Shaders::Generic::Color</name>
    <filename>structMagnum_1_1Shaders_1_1Generic_1_1Color.html</filename>
    <base>Attribute&lt; 3, Color4 &gt;</base>
    <member kind="function">
      <type>constexpr</type>
      <name>Color</name>
      <anchorfile>structMagnum_1_1Shaders_1_1Generic_1_1Color.html</anchorfile>
      <anchor>af1bad5f588b87e5386788d44d487be50</anchor>
      <arglist>(Components components, DataType dataType=DataType::Float, DataOptions dataOptions={})</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Color</name>
      <anchorfile>structMagnum_1_1Shaders_1_1Generic_1_1Color.html</anchorfile>
      <anchor>a1b92c978a4e64dd81a398bca63473f84</anchor>
      <arglist>(DataType dataType=DataType::Float, DataOptions dataOptions={})</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Magnum::Shaders::MeshVisualizer</name>
    <filename>classMagnum_1_1Shaders_1_1MeshVisualizer.html</filename>
    <base>Magnum::AbstractShaderProgram</base>
    <member kind="enumeration">
      <type></type>
      <name>Flag</name>
      <anchorfile>classMagnum_1_1Shaders_1_1MeshVisualizer.html</anchorfile>
      <anchor>ac8113a549818d2c506153b29649f9925</anchor>
      <arglist></arglist>
      <enumvalue file="classMagnum_1_1Shaders_1_1MeshVisualizer.html" anchor="ac8113a549818d2c506153b29649f9925a33e42d0f3b166a4c405127e4412fbef2">Wireframe</enumvalue>
      <enumvalue file="classMagnum_1_1Shaders_1_1MeshVisualizer.html" anchor="ac8113a549818d2c506153b29649f9925a699c77fffe844a5174d29336e2577bae">NoGeometryShader</enumvalue>
    </member>
    <member kind="typedef">
      <type>Attribute&lt; 0, Vector3 &gt;</type>
      <name>Position</name>
      <anchorfile>classMagnum_1_1Shaders_1_1MeshVisualizer.html</anchorfile>
      <anchor>a3f36e79098040cc260c5bf307b3bf20a</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Attribute&lt; 3, Float &gt;</type>
      <name>VertexIndex</name>
      <anchorfile>classMagnum_1_1Shaders_1_1MeshVisualizer.html</anchorfile>
      <anchor>a588dda1a4b1e584daf1f34080ae81a42</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Containers::EnumSet&lt; Flag &gt;</type>
      <name>Flags</name>
      <anchorfile>classMagnum_1_1Shaders_1_1MeshVisualizer.html</anchorfile>
      <anchor>a5e06c6be5d9305dbba4b1e235fb2e275</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>MeshVisualizer</name>
      <anchorfile>classMagnum_1_1Shaders_1_1MeshVisualizer.html</anchorfile>
      <anchor>ae042569e0da3b5772b20a84290ea816c</anchor>
      <arglist>(Flags flags={})</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>MeshVisualizer</name>
      <anchorfile>classMagnum_1_1Shaders_1_1MeshVisualizer.html</anchorfile>
      <anchor>a2246d65c86a0a804c2408fa9812f37b6</anchor>
      <arglist>(NoCreateT) noexcept</arglist>
    </member>
    <member kind="function">
      <type>MeshVisualizer &amp;</type>
      <name>setTransformationProjectionMatrix</name>
      <anchorfile>classMagnum_1_1Shaders_1_1MeshVisualizer.html</anchorfile>
      <anchor>ad9111b59f7414ac406dbe5c374f116e2</anchor>
      <arglist>(const Matrix4 &amp;matrix)</arglist>
    </member>
    <member kind="function">
      <type>MeshVisualizer &amp;</type>
      <name>setViewportSize</name>
      <anchorfile>classMagnum_1_1Shaders_1_1MeshVisualizer.html</anchorfile>
      <anchor>aa23eadd3a8433a12aee5b6e697bcf44f</anchor>
      <arglist>(const Vector2 &amp;size)</arglist>
    </member>
    <member kind="function">
      <type>MeshVisualizer &amp;</type>
      <name>setColor</name>
      <anchorfile>classMagnum_1_1Shaders_1_1MeshVisualizer.html</anchorfile>
      <anchor>aba1315572a3f1d7d5340de0ec0d04a88</anchor>
      <arglist>(const Color4 &amp;color)</arglist>
    </member>
    <member kind="function">
      <type>MeshVisualizer &amp;</type>
      <name>setWireframeColor</name>
      <anchorfile>classMagnum_1_1Shaders_1_1MeshVisualizer.html</anchorfile>
      <anchor>aefd18ec82211692f8d22dfb3a95308be</anchor>
      <arglist>(const Color4 &amp;color)</arglist>
    </member>
    <member kind="function">
      <type>MeshVisualizer &amp;</type>
      <name>setWireframeWidth</name>
      <anchorfile>classMagnum_1_1Shaders_1_1MeshVisualizer.html</anchorfile>
      <anchor>a5c2dabc1f7497a562b5fabd8c4723bcb</anchor>
      <arglist>(Float width)</arglist>
    </member>
    <member kind="function">
      <type>MeshVisualizer &amp;</type>
      <name>setSmoothness</name>
      <anchorfile>classMagnum_1_1Shaders_1_1MeshVisualizer.html</anchorfile>
      <anchor>af4b28d82a4e5ef903c48ae37c4e572f3</anchor>
      <arglist>(Float smoothness)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Magnum::Shaders::Phong</name>
    <filename>classMagnum_1_1Shaders_1_1Phong.html</filename>
    <base>Magnum::AbstractShaderProgram</base>
    <member kind="enumeration">
      <type></type>
      <name>Flag</name>
      <anchorfile>classMagnum_1_1Shaders_1_1Phong.html</anchorfile>
      <anchor>a4da0f5c674ff490db5e2d6196d2f042a</anchor>
      <arglist></arglist>
      <enumvalue file="classMagnum_1_1Shaders_1_1Phong.html" anchor="a4da0f5c674ff490db5e2d6196d2f042aa3ae56a8ec764ef7cd26cdde384d85e19">AmbientTexture</enumvalue>
      <enumvalue file="classMagnum_1_1Shaders_1_1Phong.html" anchor="a4da0f5c674ff490db5e2d6196d2f042aae712876b5313699d4e38e6f70c7c725e">DiffuseTexture</enumvalue>
      <enumvalue file="classMagnum_1_1Shaders_1_1Phong.html" anchor="a4da0f5c674ff490db5e2d6196d2f042aa8f19fa0f2cc4078c09a89d31205980e7">SpecularTexture</enumvalue>
    </member>
    <member kind="typedef">
      <type>Generic3D::Position</type>
      <name>Position</name>
      <anchorfile>classMagnum_1_1Shaders_1_1Phong.html</anchorfile>
      <anchor>a548664c5da1eb08de9702d655592ffc7</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Generic3D::Normal</type>
      <name>Normal</name>
      <anchorfile>classMagnum_1_1Shaders_1_1Phong.html</anchorfile>
      <anchor>a11a7f5f6ae2526806b0d450115c7f061</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Generic3D::TextureCoordinates</type>
      <name>TextureCoordinates</name>
      <anchorfile>classMagnum_1_1Shaders_1_1Phong.html</anchorfile>
      <anchor>aba490b5624404d36dcf5b084e3850ecc</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Containers::EnumSet&lt; Flag &gt;</type>
      <name>Flags</name>
      <anchorfile>classMagnum_1_1Shaders_1_1Phong.html</anchorfile>
      <anchor>a7a30a4d1ec350bab0cd808f3a6232aee</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Phong</name>
      <anchorfile>classMagnum_1_1Shaders_1_1Phong.html</anchorfile>
      <anchor>a451cff73625b19474c53ed8327f813ad</anchor>
      <arglist>(Flags flags={})</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Phong</name>
      <anchorfile>classMagnum_1_1Shaders_1_1Phong.html</anchorfile>
      <anchor>a04d906ed38124b388c69c1a4bbe7e039</anchor>
      <arglist>(NoCreateT) noexcept</arglist>
    </member>
    <member kind="function">
      <type>Flags</type>
      <name>flags</name>
      <anchorfile>classMagnum_1_1Shaders_1_1Phong.html</anchorfile>
      <anchor>a3670dfe2c01c263215752b5ddc9601f7</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Phong &amp;</type>
      <name>setAmbientColor</name>
      <anchorfile>classMagnum_1_1Shaders_1_1Phong.html</anchorfile>
      <anchor>a921e59ee974ad8b7a88f02e625034a8e</anchor>
      <arglist>(const Color4 &amp;color)</arglist>
    </member>
    <member kind="function">
      <type>Phong &amp;</type>
      <name>setAmbientTexture</name>
      <anchorfile>classMagnum_1_1Shaders_1_1Phong.html</anchorfile>
      <anchor>a07dcb3d93ef9fd47a0e0a863ac972709</anchor>
      <arglist>(Texture2D &amp;texture)</arglist>
    </member>
    <member kind="function">
      <type>Phong &amp;</type>
      <name>setDiffuseColor</name>
      <anchorfile>classMagnum_1_1Shaders_1_1Phong.html</anchorfile>
      <anchor>abedde167897a2641e5a8b76678a4a571</anchor>
      <arglist>(const Color4 &amp;color)</arglist>
    </member>
    <member kind="function">
      <type>Phong &amp;</type>
      <name>setDiffuseTexture</name>
      <anchorfile>classMagnum_1_1Shaders_1_1Phong.html</anchorfile>
      <anchor>a7981e0919cffb57df5c4a6cca29699a7</anchor>
      <arglist>(Texture2D &amp;texture)</arglist>
    </member>
    <member kind="function">
      <type>Phong &amp;</type>
      <name>setSpecularColor</name>
      <anchorfile>classMagnum_1_1Shaders_1_1Phong.html</anchorfile>
      <anchor>afe123e87fd72431d3b68808f3f777b60</anchor>
      <arglist>(const Color4 &amp;color)</arglist>
    </member>
    <member kind="function">
      <type>Phong &amp;</type>
      <name>setSpecularTexture</name>
      <anchorfile>classMagnum_1_1Shaders_1_1Phong.html</anchorfile>
      <anchor>adacd8a59feef3e10270523400cc43f61</anchor>
      <arglist>(Texture2D &amp;texture)</arglist>
    </member>
    <member kind="function">
      <type>Phong &amp;</type>
      <name>setTextures</name>
      <anchorfile>classMagnum_1_1Shaders_1_1Phong.html</anchorfile>
      <anchor>abb9f9fee27225645046e92976a5439f7</anchor>
      <arglist>(Texture2D *ambient, Texture2D *diffuse, Texture2D *specular)</arglist>
    </member>
    <member kind="function">
      <type>Phong &amp;</type>
      <name>setShininess</name>
      <anchorfile>classMagnum_1_1Shaders_1_1Phong.html</anchorfile>
      <anchor>ac45369524750da1a6ea885c2748d36bd</anchor>
      <arglist>(Float shininess)</arglist>
    </member>
    <member kind="function">
      <type>Phong &amp;</type>
      <name>setTransformationMatrix</name>
      <anchorfile>classMagnum_1_1Shaders_1_1Phong.html</anchorfile>
      <anchor>a4171a46839fee09fd841753aaa884308</anchor>
      <arglist>(const Matrix4 &amp;matrix)</arglist>
    </member>
    <member kind="function">
      <type>Phong &amp;</type>
      <name>setNormalMatrix</name>
      <anchorfile>classMagnum_1_1Shaders_1_1Phong.html</anchorfile>
      <anchor>ab73684777f297edf51d82be5c3cf7c4a</anchor>
      <arglist>(const Matrix3x3 &amp;matrix)</arglist>
    </member>
    <member kind="function">
      <type>Phong &amp;</type>
      <name>setProjectionMatrix</name>
      <anchorfile>classMagnum_1_1Shaders_1_1Phong.html</anchorfile>
      <anchor>aea9fb6a7163ece02909391831521c56a</anchor>
      <arglist>(const Matrix4 &amp;matrix)</arglist>
    </member>
    <member kind="function">
      <type>Phong &amp;</type>
      <name>setLightPosition</name>
      <anchorfile>classMagnum_1_1Shaders_1_1Phong.html</anchorfile>
      <anchor>ade5612bbf8f3d9bf21c99fc4b2f47527</anchor>
      <arglist>(const Vector3 &amp;light)</arglist>
    </member>
    <member kind="function">
      <type>Phong &amp;</type>
      <name>setLightColor</name>
      <anchorfile>classMagnum_1_1Shaders_1_1Phong.html</anchorfile>
      <anchor>a686e3193ec87f31f1530c64d0a6c968a</anchor>
      <arglist>(const Color4 &amp;color)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Magnum::Shaders::Vector</name>
    <filename>classMagnum_1_1Shaders_1_1Vector.html</filename>
    <templarg>dimensions</templarg>
    <base>Magnum::Shaders::AbstractVector</base>
    <member kind="function">
      <type></type>
      <name>Vector</name>
      <anchorfile>classMagnum_1_1Shaders_1_1Vector.html</anchorfile>
      <anchor>a7df5ae55ea3ac9b1d565ffc239af8c41</anchor>
      <arglist>(NoCreateT) noexcept</arglist>
    </member>
    <member kind="function">
      <type>Vector &amp;</type>
      <name>setTransformationProjectionMatrix</name>
      <anchorfile>classMagnum_1_1Shaders_1_1Vector.html</anchorfile>
      <anchor>ad613b06e036d4ddfe45ad4970a0418be</anchor>
      <arglist>(const MatrixTypeFor&lt; dimensions, Float &gt; &amp;matrix)</arglist>
    </member>
    <member kind="function">
      <type>Vector &amp;</type>
      <name>setBackgroundColor</name>
      <anchorfile>classMagnum_1_1Shaders_1_1Vector.html</anchorfile>
      <anchor>a0872dc2ef0b4318d71ba1b134ba8cb6c</anchor>
      <arglist>(const Color4 &amp;color)</arglist>
    </member>
    <member kind="function">
      <type>Vector &amp;</type>
      <name>setColor</name>
      <anchorfile>classMagnum_1_1Shaders_1_1Vector.html</anchorfile>
      <anchor>a2b683fb66c78ea3c6015590efd2c308a</anchor>
      <arglist>(const Color4 &amp;color)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Magnum::Shaders::VertexColor</name>
    <filename>classMagnum_1_1Shaders_1_1VertexColor.html</filename>
    <templarg>dimensions</templarg>
    <base>Magnum::AbstractShaderProgram</base>
    <member kind="typedef">
      <type>Generic&lt; dimensions &gt;::Position</type>
      <name>Position</name>
      <anchorfile>classMagnum_1_1Shaders_1_1VertexColor.html</anchorfile>
      <anchor>aacac664f88c41ccc12f9480d101b1300</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Generic&lt; dimensions &gt;::Color</type>
      <name>Color</name>
      <anchorfile>classMagnum_1_1Shaders_1_1VertexColor.html</anchorfile>
      <anchor>abb063fdf11ceb82e163b1f594e4eaf3b</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>VertexColor</name>
      <anchorfile>classMagnum_1_1Shaders_1_1VertexColor.html</anchorfile>
      <anchor>ac4286dfbddff3a20c852fe06055f53f8</anchor>
      <arglist>(NoCreateT) noexcept</arglist>
    </member>
    <member kind="function">
      <type>VertexColor&lt; dimensions &gt; &amp;</type>
      <name>setTransformationProjectionMatrix</name>
      <anchorfile>classMagnum_1_1Shaders_1_1VertexColor.html</anchorfile>
      <anchor>ac680b3e05d8d10a65963a47188da75ec</anchor>
      <arglist>(const MatrixTypeFor&lt; dimensions, Float &gt; &amp;matrix)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Magnum::Shapes::AbstractShape</name>
    <filename>classMagnum_1_1Shapes_1_1AbstractShape.html</filename>
    <templarg>dimensions</templarg>
    <base>AbstractGroupedFeature&lt; dimensions, AbstractShape&lt; dimensions &gt;, Float &gt;</base>
    <member kind="enumvalue">
      <name>Dimensions</name>
      <anchorfile>classMagnum_1_1Shapes_1_1AbstractShape.html</anchorfile>
      <anchor>a936080bbab3fcf10333655f11c90f2b2af4c9b50d1bb4cd079845d57b0eac27f4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>Type</name>
      <anchorfile>classMagnum_1_1Shapes_1_1AbstractShape.html</anchorfile>
      <anchor>a5326f2287b1c17a9bd8a2058a4011e77</anchor>
      <arglist></arglist>
      <enumvalue file="classMagnum_1_1Shapes_1_1AbstractShape.html" anchor="a5326f2287b1c17a9bd8a2058a4011e77a2a3cd5946cfd317eb99c3d32e35e2d4c">Point</enumvalue>
      <enumvalue file="classMagnum_1_1Shapes_1_1AbstractShape.html" anchor="a5326f2287b1c17a9bd8a2058a4011e77a4803e6b9e63dabf04de980788d6a13c4">Line</enumvalue>
      <enumvalue file="classMagnum_1_1Shapes_1_1AbstractShape.html" anchor="a5326f2287b1c17a9bd8a2058a4011e77aad66f0c8f4c94b14a7eafa0d363da1c1">LineSegment</enumvalue>
      <enumvalue file="classMagnum_1_1Shapes_1_1AbstractShape.html" anchor="a5326f2287b1c17a9bd8a2058a4011e77ab7095f057db3fefa7325ad93a04e14fd">Sphere</enumvalue>
      <enumvalue file="classMagnum_1_1Shapes_1_1AbstractShape.html" anchor="a5326f2287b1c17a9bd8a2058a4011e77a4880c0f12c06dd6d142e7a40b041bf1a">Capsule</enumvalue>
      <enumvalue file="classMagnum_1_1Shapes_1_1AbstractShape.html" anchor="a5326f2287b1c17a9bd8a2058a4011e77a1e9ef3dc3d71dc3385b317ce34aa23eb">AxisAlignedBox</enumvalue>
      <enumvalue file="classMagnum_1_1Shapes_1_1AbstractShape.html" anchor="a5326f2287b1c17a9bd8a2058a4011e77a3cfce651e667ab85486dd42a8185f98a">Box</enumvalue>
      <enumvalue file="classMagnum_1_1Shapes_1_1AbstractShape.html" anchor="a5326f2287b1c17a9bd8a2058a4011e77a53eff24a355b7ae55f0aa2bef39bb24c">Composition</enumvalue>
      <enumvalue file="classMagnum_1_1Shapes_1_1AbstractShape.html" anchor="a5326f2287b1c17a9bd8a2058a4011e77a0d3adee051531c15b3509b4d4d75ce7b">Plane</enumvalue>
    </member>
    <member kind="enumvalue">
      <name>Dimensions</name>
      <anchorfile>classMagnum_1_1Shapes_1_1AbstractShape.html</anchorfile>
      <anchor>a936080bbab3fcf10333655f11c90f2b2af4c9b50d1bb4cd079845d57b0eac27f4</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AbstractShape</name>
      <anchorfile>classMagnum_1_1Shapes_1_1AbstractShape.html</anchorfile>
      <anchor>a5e329f672734a57ebdc07e92e9198871</anchor>
      <arglist>(SceneGraph::AbstractObject&lt; dimensions, Float &gt; &amp;object, ShapeGroup&lt; dimensions &gt; *group=nullptr)</arglist>
    </member>
    <member kind="function">
      <type>ShapeGroup&lt; dimensions &gt; *</type>
      <name>group</name>
      <anchorfile>classMagnum_1_1Shapes_1_1AbstractShape.html</anchorfile>
      <anchor>a60203f20d8f2814ffcb8d82a7e231a37</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const ShapeGroup&lt; dimensions &gt; *</type>
      <name>group</name>
      <anchorfile>classMagnum_1_1Shapes_1_1AbstractShape.html</anchorfile>
      <anchor>acc092202b05599f4b38e1feda2b23ad0</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Type</type>
      <name>type</name>
      <anchorfile>classMagnum_1_1Shapes_1_1AbstractShape.html</anchorfile>
      <anchor>a83df4c714220b4f198dab8388caa30ce</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>collides</name>
      <anchorfile>classMagnum_1_1Shapes_1_1AbstractShape.html</anchorfile>
      <anchor>a2b14a05ab21370222631d39d1c28ca71</anchor>
      <arglist>(const AbstractShape&lt; dimensions &gt; &amp;other) const </arglist>
    </member>
    <member kind="function">
      <type>Collision&lt; dimensions &gt;</type>
      <name>collision</name>
      <anchorfile>classMagnum_1_1Shapes_1_1AbstractShape.html</anchorfile>
      <anchor>a8b8401129edb86d71aee1802b58329dd</anchor>
      <arglist>(const AbstractShape&lt; dimensions &gt; &amp;other) const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>markDirty</name>
      <anchorfile>classMagnum_1_1Shapes_1_1AbstractShape.html</anchorfile>
      <anchor>a95c1ecf29ab5c338141a2dbb2672f3d3</anchor>
      <arglist>() override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Magnum::Shapes::AxisAlignedBox</name>
    <filename>classMagnum_1_1Shapes_1_1AxisAlignedBox.html</filename>
    <templarg>dimensions</templarg>
    <member kind="enumvalue">
      <name>Dimensions</name>
      <anchorfile>classMagnum_1_1Shapes_1_1AxisAlignedBox.html</anchorfile>
      <anchor>ae8d5c19b3d33b26c64919f578f68c010ae80a46b9dcace6d2fbb4ac4c667bdcb9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Dimensions</name>
      <anchorfile>classMagnum_1_1Shapes_1_1AxisAlignedBox.html</anchorfile>
      <anchor>ae8d5c19b3d33b26c64919f578f68c010ae80a46b9dcace6d2fbb4ac4c667bdcb9</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>AxisAlignedBox</name>
      <anchorfile>classMagnum_1_1Shapes_1_1AxisAlignedBox.html</anchorfile>
      <anchor>a60001731baec852204076b9340fca06b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>AxisAlignedBox</name>
      <anchorfile>classMagnum_1_1Shapes_1_1AxisAlignedBox.html</anchorfile>
      <anchor>a8831e348d6d59cbef21984d88ec76592</anchor>
      <arglist>(const VectorTypeFor&lt; dimensions, Float &gt; &amp;min, const typename DimensionTraits&lt; dimensions, Float &gt;::VectorType &amp;max)</arglist>
    </member>
    <member kind="function">
      <type>AxisAlignedBox&lt; dimensions &gt;</type>
      <name>transformed</name>
      <anchorfile>classMagnum_1_1Shapes_1_1AxisAlignedBox.html</anchorfile>
      <anchor>af3b8ff882ba2778c1b72ccc0646b08a6</anchor>
      <arglist>(const MatrixTypeFor&lt; dimensions, Float &gt; &amp;matrix) const </arglist>
    </member>
    <member kind="function">
      <type>constexpr VectorTypeFor&lt; dimensions, Float &gt;</type>
      <name>min</name>
      <anchorfile>classMagnum_1_1Shapes_1_1AxisAlignedBox.html</anchorfile>
      <anchor>a1ad635e90829dec3745174bdb301c923</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setMin</name>
      <anchorfile>classMagnum_1_1Shapes_1_1AxisAlignedBox.html</anchorfile>
      <anchor>a15ec965e30d4d00b179b9b503609decc</anchor>
      <arglist>(const VectorTypeFor&lt; dimensions, Float &gt; &amp;min)</arglist>
    </member>
    <member kind="function">
      <type>constexpr VectorTypeFor&lt; dimensions, Float &gt;</type>
      <name>max</name>
      <anchorfile>classMagnum_1_1Shapes_1_1AxisAlignedBox.html</anchorfile>
      <anchor>ab6c726a12c2941f1cdfd1b64dc676fcb</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setMax</name>
      <anchorfile>classMagnum_1_1Shapes_1_1AxisAlignedBox.html</anchorfile>
      <anchor>a23db451912210ffcf7cf78a747135e03</anchor>
      <arglist>(const VectorTypeFor&lt; dimensions, Float &gt; &amp;max)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator%</name>
      <anchorfile>classMagnum_1_1Shapes_1_1AxisAlignedBox.html</anchorfile>
      <anchor>a43e0d84e7b5833d7017feb404d944fa8</anchor>
      <arglist>(const Point&lt; dimensions &gt; &amp;other) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Magnum::Shapes::Box</name>
    <filename>classMagnum_1_1Shapes_1_1Box.html</filename>
    <templarg>dimensions</templarg>
    <member kind="enumvalue">
      <name>Dimensions</name>
      <anchorfile>classMagnum_1_1Shapes_1_1Box.html</anchorfile>
      <anchor>a61dc28a0348acb712df02a3b232646b2aed6479c417f375ecf541674512e8e1da</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Dimensions</name>
      <anchorfile>classMagnum_1_1Shapes_1_1Box.html</anchorfile>
      <anchor>a61dc28a0348acb712df02a3b232646b2aed6479c417f375ecf541674512e8e1da</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Box</name>
      <anchorfile>classMagnum_1_1Shapes_1_1Box.html</anchorfile>
      <anchor>ae30e8f8668ab45b6ff458f3250b55fb3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Box</name>
      <anchorfile>classMagnum_1_1Shapes_1_1Box.html</anchorfile>
      <anchor>afd5b235ee8f555631f2885eb41a81d8d</anchor>
      <arglist>(const MatrixTypeFor&lt; dimensions, Float &gt; &amp;transformation)</arglist>
    </member>
    <member kind="function">
      <type>Box&lt; dimensions &gt;</type>
      <name>transformed</name>
      <anchorfile>classMagnum_1_1Shapes_1_1Box.html</anchorfile>
      <anchor>ad6a2ef71c36c9aa94258ffb7af45053b</anchor>
      <arglist>(const MatrixTypeFor&lt; dimensions, Float &gt; &amp;matrix) const </arglist>
    </member>
    <member kind="function">
      <type>constexpr MatrixTypeFor&lt; dimensions, Float &gt;</type>
      <name>transformation</name>
      <anchorfile>classMagnum_1_1Shapes_1_1Box.html</anchorfile>
      <anchor>aca8b9b315c7875b15b6ac945d147c360</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setTransformation</name>
      <anchorfile>classMagnum_1_1Shapes_1_1Box.html</anchorfile>
      <anchor>a823c848b97c7ad05e95d31dee559044e</anchor>
      <arglist>(const MatrixTypeFor&lt; dimensions, Float &gt; &amp;transformation)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Magnum::Shapes::Capsule</name>
    <filename>classMagnum_1_1Shapes_1_1Capsule.html</filename>
    <templarg>dimensions</templarg>
    <member kind="enumvalue">
      <name>Dimensions</name>
      <anchorfile>classMagnum_1_1Shapes_1_1Capsule.html</anchorfile>
      <anchor>a91d827e807aae0a7710c4d5f6338799dab2df17bc2f1b216b65185cd3dcdafd8c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Dimensions</name>
      <anchorfile>classMagnum_1_1Shapes_1_1Capsule.html</anchorfile>
      <anchor>a91d827e807aae0a7710c4d5f6338799dab2df17bc2f1b216b65185cd3dcdafd8c</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Capsule</name>
      <anchorfile>classMagnum_1_1Shapes_1_1Capsule.html</anchorfile>
      <anchor>adaef1f4cbcb7237da89875f5365d88a9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Capsule</name>
      <anchorfile>classMagnum_1_1Shapes_1_1Capsule.html</anchorfile>
      <anchor>a31a7b77ea72ae26184a83470f723ef45</anchor>
      <arglist>(const VectorTypeFor&lt; dimensions, Float &gt; &amp;a, const VectorTypeFor&lt; dimensions, Float &gt; &amp;b, Float radius)</arglist>
    </member>
    <member kind="function">
      <type>Capsule&lt; dimensions &gt;</type>
      <name>transformed</name>
      <anchorfile>classMagnum_1_1Shapes_1_1Capsule.html</anchorfile>
      <anchor>a18dff1cf1cd9e82a239c30ecf1add6f8</anchor>
      <arglist>(const MatrixTypeFor&lt; dimensions, Float &gt; &amp;matrix) const </arglist>
    </member>
    <member kind="function">
      <type>constexpr VectorTypeFor&lt; dimensions, Float &gt;</type>
      <name>a</name>
      <anchorfile>classMagnum_1_1Shapes_1_1Capsule.html</anchorfile>
      <anchor>a6feb0ba8e240274dcb54cc4432407966</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setA</name>
      <anchorfile>classMagnum_1_1Shapes_1_1Capsule.html</anchorfile>
      <anchor>a4a934c7913f53fb1d2769042532f28f1</anchor>
      <arglist>(const VectorTypeFor&lt; dimensions, Float &gt; &amp;a)</arglist>
    </member>
    <member kind="function">
      <type>constexpr VectorTypeFor&lt; dimensions, Float &gt;</type>
      <name>b</name>
      <anchorfile>classMagnum_1_1Shapes_1_1Capsule.html</anchorfile>
      <anchor>af9a43e9d55c6675d3833f6a244b1dafb</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setB</name>
      <anchorfile>classMagnum_1_1Shapes_1_1Capsule.html</anchorfile>
      <anchor>a25ba6dc6f2da0d6a06243c445950ab46</anchor>
      <arglist>(const VectorTypeFor&lt; dimensions, Float &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>constexpr Float</type>
      <name>radius</name>
      <anchorfile>classMagnum_1_1Shapes_1_1Capsule.html</anchorfile>
      <anchor>a5a5b632d405821a9ee0b8ca4607e18c8</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setRadius</name>
      <anchorfile>classMagnum_1_1Shapes_1_1Capsule.html</anchorfile>
      <anchor>a5e005bb9a03882c9cb9130e5989a5b2c</anchor>
      <arglist>(Float radius)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator%</name>
      <anchorfile>classMagnum_1_1Shapes_1_1Capsule.html</anchorfile>
      <anchor>ad4f0823b7a81aa8ec9236ad36504b9d6</anchor>
      <arglist>(const Point&lt; dimensions &gt; &amp;other) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator%</name>
      <anchorfile>classMagnum_1_1Shapes_1_1Capsule.html</anchorfile>
      <anchor>a7f0a4ac6320efd5906e100e8a1ff1743</anchor>
      <arglist>(const Sphere&lt; dimensions &gt; &amp;other) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Magnum::Shapes::Collision</name>
    <filename>classMagnum_1_1Shapes_1_1Collision.html</filename>
    <templarg>dimensions</templarg>
    <member kind="function">
      <type></type>
      <name>Collision</name>
      <anchorfile>classMagnum_1_1Shapes_1_1Collision.html</anchorfile>
      <anchor>ac2d06999928ec006a7526def3d99d077</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Collision</name>
      <anchorfile>classMagnum_1_1Shapes_1_1Collision.html</anchorfile>
      <anchor>aa61be64a0529d991f8326267521d2256</anchor>
      <arglist>(const VectorTypeFor&lt; dimensions, Float &gt; &amp;position, const VectorTypeFor&lt; dimensions, Float &gt; &amp;separationNormal, Float separationDistance) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator bool</name>
      <anchorfile>classMagnum_1_1Shapes_1_1Collision.html</anchorfile>
      <anchor>aeb4b2af9c2fdf35e44c9ba3f019fd1b6</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>VectorTypeFor&lt; dimensions, Float &gt;</type>
      <name>position</name>
      <anchorfile>classMagnum_1_1Shapes_1_1Collision.html</anchorfile>
      <anchor>a144f7050644673bc0101688df0340e1d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>VectorTypeFor&lt; dimensions, Float &gt;</type>
      <name>separationNormal</name>
      <anchorfile>classMagnum_1_1Shapes_1_1Collision.html</anchorfile>
      <anchor>a2160b35b26c0e22df7841056dfbf9b85</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Float</type>
      <name>separationDistance</name>
      <anchorfile>classMagnum_1_1Shapes_1_1Collision.html</anchorfile>
      <anchor>aae7e33d21045194005b8a24cc7576cbc</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Collision&lt; dimensions &gt;</type>
      <name>flipped</name>
      <anchorfile>classMagnum_1_1Shapes_1_1Collision.html</anchorfile>
      <anchor>ae790fa34ab203396d57881d64e66654d</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Magnum::Shapes::Composition</name>
    <filename>classMagnum_1_1Shapes_1_1Composition.html</filename>
    <templarg>dimensions</templarg>
    <member kind="enumvalue">
      <name>Dimensions</name>
      <anchorfile>classMagnum_1_1Shapes_1_1Composition.html</anchorfile>
      <anchor>af04967c872e7a053e5817139ff4c158ca9fd19a540d18645a1883bf5ffa104380</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>Type</name>
      <anchorfile>classMagnum_1_1Shapes_1_1Composition.html</anchorfile>
      <anchor>ad8ce3554340c076d76d9e4156993913a</anchor>
      <arglist></arglist>
      <enumvalue file="classMagnum_1_1Shapes_1_1Composition.html" anchor="ad8ce3554340c076d76d9e4156993913aa2a3cd5946cfd317eb99c3d32e35e2d4c">Point</enumvalue>
      <enumvalue file="classMagnum_1_1Shapes_1_1Composition.html" anchor="ad8ce3554340c076d76d9e4156993913aa4803e6b9e63dabf04de980788d6a13c4">Line</enumvalue>
      <enumvalue file="classMagnum_1_1Shapes_1_1Composition.html" anchor="ad8ce3554340c076d76d9e4156993913aaad66f0c8f4c94b14a7eafa0d363da1c1">LineSegment</enumvalue>
      <enumvalue file="classMagnum_1_1Shapes_1_1Composition.html" anchor="ad8ce3554340c076d76d9e4156993913aab7095f057db3fefa7325ad93a04e14fd">Sphere</enumvalue>
      <enumvalue file="classMagnum_1_1Shapes_1_1Composition.html" anchor="ad8ce3554340c076d76d9e4156993913aa96e1b1fe018e6f5a42237a5a66148559">InvertedSphere</enumvalue>
      <enumvalue file="classMagnum_1_1Shapes_1_1Composition.html" anchor="ad8ce3554340c076d76d9e4156993913aa2ec2c2961c7ce5a114d969c1f562a563">Cylinder</enumvalue>
      <enumvalue file="classMagnum_1_1Shapes_1_1Composition.html" anchor="ad8ce3554340c076d76d9e4156993913aa4880c0f12c06dd6d142e7a40b041bf1a">Capsule</enumvalue>
      <enumvalue file="classMagnum_1_1Shapes_1_1Composition.html" anchor="ad8ce3554340c076d76d9e4156993913aa1e9ef3dc3d71dc3385b317ce34aa23eb">AxisAlignedBox</enumvalue>
      <enumvalue file="classMagnum_1_1Shapes_1_1Composition.html" anchor="ad8ce3554340c076d76d9e4156993913aa3cfce651e667ab85486dd42a8185f98a">Box</enumvalue>
      <enumvalue file="classMagnum_1_1Shapes_1_1Composition.html" anchor="ad8ce3554340c076d76d9e4156993913aa0d3adee051531c15b3509b4d4d75ce7b">Plane</enumvalue>
    </member>
    <member kind="enumvalue">
      <name>Dimensions</name>
      <anchorfile>classMagnum_1_1Shapes_1_1Composition.html</anchorfile>
      <anchor>af04967c872e7a053e5817139ff4c158ca9fd19a540d18645a1883bf5ffa104380</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Composition</name>
      <anchorfile>classMagnum_1_1Shapes_1_1Composition.html</anchorfile>
      <anchor>a7ca23187205bc55669d1059de376b3c9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Composition</name>
      <anchorfile>classMagnum_1_1Shapes_1_1Composition.html</anchorfile>
      <anchor>aca1e8bbe5627a8f6c65214673a6c9b8f</anchor>
      <arglist>(CompositionOperation operation, T &amp;&amp;a)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Composition</name>
      <anchorfile>classMagnum_1_1Shapes_1_1Composition.html</anchorfile>
      <anchor>acc47d57a397e11287b5bcf846a25a78f</anchor>
      <arglist>(CompositionOperation operation, T &amp;&amp;a, U &amp;&amp;b)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Composition</name>
      <anchorfile>classMagnum_1_1Shapes_1_1Composition.html</anchorfile>
      <anchor>a697aeb8514c34a058adb1db7aa5dfba3</anchor>
      <arglist>(const Composition&lt; dimensions &gt; &amp;other)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Composition</name>
      <anchorfile>classMagnum_1_1Shapes_1_1Composition.html</anchorfile>
      <anchor>a9362bf3a2f76fa109a2de0a7065d622e</anchor>
      <arglist>(Composition&lt; dimensions &gt; &amp;&amp;other)</arglist>
    </member>
    <member kind="function">
      <type>Composition&lt; dimensions &gt; &amp;</type>
      <name>operator=</name>
      <anchorfile>classMagnum_1_1Shapes_1_1Composition.html</anchorfile>
      <anchor>a6ae879c8e772fe94fe9b85327991b21c</anchor>
      <arglist>(const Composition&lt; dimensions &gt; &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>Composition&lt; dimensions &gt; &amp;</type>
      <name>operator=</name>
      <anchorfile>classMagnum_1_1Shapes_1_1Composition.html</anchorfile>
      <anchor>ac2b41d89e2c6f258e581e8dde973b63d</anchor>
      <arglist>(Composition&lt; dimensions &gt; &amp;&amp;other)</arglist>
    </member>
    <member kind="function">
      <type>Composition&lt; dimensions &gt;</type>
      <name>transformed</name>
      <anchorfile>classMagnum_1_1Shapes_1_1Composition.html</anchorfile>
      <anchor>a7c9f914220ec80675e5ed3fd407ffcbe</anchor>
      <arglist>(const MatrixTypeFor&lt; dimensions, Float &gt; &amp;matrix) const </arglist>
    </member>
    <member kind="function">
      <type>std::size_t</type>
      <name>size</name>
      <anchorfile>classMagnum_1_1Shapes_1_1Composition.html</anchorfile>
      <anchor>a829ee67a86ecbc5f10c746821d5ab7fc</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Type</type>
      <name>type</name>
      <anchorfile>classMagnum_1_1Shapes_1_1Composition.html</anchorfile>
      <anchor>afee3b9256e683f00d2554b9d3c88dfce</anchor>
      <arglist>(std::size_t i) const </arglist>
    </member>
    <member kind="function">
      <type>const T &amp;</type>
      <name>get</name>
      <anchorfile>classMagnum_1_1Shapes_1_1Composition.html</anchorfile>
      <anchor>ae59f2b28c270b5ab845e885cad06153b</anchor>
      <arglist>(std::size_t i) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator%</name>
      <anchorfile>classMagnum_1_1Shapes_1_1Composition.html</anchorfile>
      <anchor>a3b1527a77da099e580e9cb8c2bab9000</anchor>
      <arglist>(const T &amp;other) const </arglist>
    </member>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>classMagnum_1_1Shapes_1_1Composition.html</anchorfile>
      <anchor>aa9ee062abdca1154e74d91f50647abab</anchor>
      <arglist>(Debug &amp;debug, typename Composition&lt; dimensions &gt;::Type value)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator%</name>
      <anchorfile>classMagnum_1_1Shapes_1_1Composition.html</anchorfile>
      <anchor>af6d9b3794d57d6e070eade09b7f52904</anchor>
      <arglist>(const T &amp;a, const Composition&lt; dimensions &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>Composition&lt; T::Dimensions &gt;</type>
      <name>operator!</name>
      <anchorfile>classMagnum_1_1Shapes_1_1Composition.html</anchorfile>
      <anchor>a6455c40230c9cb5ca57938d91923bcd1</anchor>
      <arglist>(T a)</arglist>
    </member>
    <member kind="function">
      <type>Composition&lt; T::Dimensions &gt;</type>
      <name>operator&amp;&amp;</name>
      <anchorfile>classMagnum_1_1Shapes_1_1Composition.html</anchorfile>
      <anchor>a746d929f4e87823c324dc29ae0d4f459</anchor>
      <arglist>(T a, T b)</arglist>
    </member>
    <member kind="function">
      <type>Composition&lt; T::Dimensions &gt;</type>
      <name>operator||</name>
      <anchorfile>classMagnum_1_1Shapes_1_1Composition.html</anchorfile>
      <anchor>a02f7ec970304152f482e4919fe9206be</anchor>
      <arglist>(T a, T b)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Magnum::Shapes::Cylinder</name>
    <filename>classMagnum_1_1Shapes_1_1Cylinder.html</filename>
    <templarg>dimensions</templarg>
    <member kind="enumvalue">
      <name>Dimensions</name>
      <anchorfile>classMagnum_1_1Shapes_1_1Cylinder.html</anchorfile>
      <anchor>a2136fc31411c19a6a43b7563265332f5ab79a59bf7f6d0febd5f0d3dba6d1331b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Dimensions</name>
      <anchorfile>classMagnum_1_1Shapes_1_1Cylinder.html</anchorfile>
      <anchor>a2136fc31411c19a6a43b7563265332f5ab79a59bf7f6d0febd5f0d3dba6d1331b</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Cylinder</name>
      <anchorfile>classMagnum_1_1Shapes_1_1Cylinder.html</anchorfile>
      <anchor>a1934524fcc8842bd0399912827fe520c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Cylinder</name>
      <anchorfile>classMagnum_1_1Shapes_1_1Cylinder.html</anchorfile>
      <anchor>a0e337dd93359bfbce0924ef5590ae991</anchor>
      <arglist>(const VectorTypeFor&lt; dimensions, Float &gt; &amp;a, const VectorTypeFor&lt; dimensions, Float &gt; &amp;b, Float radius)</arglist>
    </member>
    <member kind="function">
      <type>Cylinder&lt; dimensions &gt;</type>
      <name>transformed</name>
      <anchorfile>classMagnum_1_1Shapes_1_1Cylinder.html</anchorfile>
      <anchor>a2749b82870fc74ac9d30187669e312db</anchor>
      <arglist>(const MatrixTypeFor&lt; dimensions, Float &gt; &amp;matrix) const </arglist>
    </member>
    <member kind="function">
      <type>constexpr VectorTypeFor&lt; dimensions, Float &gt;</type>
      <name>a</name>
      <anchorfile>classMagnum_1_1Shapes_1_1Cylinder.html</anchorfile>
      <anchor>ad4c66c852df05127d7a2bdb7e3883255</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setA</name>
      <anchorfile>classMagnum_1_1Shapes_1_1Cylinder.html</anchorfile>
      <anchor>a85bc00aa5849231977adcc4874e6562c</anchor>
      <arglist>(const VectorTypeFor&lt; dimensions, Float &gt; &amp;a)</arglist>
    </member>
    <member kind="function">
      <type>constexpr VectorTypeFor&lt; dimensions, Float &gt;</type>
      <name>b</name>
      <anchorfile>classMagnum_1_1Shapes_1_1Cylinder.html</anchorfile>
      <anchor>a4539e4adebf477a832045db2b0fbe552</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setB</name>
      <anchorfile>classMagnum_1_1Shapes_1_1Cylinder.html</anchorfile>
      <anchor>a03ee58baae726c42fb08a2a03afaf705</anchor>
      <arglist>(const VectorTypeFor&lt; dimensions, Float &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>constexpr Float</type>
      <name>radius</name>
      <anchorfile>classMagnum_1_1Shapes_1_1Cylinder.html</anchorfile>
      <anchor>adb14848679a51203d3dfc69c493400f2</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setRadius</name>
      <anchorfile>classMagnum_1_1Shapes_1_1Cylinder.html</anchorfile>
      <anchor>a001122834a27fd479cb10fedb7e02f27</anchor>
      <arglist>(Float radius)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator%</name>
      <anchorfile>classMagnum_1_1Shapes_1_1Cylinder.html</anchorfile>
      <anchor>a5ff5c1b92194b740adfb129d8179e5f7</anchor>
      <arglist>(const Point&lt; dimensions &gt; &amp;other) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator%</name>
      <anchorfile>classMagnum_1_1Shapes_1_1Cylinder.html</anchorfile>
      <anchor>aedecbb95e698b6ae23c15aa52aadffb3</anchor>
      <arglist>(const Sphere&lt; dimensions &gt; &amp;other) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Magnum::Shapes::InvertedSphere</name>
    <filename>classMagnum_1_1Shapes_1_1InvertedSphere.html</filename>
    <templarg>dimensions</templarg>
    <base>Magnum::Shapes::Sphere</base>
    <member kind="function">
      <type>constexpr</type>
      <name>InvertedSphere</name>
      <anchorfile>classMagnum_1_1Shapes_1_1InvertedSphere.html</anchorfile>
      <anchor>ae02ca8f3fdf019d54d154e70a7799ce9</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>InvertedSphere</name>
      <anchorfile>classMagnum_1_1Shapes_1_1InvertedSphere.html</anchorfile>
      <anchor>ab6af7626570d57af61f4a2ed69c963c9</anchor>
      <arglist>(const VectorTypeFor&lt; dimensions, Float &gt; &amp;position, Float radius)</arglist>
    </member>
    <member kind="function">
      <type>InvertedSphere&lt; dimensions &gt;</type>
      <name>transformed</name>
      <anchorfile>classMagnum_1_1Shapes_1_1InvertedSphere.html</anchorfile>
      <anchor>af9503b2c9ef0030293b2f5fd994eba4c</anchor>
      <arglist>(const MatrixTypeFor&lt; dimensions, Float &gt; &amp;matrix) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator%</name>
      <anchorfile>classMagnum_1_1Shapes_1_1InvertedSphere.html</anchorfile>
      <anchor>ab981bda70ee517d2b2f97a2dbf3d0015</anchor>
      <arglist>(const Point&lt; dimensions &gt; &amp;other) const </arglist>
    </member>
    <member kind="function">
      <type>Collision&lt; dimensions &gt;</type>
      <name>operator/</name>
      <anchorfile>classMagnum_1_1Shapes_1_1InvertedSphere.html</anchorfile>
      <anchor>ab05c9cb8864e43940f6bc9d8777bee80</anchor>
      <arglist>(const Point&lt; dimensions &gt; &amp;other) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator%</name>
      <anchorfile>classMagnum_1_1Shapes_1_1InvertedSphere.html</anchorfile>
      <anchor>accb3a9b6863acca65ac363f103c8e73d</anchor>
      <arglist>(const Sphere&lt; dimensions &gt; &amp;other) const </arglist>
    </member>
    <member kind="function">
      <type>Collision&lt; dimensions &gt;</type>
      <name>operator/</name>
      <anchorfile>classMagnum_1_1Shapes_1_1InvertedSphere.html</anchorfile>
      <anchor>a273101c211b9dfa533f40f95e0e7d333</anchor>
      <arglist>(const Sphere&lt; dimensions &gt; &amp;other) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Magnum::Shapes::Line</name>
    <filename>classMagnum_1_1Shapes_1_1Line.html</filename>
    <templarg>dimensions</templarg>
    <member kind="enumvalue">
      <name>Dimensions</name>
      <anchorfile>classMagnum_1_1Shapes_1_1Line.html</anchorfile>
      <anchor>aedee26b86082934fbc8953f353c765a2a46b33154f5d3d6ecdd6a7f27de67ea19</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Dimensions</name>
      <anchorfile>classMagnum_1_1Shapes_1_1Line.html</anchorfile>
      <anchor>aedee26b86082934fbc8953f353c765a2a46b33154f5d3d6ecdd6a7f27de67ea19</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Line</name>
      <anchorfile>classMagnum_1_1Shapes_1_1Line.html</anchorfile>
      <anchor>a15ed03bfdfcf8f1524f538d91008c2c8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Line</name>
      <anchorfile>classMagnum_1_1Shapes_1_1Line.html</anchorfile>
      <anchor>a44def606d323b26ce61038e22215165e</anchor>
      <arglist>(const VectorTypeFor&lt; dimensions, Float &gt; &amp;a, const typename DimensionTraits&lt; dimensions, Float &gt;::VectorType &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>Line&lt; dimensions &gt;</type>
      <name>transformed</name>
      <anchorfile>classMagnum_1_1Shapes_1_1Line.html</anchorfile>
      <anchor>accdc97215068525618cb6bad30d64a8e</anchor>
      <arglist>(const MatrixTypeFor&lt; dimensions, Float &gt; &amp;matrix) const </arglist>
    </member>
    <member kind="function">
      <type>constexpr VectorTypeFor&lt; dimensions, Float &gt;</type>
      <name>a</name>
      <anchorfile>classMagnum_1_1Shapes_1_1Line.html</anchorfile>
      <anchor>a66e6702f29f9195db0229619b5b23f1b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setA</name>
      <anchorfile>classMagnum_1_1Shapes_1_1Line.html</anchorfile>
      <anchor>a5d3c2580a7e2dda83b2e60da831d7b7b</anchor>
      <arglist>(const VectorTypeFor&lt; dimensions, Float &gt; &amp;a)</arglist>
    </member>
    <member kind="function">
      <type>constexpr VectorTypeFor&lt; dimensions, Float &gt;</type>
      <name>b</name>
      <anchorfile>classMagnum_1_1Shapes_1_1Line.html</anchorfile>
      <anchor>ab16b008a29eb99b96a47b79d6856c5b9</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setB</name>
      <anchorfile>classMagnum_1_1Shapes_1_1Line.html</anchorfile>
      <anchor>ad9c1f6b2cda2d1c3da48c317a1f20300</anchor>
      <arglist>(const VectorTypeFor&lt; dimensions, Float &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator%</name>
      <anchorfile>classMagnum_1_1Shapes_1_1Line.html</anchorfile>
      <anchor>a736526a5aefa690b865f94d7c245915d</anchor>
      <arglist>(const Line3D &amp;a, const Plane &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator%</name>
      <anchorfile>classMagnum_1_1Shapes_1_1Line.html</anchorfile>
      <anchor>adbea395f5e0ca3c22cdac2afbb7e7735</anchor>
      <arglist>(const Line&lt; dimensions &gt; &amp;a, const Sphere&lt; dimensions &gt; &amp;b)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Magnum::Shapes::LineSegment</name>
    <filename>classMagnum_1_1Shapes_1_1LineSegment.html</filename>
    <templarg>dimensions</templarg>
    <base>Magnum::Shapes::Line</base>
    <member kind="function">
      <type>constexpr</type>
      <name>LineSegment</name>
      <anchorfile>classMagnum_1_1Shapes_1_1LineSegment.html</anchorfile>
      <anchor>ad040403b841b460884b7f2740214cc82</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>LineSegment</name>
      <anchorfile>classMagnum_1_1Shapes_1_1LineSegment.html</anchorfile>
      <anchor>a0602ff5e2d0dfe3416d4f39a13af6a9b</anchor>
      <arglist>(const VectorTypeFor&lt; dimensions, Float &gt; &amp;a, const VectorTypeFor&lt; dimensions, Float &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>LineSegment&lt; dimensions &gt;</type>
      <name>transformed</name>
      <anchorfile>classMagnum_1_1Shapes_1_1LineSegment.html</anchorfile>
      <anchor>aa8b687bc6feb6bc7fa43201d0f9cdb03</anchor>
      <arglist>(const MatrixTypeFor&lt; dimensions, Float &gt; &amp;matrix) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator%</name>
      <anchorfile>classMagnum_1_1Shapes_1_1LineSegment.html</anchorfile>
      <anchor>a0d75eb4350f0ba0ea4c338c3dccbedf7</anchor>
      <arglist>(const LineSegment3D &amp;a, const Plane &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator%</name>
      <anchorfile>classMagnum_1_1Shapes_1_1LineSegment.html</anchorfile>
      <anchor>aadd405df874fc45add6de71c650de5a4</anchor>
      <arglist>(const LineSegment&lt; dimensions &gt; &amp;a, const Sphere&lt; dimensions &gt; &amp;b)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Magnum::Shapes::Plane</name>
    <filename>classMagnum_1_1Shapes_1_1Plane.html</filename>
    <member kind="enumvalue">
      <name>Dimensions</name>
      <anchorfile>classMagnum_1_1Shapes_1_1Plane.html</anchorfile>
      <anchor>ad9bb2092a1c2e397edd6493d87710feca4f015b36479d0ca87b6af4eaf0e6e8c1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Dimensions</name>
      <anchorfile>classMagnum_1_1Shapes_1_1Plane.html</anchorfile>
      <anchor>ad9bb2092a1c2e397edd6493d87710feca4f015b36479d0ca87b6af4eaf0e6e8c1</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Plane</name>
      <anchorfile>classMagnum_1_1Shapes_1_1Plane.html</anchorfile>
      <anchor>a382a4af064a32f1ebe39fa22ba53f07a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Plane</name>
      <anchorfile>classMagnum_1_1Shapes_1_1Plane.html</anchorfile>
      <anchor>a2d6477fd8929be295cab30d1a61cc826</anchor>
      <arglist>(const Vector3 &amp;position, const Vector3 &amp;normal)</arglist>
    </member>
    <member kind="function">
      <type>Plane</type>
      <name>transformed</name>
      <anchorfile>classMagnum_1_1Shapes_1_1Plane.html</anchorfile>
      <anchor>a31212e5137484a5b2856a1aa2c882915</anchor>
      <arglist>(const Matrix4 &amp;matrix) const </arglist>
    </member>
    <member kind="function">
      <type>constexpr Vector3</type>
      <name>position</name>
      <anchorfile>classMagnum_1_1Shapes_1_1Plane.html</anchorfile>
      <anchor>a2da5ce8a3d96b46878dc13f36acc2d6a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setPosition</name>
      <anchorfile>classMagnum_1_1Shapes_1_1Plane.html</anchorfile>
      <anchor>a2e02717d6e76fe8a349eef4ff23853a8</anchor>
      <arglist>(const Vector3 &amp;position)</arglist>
    </member>
    <member kind="function">
      <type>constexpr Vector3</type>
      <name>normal</name>
      <anchorfile>classMagnum_1_1Shapes_1_1Plane.html</anchorfile>
      <anchor>a12f51c7306d4e4c18836bb2b97cc58cb</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setNormal</name>
      <anchorfile>classMagnum_1_1Shapes_1_1Plane.html</anchorfile>
      <anchor>adf44394fcd39cdf705ea57a66399416a</anchor>
      <arglist>(const Vector3 &amp;normal)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator%</name>
      <anchorfile>classMagnum_1_1Shapes_1_1Plane.html</anchorfile>
      <anchor>ae8bb61458aa179cb42db1941d665c460</anchor>
      <arglist>(const Line3D &amp;other) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator%</name>
      <anchorfile>classMagnum_1_1Shapes_1_1Plane.html</anchorfile>
      <anchor>ac3022ed6e3ed9906f7c7e473c688868b</anchor>
      <arglist>(const LineSegment3D &amp;other) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Magnum::Shapes::Point</name>
    <filename>classMagnum_1_1Shapes_1_1Point.html</filename>
    <templarg>dimensions</templarg>
    <member kind="enumvalue">
      <name>Dimensions</name>
      <anchorfile>classMagnum_1_1Shapes_1_1Point.html</anchorfile>
      <anchor>a7c03cefc05a8630f15bc760578bf2b08a1e2a2446f423677020b39b9bf515b51e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Dimensions</name>
      <anchorfile>classMagnum_1_1Shapes_1_1Point.html</anchorfile>
      <anchor>a7c03cefc05a8630f15bc760578bf2b08a1e2a2446f423677020b39b9bf515b51e</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Point</name>
      <anchorfile>classMagnum_1_1Shapes_1_1Point.html</anchorfile>
      <anchor>aa4db7d4a271bb711da03edcd2c971e95</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Point</name>
      <anchorfile>classMagnum_1_1Shapes_1_1Point.html</anchorfile>
      <anchor>ab42310cb40f4fb9b1e5e402b5b1b0999</anchor>
      <arglist>(const VectorTypeFor&lt; dimensions, Float &gt; &amp;position)</arglist>
    </member>
    <member kind="function">
      <type>Point&lt; dimensions &gt;</type>
      <name>transformed</name>
      <anchorfile>classMagnum_1_1Shapes_1_1Point.html</anchorfile>
      <anchor>aefd9a2f3d5248a9bbf52d1c168428ba6</anchor>
      <arglist>(const MatrixTypeFor&lt; dimensions, Float &gt; &amp;matrix) const </arglist>
    </member>
    <member kind="function">
      <type>constexpr VectorTypeFor&lt; dimensions, Float &gt;</type>
      <name>position</name>
      <anchorfile>classMagnum_1_1Shapes_1_1Point.html</anchorfile>
      <anchor>afd791e59269ac0146a3266bf22e19eef</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setPosition</name>
      <anchorfile>classMagnum_1_1Shapes_1_1Point.html</anchorfile>
      <anchor>a706f902411f033fddefb12d92b3418bb</anchor>
      <arglist>(const VectorTypeFor&lt; dimensions, Float &gt; &amp;position)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator%</name>
      <anchorfile>classMagnum_1_1Shapes_1_1Point.html</anchorfile>
      <anchor>aa36acc3128bae09e1d48650ea0cdf860</anchor>
      <arglist>(const Point&lt; dimensions &gt; &amp;a, const AxisAlignedBox&lt; dimensions &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator%</name>
      <anchorfile>classMagnum_1_1Shapes_1_1Point.html</anchorfile>
      <anchor>afe98277240394e274783626ac4420be1</anchor>
      <arglist>(const Point&lt; dimensions &gt; &amp;a, const Capsule&lt; dimensions &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator%</name>
      <anchorfile>classMagnum_1_1Shapes_1_1Point.html</anchorfile>
      <anchor>a175327c41a1cf77afe589e9f75942a72</anchor>
      <arglist>(const Point&lt; dimensions &gt; &amp;a, const Cylinder&lt; dimensions &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator%</name>
      <anchorfile>classMagnum_1_1Shapes_1_1Point.html</anchorfile>
      <anchor>a8b92f87abd7091bb18db7d2a588bd554</anchor>
      <arglist>(const Point&lt; dimensions &gt; &amp;a, const Sphere&lt; dimensions &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator%</name>
      <anchorfile>classMagnum_1_1Shapes_1_1Point.html</anchorfile>
      <anchor>a661f9284aa5c40e8252ac116f7eea984</anchor>
      <arglist>(const Point&lt; dimensions &gt; &amp;a, const InvertedSphere&lt; dimensions &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>Collision&lt; dimensions &gt;</type>
      <name>operator/</name>
      <anchorfile>classMagnum_1_1Shapes_1_1Point.html</anchorfile>
      <anchor>ae83451d613cff0466b2781b751864d3f</anchor>
      <arglist>(const Point&lt; dimensions &gt; &amp;a, const Sphere&lt; dimensions &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>Collision&lt; dimensions &gt;</type>
      <name>operator/</name>
      <anchorfile>classMagnum_1_1Shapes_1_1Point.html</anchorfile>
      <anchor>add309ac34f5949efeb8a3cc4a8c21b84</anchor>
      <arglist>(const Point&lt; dimensions &gt; &amp;a, const InvertedSphere&lt; dimensions &gt; &amp;b)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Magnum::Shapes::Shape</name>
    <filename>classMagnum_1_1Shapes_1_1Shape.html</filename>
    <templarg></templarg>
    <base>AbstractShape&lt; T::Dimensions &gt;</base>
    <member kind="function">
      <type></type>
      <name>Shape</name>
      <anchorfile>classMagnum_1_1Shapes_1_1Shape.html</anchorfile>
      <anchor>a5bc249ff78bdfcb5d6f53a256123d704</anchor>
      <arglist>(SceneGraph::AbstractObject&lt; T::Dimensions, Float &gt; &amp;object, const T &amp;shape, ShapeGroup&lt; T::Dimensions &gt; *group=nullptr)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Shape</name>
      <anchorfile>classMagnum_1_1Shapes_1_1Shape.html</anchorfile>
      <anchor>aa3f69210d043a92308b6d72f1e1da51a</anchor>
      <arglist>(SceneGraph::AbstractObject&lt; T::Dimensions, Float &gt; &amp;object, T &amp;&amp;shape, ShapeGroup&lt; T::Dimensions &gt; *group=nullptr)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Shape</name>
      <anchorfile>classMagnum_1_1Shapes_1_1Shape.html</anchorfile>
      <anchor>a1dbbf2eee1297ac2e82a77d875ee5139</anchor>
      <arglist>(SceneGraph::AbstractObject&lt; T::Dimensions, Float &gt; &amp;object, ShapeGroup&lt; T::Dimensions &gt; *group=nullptr)</arglist>
    </member>
    <member kind="function">
      <type>const T &amp;</type>
      <name>shape</name>
      <anchorfile>classMagnum_1_1Shapes_1_1Shape.html</anchorfile>
      <anchor>a2b14e522bd737047e28299480942c9be</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Shape&lt; T &gt; &amp;</type>
      <name>setShape</name>
      <anchorfile>classMagnum_1_1Shapes_1_1Shape.html</anchorfile>
      <anchor>aff652ad7589b5c4e02a69e69fc4cc1a1</anchor>
      <arglist>(const T &amp;shape)</arglist>
    </member>
    <member kind="function">
      <type>const T &amp;</type>
      <name>transformedShape</name>
      <anchorfile>classMagnum_1_1Shapes_1_1Shape.html</anchorfile>
      <anchor>a043bfa2bbf5640bb1d3545afa45a301e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>clean</name>
      <anchorfile>classMagnum_1_1Shapes_1_1Shape.html</anchorfile>
      <anchor>a3d978f6a88788f2ba674ec6284796782</anchor>
      <arglist>(const MatrixTypeFor&lt; T::Dimensions, Float &gt; &amp;absoluteTransformationMatrix) override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Magnum::Shapes::ShapeGroup</name>
    <filename>classMagnum_1_1Shapes_1_1ShapeGroup.html</filename>
    <templarg>dimensions</templarg>
    <base>FeatureGroup&lt; dimensions, AbstractShape&lt; dimensions &gt;, Float &gt;</base>
    <member kind="function">
      <type></type>
      <name>ShapeGroup</name>
      <anchorfile>classMagnum_1_1Shapes_1_1ShapeGroup.html</anchorfile>
      <anchor>abfdf5814a4992baf82608b315ac6c703</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isDirty</name>
      <anchorfile>classMagnum_1_1Shapes_1_1ShapeGroup.html</anchorfile>
      <anchor>ab53a765eb8476985cb8f493fd4a20fb2</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setDirty</name>
      <anchorfile>classMagnum_1_1Shapes_1_1ShapeGroup.html</anchorfile>
      <anchor>af4e8102537fdd6d443cda76016db428d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setClean</name>
      <anchorfile>classMagnum_1_1Shapes_1_1ShapeGroup.html</anchorfile>
      <anchor>a04496f57c69d545ae3cc3a4931d6cb67</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>AbstractShape&lt; dimensions &gt; *</type>
      <name>firstCollision</name>
      <anchorfile>classMagnum_1_1Shapes_1_1ShapeGroup.html</anchorfile>
      <anchor>aeae5e9eeb6e7a67bcd330bfa121c9e93</anchor>
      <arglist>(const AbstractShape&lt; dimensions &gt; &amp;shape)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Magnum::Shapes::Sphere</name>
    <filename>classMagnum_1_1Shapes_1_1Sphere.html</filename>
    <templarg>dimensions</templarg>
    <member kind="enumvalue">
      <name>Dimensions</name>
      <anchorfile>classMagnum_1_1Shapes_1_1Sphere.html</anchorfile>
      <anchor>afa234d7486c3ea7642540522ad57cd5aadbf7f9210ab7f7ead4bca264db2001bf</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Dimensions</name>
      <anchorfile>classMagnum_1_1Shapes_1_1Sphere.html</anchorfile>
      <anchor>afa234d7486c3ea7642540522ad57cd5aadbf7f9210ab7f7ead4bca264db2001bf</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Sphere</name>
      <anchorfile>classMagnum_1_1Shapes_1_1Sphere.html</anchorfile>
      <anchor>a82b0af2c5066033277acadef8b227a1e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Sphere</name>
      <anchorfile>classMagnum_1_1Shapes_1_1Sphere.html</anchorfile>
      <anchor>aa323eb23fdb652015ed7d52fe46e1fd1</anchor>
      <arglist>(const VectorTypeFor&lt; dimensions, Float &gt; &amp;position, Float radius)</arglist>
    </member>
    <member kind="function">
      <type>Sphere&lt; dimensions &gt;</type>
      <name>transformed</name>
      <anchorfile>classMagnum_1_1Shapes_1_1Sphere.html</anchorfile>
      <anchor>abdbd506f9ac3b993967d983858655c31</anchor>
      <arglist>(const MatrixTypeFor&lt; dimensions, Float &gt; &amp;matrix) const </arglist>
    </member>
    <member kind="function">
      <type>constexpr VectorTypeFor&lt; dimensions, Float &gt;</type>
      <name>position</name>
      <anchorfile>classMagnum_1_1Shapes_1_1Sphere.html</anchorfile>
      <anchor>a621d8d4a683a1775daf2eab3691e2b8b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setPosition</name>
      <anchorfile>classMagnum_1_1Shapes_1_1Sphere.html</anchorfile>
      <anchor>a786537fb391907c77ba39e5279981f45</anchor>
      <arglist>(const VectorTypeFor&lt; dimensions, Float &gt; &amp;position)</arglist>
    </member>
    <member kind="function">
      <type>constexpr Float</type>
      <name>radius</name>
      <anchorfile>classMagnum_1_1Shapes_1_1Sphere.html</anchorfile>
      <anchor>a9a066d772f1ad07953356f09a9798222</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setRadius</name>
      <anchorfile>classMagnum_1_1Shapes_1_1Sphere.html</anchorfile>
      <anchor>a362b8d0f2270b755f95d19d1ff681773</anchor>
      <arglist>(Float radius)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator%</name>
      <anchorfile>classMagnum_1_1Shapes_1_1Sphere.html</anchorfile>
      <anchor>aec98cca08af409d9c409b72046d546ec</anchor>
      <arglist>(const Point&lt; dimensions &gt; &amp;other) const </arglist>
    </member>
    <member kind="function">
      <type>Collision&lt; dimensions &gt;</type>
      <name>operator/</name>
      <anchorfile>classMagnum_1_1Shapes_1_1Sphere.html</anchorfile>
      <anchor>a498a2468be33628a6aeaaf24d074497c</anchor>
      <arglist>(const Point&lt; dimensions &gt; &amp;other) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator%</name>
      <anchorfile>classMagnum_1_1Shapes_1_1Sphere.html</anchorfile>
      <anchor>af2f6a352ecc61c77abf68b379166103f</anchor>
      <arglist>(const Line&lt; dimensions &gt; &amp;other) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator%</name>
      <anchorfile>classMagnum_1_1Shapes_1_1Sphere.html</anchorfile>
      <anchor>ae87a543a7cac7c623b0ae97537af27b9</anchor>
      <arglist>(const LineSegment&lt; dimensions &gt; &amp;other) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator%</name>
      <anchorfile>classMagnum_1_1Shapes_1_1Sphere.html</anchorfile>
      <anchor>a4958b59dd098aed62ad98591e45539a3</anchor>
      <arglist>(const Sphere&lt; dimensions &gt; &amp;other) const </arglist>
    </member>
    <member kind="function">
      <type>Collision&lt; dimensions &gt;</type>
      <name>operator/</name>
      <anchorfile>classMagnum_1_1Shapes_1_1Sphere.html</anchorfile>
      <anchor>a3cc349ac8df33b4dfd882bc40321b648</anchor>
      <arglist>(const Sphere&lt; dimensions &gt; &amp;other) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator%</name>
      <anchorfile>classMagnum_1_1Shapes_1_1Sphere.html</anchorfile>
      <anchor>a839afd5e87c4726add6835ee314e16d0</anchor>
      <arglist>(const Sphere&lt; dimensions &gt; &amp;a, const Capsule&lt; dimensions &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator%</name>
      <anchorfile>classMagnum_1_1Shapes_1_1Sphere.html</anchorfile>
      <anchor>a6a0f05766a099f0af8852618d356f970</anchor>
      <arglist>(const Sphere&lt; dimensions &gt; &amp;a, const Cylinder&lt; dimensions &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator%</name>
      <anchorfile>classMagnum_1_1Shapes_1_1Sphere.html</anchorfile>
      <anchor>ac7f0f50e112678da6e80ba5c5eef3e51</anchor>
      <arglist>(const Sphere&lt; dimensions &gt; &amp;a, const InvertedSphere&lt; dimensions &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>Collision&lt; dimensions &gt;</type>
      <name>operator/</name>
      <anchorfile>classMagnum_1_1Shapes_1_1Sphere.html</anchorfile>
      <anchor>ae54fc2987b79b7716f336df639814933</anchor>
      <arglist>(const Sphere&lt; dimensions &gt; &amp;a, const InvertedSphere&lt; dimensions &gt; &amp;b)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Magnum::Text::AbstractFont</name>
    <filename>classMagnum_1_1Text_1_1AbstractFont.html</filename>
    <base>Corrade::PluginManager::AbstractPlugin</base>
    <class kind="struct">Magnum::Text::AbstractFont::Metrics</class>
    <member kind="enumeration">
      <type></type>
      <name>Feature</name>
      <anchorfile>classMagnum_1_1Text_1_1AbstractFont.html</anchorfile>
      <anchor>ad71b70a7763ae6634e05a25ba83e4be3</anchor>
      <arglist></arglist>
      <enumvalue file="classMagnum_1_1Text_1_1AbstractFont.html" anchor="ad71b70a7763ae6634e05a25ba83e4be3ad81dcb96c7ab3ee3608397d0b0a9071c">OpenData</enumvalue>
      <enumvalue file="classMagnum_1_1Text_1_1AbstractFont.html" anchor="ad71b70a7763ae6634e05a25ba83e4be3a1e1c1bd7f9cc7129802e1f00d2b171bd">MultiFile</enumvalue>
      <enumvalue file="classMagnum_1_1Text_1_1AbstractFont.html" anchor="ad71b70a7763ae6634e05a25ba83e4be3aa098f39d36d4fbcebceeb378e5757d64">PreparedGlyphCache</enumvalue>
    </member>
    <member kind="typedef">
      <type>Containers::EnumSet&lt; Feature &gt;</type>
      <name>Features</name>
      <anchorfile>classMagnum_1_1Text_1_1AbstractFont.html</anchorfile>
      <anchor>a120ce26cbfb3af46bf3bb905c1acb6b6</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AbstractFont</name>
      <anchorfile>classMagnum_1_1Text_1_1AbstractFont.html</anchorfile>
      <anchor>a28f329eccf0c71b92da793de73016d22</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AbstractFont</name>
      <anchorfile>classMagnum_1_1Text_1_1AbstractFont.html</anchorfile>
      <anchor>ab85948bc7006e978c088a75cd115ffd9</anchor>
      <arglist>(PluginManager::AbstractManager &amp;manager, const std::string &amp;plugin)</arglist>
    </member>
    <member kind="function">
      <type>Features</type>
      <name>features</name>
      <anchorfile>classMagnum_1_1Text_1_1AbstractFont.html</anchorfile>
      <anchor>a75c47af0b47da02fdcf76281c465e91b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isOpened</name>
      <anchorfile>classMagnum_1_1Text_1_1AbstractFont.html</anchorfile>
      <anchor>a5061f2d579c76112cdec4b0930be7fc6</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>openData</name>
      <anchorfile>classMagnum_1_1Text_1_1AbstractFont.html</anchorfile>
      <anchor>ae73eb778381acf053afb9ce6bc0862be</anchor>
      <arglist>(const std::vector&lt; std::pair&lt; std::string, Containers::ArrayView&lt; const char &gt;&gt;&gt; &amp;data, Float size)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>openSingleData</name>
      <anchorfile>classMagnum_1_1Text_1_1AbstractFont.html</anchorfile>
      <anchor>a7b62d6d0746a782685d3b54c02037743</anchor>
      <arglist>(Containers::ArrayView&lt; const char &gt; data, Float size)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>openFile</name>
      <anchorfile>classMagnum_1_1Text_1_1AbstractFont.html</anchorfile>
      <anchor>a37b5553ae614987d06dee99750ec0e6e</anchor>
      <arglist>(const std::string &amp;filename, Float size)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>close</name>
      <anchorfile>classMagnum_1_1Text_1_1AbstractFont.html</anchorfile>
      <anchor>a6440ddb04e0bcf8e285748ba891f4cb2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Float</type>
      <name>size</name>
      <anchorfile>classMagnum_1_1Text_1_1AbstractFont.html</anchorfile>
      <anchor>aea83d2ada6d0bba41376b6a5691324d7</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Float</type>
      <name>ascent</name>
      <anchorfile>classMagnum_1_1Text_1_1AbstractFont.html</anchorfile>
      <anchor>ace5e6f99c9887d58499dffa0b2ecb0c5</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Float</type>
      <name>descent</name>
      <anchorfile>classMagnum_1_1Text_1_1AbstractFont.html</anchorfile>
      <anchor>aecd8bf65bac3c1089514215dcb927634</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Float</type>
      <name>lineHeight</name>
      <anchorfile>classMagnum_1_1Text_1_1AbstractFont.html</anchorfile>
      <anchor>a19c4564c89defdd5b29902fba6ee5f74</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>UnsignedInt</type>
      <name>glyphId</name>
      <anchorfile>classMagnum_1_1Text_1_1AbstractFont.html</anchorfile>
      <anchor>a4cd0e9f841aba7d30e01feebd28f8525</anchor>
      <arglist>(char32_t character)</arglist>
    </member>
    <member kind="function">
      <type>Vector2</type>
      <name>glyphAdvance</name>
      <anchorfile>classMagnum_1_1Text_1_1AbstractFont.html</anchorfile>
      <anchor>aae62cb07b01c8a3eeb436780c6d57094</anchor>
      <arglist>(UnsignedInt glyph)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>fillGlyphCache</name>
      <anchorfile>classMagnum_1_1Text_1_1AbstractFont.html</anchorfile>
      <anchor>a8e8f48396af65c0f39aadbf07b1873fe</anchor>
      <arglist>(GlyphCache &amp;cache, const std::string &amp;characters)</arglist>
    </member>
    <member kind="function">
      <type>std::unique_ptr&lt; GlyphCache &gt;</type>
      <name>createGlyphCache</name>
      <anchorfile>classMagnum_1_1Text_1_1AbstractFont.html</anchorfile>
      <anchor>a3e6e8241e9f3b7451db5c334deb708a1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::unique_ptr&lt; AbstractLayouter &gt;</type>
      <name>layout</name>
      <anchorfile>classMagnum_1_1Text_1_1AbstractFont.html</anchorfile>
      <anchor>a2dfcc646a9deed562406beeedbf3c4f8</anchor>
      <arglist>(const GlyphCache &amp;cache, Float size, const std::string &amp;text)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual Features</type>
      <name>doFeatures</name>
      <anchorfile>classMagnum_1_1Text_1_1AbstractFont.html</anchorfile>
      <anchor>a8af193970aed81bed8677776d29b5ba2</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual bool</type>
      <name>doIsOpened</name>
      <anchorfile>classMagnum_1_1Text_1_1AbstractFont.html</anchorfile>
      <anchor>a06793afb175e41a1348ca0ac1f42091c</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual Metrics</type>
      <name>doOpenData</name>
      <anchorfile>classMagnum_1_1Text_1_1AbstractFont.html</anchorfile>
      <anchor>a4feacaf5cfea8bcdcab44fbb43cc9c55</anchor>
      <arglist>(const std::vector&lt; std::pair&lt; std::string, Containers::ArrayView&lt; const char &gt;&gt;&gt; &amp;data, Float size)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual Metrics</type>
      <name>doOpenSingleData</name>
      <anchorfile>classMagnum_1_1Text_1_1AbstractFont.html</anchorfile>
      <anchor>adddb8a0c061196b7214f5c4bd4925c2c</anchor>
      <arglist>(Containers::ArrayView&lt; const char &gt; data, Float size)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual Metrics</type>
      <name>doOpenFile</name>
      <anchorfile>classMagnum_1_1Text_1_1AbstractFont.html</anchorfile>
      <anchor>a0a7feb093b570d5a4f3fc17662a40aa0</anchor>
      <arglist>(const std::string &amp;filename, Float size)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual void</type>
      <name>doClose</name>
      <anchorfile>classMagnum_1_1Text_1_1AbstractFont.html</anchorfile>
      <anchor>afffb6f9ee12fd6e8cc5b0d48a8bd6ebe</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual UnsignedInt</type>
      <name>doGlyphId</name>
      <anchorfile>classMagnum_1_1Text_1_1AbstractFont.html</anchorfile>
      <anchor>af685f3636922415f3dd525f495dfdb4f</anchor>
      <arglist>(char32_t character)=0</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual Vector2</type>
      <name>doGlyphAdvance</name>
      <anchorfile>classMagnum_1_1Text_1_1AbstractFont.html</anchorfile>
      <anchor>a5dc7491faa2ea0098a0ca13458950040</anchor>
      <arglist>(UnsignedInt glyph)=0</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>doFillGlyphCache</name>
      <anchorfile>classMagnum_1_1Text_1_1AbstractFont.html</anchorfile>
      <anchor>af5bc5e615a643e068c2a95d42468dc44</anchor>
      <arglist>(GlyphCache &amp;cache, const std::u32string &amp;characters)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual std::unique_ptr&lt; GlyphCache &gt;</type>
      <name>doCreateGlyphCache</name>
      <anchorfile>classMagnum_1_1Text_1_1AbstractFont.html</anchorfile>
      <anchor>acd32e6ef729f632fe6b75ffd65e2f187</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual std::unique_ptr&lt; AbstractLayouter &gt;</type>
      <name>doLayout</name>
      <anchorfile>classMagnum_1_1Text_1_1AbstractFont.html</anchorfile>
      <anchor>a56f63723d8aab143f27df0b6a085a858</anchor>
      <arglist>(const GlyphCache &amp;cache, Float size, const std::string &amp;text)=0</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Magnum::Text::AbstractFont::Metrics</name>
    <filename>structMagnum_1_1Text_1_1AbstractFont_1_1Metrics.html</filename>
    <member kind="variable">
      <type>Float</type>
      <name>size</name>
      <anchorfile>structMagnum_1_1Text_1_1AbstractFont_1_1Metrics.html</anchorfile>
      <anchor>a1b7fbfa4a0483fe44f6ab5740e307bc1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Float</type>
      <name>ascent</name>
      <anchorfile>structMagnum_1_1Text_1_1AbstractFont_1_1Metrics.html</anchorfile>
      <anchor>a6989e8ff831585973ec38761a6e12039</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Float</type>
      <name>descent</name>
      <anchorfile>structMagnum_1_1Text_1_1AbstractFont_1_1Metrics.html</anchorfile>
      <anchor>a2455097997b899ec6306e03d530158ff</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Float</type>
      <name>lineHeight</name>
      <anchorfile>structMagnum_1_1Text_1_1AbstractFont_1_1Metrics.html</anchorfile>
      <anchor>a1207e6dcdb5235f18c72fc0efaad29c5</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Magnum::Text::AbstractFontConverter</name>
    <filename>classMagnum_1_1Text_1_1AbstractFontConverter.html</filename>
    <base>Corrade::PluginManager::AbstractPlugin</base>
    <member kind="enumeration">
      <type></type>
      <name>Feature</name>
      <anchorfile>classMagnum_1_1Text_1_1AbstractFontConverter.html</anchorfile>
      <anchor>a637464b9217c59340802bd1a6b30956b</anchor>
      <arglist></arglist>
      <enumvalue file="classMagnum_1_1Text_1_1AbstractFontConverter.html" anchor="a637464b9217c59340802bd1a6b30956ba5312b734e815ab6550e0c1913c98b206">ExportFont</enumvalue>
      <enumvalue file="classMagnum_1_1Text_1_1AbstractFontConverter.html" anchor="a637464b9217c59340802bd1a6b30956ba5b39e6b8ffe4fc664ffd7d8bd4fb60ef">ExportGlyphCache</enumvalue>
      <enumvalue file="classMagnum_1_1Text_1_1AbstractFontConverter.html" anchor="a637464b9217c59340802bd1a6b30956ba79fad4c396d9182bce56b04141e7e2dd">ImportGlyphCache</enumvalue>
      <enumvalue file="classMagnum_1_1Text_1_1AbstractFontConverter.html" anchor="a637464b9217c59340802bd1a6b30956ba641cdf6d783d9420d071be06b0307937">ConvertData</enumvalue>
      <enumvalue file="classMagnum_1_1Text_1_1AbstractFontConverter.html" anchor="a637464b9217c59340802bd1a6b30956ba1e1c1bd7f9cc7129802e1f00d2b171bd">MultiFile</enumvalue>
    </member>
    <member kind="typedef">
      <type>Containers::EnumSet&lt; Feature &gt;</type>
      <name>Features</name>
      <anchorfile>classMagnum_1_1Text_1_1AbstractFontConverter.html</anchorfile>
      <anchor>ad54227b86e6b2c8630d33b95d3c101ac</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AbstractFontConverter</name>
      <anchorfile>classMagnum_1_1Text_1_1AbstractFontConverter.html</anchorfile>
      <anchor>ac850151da0440b7f921347d451c4ad91</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AbstractFontConverter</name>
      <anchorfile>classMagnum_1_1Text_1_1AbstractFontConverter.html</anchorfile>
      <anchor>aa7f41030cca50fbc7617918054ae4f0a</anchor>
      <arglist>(PluginManager::AbstractManager &amp;manager, const std::string &amp;plugin)</arglist>
    </member>
    <member kind="function">
      <type>Features</type>
      <name>features</name>
      <anchorfile>classMagnum_1_1Text_1_1AbstractFontConverter.html</anchorfile>
      <anchor>ab01b70d5f1b0a8d6d6e5308aa1804a1d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; std::pair&lt; std::string, Containers::Array&lt; char &gt; &gt; &gt;</type>
      <name>exportFontToData</name>
      <anchorfile>classMagnum_1_1Text_1_1AbstractFontConverter.html</anchorfile>
      <anchor>a4b502be386062f2109dcd409e014edd0</anchor>
      <arglist>(AbstractFont &amp;font, GlyphCache &amp;cache, const std::string &amp;filename, const std::string &amp;characters) const </arglist>
    </member>
    <member kind="function">
      <type>Containers::Array&lt; char &gt;</type>
      <name>exportFontToSingleData</name>
      <anchorfile>classMagnum_1_1Text_1_1AbstractFontConverter.html</anchorfile>
      <anchor>ae1998b46dcaf29bd68164345b461d272</anchor>
      <arglist>(AbstractFont &amp;font, GlyphCache &amp;cache, const std::string &amp;characters) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>exportFontToFile</name>
      <anchorfile>classMagnum_1_1Text_1_1AbstractFontConverter.html</anchorfile>
      <anchor>a2f3bbb05c20cb01ab59f4ea40d32ef41</anchor>
      <arglist>(AbstractFont &amp;font, GlyphCache &amp;cache, const std::string &amp;filename, const std::string &amp;characters) const </arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; std::pair&lt; std::string, Containers::Array&lt; char &gt; &gt; &gt;</type>
      <name>exportGlyphCacheToData</name>
      <anchorfile>classMagnum_1_1Text_1_1AbstractFontConverter.html</anchorfile>
      <anchor>a2009e227b4ca6037dd0fd9933917c8fe</anchor>
      <arglist>(GlyphCache &amp;cache, const std::string &amp;filename) const </arglist>
    </member>
    <member kind="function">
      <type>Containers::Array&lt; char &gt;</type>
      <name>exportGlyphCacheToSingleData</name>
      <anchorfile>classMagnum_1_1Text_1_1AbstractFontConverter.html</anchorfile>
      <anchor>ad6f7174c7a6b65e40206983956074c0e</anchor>
      <arglist>(GlyphCache &amp;cache) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>exportGlyphCacheToFile</name>
      <anchorfile>classMagnum_1_1Text_1_1AbstractFontConverter.html</anchorfile>
      <anchor>a327bd3fbd07ce1f159bb918b8ede2622</anchor>
      <arglist>(GlyphCache &amp;cache, const std::string &amp;filename) const </arglist>
    </member>
    <member kind="function">
      <type>std::unique_ptr&lt; GlyphCache &gt;</type>
      <name>importGlyphCacheFromData</name>
      <anchorfile>classMagnum_1_1Text_1_1AbstractFontConverter.html</anchorfile>
      <anchor>ae4b4351ce710217ac12e4b8a08fa1103</anchor>
      <arglist>(const std::vector&lt; std::pair&lt; std::string, Containers::ArrayView&lt; const char &gt;&gt;&gt; &amp;data) const </arglist>
    </member>
    <member kind="function">
      <type>std::unique_ptr&lt; GlyphCache &gt;</type>
      <name>importGlyphCacheFromSingleData</name>
      <anchorfile>classMagnum_1_1Text_1_1AbstractFontConverter.html</anchorfile>
      <anchor>a4ed63017af85e665135d8c7e8b05cb9d</anchor>
      <arglist>(Containers::ArrayView&lt; const char &gt; data) const </arglist>
    </member>
    <member kind="function">
      <type>std::unique_ptr&lt; GlyphCache &gt;</type>
      <name>importGlyphCacheFromFile</name>
      <anchorfile>classMagnum_1_1Text_1_1AbstractFontConverter.html</anchorfile>
      <anchor>a70fdc54603797d1e27e883681f35e427</anchor>
      <arglist>(const std::string &amp;filename) const </arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual Features</type>
      <name>doFeatures</name>
      <anchorfile>classMagnum_1_1Text_1_1AbstractFontConverter.html</anchorfile>
      <anchor>abefd958aeb85a0fdb7d2615df309474c</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual std::vector&lt; std::pair&lt; std::string, Containers::Array&lt; char &gt; &gt; &gt;</type>
      <name>doExportFontToData</name>
      <anchorfile>classMagnum_1_1Text_1_1AbstractFontConverter.html</anchorfile>
      <anchor>a8089f62ff6d51d6d61bda8d133511809</anchor>
      <arglist>(AbstractFont &amp;font, GlyphCache &amp;cache, const std::string &amp;filename, const std::u32string &amp;characters) const </arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual Containers::Array&lt; char &gt;</type>
      <name>doExportFontToSingleData</name>
      <anchorfile>classMagnum_1_1Text_1_1AbstractFontConverter.html</anchorfile>
      <anchor>a529511173ba0f13ef573422f68d15a11</anchor>
      <arglist>(AbstractFont &amp;font, GlyphCache &amp;cache, const std::u32string &amp;characters) const </arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual bool</type>
      <name>doExportFontToFile</name>
      <anchorfile>classMagnum_1_1Text_1_1AbstractFontConverter.html</anchorfile>
      <anchor>a4a1dee34477144c93010c6abeac56a1f</anchor>
      <arglist>(AbstractFont &amp;font, GlyphCache &amp;cache, const std::string &amp;filename, const std::u32string &amp;characters) const </arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual std::vector&lt; std::pair&lt; std::string, Containers::Array&lt; char &gt; &gt; &gt;</type>
      <name>doExportGlyphCacheToData</name>
      <anchorfile>classMagnum_1_1Text_1_1AbstractFontConverter.html</anchorfile>
      <anchor>ad0e65389a490aa84f2a354754e13cb43</anchor>
      <arglist>(GlyphCache &amp;cache, const std::string &amp;filename) const </arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual Containers::Array&lt; char &gt;</type>
      <name>doExportGlyphCacheToSingleData</name>
      <anchorfile>classMagnum_1_1Text_1_1AbstractFontConverter.html</anchorfile>
      <anchor>a4796a342d34d692f4eb6da84ca78191f</anchor>
      <arglist>(GlyphCache &amp;cache) const </arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual bool</type>
      <name>doExportGlyphCacheToFile</name>
      <anchorfile>classMagnum_1_1Text_1_1AbstractFontConverter.html</anchorfile>
      <anchor>a008bcc38321cb8bb32a0ad6dac1fed12</anchor>
      <arglist>(GlyphCache &amp;cache, const std::string &amp;filename) const </arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual std::unique_ptr&lt; GlyphCache &gt;</type>
      <name>doImportGlyphCacheFromData</name>
      <anchorfile>classMagnum_1_1Text_1_1AbstractFontConverter.html</anchorfile>
      <anchor>a75da457a408c23dbf1d3cc33da199f9e</anchor>
      <arglist>(const std::vector&lt; std::pair&lt; std::string, Containers::ArrayView&lt; const char &gt;&gt;&gt; &amp;data) const </arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual std::unique_ptr&lt; GlyphCache &gt;</type>
      <name>doImportGlyphCacheFromSingleData</name>
      <anchorfile>classMagnum_1_1Text_1_1AbstractFontConverter.html</anchorfile>
      <anchor>a0c80aa14aff987eac7935d1443ac0987</anchor>
      <arglist>(Containers::ArrayView&lt; const char &gt; data) const </arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual std::unique_ptr&lt; GlyphCache &gt;</type>
      <name>doImportGlyphCacheFromFile</name>
      <anchorfile>classMagnum_1_1Text_1_1AbstractFontConverter.html</anchorfile>
      <anchor>a76ed561dc84d7134f428543ff644993d</anchor>
      <arglist>(const std::string &amp;filename) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Magnum::Text::AbstractLayouter</name>
    <filename>classMagnum_1_1Text_1_1AbstractLayouter.html</filename>
    <member kind="function">
      <type></type>
      <name>AbstractLayouter</name>
      <anchorfile>classMagnum_1_1Text_1_1AbstractLayouter.html</anchorfile>
      <anchor>aa704467296e0dc39a4cc34f69d9fd72b</anchor>
      <arglist>(const AbstractLayouter &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AbstractLayouter</name>
      <anchorfile>classMagnum_1_1Text_1_1AbstractLayouter.html</anchorfile>
      <anchor>a4769a9136e0d25a92d29947326368cab</anchor>
      <arglist>(AbstractLayouter &amp;&amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>AbstractLayouter &amp;</type>
      <name>operator=</name>
      <anchorfile>classMagnum_1_1Text_1_1AbstractLayouter.html</anchorfile>
      <anchor>a22b76894e43fac9c42e93ac808775cdc</anchor>
      <arglist>(const AbstractLayouter &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>AbstractLayouter &amp;</type>
      <name>operator=</name>
      <anchorfile>classMagnum_1_1Text_1_1AbstractLayouter.html</anchorfile>
      <anchor>a9a0973fa19e04b350bdd0846039a2217</anchor>
      <arglist>(const AbstractLayouter &amp;&amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>UnsignedInt</type>
      <name>glyphCount</name>
      <anchorfile>classMagnum_1_1Text_1_1AbstractLayouter.html</anchorfile>
      <anchor>aa5519b3990cc44720911cd87bb2868e2</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>std::pair&lt; Range2D, Range2D &gt;</type>
      <name>renderGlyph</name>
      <anchorfile>classMagnum_1_1Text_1_1AbstractLayouter.html</anchorfile>
      <anchor>aa81861c9484d8d4e4a973b150e784760</anchor>
      <arglist>(UnsignedInt i, Vector2 &amp;cursorPosition, Range2D &amp;rectangle)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>AbstractLayouter</name>
      <anchorfile>classMagnum_1_1Text_1_1AbstractLayouter.html</anchorfile>
      <anchor>a9c8e4e4a056dd9de6c079b402ab0f394</anchor>
      <arglist>(UnsignedInt glyphCount)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual std::tuple&lt; Range2D, Range2D, Vector2 &gt;</type>
      <name>doRenderGlyph</name>
      <anchorfile>classMagnum_1_1Text_1_1AbstractLayouter.html</anchorfile>
      <anchor>a8270241cae0a79a88e3d1f368f2efa03</anchor>
      <arglist>(UnsignedInt i)=0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Magnum::Text::AbstractRenderer</name>
    <filename>classMagnum_1_1Text_1_1AbstractRenderer.html</filename>
    <member kind="function">
      <type>UnsignedInt</type>
      <name>capacity</name>
      <anchorfile>classMagnum_1_1Text_1_1AbstractRenderer.html</anchorfile>
      <anchor>af3d2af72a83f59aeaa66f4107436e4a1</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Range2D</type>
      <name>rectangle</name>
      <anchorfile>classMagnum_1_1Text_1_1AbstractRenderer.html</anchorfile>
      <anchor>ae5b1a522876f8fb07dd93c48c0fbb5b7</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Buffer &amp;</type>
      <name>vertexBuffer</name>
      <anchorfile>classMagnum_1_1Text_1_1AbstractRenderer.html</anchorfile>
      <anchor>a897298570ec55ec3077fe63608b9022b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Buffer &amp;</type>
      <name>indexBuffer</name>
      <anchorfile>classMagnum_1_1Text_1_1AbstractRenderer.html</anchorfile>
      <anchor>ae4b5aa2b79d457f74c5e8da8d76ad1f1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Mesh &amp;</type>
      <name>mesh</name>
      <anchorfile>classMagnum_1_1Text_1_1AbstractRenderer.html</anchorfile>
      <anchor>a402a671df9c52f8e198fa8f4ac28bdd0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reserve</name>
      <anchorfile>classMagnum_1_1Text_1_1AbstractRenderer.html</anchorfile>
      <anchor>aefb06035b6487566cc5bc3a2e4203cae</anchor>
      <arglist>(UnsignedInt glyphCount, BufferUsage vertexBufferUsage, BufferUsage indexBufferUsage)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>render</name>
      <anchorfile>classMagnum_1_1Text_1_1AbstractRenderer.html</anchorfile>
      <anchor>ab5dd57e04bdba8d6367223591d40df82</anchor>
      <arglist>(const std::string &amp;text)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::tuple&lt; std::vector&lt; Vector2 &gt;, std::vector&lt; Vector2 &gt;, std::vector&lt; UnsignedInt &gt;, Range2D &gt;</type>
      <name>render</name>
      <anchorfile>classMagnum_1_1Text_1_1AbstractRenderer.html</anchorfile>
      <anchor>a131f565d384788d27fe3b95e4a32dc56</anchor>
      <arglist>(AbstractFont &amp;font, const GlyphCache &amp;cache, Float size, const std::string &amp;text, Alignment alignment=Alignment::LineLeft)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Magnum::Text::DistanceFieldGlyphCache</name>
    <filename>classMagnum_1_1Text_1_1DistanceFieldGlyphCache.html</filename>
    <base>Magnum::Text::GlyphCache</base>
    <member kind="function">
      <type></type>
      <name>DistanceFieldGlyphCache</name>
      <anchorfile>classMagnum_1_1Text_1_1DistanceFieldGlyphCache.html</anchorfile>
      <anchor>a280c9b4934da5b98f5204181eafbe94f</anchor>
      <arglist>(const Vector2i &amp;originalSize, const Vector2i &amp;size, UnsignedInt radius)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setImage</name>
      <anchorfile>classMagnum_1_1Text_1_1DistanceFieldGlyphCache.html</anchorfile>
      <anchor>a5a7afacdbe28dcd6bb2f1a4f2c2b576f</anchor>
      <arglist>(const Vector2i &amp;offset, const ImageView2D &amp;image) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setDistanceFieldImage</name>
      <anchorfile>classMagnum_1_1Text_1_1DistanceFieldGlyphCache.html</anchorfile>
      <anchor>ad6df87163895423be3c8648911c57750</anchor>
      <arglist>(const Vector2i &amp;offset, const ImageView2D &amp;image)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Magnum::Text::FreeTypeFont</name>
    <filename>classMagnum_1_1Text_1_1FreeTypeFont.html</filename>
    <base>Magnum::Text::AbstractFont</base>
    <member kind="function">
      <type></type>
      <name>FreeTypeFont</name>
      <anchorfile>classMagnum_1_1Text_1_1FreeTypeFont.html</anchorfile>
      <anchor>a823dcb3b7f69d19dd263b16f11d7c9cb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>FreeTypeFont</name>
      <anchorfile>classMagnum_1_1Text_1_1FreeTypeFont.html</anchorfile>
      <anchor>a346e7920a2934496f09a31c9c168a4cc</anchor>
      <arglist>(PluginManager::AbstractManager &amp;manager, const std::string &amp;plugin)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>initialize</name>
      <anchorfile>classMagnum_1_1Text_1_1FreeTypeFont.html</anchorfile>
      <anchor>a7800427aedb17ac75d84b514178dbeca</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>finalize</name>
      <anchorfile>classMagnum_1_1Text_1_1FreeTypeFont.html</anchorfile>
      <anchor>a2fafda4208fa70185ff40b194ffa5b71</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Magnum::Text::GlyphCache</name>
    <filename>classMagnum_1_1Text_1_1GlyphCache.html</filename>
    <member kind="function">
      <type></type>
      <name>GlyphCache</name>
      <anchorfile>classMagnum_1_1Text_1_1GlyphCache.html</anchorfile>
      <anchor>a2413bb576ef9c183bfec8447806631fd</anchor>
      <arglist>(TextureFormat internalFormat, const Vector2i &amp;originalSize, const Vector2i &amp;size, const Vector2i &amp;padding=Vector2i())</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>GlyphCache</name>
      <anchorfile>classMagnum_1_1Text_1_1GlyphCache.html</anchorfile>
      <anchor>af1b1e17cfaccb8e68bc67b79056041e6</anchor>
      <arglist>(TextureFormat internalFormat, const Vector2i &amp;size, const Vector2i &amp;padding=Vector2i())</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>GlyphCache</name>
      <anchorfile>classMagnum_1_1Text_1_1GlyphCache.html</anchorfile>
      <anchor>a6eecd6e873974ce60d0528c392f5101a</anchor>
      <arglist>(const Vector2i &amp;originalSize, const Vector2i &amp;size, const Vector2i &amp;padding=Vector2i())</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>GlyphCache</name>
      <anchorfile>classMagnum_1_1Text_1_1GlyphCache.html</anchorfile>
      <anchor>af7324e06c85d63ad09aa9c4152a39a53</anchor>
      <arglist>(const Vector2i &amp;size, const Vector2i &amp;padding=Vector2i())</arglist>
    </member>
    <member kind="function">
      <type>Vector2i</type>
      <name>textureSize</name>
      <anchorfile>classMagnum_1_1Text_1_1GlyphCache.html</anchorfile>
      <anchor>a97ddc64c0fe9930d90486ccb7e99ca28</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Vector2i</type>
      <name>padding</name>
      <anchorfile>classMagnum_1_1Text_1_1GlyphCache.html</anchorfile>
      <anchor>a1c92955bcf62173ce7a6d43136bd495a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>std::size_t</type>
      <name>glyphCount</name>
      <anchorfile>classMagnum_1_1Text_1_1GlyphCache.html</anchorfile>
      <anchor>a85e0cef448867e030aa0f219409f2b7e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Texture2D &amp;</type>
      <name>texture</name>
      <anchorfile>classMagnum_1_1Text_1_1GlyphCache.html</anchorfile>
      <anchor>ab2af4f24497bb4f78245f9ad6d9f5a35</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::pair&lt; Vector2i, Range2Di &gt;</type>
      <name>operator[]</name>
      <anchorfile>classMagnum_1_1Text_1_1GlyphCache.html</anchorfile>
      <anchor>a399c30ae59bcb93f243a763591ed2d6a</anchor>
      <arglist>(UnsignedInt glyph) const </arglist>
    </member>
    <member kind="function">
      <type>std::unordered_map&lt; UnsignedInt, std::pair&lt; Vector2i, Range2Di &gt; &gt;::const_iterator</type>
      <name>begin</name>
      <anchorfile>classMagnum_1_1Text_1_1GlyphCache.html</anchorfile>
      <anchor>a5bc01a9bb23d573b918db2b4df41cfab</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>std::unordered_map&lt; UnsignedInt, std::pair&lt; Vector2i, Range2Di &gt; &gt;::const_iterator</type>
      <name>end</name>
      <anchorfile>classMagnum_1_1Text_1_1GlyphCache.html</anchorfile>
      <anchor>adf893ae76498ad1053df048c79bc1059</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; Range2Di &gt;</type>
      <name>reserve</name>
      <anchorfile>classMagnum_1_1Text_1_1GlyphCache.html</anchorfile>
      <anchor>a50d0448f6d68569d2779070807b2a7e6</anchor>
      <arglist>(const std::vector&lt; Vector2i &gt; &amp;sizes)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>insert</name>
      <anchorfile>classMagnum_1_1Text_1_1GlyphCache.html</anchorfile>
      <anchor>a819487cb4e19c655d51102f65917d9cf</anchor>
      <arglist>(UnsignedInt glyph, const Vector2i &amp;position, const Range2Di &amp;rectangle)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setImage</name>
      <anchorfile>classMagnum_1_1Text_1_1GlyphCache.html</anchorfile>
      <anchor>af0144585f641e15cdef310f16692a5d7</anchor>
      <arglist>(const Vector2i &amp;offset, const ImageView2D &amp;image)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Magnum::Text::HarfBuzzFont</name>
    <filename>classMagnum_1_1Text_1_1HarfBuzzFont.html</filename>
    <base>Magnum::Text::FreeTypeFont</base>
    <member kind="function">
      <type></type>
      <name>HarfBuzzFont</name>
      <anchorfile>classMagnum_1_1Text_1_1HarfBuzzFont.html</anchorfile>
      <anchor>a65d6f9762c9ca9ada932c6e4b0a7fb28</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>HarfBuzzFont</name>
      <anchorfile>classMagnum_1_1Text_1_1HarfBuzzFont.html</anchorfile>
      <anchor>a7df91cb23ba94ed4c22d7407d5144baf</anchor>
      <arglist>(PluginManager::AbstractManager &amp;manager, const std::string &amp;plugin)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Magnum::Text::MagnumFont</name>
    <filename>classMagnum_1_1Text_1_1MagnumFont.html</filename>
    <base>Magnum::Text::AbstractFont</base>
    <member kind="function">
      <type></type>
      <name>MagnumFont</name>
      <anchorfile>classMagnum_1_1Text_1_1MagnumFont.html</anchorfile>
      <anchor>ad8f0310db026c6e9d54e364522ca625e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>MagnumFont</name>
      <anchorfile>classMagnum_1_1Text_1_1MagnumFont.html</anchorfile>
      <anchor>ace86604f64258c7f999f160693fcbbd4</anchor>
      <arglist>(PluginManager::AbstractManager &amp;manager, const std::string &amp;plugin)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Magnum::Text::MagnumFontConverter</name>
    <filename>classMagnum_1_1Text_1_1MagnumFontConverter.html</filename>
    <base>Magnum::Text::AbstractFontConverter</base>
    <member kind="function">
      <type></type>
      <name>MagnumFontConverter</name>
      <anchorfile>classMagnum_1_1Text_1_1MagnumFontConverter.html</anchorfile>
      <anchor>aa676e1a6641afbfce99aad0e4bb392d5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>MagnumFontConverter</name>
      <anchorfile>classMagnum_1_1Text_1_1MagnumFontConverter.html</anchorfile>
      <anchor>a17eb960fc50442d719db75bdbb8f356a</anchor>
      <arglist>(PluginManager::AbstractManager &amp;manager, const std::string &amp;plugin)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Magnum::Text::Renderer</name>
    <filename>classMagnum_1_1Text_1_1Renderer.html</filename>
    <templarg>dimensions</templarg>
    <base>Magnum::Text::AbstractRenderer</base>
    <member kind="function">
      <type></type>
      <name>Renderer</name>
      <anchorfile>classMagnum_1_1Text_1_1Renderer.html</anchorfile>
      <anchor>a437215a93c163ccc4d8e7173c16be2e0</anchor>
      <arglist>(AbstractFont &amp;font, const GlyphCache &amp;cache, Float size, Alignment alignment=Alignment::LineLeft)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Renderer</name>
      <anchorfile>classMagnum_1_1Text_1_1Renderer.html</anchorfile>
      <anchor>a138c14dbfbbc0bcf9f3b0a7ae20fa160</anchor>
      <arglist>(AbstractFont &amp;, GlyphCache &amp;&amp;, Float, Alignment alignment=Alignment::LineLeft)=delete</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>render</name>
      <anchorfile>classMagnum_1_1Text_1_1Renderer.html</anchorfile>
      <anchor>ab5dd57e04bdba8d6367223591d40df82</anchor>
      <arglist>(const std::string &amp;text)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::tuple&lt; Mesh, Range2D &gt;</type>
      <name>render</name>
      <anchorfile>classMagnum_1_1Text_1_1Renderer.html</anchorfile>
      <anchor>a07e9cb41a140cc9b2eafedea94f968bd</anchor>
      <arglist>(AbstractFont &amp;font, const GlyphCache &amp;cache, Float size, const std::string &amp;text, Buffer &amp;vertexBuffer, Buffer &amp;indexBuffer, BufferUsage usage, Alignment alignment=Alignment::LineLeft)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::tuple&lt; std::vector&lt; Vector2 &gt;, std::vector&lt; Vector2 &gt;, std::vector&lt; UnsignedInt &gt;, Range2D &gt;</type>
      <name>render</name>
      <anchorfile>classMagnum_1_1Text_1_1Renderer.html</anchorfile>
      <anchor>a131f565d384788d27fe3b95e4a32dc56</anchor>
      <arglist>(AbstractFont &amp;font, const GlyphCache &amp;cache, Float size, const std::string &amp;text, Alignment alignment=Alignment::LineLeft)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Magnum::Text::StbTrueTypeFont</name>
    <filename>classMagnum_1_1Text_1_1StbTrueTypeFont.html</filename>
    <base>Magnum::Text::AbstractFont</base>
    <member kind="function">
      <type></type>
      <name>StbTrueTypeFont</name>
      <anchorfile>classMagnum_1_1Text_1_1StbTrueTypeFont.html</anchorfile>
      <anchor>aafa04842a3a13522028155578b783586</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>StbTrueTypeFont</name>
      <anchorfile>classMagnum_1_1Text_1_1StbTrueTypeFont.html</anchorfile>
      <anchor>ade72b8c6abd3eb50b4c963604cd083f2</anchor>
      <arglist>(PluginManager::AbstractManager &amp;manager, const std::string &amp;plugin)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Magnum::Texture</name>
    <filename>classMagnum_1_1Texture.html</filename>
    <templarg>dimensions</templarg>
    <base>Magnum::AbstractTexture</base>
    <member kind="enumvalue">
      <name>Dimensions</name>
      <anchorfile>classMagnum_1_1Texture.html</anchorfile>
      <anchor>a80f22984174468606ccca21cf4cfbec1a598501d2ab4758dbe219f51c23a402a3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Dimensions</name>
      <anchorfile>classMagnum_1_1Texture.html</anchorfile>
      <anchor>a80f22984174468606ccca21cf4cfbec1a598501d2ab4758dbe219f51c23a402a3</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Texture</name>
      <anchorfile>classMagnum_1_1Texture.html</anchorfile>
      <anchor>a33b8d8bdeb5c7333b6e12937fae28f69</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Texture</name>
      <anchorfile>classMagnum_1_1Texture.html</anchorfile>
      <anchor>a4d61495bc67515fac49798f8003b6493</anchor>
      <arglist>(NoCreateT) noexcept</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>bindImage</name>
      <anchorfile>classMagnum_1_1Texture.html</anchorfile>
      <anchor>a0c63cbaf240c5db2b1a5c41c3d805240</anchor>
      <arglist>(Int imageUnit, Int level, ImageAccess access, ImageFormat format)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>bindImage</name>
      <anchorfile>classMagnum_1_1Texture.html</anchorfile>
      <anchor>a17f377c4d9517bfcd0878f8d96a87fdb</anchor>
      <arglist>(Int imageUnit, Int level, Int layer, ImageAccess access, ImageFormat format)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>bindImageLayered</name>
      <anchorfile>classMagnum_1_1Texture.html</anchorfile>
      <anchor>a4183db748773ae3c21b5c5cd38f1f1af</anchor>
      <arglist>(Int imageUnit, Int level, ImageAccess access, ImageFormat format)</arglist>
    </member>
    <member kind="function">
      <type>Texture&lt; dimensions &gt; &amp;</type>
      <name>setBaseLevel</name>
      <anchorfile>classMagnum_1_1Texture.html</anchorfile>
      <anchor>ad6ec8d93ff9d903c4cd34376a2000e20</anchor>
      <arglist>(Int level)</arglist>
    </member>
    <member kind="function">
      <type>Texture&lt; dimensions &gt; &amp;</type>
      <name>setMaxLevel</name>
      <anchorfile>classMagnum_1_1Texture.html</anchorfile>
      <anchor>acd729a1441093482f19c64bd68a561cc</anchor>
      <arglist>(Int level)</arglist>
    </member>
    <member kind="function">
      <type>Texture&lt; dimensions &gt; &amp;</type>
      <name>setMinificationFilter</name>
      <anchorfile>classMagnum_1_1Texture.html</anchorfile>
      <anchor>a3e7f3562060bca41341bdcdbfbdc83ab</anchor>
      <arglist>(Sampler::Filter filter, Sampler::Mipmap mipmap=Sampler::Mipmap::Base)</arglist>
    </member>
    <member kind="function">
      <type>Texture&lt; dimensions &gt; &amp;</type>
      <name>setMagnificationFilter</name>
      <anchorfile>classMagnum_1_1Texture.html</anchorfile>
      <anchor>afd5671ef45a518d4f0da7d61b92c7b72</anchor>
      <arglist>(Sampler::Filter filter)</arglist>
    </member>
    <member kind="function">
      <type>Texture&lt; dimensions &gt; &amp;</type>
      <name>setMinLod</name>
      <anchorfile>classMagnum_1_1Texture.html</anchorfile>
      <anchor>aa9400cc92f12da6e5b81bea11eb68a12</anchor>
      <arglist>(Float lod)</arglist>
    </member>
    <member kind="function">
      <type>Texture&lt; dimensions &gt; &amp;</type>
      <name>setMaxLod</name>
      <anchorfile>classMagnum_1_1Texture.html</anchorfile>
      <anchor>a9da13ca71d395212d86968c697d53e37</anchor>
      <arglist>(Float lod)</arglist>
    </member>
    <member kind="function">
      <type>Texture&lt; dimensions &gt; &amp;</type>
      <name>setLodBias</name>
      <anchorfile>classMagnum_1_1Texture.html</anchorfile>
      <anchor>a5a7b1cec0b122eb4c152216b89781519</anchor>
      <arglist>(Float bias)</arglist>
    </member>
    <member kind="function">
      <type>Texture&lt; dimensions &gt; &amp;</type>
      <name>setWrapping</name>
      <anchorfile>classMagnum_1_1Texture.html</anchorfile>
      <anchor>a254892c123d5be7e4ebf2e1c5181ff9b</anchor>
      <arglist>(const Array&lt; dimensions, Sampler::Wrapping &gt; &amp;wrapping)</arglist>
    </member>
    <member kind="function">
      <type>Texture&lt; dimensions &gt; &amp;</type>
      <name>setBorderColor</name>
      <anchorfile>classMagnum_1_1Texture.html</anchorfile>
      <anchor>a738d1a52677345de2e9d9d94efa4cdab</anchor>
      <arglist>(const Color4 &amp;color)</arglist>
    </member>
    <member kind="function">
      <type>Texture&lt; dimensions &gt; &amp;</type>
      <name>setBorderColor</name>
      <anchorfile>classMagnum_1_1Texture.html</anchorfile>
      <anchor>a0ad2b621fcd89c86ea4ec827daeafad5</anchor>
      <arglist>(const Vector4ui &amp;color)</arglist>
    </member>
    <member kind="function">
      <type>Texture&lt; dimensions &gt; &amp;</type>
      <name>setBorderColor</name>
      <anchorfile>classMagnum_1_1Texture.html</anchorfile>
      <anchor>a2ca401ac74ddf03b30ec8144dbe12051</anchor>
      <arglist>(const Vector4i &amp;color)</arglist>
    </member>
    <member kind="function">
      <type>Texture&lt; dimensions &gt; &amp;</type>
      <name>setMaxAnisotropy</name>
      <anchorfile>classMagnum_1_1Texture.html</anchorfile>
      <anchor>aac1e4d9d57a306dd0ff4ea3420d4958c</anchor>
      <arglist>(Float anisotropy)</arglist>
    </member>
    <member kind="function">
      <type>Texture&lt; dimensions &gt; &amp;</type>
      <name>setSRGBDecode</name>
      <anchorfile>classMagnum_1_1Texture.html</anchorfile>
      <anchor>a97a8b94b07228c3c6b1b2dfd2de5843b</anchor>
      <arglist>(bool decode)</arglist>
    </member>
    <member kind="function">
      <type>Texture&lt; dimensions &gt; &amp;</type>
      <name>setSwizzle</name>
      <anchorfile>classMagnum_1_1Texture.html</anchorfile>
      <anchor>afd921fd8977e2a294f71de29d3dcb18f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Texture&lt; dimensions &gt; &amp;</type>
      <name>setCompareMode</name>
      <anchorfile>classMagnum_1_1Texture.html</anchorfile>
      <anchor>a507b88eec154fa94cc92e37e8060a9b8</anchor>
      <arglist>(Sampler::CompareMode mode)</arglist>
    </member>
    <member kind="function">
      <type>Texture&lt; dimensions &gt; &amp;</type>
      <name>setCompareFunction</name>
      <anchorfile>classMagnum_1_1Texture.html</anchorfile>
      <anchor>a14abacaae5d6e5bb43012fe023b2554e</anchor>
      <arglist>(Sampler::CompareFunction function)</arglist>
    </member>
    <member kind="function">
      <type>Texture&lt; dimensions &gt; &amp;</type>
      <name>setDepthStencilMode</name>
      <anchorfile>classMagnum_1_1Texture.html</anchorfile>
      <anchor>ae160972e8f7ca13c17716f9f2552fd2f</anchor>
      <arglist>(Sampler::DepthStencilMode mode)</arglist>
    </member>
    <member kind="function">
      <type>Texture&lt; dimensions &gt; &amp;</type>
      <name>setStorage</name>
      <anchorfile>classMagnum_1_1Texture.html</anchorfile>
      <anchor>af3970cd29d112b663e43382b4b9343ba</anchor>
      <arglist>(Int levels, TextureFormat internalFormat, const VectorTypeFor&lt; dimensions, Int &gt; &amp;size)</arglist>
    </member>
    <member kind="function">
      <type>VectorTypeFor&lt; dimensions, Int &gt;</type>
      <name>imageSize</name>
      <anchorfile>classMagnum_1_1Texture.html</anchorfile>
      <anchor>a495e8bc778e2918bd181b76a7fe9986a</anchor>
      <arglist>(Int level)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>image</name>
      <anchorfile>classMagnum_1_1Texture.html</anchorfile>
      <anchor>ab5d89c39d191a6208a5f8e206ed70700</anchor>
      <arglist>(Int level, Image&lt; dimensions &gt; &amp;image)</arglist>
    </member>
    <member kind="function">
      <type>Image&lt; dimensions &gt;</type>
      <name>image</name>
      <anchorfile>classMagnum_1_1Texture.html</anchorfile>
      <anchor>a883c7b23b7512d211b8e797a7c170723</anchor>
      <arglist>(Int level, Image&lt; dimensions &gt; &amp;&amp;image)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>image</name>
      <anchorfile>classMagnum_1_1Texture.html</anchorfile>
      <anchor>a0e68a723039018a7737e36069fd35d64</anchor>
      <arglist>(Int level, BufferImage&lt; dimensions &gt; &amp;image, BufferUsage usage)</arglist>
    </member>
    <member kind="function">
      <type>BufferImage&lt; dimensions &gt;</type>
      <name>image</name>
      <anchorfile>classMagnum_1_1Texture.html</anchorfile>
      <anchor>a8f16a9162e6306dee99082adcb5e70cd</anchor>
      <arglist>(Int level, BufferImage&lt; dimensions &gt; &amp;&amp;image, BufferUsage usage)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>compressedImage</name>
      <anchorfile>classMagnum_1_1Texture.html</anchorfile>
      <anchor>adfcae4214db91888d30179de41a5db67</anchor>
      <arglist>(Int level, CompressedImage&lt; dimensions &gt; &amp;image)</arglist>
    </member>
    <member kind="function">
      <type>CompressedImage&lt; dimensions &gt;</type>
      <name>compressedImage</name>
      <anchorfile>classMagnum_1_1Texture.html</anchorfile>
      <anchor>a3f9d9b2bcfc33cb4a0d701188af46d4f</anchor>
      <arglist>(Int level, CompressedImage&lt; dimensions &gt; &amp;&amp;image)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>compressedImage</name>
      <anchorfile>classMagnum_1_1Texture.html</anchorfile>
      <anchor>a445e54b65ee6352735a24a8eda7e87d6</anchor>
      <arglist>(Int level, CompressedBufferImage&lt; dimensions &gt; &amp;image, BufferUsage usage)</arglist>
    </member>
    <member kind="function">
      <type>CompressedBufferImage&lt; dimensions &gt;</type>
      <name>compressedImage</name>
      <anchorfile>classMagnum_1_1Texture.html</anchorfile>
      <anchor>a638e8449b043f67c96e2eb3bad95314d</anchor>
      <arglist>(Int level, CompressedBufferImage&lt; dimensions &gt; &amp;&amp;image, BufferUsage usage)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>subImage</name>
      <anchorfile>classMagnum_1_1Texture.html</anchorfile>
      <anchor>a3ad1052ed0f746c5cd89b611c467742a</anchor>
      <arglist>(Int level, const RangeTypeFor&lt; dimensions, Int &gt; &amp;range, Image&lt; dimensions &gt; &amp;image)</arglist>
    </member>
    <member kind="function">
      <type>Image&lt; dimensions &gt;</type>
      <name>subImage</name>
      <anchorfile>classMagnum_1_1Texture.html</anchorfile>
      <anchor>a3b773586f577b4a47cc50c65d6310587</anchor>
      <arglist>(Int level, const RangeTypeFor&lt; dimensions, Int &gt; &amp;range, Image&lt; dimensions &gt; &amp;&amp;image)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>subImage</name>
      <anchorfile>classMagnum_1_1Texture.html</anchorfile>
      <anchor>a33732f9408a1a961999a6513c9ab0073</anchor>
      <arglist>(Int level, const RangeTypeFor&lt; dimensions, Int &gt; &amp;range, BufferImage&lt; dimensions &gt; &amp;image, BufferUsage usage)</arglist>
    </member>
    <member kind="function">
      <type>BufferImage&lt; dimensions &gt;</type>
      <name>subImage</name>
      <anchorfile>classMagnum_1_1Texture.html</anchorfile>
      <anchor>a2f146d61b4df41dda2eabbf1de2014be</anchor>
      <arglist>(Int level, const RangeTypeFor&lt; dimensions, Int &gt; &amp;range, BufferImage&lt; dimensions &gt; &amp;&amp;image, BufferUsage usage)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>compressedSubImage</name>
      <anchorfile>classMagnum_1_1Texture.html</anchorfile>
      <anchor>a1e96933c08466a17e8ccc68605106f6a</anchor>
      <arglist>(Int level, const RangeTypeFor&lt; dimensions, Int &gt; &amp;range, CompressedImage&lt; dimensions &gt; &amp;image)</arglist>
    </member>
    <member kind="function">
      <type>CompressedImage&lt; dimensions &gt;</type>
      <name>compressedSubImage</name>
      <anchorfile>classMagnum_1_1Texture.html</anchorfile>
      <anchor>a4cffb4b2db4b494a095407e8c24cdde9</anchor>
      <arglist>(Int level, const RangeTypeFor&lt; dimensions, Int &gt; &amp;range, CompressedImage&lt; dimensions &gt; &amp;&amp;image)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>compressedSubImage</name>
      <anchorfile>classMagnum_1_1Texture.html</anchorfile>
      <anchor>ad46a4e1333a9c369e9b71f75136f4c38</anchor>
      <arglist>(Int level, const RangeTypeFor&lt; dimensions, Int &gt; &amp;range, CompressedBufferImage&lt; dimensions &gt; &amp;image, BufferUsage usage)</arglist>
    </member>
    <member kind="function">
      <type>CompressedBufferImage&lt; dimensions &gt;</type>
      <name>compressedSubImage</name>
      <anchorfile>classMagnum_1_1Texture.html</anchorfile>
      <anchor>a28702f36832fb49f1c71467602297225</anchor>
      <arglist>(Int level, const RangeTypeFor&lt; dimensions, Int &gt; &amp;range, CompressedBufferImage&lt; dimensions &gt; &amp;&amp;image, BufferUsage usage)</arglist>
    </member>
    <member kind="function">
      <type>Texture&lt; dimensions &gt; &amp;</type>
      <name>setImage</name>
      <anchorfile>classMagnum_1_1Texture.html</anchorfile>
      <anchor>a4bf795f4ec288be7f7c05b1c3d945223</anchor>
      <arglist>(Int level, TextureFormat internalFormat, const ImageView&lt; dimensions &gt; &amp;image)</arglist>
    </member>
    <member kind="function">
      <type>Texture&lt; dimensions &gt; &amp;</type>
      <name>setImage</name>
      <anchorfile>classMagnum_1_1Texture.html</anchorfile>
      <anchor>a19e7062867cf447a624b070a348447a5</anchor>
      <arglist>(Int level, TextureFormat internalFormat, BufferImage&lt; dimensions &gt; &amp;image)</arglist>
    </member>
    <member kind="function">
      <type>Texture&lt; dimensions &gt; &amp;</type>
      <name>setImage</name>
      <anchorfile>classMagnum_1_1Texture.html</anchorfile>
      <anchor>a11920b7b8b46ab335624b3528368eb07</anchor>
      <arglist>(Int level, TextureFormat internalFormat, BufferImage&lt; dimensions &gt; &amp;&amp;image)</arglist>
    </member>
    <member kind="function">
      <type>Texture&lt; dimensions &gt; &amp;</type>
      <name>setCompressedImage</name>
      <anchorfile>classMagnum_1_1Texture.html</anchorfile>
      <anchor>aabcffc038bd8fbdaea5f58bb2daffd5d</anchor>
      <arglist>(Int level, const CompressedImageView&lt; dimensions &gt; &amp;image)</arglist>
    </member>
    <member kind="function">
      <type>Texture&lt; dimensions &gt; &amp;</type>
      <name>setCompressedImage</name>
      <anchorfile>classMagnum_1_1Texture.html</anchorfile>
      <anchor>a8333acee229a35e334b810ad04214ea0</anchor>
      <arglist>(Int level, CompressedBufferImage&lt; dimensions &gt; &amp;image)</arglist>
    </member>
    <member kind="function">
      <type>Texture&lt; dimensions &gt; &amp;</type>
      <name>setCompressedImage</name>
      <anchorfile>classMagnum_1_1Texture.html</anchorfile>
      <anchor>a89304f56c9c9a717a84e6cf1836e3677</anchor>
      <arglist>(Int level, CompressedBufferImage&lt; dimensions &gt; &amp;&amp;image)</arglist>
    </member>
    <member kind="function">
      <type>Texture&lt; dimensions &gt; &amp;</type>
      <name>setSubImage</name>
      <anchorfile>classMagnum_1_1Texture.html</anchorfile>
      <anchor>a30f6b3d0d385e34cff08c000cb1ce59b</anchor>
      <arglist>(Int level, const VectorTypeFor&lt; dimensions, Int &gt; &amp;offset, const ImageView&lt; dimensions &gt; &amp;image)</arglist>
    </member>
    <member kind="function">
      <type>Texture&lt; dimensions &gt; &amp;</type>
      <name>setSubImage</name>
      <anchorfile>classMagnum_1_1Texture.html</anchorfile>
      <anchor>ad8e8ac0560b6c9332c8e1d4cc086ee3b</anchor>
      <arglist>(Int level, const VectorTypeFor&lt; dimensions, Int &gt; &amp;offset, BufferImage&lt; dimensions &gt; &amp;image)</arglist>
    </member>
    <member kind="function">
      <type>Texture&lt; dimensions &gt; &amp;</type>
      <name>setSubImage</name>
      <anchorfile>classMagnum_1_1Texture.html</anchorfile>
      <anchor>abdf2ec9558f145da4104db2721ccc180</anchor>
      <arglist>(Int level, const VectorTypeFor&lt; dimensions, Int &gt; &amp;offset, BufferImage&lt; dimensions &gt; &amp;&amp;image)</arglist>
    </member>
    <member kind="function">
      <type>Texture&lt; dimensions &gt; &amp;</type>
      <name>setCompressedSubImage</name>
      <anchorfile>classMagnum_1_1Texture.html</anchorfile>
      <anchor>a5c290a62432b169281e1bb0646400c08</anchor>
      <arglist>(Int level, const VectorTypeFor&lt; dimensions, Int &gt; &amp;offset, const CompressedImageView&lt; dimensions &gt; &amp;image)</arglist>
    </member>
    <member kind="function">
      <type>Texture&lt; dimensions &gt; &amp;</type>
      <name>setCompressedSubImage</name>
      <anchorfile>classMagnum_1_1Texture.html</anchorfile>
      <anchor>a88e1eb12d5facd9dbe1c6f5f9454d534</anchor>
      <arglist>(Int level, const VectorTypeFor&lt; dimensions, Int &gt; &amp;offset, CompressedBufferImage&lt; dimensions &gt; &amp;image)</arglist>
    </member>
    <member kind="function">
      <type>Texture&lt; dimensions &gt; &amp;</type>
      <name>setCompressedSubImage</name>
      <anchorfile>classMagnum_1_1Texture.html</anchorfile>
      <anchor>a71c6073487426d0298b1e99349711181</anchor>
      <arglist>(Int level, const VectorTypeFor&lt; dimensions, Int &gt; &amp;offset, CompressedBufferImage&lt; dimensions &gt; &amp;&amp;image)</arglist>
    </member>
    <member kind="function">
      <type>Texture&lt; dimensions &gt; &amp;</type>
      <name>generateMipmap</name>
      <anchorfile>classMagnum_1_1Texture.html</anchorfile>
      <anchor>a048fb78acf9fe6db98c05e0777c815df</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>invalidateImage</name>
      <anchorfile>classMagnum_1_1Texture.html</anchorfile>
      <anchor>af7bfeef6b96126289023a882aeafbc94</anchor>
      <arglist>(Int level)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>invalidateSubImage</name>
      <anchorfile>classMagnum_1_1Texture.html</anchorfile>
      <anchor>a94b04e510616f84b94f9a7345412de1d</anchor>
      <arglist>(Int level, const VectorTypeFor&lt; dimensions, Int &gt; &amp;offset, const VectorTypeFor&lt; dimensions, Int &gt; &amp;size)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static VectorTypeFor&lt; dimensions, Int &gt;</type>
      <name>maxSize</name>
      <anchorfile>classMagnum_1_1Texture.html</anchorfile>
      <anchor>a011ed0bb2982364e722916b6816f4786</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static VectorTypeFor&lt; dimensions, Int &gt;</type>
      <name>compressedBlockSize</name>
      <anchorfile>classMagnum_1_1Texture.html</anchorfile>
      <anchor>a43b9fe4290be65df12ffe5d6536c811f</anchor>
      <arglist>(TextureFormat format)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Int</type>
      <name>compressedBlockDataSize</name>
      <anchorfile>classMagnum_1_1Texture.html</anchorfile>
      <anchor>ab5b59b4394c892b1a1ecaa1a15af7d18</anchor>
      <arglist>(TextureFormat format)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Texture&lt; dimensions &gt;</type>
      <name>wrap</name>
      <anchorfile>classMagnum_1_1Texture.html</anchorfile>
      <anchor>ac5fa2d224fa575571997401dc87b3194</anchor>
      <arglist>(GLuint id, ObjectFlags flags={})</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Magnum::TextureArray</name>
    <filename>classMagnum_1_1TextureArray.html</filename>
    <templarg>dimensions</templarg>
    <base>Magnum::AbstractTexture</base>
    <member kind="enumvalue">
      <name>Dimensions</name>
      <anchorfile>classMagnum_1_1TextureArray.html</anchorfile>
      <anchor>aa1dca95934753b55342320b53735f646a7e6d23991f40d4523cef8c525aa9bf5b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Dimensions</name>
      <anchorfile>classMagnum_1_1TextureArray.html</anchorfile>
      <anchor>aa1dca95934753b55342320b53735f646a7e6d23991f40d4523cef8c525aa9bf5b</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TextureArray</name>
      <anchorfile>classMagnum_1_1TextureArray.html</anchorfile>
      <anchor>af75901c2d082dfe2ffc35b653d221115</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TextureArray</name>
      <anchorfile>classMagnum_1_1TextureArray.html</anchorfile>
      <anchor>a62ff83ee95163adec16dbbf1baadb1c9</anchor>
      <arglist>(NoCreateT) noexcept</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>bindImage</name>
      <anchorfile>classMagnum_1_1TextureArray.html</anchorfile>
      <anchor>afca6ec25ff26c6eebdf28337b43a64fe</anchor>
      <arglist>(Int imageUnit, Int level, Int layer, ImageAccess access, ImageFormat format)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>bindImageLayered</name>
      <anchorfile>classMagnum_1_1TextureArray.html</anchorfile>
      <anchor>aa96e98845fbc2ed88d2c37292587024a</anchor>
      <arglist>(Int imageUnit, Int level, ImageAccess access, ImageFormat format)</arglist>
    </member>
    <member kind="function">
      <type>TextureArray&lt; dimensions &gt; &amp;</type>
      <name>setBaseLevel</name>
      <anchorfile>classMagnum_1_1TextureArray.html</anchorfile>
      <anchor>a35c2171c2758ec0fc0f47c4d0abbe333</anchor>
      <arglist>(Int level)</arglist>
    </member>
    <member kind="function">
      <type>TextureArray&lt; dimensions &gt; &amp;</type>
      <name>setMaxLevel</name>
      <anchorfile>classMagnum_1_1TextureArray.html</anchorfile>
      <anchor>af77d3d939411c73de4bc4cf99c55cb18</anchor>
      <arglist>(Int level)</arglist>
    </member>
    <member kind="function">
      <type>TextureArray&lt; dimensions &gt; &amp;</type>
      <name>setMinificationFilter</name>
      <anchorfile>classMagnum_1_1TextureArray.html</anchorfile>
      <anchor>a29f3c284231187a85952cee873cca1a6</anchor>
      <arglist>(Sampler::Filter filter, Sampler::Mipmap mipmap=Sampler::Mipmap::Base)</arglist>
    </member>
    <member kind="function">
      <type>TextureArray&lt; dimensions &gt; &amp;</type>
      <name>setMagnificationFilter</name>
      <anchorfile>classMagnum_1_1TextureArray.html</anchorfile>
      <anchor>a81b7ede0b3e5d2b465e44d6bbddb45ba</anchor>
      <arglist>(Sampler::Filter filter)</arglist>
    </member>
    <member kind="function">
      <type>TextureArray&lt; dimensions &gt; &amp;</type>
      <name>setMinLod</name>
      <anchorfile>classMagnum_1_1TextureArray.html</anchorfile>
      <anchor>a7718c492aab72fecd0c40cfc39d1292c</anchor>
      <arglist>(Float lod)</arglist>
    </member>
    <member kind="function">
      <type>TextureArray&lt; dimensions &gt; &amp;</type>
      <name>setMaxLod</name>
      <anchorfile>classMagnum_1_1TextureArray.html</anchorfile>
      <anchor>a24262cd507c365676184fa7ff976297d</anchor>
      <arglist>(Float lod)</arglist>
    </member>
    <member kind="function">
      <type>TextureArray&lt; dimensions &gt; &amp;</type>
      <name>setLodBias</name>
      <anchorfile>classMagnum_1_1TextureArray.html</anchorfile>
      <anchor>a0f159e4680ec2f6d373a8737128e680c</anchor>
      <arglist>(Float bias)</arglist>
    </member>
    <member kind="function">
      <type>TextureArray&lt; dimensions &gt; &amp;</type>
      <name>setWrapping</name>
      <anchorfile>classMagnum_1_1TextureArray.html</anchorfile>
      <anchor>a6a156346a7c4fdc028039a674c93a0d0</anchor>
      <arglist>(const Array&lt; dimensions, Sampler::Wrapping &gt; &amp;wrapping)</arglist>
    </member>
    <member kind="function">
      <type>TextureArray&lt; dimensions &gt; &amp;</type>
      <name>setBorderColor</name>
      <anchorfile>classMagnum_1_1TextureArray.html</anchorfile>
      <anchor>a3b546160d0fc6c914c04a29ce592ca99</anchor>
      <arglist>(const Color4 &amp;color)</arglist>
    </member>
    <member kind="function">
      <type>TextureArray&lt; dimensions &gt; &amp;</type>
      <name>setBorderColor</name>
      <anchorfile>classMagnum_1_1TextureArray.html</anchorfile>
      <anchor>a7551dd514bfd6af6331d3473702fd7d9</anchor>
      <arglist>(const Vector4ui &amp;color)</arglist>
    </member>
    <member kind="function">
      <type>TextureArray&lt; dimensions &gt; &amp;</type>
      <name>setBorderColor</name>
      <anchorfile>classMagnum_1_1TextureArray.html</anchorfile>
      <anchor>afb19153202c825fc2b06845dce4b30d5</anchor>
      <arglist>(const Vector4i &amp;color)</arglist>
    </member>
    <member kind="function">
      <type>TextureArray&lt; dimensions &gt; &amp;</type>
      <name>setMaxAnisotropy</name>
      <anchorfile>classMagnum_1_1TextureArray.html</anchorfile>
      <anchor>ae04200ed7d21ffba69f1eb78ae43066a</anchor>
      <arglist>(Float anisotropy)</arglist>
    </member>
    <member kind="function">
      <type>TextureArray&lt; dimensions &gt; &amp;</type>
      <name>setSRGBDecode</name>
      <anchorfile>classMagnum_1_1TextureArray.html</anchorfile>
      <anchor>aed3d50927b0beaff5cb67bffa0234da0</anchor>
      <arglist>(bool decode)</arglist>
    </member>
    <member kind="function">
      <type>TextureArray&lt; dimensions &gt; &amp;</type>
      <name>setSwizzle</name>
      <anchorfile>classMagnum_1_1TextureArray.html</anchorfile>
      <anchor>ab4abe350e7ee032b6db38b6af04bbfe9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>TextureArray&lt; dimensions &gt; &amp;</type>
      <name>setCompareMode</name>
      <anchorfile>classMagnum_1_1TextureArray.html</anchorfile>
      <anchor>ad0239ac39b60e60505eb8f56bc7c44ae</anchor>
      <arglist>(Sampler::CompareMode mode)</arglist>
    </member>
    <member kind="function">
      <type>TextureArray&lt; dimensions &gt; &amp;</type>
      <name>setCompareFunction</name>
      <anchorfile>classMagnum_1_1TextureArray.html</anchorfile>
      <anchor>a1878fe6d5c72bf85a24a1ecc537b8984</anchor>
      <arglist>(Sampler::CompareFunction function)</arglist>
    </member>
    <member kind="function">
      <type>TextureArray&lt; dimensions &gt; &amp;</type>
      <name>setDepthStencilMode</name>
      <anchorfile>classMagnum_1_1TextureArray.html</anchorfile>
      <anchor>aa9ac4e8636e0e49840b971a1849ac191</anchor>
      <arglist>(Sampler::DepthStencilMode mode)</arglist>
    </member>
    <member kind="function">
      <type>TextureArray&lt; dimensions &gt; &amp;</type>
      <name>setStorage</name>
      <anchorfile>classMagnum_1_1TextureArray.html</anchorfile>
      <anchor>afcaa0aad0d4eeb92398f0a16e5795795</anchor>
      <arglist>(Int levels, TextureFormat internalFormat, const VectorTypeFor&lt; dimensions+1, Int &gt; &amp;size)</arglist>
    </member>
    <member kind="function">
      <type>VectorTypeFor&lt; dimensions+1, Int &gt;</type>
      <name>imageSize</name>
      <anchorfile>classMagnum_1_1TextureArray.html</anchorfile>
      <anchor>ad241ae2347f897a0aa696623204bcf0d</anchor>
      <arglist>(Int level)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>image</name>
      <anchorfile>classMagnum_1_1TextureArray.html</anchorfile>
      <anchor>a0079658d6306daead48b637a307fc8e1</anchor>
      <arglist>(Int level, Image&lt; dimensions+1 &gt; &amp;image)</arglist>
    </member>
    <member kind="function">
      <type>Image&lt; dimensions+1 &gt;</type>
      <name>image</name>
      <anchorfile>classMagnum_1_1TextureArray.html</anchorfile>
      <anchor>a60847a3d214f85531fc4feec57254bcc</anchor>
      <arglist>(Int level, Image&lt; dimensions+1 &gt; &amp;&amp;image)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>image</name>
      <anchorfile>classMagnum_1_1TextureArray.html</anchorfile>
      <anchor>a5e95850e1765e496734b13a3ee6ce9e1</anchor>
      <arglist>(Int level, BufferImage&lt; dimensions+1 &gt; &amp;image, BufferUsage usage)</arglist>
    </member>
    <member kind="function">
      <type>BufferImage&lt; dimensions+1 &gt;</type>
      <name>image</name>
      <anchorfile>classMagnum_1_1TextureArray.html</anchorfile>
      <anchor>a68e000fde4b09eb9468b7049cd578eb3</anchor>
      <arglist>(Int level, BufferImage&lt; dimensions+1 &gt; &amp;&amp;image, BufferUsage usage)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>compressedImage</name>
      <anchorfile>classMagnum_1_1TextureArray.html</anchorfile>
      <anchor>a144ac133dafdc7a8b73e6ce43ce36a5a</anchor>
      <arglist>(Int level, CompressedImage&lt; dimensions+1 &gt; &amp;image)</arglist>
    </member>
    <member kind="function">
      <type>CompressedImage&lt; dimensions+1 &gt;</type>
      <name>compressedImage</name>
      <anchorfile>classMagnum_1_1TextureArray.html</anchorfile>
      <anchor>a63811bee13e238b1afba755ca4330a61</anchor>
      <arglist>(Int level, CompressedImage&lt; dimensions+1 &gt; &amp;&amp;image)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>compressedImage</name>
      <anchorfile>classMagnum_1_1TextureArray.html</anchorfile>
      <anchor>ab0b56220253791f8c050c342d882674a</anchor>
      <arglist>(Int level, CompressedBufferImage&lt; dimensions+1 &gt; &amp;image, BufferUsage usage)</arglist>
    </member>
    <member kind="function">
      <type>CompressedBufferImage&lt; dimensions+1 &gt;</type>
      <name>compressedImage</name>
      <anchorfile>classMagnum_1_1TextureArray.html</anchorfile>
      <anchor>a852a252e6c609869ddc13616ad60c6cc</anchor>
      <arglist>(Int level, CompressedBufferImage&lt; dimensions+1 &gt; &amp;&amp;image, BufferUsage usage)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>subImage</name>
      <anchorfile>classMagnum_1_1TextureArray.html</anchorfile>
      <anchor>ac9eabc0c8ec238cc3154319e99def054</anchor>
      <arglist>(Int level, const RangeTypeFor&lt; dimensions+1, Int &gt; &amp;range, Image&lt; dimensions+1 &gt; &amp;image)</arglist>
    </member>
    <member kind="function">
      <type>Image&lt; dimensions+1 &gt;</type>
      <name>subImage</name>
      <anchorfile>classMagnum_1_1TextureArray.html</anchorfile>
      <anchor>a73eaafeacb5e7e480272559dc1e88b42</anchor>
      <arglist>(Int level, const RangeTypeFor&lt; dimensions+1, Int &gt; &amp;range, Image&lt; dimensions+1 &gt; &amp;&amp;image)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>subImage</name>
      <anchorfile>classMagnum_1_1TextureArray.html</anchorfile>
      <anchor>a9a8e9eaa1f20cd28860a4cf99778e6f3</anchor>
      <arglist>(Int level, const RangeTypeFor&lt; dimensions+1, Int &gt; &amp;range, BufferImage&lt; dimensions+1 &gt; &amp;image, BufferUsage usage)</arglist>
    </member>
    <member kind="function">
      <type>BufferImage&lt; dimensions+1 &gt;</type>
      <name>subImage</name>
      <anchorfile>classMagnum_1_1TextureArray.html</anchorfile>
      <anchor>a0ee8e72c649e7c5a372ac5e17da2d7c1</anchor>
      <arglist>(Int level, const RangeTypeFor&lt; dimensions+1, Int &gt; &amp;range, BufferImage&lt; dimensions+1 &gt; &amp;&amp;image, BufferUsage usage)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>compressedSubImage</name>
      <anchorfile>classMagnum_1_1TextureArray.html</anchorfile>
      <anchor>a1286cf7e6f8c8c6c64574dd9574afa84</anchor>
      <arglist>(Int level, const RangeTypeFor&lt; dimensions+1, Int &gt; &amp;range, CompressedImage&lt; dimensions+1 &gt; &amp;image)</arglist>
    </member>
    <member kind="function">
      <type>CompressedImage&lt; dimensions+1 &gt;</type>
      <name>compressedSubImage</name>
      <anchorfile>classMagnum_1_1TextureArray.html</anchorfile>
      <anchor>a3a16aa11f17f751f114a68f046049479</anchor>
      <arglist>(Int level, const RangeTypeFor&lt; dimensions+1, Int &gt; &amp;range, CompressedImage&lt; dimensions+1 &gt; &amp;&amp;image)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>compressedSubImage</name>
      <anchorfile>classMagnum_1_1TextureArray.html</anchorfile>
      <anchor>a0611dfbaff2fd02b4fc3c4c3d92c4b58</anchor>
      <arglist>(Int level, const RangeTypeFor&lt; dimensions+1, Int &gt; &amp;range, CompressedBufferImage&lt; dimensions+1 &gt; &amp;image, BufferUsage usage)</arglist>
    </member>
    <member kind="function">
      <type>CompressedBufferImage&lt; dimensions+1 &gt;</type>
      <name>compressedSubImage</name>
      <anchorfile>classMagnum_1_1TextureArray.html</anchorfile>
      <anchor>a91c71649eaa459f979872aa39d8c7345</anchor>
      <arglist>(Int level, const RangeTypeFor&lt; dimensions+1, Int &gt; &amp;range, CompressedBufferImage&lt; dimensions+1 &gt; &amp;&amp;image, BufferUsage usage)</arglist>
    </member>
    <member kind="function">
      <type>TextureArray&lt; dimensions &gt; &amp;</type>
      <name>setImage</name>
      <anchorfile>classMagnum_1_1TextureArray.html</anchorfile>
      <anchor>afef87fcd36748365236e747c14519f11</anchor>
      <arglist>(Int level, TextureFormat internalFormat, const ImageView&lt; dimensions+1 &gt; &amp;image)</arglist>
    </member>
    <member kind="function">
      <type>TextureArray&lt; dimensions &gt; &amp;</type>
      <name>setImage</name>
      <anchorfile>classMagnum_1_1TextureArray.html</anchorfile>
      <anchor>ab99b0680b065a58a54eb11f9975b19a2</anchor>
      <arglist>(Int level, TextureFormat internalFormat, BufferImage&lt; dimensions+1 &gt; &amp;image)</arglist>
    </member>
    <member kind="function">
      <type>TextureArray&lt; dimensions &gt; &amp;</type>
      <name>setImage</name>
      <anchorfile>classMagnum_1_1TextureArray.html</anchorfile>
      <anchor>a50e2eecbd45baf95dc80d91aaf7715ed</anchor>
      <arglist>(Int level, TextureFormat internalFormat, BufferImage&lt; dimensions+1 &gt; &amp;&amp;image)</arglist>
    </member>
    <member kind="function">
      <type>TextureArray&lt; dimensions &gt; &amp;</type>
      <name>setCompressedImage</name>
      <anchorfile>classMagnum_1_1TextureArray.html</anchorfile>
      <anchor>a766887cb12cff00b69bebe71440de311</anchor>
      <arglist>(Int level, const CompressedImageView&lt; dimensions+1 &gt; &amp;image)</arglist>
    </member>
    <member kind="function">
      <type>TextureArray&lt; dimensions &gt; &amp;</type>
      <name>setCompressedImage</name>
      <anchorfile>classMagnum_1_1TextureArray.html</anchorfile>
      <anchor>a258cf42e0640e36b2ef6f567f003a2d0</anchor>
      <arglist>(Int level, CompressedBufferImage&lt; dimensions+1 &gt; &amp;image)</arglist>
    </member>
    <member kind="function">
      <type>TextureArray&lt; dimensions &gt; &amp;</type>
      <name>setCompressedImage</name>
      <anchorfile>classMagnum_1_1TextureArray.html</anchorfile>
      <anchor>a94de46b7b4a1c0e7472f1314804bfe8c</anchor>
      <arglist>(Int level, CompressedBufferImage&lt; dimensions+1 &gt; &amp;&amp;image)</arglist>
    </member>
    <member kind="function">
      <type>TextureArray&lt; dimensions &gt; &amp;</type>
      <name>setSubImage</name>
      <anchorfile>classMagnum_1_1TextureArray.html</anchorfile>
      <anchor>a7dc3562ea7515e5b343e0a2083402289</anchor>
      <arglist>(Int level, const VectorTypeFor&lt; dimensions+1, Int &gt; &amp;offset, const ImageView&lt; dimensions+1 &gt; &amp;image)</arglist>
    </member>
    <member kind="function">
      <type>TextureArray&lt; dimensions &gt; &amp;</type>
      <name>setSubImage</name>
      <anchorfile>classMagnum_1_1TextureArray.html</anchorfile>
      <anchor>a978af436a442ca29219da0b5baad96e1</anchor>
      <arglist>(Int level, const VectorTypeFor&lt; dimensions+1, Int &gt; &amp;offset, BufferImage&lt; dimensions+1 &gt; &amp;image)</arglist>
    </member>
    <member kind="function">
      <type>TextureArray&lt; dimensions &gt; &amp;</type>
      <name>setSubImage</name>
      <anchorfile>classMagnum_1_1TextureArray.html</anchorfile>
      <anchor>a5fea7dd4b3724aa59b13e602dd60bb88</anchor>
      <arglist>(Int level, const VectorTypeFor&lt; dimensions+1, Int &gt; &amp;offset, BufferImage&lt; dimensions+1 &gt; &amp;&amp;image)</arglist>
    </member>
    <member kind="function">
      <type>TextureArray&lt; dimensions &gt; &amp;</type>
      <name>setCompressedSubImage</name>
      <anchorfile>classMagnum_1_1TextureArray.html</anchorfile>
      <anchor>abd04b2dd6d3c19ec3e7fe1ee27eebafa</anchor>
      <arglist>(Int level, const VectorTypeFor&lt; dimensions+1, Int &gt; &amp;offset, const CompressedImageView&lt; dimensions+1 &gt; &amp;image)</arglist>
    </member>
    <member kind="function">
      <type>TextureArray&lt; dimensions &gt; &amp;</type>
      <name>setCompressedSubImage</name>
      <anchorfile>classMagnum_1_1TextureArray.html</anchorfile>
      <anchor>af658dbf26a4ad84621f461020feb9664</anchor>
      <arglist>(Int level, const VectorTypeFor&lt; dimensions+1, Int &gt; &amp;offset, CompressedBufferImage&lt; dimensions+1 &gt; &amp;image)</arglist>
    </member>
    <member kind="function">
      <type>TextureArray&lt; dimensions &gt; &amp;</type>
      <name>setCompressedSubImage</name>
      <anchorfile>classMagnum_1_1TextureArray.html</anchorfile>
      <anchor>a09937d5c557cbe3f4f9790120192bb4f</anchor>
      <arglist>(Int level, const VectorTypeFor&lt; dimensions+1, Int &gt; &amp;offset, CompressedBufferImage&lt; dimensions+1 &gt; &amp;&amp;image)</arglist>
    </member>
    <member kind="function">
      <type>TextureArray&lt; dimensions &gt; &amp;</type>
      <name>generateMipmap</name>
      <anchorfile>classMagnum_1_1TextureArray.html</anchorfile>
      <anchor>a3f311b0efc0ed8b410240e7a31b0732f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>invalidateImage</name>
      <anchorfile>classMagnum_1_1TextureArray.html</anchorfile>
      <anchor>a7daede731f00f2da1d8d49ea2428c950</anchor>
      <arglist>(Int level)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>invalidateSubImage</name>
      <anchorfile>classMagnum_1_1TextureArray.html</anchorfile>
      <anchor>a91b63ed49d2a8f615e9f90251e117389</anchor>
      <arglist>(Int level, const VectorTypeFor&lt; dimensions+1, Int &gt; &amp;offset, const VectorTypeFor&lt; dimensions+1, Int &gt; &amp;size)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static VectorTypeFor&lt; dimensions+1, Int &gt;</type>
      <name>maxSize</name>
      <anchorfile>classMagnum_1_1TextureArray.html</anchorfile>
      <anchor>abc46f58a985cd7dce00f8fcb9de42576</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static VectorTypeFor&lt; dimensions, Int &gt;</type>
      <name>compressedBlockSize</name>
      <anchorfile>classMagnum_1_1TextureArray.html</anchorfile>
      <anchor>af695d435a8a9dc16693eb35d1f309fed</anchor>
      <arglist>(TextureFormat format)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Int</type>
      <name>compressedBlockDataSize</name>
      <anchorfile>classMagnum_1_1TextureArray.html</anchorfile>
      <anchor>ab2e14949f66a2b0bd63df8bff7b42625</anchor>
      <arglist>(TextureFormat format)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static TextureArray&lt; dimensions &gt;</type>
      <name>wrap</name>
      <anchorfile>classMagnum_1_1TextureArray.html</anchorfile>
      <anchor>a95768ca896d41295503cbcd4d804ee78</anchor>
      <arglist>(GLuint id, ObjectFlags flags={})</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Magnum::Timeline</name>
    <filename>classMagnum_1_1Timeline.html</filename>
    <member kind="function">
      <type></type>
      <name>Timeline</name>
      <anchorfile>classMagnum_1_1Timeline.html</anchorfile>
      <anchor>a3bf7cbdf0cd05d4c3e8b5843ed56aee9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Float</type>
      <name>minimalFrameTime</name>
      <anchorfile>classMagnum_1_1Timeline.html</anchorfile>
      <anchor>a00ca22aa1453e4a50242d7a6dbedc5ca</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Timeline &amp;</type>
      <name>setMinimalFrameTime</name>
      <anchorfile>classMagnum_1_1Timeline.html</anchorfile>
      <anchor>aff7fce414b3a4c4386120eb9e096464a</anchor>
      <arglist>(Float seconds)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>start</name>
      <anchorfile>classMagnum_1_1Timeline.html</anchorfile>
      <anchor>afcc3ceba48912fdce2449d92a1e3b921</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>stop</name>
      <anchorfile>classMagnum_1_1Timeline.html</anchorfile>
      <anchor>a237bd6c9d3e560c707201b843053b262</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>nextFrame</name>
      <anchorfile>classMagnum_1_1Timeline.html</anchorfile>
      <anchor>a1bf94298dde4d5831aaf8ccd8e95d2a3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Float</type>
      <name>previousFrameTime</name>
      <anchorfile>classMagnum_1_1Timeline.html</anchorfile>
      <anchor>a766176a22fc021fca65f0db617fcdf0f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Float</type>
      <name>previousFrameDuration</name>
      <anchorfile>classMagnum_1_1Timeline.html</anchorfile>
      <anchor>a50206c9347ed2af5babf34fb1cf2d1f9</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Magnum::TimeQuery</name>
    <filename>classMagnum_1_1TimeQuery.html</filename>
    <base>Magnum::AbstractQuery</base>
    <member kind="enumeration">
      <type></type>
      <name>Target</name>
      <anchorfile>classMagnum_1_1TimeQuery.html</anchorfile>
      <anchor>a7437edfabfdf61722a0aa45419c5138a</anchor>
      <arglist></arglist>
      <enumvalue file="classMagnum_1_1TimeQuery.html" anchor="a7437edfabfdf61722a0aa45419c5138aabf99cf7e56562e0125e9a648597239f8">TimeElapsed</enumvalue>
      <enumvalue file="classMagnum_1_1TimeQuery.html" anchor="a7437edfabfdf61722a0aa45419c5138aaa3d5de3eac8bb00ae86fd1a1005f1500">Timestamp</enumvalue>
    </member>
    <member kind="function">
      <type></type>
      <name>TimeQuery</name>
      <anchorfile>classMagnum_1_1TimeQuery.html</anchorfile>
      <anchor>ad7d3aec55df9f845eb4eb8c29faaaf3c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TimeQuery</name>
      <anchorfile>classMagnum_1_1TimeQuery.html</anchorfile>
      <anchor>a3cb9fd8a965cf0c752b5ea0af973ec76</anchor>
      <arglist>(Target target)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TimeQuery</name>
      <anchorfile>classMagnum_1_1TimeQuery.html</anchorfile>
      <anchor>ae571b01f996df28541ab98584b6821d4</anchor>
      <arglist>(NoCreateT) noexcept</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>timestamp</name>
      <anchorfile>classMagnum_1_1TimeQuery.html</anchorfile>
      <anchor>a0b8723b403a469c774650371218b2d26</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>begin</name>
      <anchorfile>classMagnum_1_1TimeQuery.html</anchorfile>
      <anchor>a7c655d922865112bd3ae78501eaaadf7</anchor>
      <arglist>(Target target)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>begin</name>
      <anchorfile>classMagnum_1_1TimeQuery.html</anchorfile>
      <anchor>aed5cc4a7b22bd473e30f03666f58e8e3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static TimeQuery</type>
      <name>wrap</name>
      <anchorfile>classMagnum_1_1TimeQuery.html</anchorfile>
      <anchor>abad27ea4ca2fd6c870b5e32a04482d6d</anchor>
      <arglist>(GLuint id, Target target, ObjectFlags flags={})</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Magnum::Trade::AbstractImageConverter</name>
    <filename>classMagnum_1_1Trade_1_1AbstractImageConverter.html</filename>
    <base>AbstractManagingPlugin&lt; AbstractImageConverter &gt;</base>
    <member kind="enumeration">
      <type></type>
      <name>Feature</name>
      <anchorfile>classMagnum_1_1Trade_1_1AbstractImageConverter.html</anchorfile>
      <anchor>a377661be4f6a62d73821d65b8d5639ca</anchor>
      <arglist></arglist>
      <enumvalue file="classMagnum_1_1Trade_1_1AbstractImageConverter.html" anchor="a377661be4f6a62d73821d65b8d5639caaa80d02dad65b0cfc4a0058eb485ef56c">ConvertImage</enumvalue>
      <enumvalue file="classMagnum_1_1Trade_1_1AbstractImageConverter.html" anchor="a377661be4f6a62d73821d65b8d5639caa07014ae9269d95a43b744e180f0c6a74">ConvertCompressedImage</enumvalue>
      <enumvalue file="classMagnum_1_1Trade_1_1AbstractImageConverter.html" anchor="a377661be4f6a62d73821d65b8d5639caab6b304ffe386aa1ab926467f7e882cb2">ConvertFile</enumvalue>
      <enumvalue file="classMagnum_1_1Trade_1_1AbstractImageConverter.html" anchor="a377661be4f6a62d73821d65b8d5639caa0a80552a23eb22423e8099c94942ce31">ConvertCompressedFile</enumvalue>
      <enumvalue file="classMagnum_1_1Trade_1_1AbstractImageConverter.html" anchor="a377661be4f6a62d73821d65b8d5639caa641cdf6d783d9420d071be06b0307937">ConvertData</enumvalue>
      <enumvalue file="classMagnum_1_1Trade_1_1AbstractImageConverter.html" anchor="a377661be4f6a62d73821d65b8d5639caa8729fd26dea434864513769bf5710edf">ConvertCompressedData</enumvalue>
    </member>
    <member kind="typedef">
      <type>Containers::EnumSet&lt; Feature &gt;</type>
      <name>Features</name>
      <anchorfile>classMagnum_1_1Trade_1_1AbstractImageConverter.html</anchorfile>
      <anchor>a01e32895d7477a075b40f79592ced4f3</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AbstractImageConverter</name>
      <anchorfile>classMagnum_1_1Trade_1_1AbstractImageConverter.html</anchorfile>
      <anchor>aef1408d1f2010dd849b2b8780f4cef28</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AbstractImageConverter</name>
      <anchorfile>classMagnum_1_1Trade_1_1AbstractImageConverter.html</anchorfile>
      <anchor>a54313fd70fa61bf67e1f8a3c0a881afe</anchor>
      <arglist>(PluginManager::Manager&lt; AbstractImageConverter &gt; &amp;manager)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AbstractImageConverter</name>
      <anchorfile>classMagnum_1_1Trade_1_1AbstractImageConverter.html</anchorfile>
      <anchor>ac4eb779548d05236102f47e64459c3da</anchor>
      <arglist>(PluginManager::AbstractManager &amp;manager, const std::string &amp;plugin)</arglist>
    </member>
    <member kind="function">
      <type>Features</type>
      <name>features</name>
      <anchorfile>classMagnum_1_1Trade_1_1AbstractImageConverter.html</anchorfile>
      <anchor>afd951c26043ae9d15c6565e6c9eaf6ee</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>std::optional&lt; Image2D &gt;</type>
      <name>exportToImage</name>
      <anchorfile>classMagnum_1_1Trade_1_1AbstractImageConverter.html</anchorfile>
      <anchor>a2db70ad43684c3a738e27a61b52936bc</anchor>
      <arglist>(const ImageView2D &amp;image)</arglist>
    </member>
    <member kind="function">
      <type>std::optional&lt; CompressedImage2D &gt;</type>
      <name>exportToCompressedImage</name>
      <anchorfile>classMagnum_1_1Trade_1_1AbstractImageConverter.html</anchorfile>
      <anchor>af330495dd83347f5e05ec86d9bd42d77</anchor>
      <arglist>(const ImageView2D &amp;image)</arglist>
    </member>
    <member kind="function">
      <type>Containers::Array&lt; char &gt;</type>
      <name>exportToData</name>
      <anchorfile>classMagnum_1_1Trade_1_1AbstractImageConverter.html</anchorfile>
      <anchor>a9509b51ef2b7a51d2d8e593c31016a38</anchor>
      <arglist>(const ImageView2D &amp;image)</arglist>
    </member>
    <member kind="function">
      <type>Containers::Array&lt; char &gt;</type>
      <name>exportToData</name>
      <anchorfile>classMagnum_1_1Trade_1_1AbstractImageConverter.html</anchorfile>
      <anchor>a208b22ab0b0c370446d993eeb6ded7e2</anchor>
      <arglist>(const CompressedImageView2D &amp;image)</arglist>
    </member>
    <member kind="function">
      <type>Containers::Array&lt; char &gt;</type>
      <name>exportToData</name>
      <anchorfile>classMagnum_1_1Trade_1_1AbstractImageConverter.html</anchorfile>
      <anchor>aae3555a40efa5ee77ef1165735c999b1</anchor>
      <arglist>(const ImageData2D &amp;image)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>exportToFile</name>
      <anchorfile>classMagnum_1_1Trade_1_1AbstractImageConverter.html</anchorfile>
      <anchor>afac254b7125157dc2918d5c923d39ba2</anchor>
      <arglist>(const ImageView2D &amp;image, const std::string &amp;filename)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>exportToFile</name>
      <anchorfile>classMagnum_1_1Trade_1_1AbstractImageConverter.html</anchorfile>
      <anchor>aeabea6dbcd5878f60a5eee9d5ee65314</anchor>
      <arglist>(const CompressedImageView2D &amp;image, const std::string &amp;filename)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>exportToFile</name>
      <anchorfile>classMagnum_1_1Trade_1_1AbstractImageConverter.html</anchorfile>
      <anchor>aa99625b1c31b988375d7988ec8769920</anchor>
      <arglist>(const ImageData2D &amp;image, const std::string &amp;filename)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual Features</type>
      <name>doFeatures</name>
      <anchorfile>classMagnum_1_1Trade_1_1AbstractImageConverter.html</anchorfile>
      <anchor>aa4d1ad1f64271239a0af9dac9b9df48d</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual std::optional&lt; Image2D &gt;</type>
      <name>doExportToImage</name>
      <anchorfile>classMagnum_1_1Trade_1_1AbstractImageConverter.html</anchorfile>
      <anchor>a1acb9d1262308fdd3e4965b048dcd033</anchor>
      <arglist>(const ImageView2D &amp;image)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual std::optional&lt; CompressedImage2D &gt;</type>
      <name>doExportToCompressedImage</name>
      <anchorfile>classMagnum_1_1Trade_1_1AbstractImageConverter.html</anchorfile>
      <anchor>a3fd00724fd2a59f55efa3663251eb689</anchor>
      <arglist>(const ImageView2D &amp;image)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual Containers::Array&lt; char &gt;</type>
      <name>doExportToData</name>
      <anchorfile>classMagnum_1_1Trade_1_1AbstractImageConverter.html</anchorfile>
      <anchor>af52cdbeb8a3b9747fea87118a95b91fd</anchor>
      <arglist>(const ImageView2D &amp;image)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual Containers::Array&lt; char &gt;</type>
      <name>doExportToData</name>
      <anchorfile>classMagnum_1_1Trade_1_1AbstractImageConverter.html</anchorfile>
      <anchor>a05e6cf49dbb33a3fd491cea04d15d84c</anchor>
      <arglist>(const CompressedImageView2D &amp;image)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual bool</type>
      <name>doExportToFile</name>
      <anchorfile>classMagnum_1_1Trade_1_1AbstractImageConverter.html</anchorfile>
      <anchor>a269ee4af8cd107083834c3ba6f47a22d</anchor>
      <arglist>(const ImageView2D &amp;image, const std::string &amp;filename)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual bool</type>
      <name>doExportToFile</name>
      <anchorfile>classMagnum_1_1Trade_1_1AbstractImageConverter.html</anchorfile>
      <anchor>a4f290b4c0c3e0dbf180ed577f88a5153</anchor>
      <arglist>(const CompressedImageView2D &amp;image, const std::string &amp;filename)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Magnum::Trade::AbstractImporter</name>
    <filename>classMagnum_1_1Trade_1_1AbstractImporter.html</filename>
    <base>AbstractManagingPlugin&lt; AbstractImporter &gt;</base>
    <member kind="enumeration">
      <type></type>
      <name>Feature</name>
      <anchorfile>classMagnum_1_1Trade_1_1AbstractImporter.html</anchorfile>
      <anchor>ae3781a6c337f96f6d1f6c3168f726e13</anchor>
      <arglist></arglist>
      <enumvalue file="classMagnum_1_1Trade_1_1AbstractImporter.html" anchor="ae3781a6c337f96f6d1f6c3168f726e13ad81dcb96c7ab3ee3608397d0b0a9071c">OpenData</enumvalue>
    </member>
    <member kind="typedef">
      <type>Containers::EnumSet&lt; Feature &gt;</type>
      <name>Features</name>
      <anchorfile>classMagnum_1_1Trade_1_1AbstractImporter.html</anchorfile>
      <anchor>a2b30b5cea8a26ab12397d03751318629</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AbstractImporter</name>
      <anchorfile>classMagnum_1_1Trade_1_1AbstractImporter.html</anchorfile>
      <anchor>a6f1cd574bc7f48cd6537660630ee0042</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AbstractImporter</name>
      <anchorfile>classMagnum_1_1Trade_1_1AbstractImporter.html</anchorfile>
      <anchor>a24660089734a8c0c2eca55125e09fd80</anchor>
      <arglist>(PluginManager::Manager&lt; AbstractImporter &gt; &amp;manager)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AbstractImporter</name>
      <anchorfile>classMagnum_1_1Trade_1_1AbstractImporter.html</anchorfile>
      <anchor>a9694fda2c05a05ddb88c8afd515acbfb</anchor>
      <arglist>(PluginManager::AbstractManager &amp;manager, const std::string &amp;plugin)</arglist>
    </member>
    <member kind="function">
      <type>Features</type>
      <name>features</name>
      <anchorfile>classMagnum_1_1Trade_1_1AbstractImporter.html</anchorfile>
      <anchor>a7fa7b534746d5f56a36202f8b6f4a2a0</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isOpened</name>
      <anchorfile>classMagnum_1_1Trade_1_1AbstractImporter.html</anchorfile>
      <anchor>a316af439c18492a2f141eaec8cab389f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>openData</name>
      <anchorfile>classMagnum_1_1Trade_1_1AbstractImporter.html</anchorfile>
      <anchor>a88703d241d03b605112b2163778529b2</anchor>
      <arglist>(Containers::ArrayView&lt; const char &gt; data)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>openFile</name>
      <anchorfile>classMagnum_1_1Trade_1_1AbstractImporter.html</anchorfile>
      <anchor>a13c18ef288f97d163263f6834bc17b4b</anchor>
      <arglist>(const std::string &amp;filename)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>close</name>
      <anchorfile>classMagnum_1_1Trade_1_1AbstractImporter.html</anchorfile>
      <anchor>a31de60885596530f6be14ee900fb87a6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const void *</type>
      <name>importerState</name>
      <anchorfile>classMagnum_1_1Trade_1_1AbstractImporter.html</anchorfile>
      <anchor>ab6c178d72f492c10f9d5e2d37166c740</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Int</type>
      <name>defaultScene</name>
      <anchorfile>classMagnum_1_1Trade_1_1AbstractImporter.html</anchorfile>
      <anchor>a653a979d687f7383fa5dce3ee42b3353</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>UnsignedInt</type>
      <name>sceneCount</name>
      <anchorfile>classMagnum_1_1Trade_1_1AbstractImporter.html</anchorfile>
      <anchor>aef67799d18bb94e99b4ae76a1423944f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Int</type>
      <name>sceneForName</name>
      <anchorfile>classMagnum_1_1Trade_1_1AbstractImporter.html</anchorfile>
      <anchor>a05b01b95340f8b6697e303796a752fe2</anchor>
      <arglist>(const std::string &amp;name)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>sceneName</name>
      <anchorfile>classMagnum_1_1Trade_1_1AbstractImporter.html</anchorfile>
      <anchor>a5163471e0eb7a7a0d7b58b637b8803cb</anchor>
      <arglist>(UnsignedInt id)</arglist>
    </member>
    <member kind="function">
      <type>std::optional&lt; SceneData &gt;</type>
      <name>scene</name>
      <anchorfile>classMagnum_1_1Trade_1_1AbstractImporter.html</anchorfile>
      <anchor>a57d95a36dc487003a70d7da046186d9f</anchor>
      <arglist>(UnsignedInt id)</arglist>
    </member>
    <member kind="function">
      <type>UnsignedInt</type>
      <name>lightCount</name>
      <anchorfile>classMagnum_1_1Trade_1_1AbstractImporter.html</anchorfile>
      <anchor>a329c014578728390016a4501bd7ffe8a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Int</type>
      <name>lightForName</name>
      <anchorfile>classMagnum_1_1Trade_1_1AbstractImporter.html</anchorfile>
      <anchor>aee85a06de41c36b2e2077ca3783cf77d</anchor>
      <arglist>(const std::string &amp;name)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>lightName</name>
      <anchorfile>classMagnum_1_1Trade_1_1AbstractImporter.html</anchorfile>
      <anchor>a6cf4edf30d1c73b590e9336ac1c69778</anchor>
      <arglist>(UnsignedInt id)</arglist>
    </member>
    <member kind="function">
      <type>std::optional&lt; LightData &gt;</type>
      <name>light</name>
      <anchorfile>classMagnum_1_1Trade_1_1AbstractImporter.html</anchorfile>
      <anchor>a6328232ce6e54f5473d03e15ee292cc2</anchor>
      <arglist>(UnsignedInt id)</arglist>
    </member>
    <member kind="function">
      <type>UnsignedInt</type>
      <name>cameraCount</name>
      <anchorfile>classMagnum_1_1Trade_1_1AbstractImporter.html</anchorfile>
      <anchor>ab1780ce1b9cb36d7258539127cd08bae</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Int</type>
      <name>cameraForName</name>
      <anchorfile>classMagnum_1_1Trade_1_1AbstractImporter.html</anchorfile>
      <anchor>a16b03a15550b3dcc83631b23231ac547</anchor>
      <arglist>(const std::string &amp;name)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>cameraName</name>
      <anchorfile>classMagnum_1_1Trade_1_1AbstractImporter.html</anchorfile>
      <anchor>a6bf0cbab98c07cca5773d6263836e683</anchor>
      <arglist>(UnsignedInt id)</arglist>
    </member>
    <member kind="function">
      <type>std::optional&lt; CameraData &gt;</type>
      <name>camera</name>
      <anchorfile>classMagnum_1_1Trade_1_1AbstractImporter.html</anchorfile>
      <anchor>a4fe89dcd42ced8146cbf42947444f935</anchor>
      <arglist>(UnsignedInt id)</arglist>
    </member>
    <member kind="function">
      <type>UnsignedInt</type>
      <name>object2DCount</name>
      <anchorfile>classMagnum_1_1Trade_1_1AbstractImporter.html</anchorfile>
      <anchor>aff6798ecf61883d5648a2880cd64dea2</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Int</type>
      <name>object2DForName</name>
      <anchorfile>classMagnum_1_1Trade_1_1AbstractImporter.html</anchorfile>
      <anchor>a85d8d1d3f3dd07bb56f8edd765d7662e</anchor>
      <arglist>(const std::string &amp;name)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>object2DName</name>
      <anchorfile>classMagnum_1_1Trade_1_1AbstractImporter.html</anchorfile>
      <anchor>af43d3e700399c50e61deafa544c3ddf7</anchor>
      <arglist>(UnsignedInt id)</arglist>
    </member>
    <member kind="function">
      <type>std::unique_ptr&lt; ObjectData2D &gt;</type>
      <name>object2D</name>
      <anchorfile>classMagnum_1_1Trade_1_1AbstractImporter.html</anchorfile>
      <anchor>a6569e2f48521188d8d73185ef921fca2</anchor>
      <arglist>(UnsignedInt id)</arglist>
    </member>
    <member kind="function">
      <type>UnsignedInt</type>
      <name>object3DCount</name>
      <anchorfile>classMagnum_1_1Trade_1_1AbstractImporter.html</anchorfile>
      <anchor>ad319747ea9854f465ce0608056947c5e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Int</type>
      <name>object3DForName</name>
      <anchorfile>classMagnum_1_1Trade_1_1AbstractImporter.html</anchorfile>
      <anchor>a1b4342605e35f58fbc21ddebcb4354c8</anchor>
      <arglist>(const std::string &amp;name)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>object3DName</name>
      <anchorfile>classMagnum_1_1Trade_1_1AbstractImporter.html</anchorfile>
      <anchor>aad66fe7c5fdb7f2df89cc03239850d85</anchor>
      <arglist>(UnsignedInt id)</arglist>
    </member>
    <member kind="function">
      <type>std::unique_ptr&lt; ObjectData3D &gt;</type>
      <name>object3D</name>
      <anchorfile>classMagnum_1_1Trade_1_1AbstractImporter.html</anchorfile>
      <anchor>ab4852d7f7c512406c34523d8614efde0</anchor>
      <arglist>(UnsignedInt id)</arglist>
    </member>
    <member kind="function">
      <type>UnsignedInt</type>
      <name>mesh2DCount</name>
      <anchorfile>classMagnum_1_1Trade_1_1AbstractImporter.html</anchorfile>
      <anchor>acb98279e02bc09f0c30b48aa961ccd47</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Int</type>
      <name>mesh2DForName</name>
      <anchorfile>classMagnum_1_1Trade_1_1AbstractImporter.html</anchorfile>
      <anchor>a1e779e94dcb531c65855b4384ba79501</anchor>
      <arglist>(const std::string &amp;name)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>mesh2DName</name>
      <anchorfile>classMagnum_1_1Trade_1_1AbstractImporter.html</anchorfile>
      <anchor>ac3d401ab3f89c9b5145bdab54bb98a59</anchor>
      <arglist>(UnsignedInt id)</arglist>
    </member>
    <member kind="function">
      <type>std::optional&lt; MeshData2D &gt;</type>
      <name>mesh2D</name>
      <anchorfile>classMagnum_1_1Trade_1_1AbstractImporter.html</anchorfile>
      <anchor>acfdac8fae8156c0efe3f214ddaad82de</anchor>
      <arglist>(UnsignedInt id)</arglist>
    </member>
    <member kind="function">
      <type>UnsignedInt</type>
      <name>mesh3DCount</name>
      <anchorfile>classMagnum_1_1Trade_1_1AbstractImporter.html</anchorfile>
      <anchor>a28cea346b7d5bcdbf7982ebd75b5e418</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Int</type>
      <name>mesh3DForName</name>
      <anchorfile>classMagnum_1_1Trade_1_1AbstractImporter.html</anchorfile>
      <anchor>af658902947f60167c307888bd979ac1e</anchor>
      <arglist>(const std::string &amp;name)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>mesh3DName</name>
      <anchorfile>classMagnum_1_1Trade_1_1AbstractImporter.html</anchorfile>
      <anchor>ab0fb173923f02758d48d6ece12c82fa6</anchor>
      <arglist>(UnsignedInt id)</arglist>
    </member>
    <member kind="function">
      <type>std::optional&lt; MeshData3D &gt;</type>
      <name>mesh3D</name>
      <anchorfile>classMagnum_1_1Trade_1_1AbstractImporter.html</anchorfile>
      <anchor>a8ce1c3e644b92348d1f965f977ad9ad5</anchor>
      <arglist>(UnsignedInt id)</arglist>
    </member>
    <member kind="function">
      <type>UnsignedInt</type>
      <name>materialCount</name>
      <anchorfile>classMagnum_1_1Trade_1_1AbstractImporter.html</anchorfile>
      <anchor>a11d7f7b700d841903e24ef5b96918342</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Int</type>
      <name>materialForName</name>
      <anchorfile>classMagnum_1_1Trade_1_1AbstractImporter.html</anchorfile>
      <anchor>aed2828f58a756382ecfb75b6ab916db7</anchor>
      <arglist>(const std::string &amp;name)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>materialName</name>
      <anchorfile>classMagnum_1_1Trade_1_1AbstractImporter.html</anchorfile>
      <anchor>a8debcd7acf0e5df6442249469b2e9197</anchor>
      <arglist>(UnsignedInt id)</arglist>
    </member>
    <member kind="function">
      <type>std::unique_ptr&lt; AbstractMaterialData &gt;</type>
      <name>material</name>
      <anchorfile>classMagnum_1_1Trade_1_1AbstractImporter.html</anchorfile>
      <anchor>a67467cbd29c8e3a5e37a9c88b0a22fda</anchor>
      <arglist>(UnsignedInt id)</arglist>
    </member>
    <member kind="function">
      <type>UnsignedInt</type>
      <name>textureCount</name>
      <anchorfile>classMagnum_1_1Trade_1_1AbstractImporter.html</anchorfile>
      <anchor>aea6d8cef44413aa20cc3fb2f304b1adc</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Int</type>
      <name>textureForName</name>
      <anchorfile>classMagnum_1_1Trade_1_1AbstractImporter.html</anchorfile>
      <anchor>a407887c17ecafef928ad848909b7fa2f</anchor>
      <arglist>(const std::string &amp;name)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>textureName</name>
      <anchorfile>classMagnum_1_1Trade_1_1AbstractImporter.html</anchorfile>
      <anchor>a8fa21f37de6ed0aff9aca0a94ae97bbb</anchor>
      <arglist>(UnsignedInt id)</arglist>
    </member>
    <member kind="function">
      <type>std::optional&lt; TextureData &gt;</type>
      <name>texture</name>
      <anchorfile>classMagnum_1_1Trade_1_1AbstractImporter.html</anchorfile>
      <anchor>a05e5b6f4827b8774dc30dd67f21dc74f</anchor>
      <arglist>(UnsignedInt id)</arglist>
    </member>
    <member kind="function">
      <type>UnsignedInt</type>
      <name>image1DCount</name>
      <anchorfile>classMagnum_1_1Trade_1_1AbstractImporter.html</anchorfile>
      <anchor>a576b728947a686c74dbb5657712f0028</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Int</type>
      <name>image1DForName</name>
      <anchorfile>classMagnum_1_1Trade_1_1AbstractImporter.html</anchorfile>
      <anchor>a7d6199856991922649280044db3040c7</anchor>
      <arglist>(const std::string &amp;name)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>image1DName</name>
      <anchorfile>classMagnum_1_1Trade_1_1AbstractImporter.html</anchorfile>
      <anchor>a38b5b5ffe562c4b80ccb07f97410a743</anchor>
      <arglist>(UnsignedInt id)</arglist>
    </member>
    <member kind="function">
      <type>std::optional&lt; ImageData1D &gt;</type>
      <name>image1D</name>
      <anchorfile>classMagnum_1_1Trade_1_1AbstractImporter.html</anchorfile>
      <anchor>a313b6a2fcb43b088bb3d4efe9ae835b8</anchor>
      <arglist>(UnsignedInt id)</arglist>
    </member>
    <member kind="function">
      <type>UnsignedInt</type>
      <name>image2DCount</name>
      <anchorfile>classMagnum_1_1Trade_1_1AbstractImporter.html</anchorfile>
      <anchor>a0438bc99568bdd366db74330e69cb118</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Int</type>
      <name>image2DForName</name>
      <anchorfile>classMagnum_1_1Trade_1_1AbstractImporter.html</anchorfile>
      <anchor>a5b5f1abe5ed1207416ff617e15697d78</anchor>
      <arglist>(const std::string &amp;name)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>image2DName</name>
      <anchorfile>classMagnum_1_1Trade_1_1AbstractImporter.html</anchorfile>
      <anchor>aecb2ef7e26275c522c98f54c430f7e49</anchor>
      <arglist>(UnsignedInt id)</arglist>
    </member>
    <member kind="function">
      <type>std::optional&lt; ImageData2D &gt;</type>
      <name>image2D</name>
      <anchorfile>classMagnum_1_1Trade_1_1AbstractImporter.html</anchorfile>
      <anchor>a293d1d079a2119bbb7aa54294635fe93</anchor>
      <arglist>(UnsignedInt id)</arglist>
    </member>
    <member kind="function">
      <type>UnsignedInt</type>
      <name>image3DCount</name>
      <anchorfile>classMagnum_1_1Trade_1_1AbstractImporter.html</anchorfile>
      <anchor>aa73124fc482544926d05489f4791b79c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Int</type>
      <name>image3DForName</name>
      <anchorfile>classMagnum_1_1Trade_1_1AbstractImporter.html</anchorfile>
      <anchor>a52f1c80a3ef341475d1d361caf31ecc7</anchor>
      <arglist>(const std::string &amp;name)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>image3DName</name>
      <anchorfile>classMagnum_1_1Trade_1_1AbstractImporter.html</anchorfile>
      <anchor>a057aa1d46f7c4119293b251fe735e52f</anchor>
      <arglist>(UnsignedInt id)</arglist>
    </member>
    <member kind="function">
      <type>std::optional&lt; ImageData3D &gt;</type>
      <name>image3D</name>
      <anchorfile>classMagnum_1_1Trade_1_1AbstractImporter.html</anchorfile>
      <anchor>af5cf9482677ef9b440821ca30e508ca4</anchor>
      <arglist>(UnsignedInt id)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>doOpenFile</name>
      <anchorfile>classMagnum_1_1Trade_1_1AbstractImporter.html</anchorfile>
      <anchor>a4dc7985f5314efe23066efa95d0cf940</anchor>
      <arglist>(const std::string &amp;filename)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual Features</type>
      <name>doFeatures</name>
      <anchorfile>classMagnum_1_1Trade_1_1AbstractImporter.html</anchorfile>
      <anchor>ac64e50ee8ad17d680cbe33b975b13a30</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual bool</type>
      <name>doIsOpened</name>
      <anchorfile>classMagnum_1_1Trade_1_1AbstractImporter.html</anchorfile>
      <anchor>aad9de18d0dd8acff923371312e846fa8</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>doOpenData</name>
      <anchorfile>classMagnum_1_1Trade_1_1AbstractImporter.html</anchorfile>
      <anchor>a5c5914c94300963627e1369d2a7a30c6</anchor>
      <arglist>(Containers::ArrayView&lt; const char &gt; data)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual void</type>
      <name>doClose</name>
      <anchorfile>classMagnum_1_1Trade_1_1AbstractImporter.html</anchorfile>
      <anchor>af7f93da08028936e6323056d4a74b475</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual Int</type>
      <name>doDefaultScene</name>
      <anchorfile>classMagnum_1_1Trade_1_1AbstractImporter.html</anchorfile>
      <anchor>ae0be906a1b594deb3c543abb65bed8e8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual UnsignedInt</type>
      <name>doSceneCount</name>
      <anchorfile>classMagnum_1_1Trade_1_1AbstractImporter.html</anchorfile>
      <anchor>a2c4c059cb1f19700c6e7f74c501656d7</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual Int</type>
      <name>doSceneForName</name>
      <anchorfile>classMagnum_1_1Trade_1_1AbstractImporter.html</anchorfile>
      <anchor>a600e49599777b0c0d8126faf35dd2b97</anchor>
      <arglist>(const std::string &amp;name)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual std::string</type>
      <name>doSceneName</name>
      <anchorfile>classMagnum_1_1Trade_1_1AbstractImporter.html</anchorfile>
      <anchor>aed12d4c363c8fae868a97ff86199f1e4</anchor>
      <arglist>(UnsignedInt id)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual std::optional&lt; SceneData &gt;</type>
      <name>doScene</name>
      <anchorfile>classMagnum_1_1Trade_1_1AbstractImporter.html</anchorfile>
      <anchor>aa3552fd55b443df62b7d5ecc8e47ca9d</anchor>
      <arglist>(UnsignedInt id)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual UnsignedInt</type>
      <name>doLightCount</name>
      <anchorfile>classMagnum_1_1Trade_1_1AbstractImporter.html</anchorfile>
      <anchor>a20ccee51c0139c5f2a067ba9293122f6</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual Int</type>
      <name>doLightForName</name>
      <anchorfile>classMagnum_1_1Trade_1_1AbstractImporter.html</anchorfile>
      <anchor>ad72342090821047cc32e5cdfdd23b9d1</anchor>
      <arglist>(const std::string &amp;name)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual std::string</type>
      <name>doLightName</name>
      <anchorfile>classMagnum_1_1Trade_1_1AbstractImporter.html</anchorfile>
      <anchor>af4bc51bc48939dea0fe40787b22cecd7</anchor>
      <arglist>(UnsignedInt id)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual std::optional&lt; LightData &gt;</type>
      <name>doLight</name>
      <anchorfile>classMagnum_1_1Trade_1_1AbstractImporter.html</anchorfile>
      <anchor>ad9713c5017cae9521e80144ad186974b</anchor>
      <arglist>(UnsignedInt id)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual UnsignedInt</type>
      <name>doCameraCount</name>
      <anchorfile>classMagnum_1_1Trade_1_1AbstractImporter.html</anchorfile>
      <anchor>accf6d14ec6955aa07da08f405eda9481</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual Int</type>
      <name>doCameraForName</name>
      <anchorfile>classMagnum_1_1Trade_1_1AbstractImporter.html</anchorfile>
      <anchor>ae817145546b12e033725111ce99c38f6</anchor>
      <arglist>(const std::string &amp;name)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual std::string</type>
      <name>doCameraName</name>
      <anchorfile>classMagnum_1_1Trade_1_1AbstractImporter.html</anchorfile>
      <anchor>a767185c9bd0d75eeed8ae6493c1c712d</anchor>
      <arglist>(UnsignedInt id)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual std::optional&lt; CameraData &gt;</type>
      <name>doCamera</name>
      <anchorfile>classMagnum_1_1Trade_1_1AbstractImporter.html</anchorfile>
      <anchor>a192bf3fa80217be3d104f3d99403f6d5</anchor>
      <arglist>(UnsignedInt id)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual UnsignedInt</type>
      <name>doObject2DCount</name>
      <anchorfile>classMagnum_1_1Trade_1_1AbstractImporter.html</anchorfile>
      <anchor>ae72f9503995e26f674244c6abd5ce25e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual Int</type>
      <name>doObject2DForName</name>
      <anchorfile>classMagnum_1_1Trade_1_1AbstractImporter.html</anchorfile>
      <anchor>a5fc98068a0ddc074eb55470902ab2003</anchor>
      <arglist>(const std::string &amp;name)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual std::string</type>
      <name>doObject2DName</name>
      <anchorfile>classMagnum_1_1Trade_1_1AbstractImporter.html</anchorfile>
      <anchor>a0dbc9bdcf29844cd6aa841d44d32446a</anchor>
      <arglist>(UnsignedInt id)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual std::unique_ptr&lt; ObjectData2D &gt;</type>
      <name>doObject2D</name>
      <anchorfile>classMagnum_1_1Trade_1_1AbstractImporter.html</anchorfile>
      <anchor>a22f16dd82ae6331df67d6c231ccbe5a9</anchor>
      <arglist>(UnsignedInt id)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual UnsignedInt</type>
      <name>doObject3DCount</name>
      <anchorfile>classMagnum_1_1Trade_1_1AbstractImporter.html</anchorfile>
      <anchor>a73b79006a190b5abbce70a7ea25ce2bc</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual Int</type>
      <name>doObject3DForName</name>
      <anchorfile>classMagnum_1_1Trade_1_1AbstractImporter.html</anchorfile>
      <anchor>a4f67c17da866f07cabc0571766d5a3ba</anchor>
      <arglist>(const std::string &amp;name)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual std::string</type>
      <name>doObject3DName</name>
      <anchorfile>classMagnum_1_1Trade_1_1AbstractImporter.html</anchorfile>
      <anchor>a16d54b2c25bd99ffb42dba28c8c02ad8</anchor>
      <arglist>(UnsignedInt id)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual std::unique_ptr&lt; ObjectData3D &gt;</type>
      <name>doObject3D</name>
      <anchorfile>classMagnum_1_1Trade_1_1AbstractImporter.html</anchorfile>
      <anchor>aa1ccb3e1dc9c8aa6b795b2e0bd063507</anchor>
      <arglist>(UnsignedInt id)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual UnsignedInt</type>
      <name>doMesh2DCount</name>
      <anchorfile>classMagnum_1_1Trade_1_1AbstractImporter.html</anchorfile>
      <anchor>a110c8cb3c2acb635f3684d416a03f50d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual Int</type>
      <name>doMesh2DForName</name>
      <anchorfile>classMagnum_1_1Trade_1_1AbstractImporter.html</anchorfile>
      <anchor>a47eb6e7e6ff1c64a5bd2317b3ca6bc4a</anchor>
      <arglist>(const std::string &amp;name)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual std::string</type>
      <name>doMesh2DName</name>
      <anchorfile>classMagnum_1_1Trade_1_1AbstractImporter.html</anchorfile>
      <anchor>aec24758acb34a524839dab0b4f0f033f</anchor>
      <arglist>(UnsignedInt id)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual std::optional&lt; MeshData2D &gt;</type>
      <name>doMesh2D</name>
      <anchorfile>classMagnum_1_1Trade_1_1AbstractImporter.html</anchorfile>
      <anchor>abaf5e4d6045008c76438bc33242bd705</anchor>
      <arglist>(UnsignedInt id)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual UnsignedInt</type>
      <name>doMesh3DCount</name>
      <anchorfile>classMagnum_1_1Trade_1_1AbstractImporter.html</anchorfile>
      <anchor>a30863744b17ca817332c77c464e014a5</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual Int</type>
      <name>doMesh3DForName</name>
      <anchorfile>classMagnum_1_1Trade_1_1AbstractImporter.html</anchorfile>
      <anchor>a72558f96ceb8a82dc487cbb581e10ed0</anchor>
      <arglist>(const std::string &amp;name)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual std::string</type>
      <name>doMesh3DName</name>
      <anchorfile>classMagnum_1_1Trade_1_1AbstractImporter.html</anchorfile>
      <anchor>a7b07da8ad9c2cff3b7124e91fa56eba0</anchor>
      <arglist>(UnsignedInt id)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual std::optional&lt; MeshData3D &gt;</type>
      <name>doMesh3D</name>
      <anchorfile>classMagnum_1_1Trade_1_1AbstractImporter.html</anchorfile>
      <anchor>ad71c04d459d5945712d42859d0345c4b</anchor>
      <arglist>(UnsignedInt id)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual UnsignedInt</type>
      <name>doMaterialCount</name>
      <anchorfile>classMagnum_1_1Trade_1_1AbstractImporter.html</anchorfile>
      <anchor>abbb028749aaedf53699fd6c4b418f0bf</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual Int</type>
      <name>doMaterialForName</name>
      <anchorfile>classMagnum_1_1Trade_1_1AbstractImporter.html</anchorfile>
      <anchor>a38b0f2e43e530a99aad015f072c06be3</anchor>
      <arglist>(const std::string &amp;name)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual std::string</type>
      <name>doMaterialName</name>
      <anchorfile>classMagnum_1_1Trade_1_1AbstractImporter.html</anchorfile>
      <anchor>a234b39cccffbd3f975abdadb91c030fe</anchor>
      <arglist>(UnsignedInt id)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual std::unique_ptr&lt; AbstractMaterialData &gt;</type>
      <name>doMaterial</name>
      <anchorfile>classMagnum_1_1Trade_1_1AbstractImporter.html</anchorfile>
      <anchor>a733adb6105f583bca96a36bd91cc8630</anchor>
      <arglist>(UnsignedInt id)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual UnsignedInt</type>
      <name>doTextureCount</name>
      <anchorfile>classMagnum_1_1Trade_1_1AbstractImporter.html</anchorfile>
      <anchor>a20f096ab1a3dfd76db6b7a1c9bc44c0c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual Int</type>
      <name>doTextureForName</name>
      <anchorfile>classMagnum_1_1Trade_1_1AbstractImporter.html</anchorfile>
      <anchor>ab2e2c9a171b173854b3daa8f1e33c1d8</anchor>
      <arglist>(const std::string &amp;name)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual std::string</type>
      <name>doTextureName</name>
      <anchorfile>classMagnum_1_1Trade_1_1AbstractImporter.html</anchorfile>
      <anchor>a65b8464916ad9ac0ae9cc1ea4b9b3fe5</anchor>
      <arglist>(UnsignedInt id)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual std::optional&lt; TextureData &gt;</type>
      <name>doTexture</name>
      <anchorfile>classMagnum_1_1Trade_1_1AbstractImporter.html</anchorfile>
      <anchor>a4f18e460dab42ae873448db746610e69</anchor>
      <arglist>(UnsignedInt id)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual UnsignedInt</type>
      <name>doImage1DCount</name>
      <anchorfile>classMagnum_1_1Trade_1_1AbstractImporter.html</anchorfile>
      <anchor>a02b0c9e7ef86c5ceede4c304e7841535</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual Int</type>
      <name>doImage1DForName</name>
      <anchorfile>classMagnum_1_1Trade_1_1AbstractImporter.html</anchorfile>
      <anchor>a18027b782794274425ab9b1acae54bc1</anchor>
      <arglist>(const std::string &amp;name)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual std::string</type>
      <name>doImage1DName</name>
      <anchorfile>classMagnum_1_1Trade_1_1AbstractImporter.html</anchorfile>
      <anchor>a1c3ce57e87d60eeef41d0925909cd1f1</anchor>
      <arglist>(UnsignedInt id)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual std::optional&lt; ImageData1D &gt;</type>
      <name>doImage1D</name>
      <anchorfile>classMagnum_1_1Trade_1_1AbstractImporter.html</anchorfile>
      <anchor>a896d1c4daaf538a6b18ecf28c33daf03</anchor>
      <arglist>(UnsignedInt id)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual UnsignedInt</type>
      <name>doImage2DCount</name>
      <anchorfile>classMagnum_1_1Trade_1_1AbstractImporter.html</anchorfile>
      <anchor>aa059021f3a37acc384ec4df0cf661b30</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual Int</type>
      <name>doImage2DForName</name>
      <anchorfile>classMagnum_1_1Trade_1_1AbstractImporter.html</anchorfile>
      <anchor>a857ac65c1ce046986359aeefc63d0072</anchor>
      <arglist>(const std::string &amp;name)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual std::string</type>
      <name>doImage2DName</name>
      <anchorfile>classMagnum_1_1Trade_1_1AbstractImporter.html</anchorfile>
      <anchor>a661d738b8b7565a5a874ab13d1130ec2</anchor>
      <arglist>(UnsignedInt id)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual std::optional&lt; ImageData2D &gt;</type>
      <name>doImage2D</name>
      <anchorfile>classMagnum_1_1Trade_1_1AbstractImporter.html</anchorfile>
      <anchor>a5806a00dd6677054d38d37587282e7f6</anchor>
      <arglist>(UnsignedInt id)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual UnsignedInt</type>
      <name>doImage3DCount</name>
      <anchorfile>classMagnum_1_1Trade_1_1AbstractImporter.html</anchorfile>
      <anchor>a88e4933e59298703530e3167e7109656</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual Int</type>
      <name>doImage3DForName</name>
      <anchorfile>classMagnum_1_1Trade_1_1AbstractImporter.html</anchorfile>
      <anchor>a620bf8b79f330c7a53cd2208753e1189</anchor>
      <arglist>(const std::string &amp;name)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual std::string</type>
      <name>doImage3DName</name>
      <anchorfile>classMagnum_1_1Trade_1_1AbstractImporter.html</anchorfile>
      <anchor>a4522fb4e6a39b4ee38e6d3d749c3bcb3</anchor>
      <arglist>(UnsignedInt id)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual std::optional&lt; ImageData3D &gt;</type>
      <name>doImage3D</name>
      <anchorfile>classMagnum_1_1Trade_1_1AbstractImporter.html</anchorfile>
      <anchor>ace3fab936ecdaced784c3db2e4116777</anchor>
      <arglist>(UnsignedInt id)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual const void *</type>
      <name>doImporterState</name>
      <anchorfile>classMagnum_1_1Trade_1_1AbstractImporter.html</anchorfile>
      <anchor>a7e1ccd9ce1c90a9e1e8022a3e3d41f09</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Int</type>
      <name>defaultScene</name>
      <anchorfile>classMagnum_1_1Trade_1_1AbstractImporter.html</anchorfile>
      <anchor>a653a979d687f7383fa5dce3ee42b3353</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>UnsignedInt</type>
      <name>sceneCount</name>
      <anchorfile>classMagnum_1_1Trade_1_1AbstractImporter.html</anchorfile>
      <anchor>aef67799d18bb94e99b4ae76a1423944f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Int</type>
      <name>sceneForName</name>
      <anchorfile>classMagnum_1_1Trade_1_1AbstractImporter.html</anchorfile>
      <anchor>a05b01b95340f8b6697e303796a752fe2</anchor>
      <arglist>(const std::string &amp;name)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>sceneName</name>
      <anchorfile>classMagnum_1_1Trade_1_1AbstractImporter.html</anchorfile>
      <anchor>a5163471e0eb7a7a0d7b58b637b8803cb</anchor>
      <arglist>(UnsignedInt id)</arglist>
    </member>
    <member kind="function">
      <type>std::optional&lt; SceneData &gt;</type>
      <name>scene</name>
      <anchorfile>classMagnum_1_1Trade_1_1AbstractImporter.html</anchorfile>
      <anchor>a57d95a36dc487003a70d7da046186d9f</anchor>
      <arglist>(UnsignedInt id)</arglist>
    </member>
    <member kind="function">
      <type>UnsignedInt</type>
      <name>lightCount</name>
      <anchorfile>classMagnum_1_1Trade_1_1AbstractImporter.html</anchorfile>
      <anchor>a329c014578728390016a4501bd7ffe8a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Int</type>
      <name>lightForName</name>
      <anchorfile>classMagnum_1_1Trade_1_1AbstractImporter.html</anchorfile>
      <anchor>aee85a06de41c36b2e2077ca3783cf77d</anchor>
      <arglist>(const std::string &amp;name)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>lightName</name>
      <anchorfile>classMagnum_1_1Trade_1_1AbstractImporter.html</anchorfile>
      <anchor>a6cf4edf30d1c73b590e9336ac1c69778</anchor>
      <arglist>(UnsignedInt id)</arglist>
    </member>
    <member kind="function">
      <type>std::optional&lt; LightData &gt;</type>
      <name>light</name>
      <anchorfile>classMagnum_1_1Trade_1_1AbstractImporter.html</anchorfile>
      <anchor>a6328232ce6e54f5473d03e15ee292cc2</anchor>
      <arglist>(UnsignedInt id)</arglist>
    </member>
    <member kind="function">
      <type>UnsignedInt</type>
      <name>cameraCount</name>
      <anchorfile>classMagnum_1_1Trade_1_1AbstractImporter.html</anchorfile>
      <anchor>ab1780ce1b9cb36d7258539127cd08bae</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Int</type>
      <name>cameraForName</name>
      <anchorfile>classMagnum_1_1Trade_1_1AbstractImporter.html</anchorfile>
      <anchor>a16b03a15550b3dcc83631b23231ac547</anchor>
      <arglist>(const std::string &amp;name)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>cameraName</name>
      <anchorfile>classMagnum_1_1Trade_1_1AbstractImporter.html</anchorfile>
      <anchor>a6bf0cbab98c07cca5773d6263836e683</anchor>
      <arglist>(UnsignedInt id)</arglist>
    </member>
    <member kind="function">
      <type>std::optional&lt; CameraData &gt;</type>
      <name>camera</name>
      <anchorfile>classMagnum_1_1Trade_1_1AbstractImporter.html</anchorfile>
      <anchor>a4fe89dcd42ced8146cbf42947444f935</anchor>
      <arglist>(UnsignedInt id)</arglist>
    </member>
    <member kind="function">
      <type>UnsignedInt</type>
      <name>object2DCount</name>
      <anchorfile>classMagnum_1_1Trade_1_1AbstractImporter.html</anchorfile>
      <anchor>aff6798ecf61883d5648a2880cd64dea2</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Int</type>
      <name>object2DForName</name>
      <anchorfile>classMagnum_1_1Trade_1_1AbstractImporter.html</anchorfile>
      <anchor>a85d8d1d3f3dd07bb56f8edd765d7662e</anchor>
      <arglist>(const std::string &amp;name)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>object2DName</name>
      <anchorfile>classMagnum_1_1Trade_1_1AbstractImporter.html</anchorfile>
      <anchor>af43d3e700399c50e61deafa544c3ddf7</anchor>
      <arglist>(UnsignedInt id)</arglist>
    </member>
    <member kind="function">
      <type>std::unique_ptr&lt; ObjectData2D &gt;</type>
      <name>object2D</name>
      <anchorfile>classMagnum_1_1Trade_1_1AbstractImporter.html</anchorfile>
      <anchor>a6569e2f48521188d8d73185ef921fca2</anchor>
      <arglist>(UnsignedInt id)</arglist>
    </member>
    <member kind="function">
      <type>UnsignedInt</type>
      <name>object3DCount</name>
      <anchorfile>classMagnum_1_1Trade_1_1AbstractImporter.html</anchorfile>
      <anchor>ad319747ea9854f465ce0608056947c5e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Int</type>
      <name>object3DForName</name>
      <anchorfile>classMagnum_1_1Trade_1_1AbstractImporter.html</anchorfile>
      <anchor>a1b4342605e35f58fbc21ddebcb4354c8</anchor>
      <arglist>(const std::string &amp;name)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>object3DName</name>
      <anchorfile>classMagnum_1_1Trade_1_1AbstractImporter.html</anchorfile>
      <anchor>aad66fe7c5fdb7f2df89cc03239850d85</anchor>
      <arglist>(UnsignedInt id)</arglist>
    </member>
    <member kind="function">
      <type>std::unique_ptr&lt; ObjectData3D &gt;</type>
      <name>object3D</name>
      <anchorfile>classMagnum_1_1Trade_1_1AbstractImporter.html</anchorfile>
      <anchor>ab4852d7f7c512406c34523d8614efde0</anchor>
      <arglist>(UnsignedInt id)</arglist>
    </member>
    <member kind="function">
      <type>UnsignedInt</type>
      <name>mesh2DCount</name>
      <anchorfile>classMagnum_1_1Trade_1_1AbstractImporter.html</anchorfile>
      <anchor>acb98279e02bc09f0c30b48aa961ccd47</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Int</type>
      <name>mesh2DForName</name>
      <anchorfile>classMagnum_1_1Trade_1_1AbstractImporter.html</anchorfile>
      <anchor>a1e779e94dcb531c65855b4384ba79501</anchor>
      <arglist>(const std::string &amp;name)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>mesh2DName</name>
      <anchorfile>classMagnum_1_1Trade_1_1AbstractImporter.html</anchorfile>
      <anchor>ac3d401ab3f89c9b5145bdab54bb98a59</anchor>
      <arglist>(UnsignedInt id)</arglist>
    </member>
    <member kind="function">
      <type>std::optional&lt; MeshData2D &gt;</type>
      <name>mesh2D</name>
      <anchorfile>classMagnum_1_1Trade_1_1AbstractImporter.html</anchorfile>
      <anchor>acfdac8fae8156c0efe3f214ddaad82de</anchor>
      <arglist>(UnsignedInt id)</arglist>
    </member>
    <member kind="function">
      <type>UnsignedInt</type>
      <name>mesh3DCount</name>
      <anchorfile>classMagnum_1_1Trade_1_1AbstractImporter.html</anchorfile>
      <anchor>a28cea346b7d5bcdbf7982ebd75b5e418</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Int</type>
      <name>mesh3DForName</name>
      <anchorfile>classMagnum_1_1Trade_1_1AbstractImporter.html</anchorfile>
      <anchor>af658902947f60167c307888bd979ac1e</anchor>
      <arglist>(const std::string &amp;name)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>mesh3DName</name>
      <anchorfile>classMagnum_1_1Trade_1_1AbstractImporter.html</anchorfile>
      <anchor>ab0fb173923f02758d48d6ece12c82fa6</anchor>
      <arglist>(UnsignedInt id)</arglist>
    </member>
    <member kind="function">
      <type>std::optional&lt; MeshData3D &gt;</type>
      <name>mesh3D</name>
      <anchorfile>classMagnum_1_1Trade_1_1AbstractImporter.html</anchorfile>
      <anchor>a8ce1c3e644b92348d1f965f977ad9ad5</anchor>
      <arglist>(UnsignedInt id)</arglist>
    </member>
    <member kind="function">
      <type>UnsignedInt</type>
      <name>materialCount</name>
      <anchorfile>classMagnum_1_1Trade_1_1AbstractImporter.html</anchorfile>
      <anchor>a11d7f7b700d841903e24ef5b96918342</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Int</type>
      <name>materialForName</name>
      <anchorfile>classMagnum_1_1Trade_1_1AbstractImporter.html</anchorfile>
      <anchor>aed2828f58a756382ecfb75b6ab916db7</anchor>
      <arglist>(const std::string &amp;name)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>materialName</name>
      <anchorfile>classMagnum_1_1Trade_1_1AbstractImporter.html</anchorfile>
      <anchor>a8debcd7acf0e5df6442249469b2e9197</anchor>
      <arglist>(UnsignedInt id)</arglist>
    </member>
    <member kind="function">
      <type>std::unique_ptr&lt; AbstractMaterialData &gt;</type>
      <name>material</name>
      <anchorfile>classMagnum_1_1Trade_1_1AbstractImporter.html</anchorfile>
      <anchor>a67467cbd29c8e3a5e37a9c88b0a22fda</anchor>
      <arglist>(UnsignedInt id)</arglist>
    </member>
    <member kind="function">
      <type>UnsignedInt</type>
      <name>textureCount</name>
      <anchorfile>classMagnum_1_1Trade_1_1AbstractImporter.html</anchorfile>
      <anchor>aea6d8cef44413aa20cc3fb2f304b1adc</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Int</type>
      <name>textureForName</name>
      <anchorfile>classMagnum_1_1Trade_1_1AbstractImporter.html</anchorfile>
      <anchor>a407887c17ecafef928ad848909b7fa2f</anchor>
      <arglist>(const std::string &amp;name)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>textureName</name>
      <anchorfile>classMagnum_1_1Trade_1_1AbstractImporter.html</anchorfile>
      <anchor>a8fa21f37de6ed0aff9aca0a94ae97bbb</anchor>
      <arglist>(UnsignedInt id)</arglist>
    </member>
    <member kind="function">
      <type>std::optional&lt; TextureData &gt;</type>
      <name>texture</name>
      <anchorfile>classMagnum_1_1Trade_1_1AbstractImporter.html</anchorfile>
      <anchor>a05e5b6f4827b8774dc30dd67f21dc74f</anchor>
      <arglist>(UnsignedInt id)</arglist>
    </member>
    <member kind="function">
      <type>UnsignedInt</type>
      <name>image1DCount</name>
      <anchorfile>classMagnum_1_1Trade_1_1AbstractImporter.html</anchorfile>
      <anchor>a576b728947a686c74dbb5657712f0028</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Int</type>
      <name>image1DForName</name>
      <anchorfile>classMagnum_1_1Trade_1_1AbstractImporter.html</anchorfile>
      <anchor>a7d6199856991922649280044db3040c7</anchor>
      <arglist>(const std::string &amp;name)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>image1DName</name>
      <anchorfile>classMagnum_1_1Trade_1_1AbstractImporter.html</anchorfile>
      <anchor>a38b5b5ffe562c4b80ccb07f97410a743</anchor>
      <arglist>(UnsignedInt id)</arglist>
    </member>
    <member kind="function">
      <type>std::optional&lt; ImageData1D &gt;</type>
      <name>image1D</name>
      <anchorfile>classMagnum_1_1Trade_1_1AbstractImporter.html</anchorfile>
      <anchor>a313b6a2fcb43b088bb3d4efe9ae835b8</anchor>
      <arglist>(UnsignedInt id)</arglist>
    </member>
    <member kind="function">
      <type>UnsignedInt</type>
      <name>image2DCount</name>
      <anchorfile>classMagnum_1_1Trade_1_1AbstractImporter.html</anchorfile>
      <anchor>a0438bc99568bdd366db74330e69cb118</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Int</type>
      <name>image2DForName</name>
      <anchorfile>classMagnum_1_1Trade_1_1AbstractImporter.html</anchorfile>
      <anchor>a5b5f1abe5ed1207416ff617e15697d78</anchor>
      <arglist>(const std::string &amp;name)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>image2DName</name>
      <anchorfile>classMagnum_1_1Trade_1_1AbstractImporter.html</anchorfile>
      <anchor>aecb2ef7e26275c522c98f54c430f7e49</anchor>
      <arglist>(UnsignedInt id)</arglist>
    </member>
    <member kind="function">
      <type>std::optional&lt; ImageData2D &gt;</type>
      <name>image2D</name>
      <anchorfile>classMagnum_1_1Trade_1_1AbstractImporter.html</anchorfile>
      <anchor>a293d1d079a2119bbb7aa54294635fe93</anchor>
      <arglist>(UnsignedInt id)</arglist>
    </member>
    <member kind="function">
      <type>UnsignedInt</type>
      <name>image3DCount</name>
      <anchorfile>classMagnum_1_1Trade_1_1AbstractImporter.html</anchorfile>
      <anchor>aa73124fc482544926d05489f4791b79c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Int</type>
      <name>image3DForName</name>
      <anchorfile>classMagnum_1_1Trade_1_1AbstractImporter.html</anchorfile>
      <anchor>a52f1c80a3ef341475d1d361caf31ecc7</anchor>
      <arglist>(const std::string &amp;name)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>image3DName</name>
      <anchorfile>classMagnum_1_1Trade_1_1AbstractImporter.html</anchorfile>
      <anchor>a057aa1d46f7c4119293b251fe735e52f</anchor>
      <arglist>(UnsignedInt id)</arglist>
    </member>
    <member kind="function">
      <type>std::optional&lt; ImageData3D &gt;</type>
      <name>image3D</name>
      <anchorfile>classMagnum_1_1Trade_1_1AbstractImporter.html</anchorfile>
      <anchor>af5cf9482677ef9b440821ca30e508ca4</anchor>
      <arglist>(UnsignedInt id)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Magnum::Trade::AbstractMaterialData</name>
    <filename>classMagnum_1_1Trade_1_1AbstractMaterialData.html</filename>
    <member kind="function">
      <type></type>
      <name>AbstractMaterialData</name>
      <anchorfile>classMagnum_1_1Trade_1_1AbstractMaterialData.html</anchorfile>
      <anchor>ac58a5b200d333068e9d7131c21989e4d</anchor>
      <arglist>(const AbstractMaterialData &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AbstractMaterialData</name>
      <anchorfile>classMagnum_1_1Trade_1_1AbstractMaterialData.html</anchorfile>
      <anchor>a2f337f82e78283f9c044bc6d6b56db38</anchor>
      <arglist>(AbstractMaterialData &amp;&amp;) noexcept=default</arglist>
    </member>
    <member kind="function">
      <type>AbstractMaterialData &amp;</type>
      <name>operator=</name>
      <anchorfile>classMagnum_1_1Trade_1_1AbstractMaterialData.html</anchorfile>
      <anchor>a15751f4fb1c1c14cbe762432ec95ac88</anchor>
      <arglist>(const AbstractMaterialData &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>AbstractMaterialData &amp;</type>
      <name>operator=</name>
      <anchorfile>classMagnum_1_1Trade_1_1AbstractMaterialData.html</anchorfile>
      <anchor>a45f3f8650e29c4af261ccb13bd26b2b4</anchor>
      <arglist>(AbstractMaterialData &amp;&amp;) noexcept=default</arglist>
    </member>
    <member kind="function">
      <type>MaterialType</type>
      <name>type</name>
      <anchorfile>classMagnum_1_1Trade_1_1AbstractMaterialData.html</anchorfile>
      <anchor>a7a25d5469d2cc2421af89884ed849b75</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const void *</type>
      <name>importerState</name>
      <anchorfile>classMagnum_1_1Trade_1_1AbstractMaterialData.html</anchorfile>
      <anchor>a0e61c2b412fc01098ce94c3e61c5ede2</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>AbstractMaterialData</name>
      <anchorfile>classMagnum_1_1Trade_1_1AbstractMaterialData.html</anchorfile>
      <anchor>ac664a62bfc41d7e78a977612958b6d55</anchor>
      <arglist>(MaterialType type, const void *importerState=nullptr) noexcept</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Magnum::Trade::AnyImageConverter</name>
    <filename>classMagnum_1_1Trade_1_1AnyImageConverter.html</filename>
    <base>Magnum::Trade::AbstractImageConverter</base>
    <member kind="function">
      <type></type>
      <name>AnyImageConverter</name>
      <anchorfile>classMagnum_1_1Trade_1_1AnyImageConverter.html</anchorfile>
      <anchor>a82bbe222fe9adaa59760e55b00e5e179</anchor>
      <arglist>(PluginManager::Manager&lt; AbstractImageConverter &gt; &amp;manager)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AnyImageConverter</name>
      <anchorfile>classMagnum_1_1Trade_1_1AnyImageConverter.html</anchorfile>
      <anchor>a916cba19ff0623641bf62c193cce6adf</anchor>
      <arglist>(PluginManager::AbstractManager &amp;manager, const std::string &amp;plugin)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Magnum::Trade::AnyImageImporter</name>
    <filename>classMagnum_1_1Trade_1_1AnyImageImporter.html</filename>
    <base>Magnum::Trade::AbstractImporter</base>
    <member kind="function">
      <type></type>
      <name>AnyImageImporter</name>
      <anchorfile>classMagnum_1_1Trade_1_1AnyImageImporter.html</anchorfile>
      <anchor>aebbc3c60c0d33dd5d76b987b3fbc4457</anchor>
      <arglist>(PluginManager::Manager&lt; AbstractImporter &gt; &amp;manager)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AnyImageImporter</name>
      <anchorfile>classMagnum_1_1Trade_1_1AnyImageImporter.html</anchorfile>
      <anchor>a0dd2480add7f6a02dd779df4f56b2248</anchor>
      <arglist>(PluginManager::AbstractManager &amp;manager, const std::string &amp;plugin)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Magnum::Trade::AnySceneImporter</name>
    <filename>classMagnum_1_1Trade_1_1AnySceneImporter.html</filename>
    <base>Magnum::Trade::AbstractImporter</base>
    <member kind="function">
      <type></type>
      <name>AnySceneImporter</name>
      <anchorfile>classMagnum_1_1Trade_1_1AnySceneImporter.html</anchorfile>
      <anchor>ae0d9c9c7425de10625fcac24e950c351</anchor>
      <arglist>(PluginManager::Manager&lt; AbstractImporter &gt; &amp;manager)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AnySceneImporter</name>
      <anchorfile>classMagnum_1_1Trade_1_1AnySceneImporter.html</anchorfile>
      <anchor>a5d5795ac52a8917cc26bc34ef2850758</anchor>
      <arglist>(PluginManager::AbstractManager &amp;manager, const std::string &amp;plugin)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Magnum::Trade::AssimpImporter</name>
    <filename>classMagnum_1_1Trade_1_1AssimpImporter.html</filename>
    <base>Magnum::Trade::AbstractImporter</base>
    <member kind="function">
      <type></type>
      <name>AssimpImporter</name>
      <anchorfile>classMagnum_1_1Trade_1_1AssimpImporter.html</anchorfile>
      <anchor>a259f8aaa0fedaadd0308a3b9ba309367</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AssimpImporter</name>
      <anchorfile>classMagnum_1_1Trade_1_1AssimpImporter.html</anchorfile>
      <anchor>a5225da0123b4bce1278d65599341aea4</anchor>
      <arglist>(PluginManager::Manager&lt; AbstractImporter &gt; &amp;manager)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AssimpImporter</name>
      <anchorfile>classMagnum_1_1Trade_1_1AssimpImporter.html</anchorfile>
      <anchor>a078f0599290d52608fd48f91fa57d9d1</anchor>
      <arglist>(PluginManager::AbstractManager &amp;manager, const std::string &amp;plugin)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Magnum::Trade::CameraData</name>
    <filename>classMagnum_1_1Trade_1_1CameraData.html</filename>
    <member kind="function">
      <type></type>
      <name>CameraData</name>
      <anchorfile>classMagnum_1_1Trade_1_1CameraData.html</anchorfile>
      <anchor>a0455298f3ab0a38f005b01d4d926ec04</anchor>
      <arglist>(Rad fov, Float near, Float far, const void *importerState=nullptr) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>CameraData</name>
      <anchorfile>classMagnum_1_1Trade_1_1CameraData.html</anchorfile>
      <anchor>a69bdaf3e21c8672999ffa0a87049c5ac</anchor>
      <arglist>(const CameraData &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>CameraData</name>
      <anchorfile>classMagnum_1_1Trade_1_1CameraData.html</anchorfile>
      <anchor>a4c79557b9938d0f806136ed461aeb8aa</anchor>
      <arglist>(CameraData &amp;&amp;) noexcept=default</arglist>
    </member>
    <member kind="function">
      <type>CameraData &amp;</type>
      <name>operator=</name>
      <anchorfile>classMagnum_1_1Trade_1_1CameraData.html</anchorfile>
      <anchor>a9f58f770a3d27549aa278ecf18c19336</anchor>
      <arglist>(const CameraData &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>CameraData &amp;</type>
      <name>operator=</name>
      <anchorfile>classMagnum_1_1Trade_1_1CameraData.html</anchorfile>
      <anchor>a0acb09200053a28d7dde0f137e817fc2</anchor>
      <arglist>(CameraData &amp;&amp;) noexcept=default</arglist>
    </member>
    <member kind="function">
      <type>Rad</type>
      <name>fov</name>
      <anchorfile>classMagnum_1_1Trade_1_1CameraData.html</anchorfile>
      <anchor>ad85c09428bd3ecf5471265261456d24e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Float</type>
      <name>near</name>
      <anchorfile>classMagnum_1_1Trade_1_1CameraData.html</anchorfile>
      <anchor>ac83054461bd8df861b34f2d1dc019b5e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Float</type>
      <name>far</name>
      <anchorfile>classMagnum_1_1Trade_1_1CameraData.html</anchorfile>
      <anchor>ab95fc9f2fbb48b4a89c5599fb3056ea2</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const void *</type>
      <name>importerState</name>
      <anchorfile>classMagnum_1_1Trade_1_1CameraData.html</anchorfile>
      <anchor>abded502d0da86a4c5ccf22547ce88d48</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Magnum::Trade::ColladaImporter</name>
    <filename>classMagnum_1_1Trade_1_1ColladaImporter.html</filename>
    <base>Magnum::Trade::AbstractImporter</base>
    <member kind="function">
      <type></type>
      <name>ColladaImporter</name>
      <anchorfile>classMagnum_1_1Trade_1_1ColladaImporter.html</anchorfile>
      <anchor>a981f7c03eff52b38b6e42278895223cb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ColladaImporter</name>
      <anchorfile>classMagnum_1_1Trade_1_1ColladaImporter.html</anchorfile>
      <anchor>ac8f9e24ee597d87aae987046ff46e7f5</anchor>
      <arglist>(PluginManager::Manager&lt; AbstractImporter &gt; &amp;manager)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ColladaImporter</name>
      <anchorfile>classMagnum_1_1Trade_1_1ColladaImporter.html</anchorfile>
      <anchor>a09f746b7c4bca109d92c1f0832607e03</anchor>
      <arglist>(PluginManager::AbstractManager &amp;manager, const std::string &amp;plugin)</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; T &gt;</type>
      <name>parseSource</name>
      <anchorfile>classMagnum_1_1Trade_1_1ColladaImporter.html</anchorfile>
      <anchor>ae3b29aba242dd2cf5c14a7e77e73de63</anchor>
      <arglist>(const QString &amp;id)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Magnum::Trade::DdsImporter</name>
    <filename>classMagnum_1_1Trade_1_1DdsImporter.html</filename>
    <base>Magnum::Trade::AbstractImporter</base>
    <member kind="function">
      <type></type>
      <name>DdsImporter</name>
      <anchorfile>classMagnum_1_1Trade_1_1DdsImporter.html</anchorfile>
      <anchor>a3ba40c98db6490889656cf9e3a31a466</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DdsImporter</name>
      <anchorfile>classMagnum_1_1Trade_1_1DdsImporter.html</anchorfile>
      <anchor>a0bdec389c8ad7b20d94df86fb3788735</anchor>
      <arglist>(PluginManager::AbstractManager &amp;manager, const std::string &amp;plugin)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Magnum::Trade::DevIlImageImporter</name>
    <filename>classMagnum_1_1Trade_1_1DevIlImageImporter.html</filename>
    <base>Magnum::Trade::AbstractImporter</base>
    <member kind="function">
      <type></type>
      <name>DevIlImageImporter</name>
      <anchorfile>classMagnum_1_1Trade_1_1DevIlImageImporter.html</anchorfile>
      <anchor>a5341c6b983c12ee8deadeba37efa18ee</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DevIlImageImporter</name>
      <anchorfile>classMagnum_1_1Trade_1_1DevIlImageImporter.html</anchorfile>
      <anchor>a5275020342c39d76590fd705681bc820</anchor>
      <arglist>(PluginManager::AbstractManager &amp;manager, const std::string &amp;plugin)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Magnum::Trade::ImageData</name>
    <filename>classMagnum_1_1Trade_1_1ImageData.html</filename>
    <templarg>dimensions</templarg>
    <member kind="enumvalue">
      <name>Dimensions</name>
      <anchorfile>classMagnum_1_1Trade_1_1ImageData.html</anchorfile>
      <anchor>a1fc7676ff28277f0dc3e1ae0603e4381a2a6a6de5208390ddfe99713c3a7e2a67</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Dimensions</name>
      <anchorfile>classMagnum_1_1Trade_1_1ImageData.html</anchorfile>
      <anchor>a1fc7676ff28277f0dc3e1ae0603e4381a2a6a6de5208390ddfe99713c3a7e2a67</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ImageData</name>
      <anchorfile>classMagnum_1_1Trade_1_1ImageData.html</anchorfile>
      <anchor>a8a2e56f7edf15cf10673cccdc7f5648b</anchor>
      <arglist>(PixelStorage storage, PixelFormat format, PixelType type, const VectorTypeFor&lt; dimensions, Int &gt; &amp;size, Containers::Array&lt; char &gt; &amp;&amp;data, const void *importerState=nullptr) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ImageData</name>
      <anchorfile>classMagnum_1_1Trade_1_1ImageData.html</anchorfile>
      <anchor>ad3b6ffe9d488712753d69d438e86f62b</anchor>
      <arglist>(PixelFormat format, PixelType type, const VectorTypeFor&lt; dimensions, Int &gt; &amp;size, Containers::Array&lt; char &gt; &amp;&amp;data, const void *importerState=nullptr) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ImageData</name>
      <anchorfile>classMagnum_1_1Trade_1_1ImageData.html</anchorfile>
      <anchor>a2d2d90ee5159e0b3d1e1b16c0b7439e2</anchor>
      <arglist>(PixelFormat format, PixelType type, const VectorTypeFor&lt; dimensions, Int &gt; &amp;size, void *data) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ImageData</name>
      <anchorfile>classMagnum_1_1Trade_1_1ImageData.html</anchorfile>
      <anchor>a9306004289b3d6740850f89562b29f84</anchor>
      <arglist>(CompressedPixelStorage storage, CompressedPixelFormat format, const VectorTypeFor&lt; dimensions, Int &gt; &amp;size, Containers::Array&lt; char &gt; &amp;&amp;data, const void *importerState=nullptr) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ImageData</name>
      <anchorfile>classMagnum_1_1Trade_1_1ImageData.html</anchorfile>
      <anchor>aebc48cc2e0f88aa68583ba77ce65e003</anchor>
      <arglist>(CompressedPixelFormat format, const VectorTypeFor&lt; dimensions, Int &gt; &amp;size, Containers::Array&lt; char &gt; &amp;&amp;data, const void *importerState=nullptr) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ImageData</name>
      <anchorfile>classMagnum_1_1Trade_1_1ImageData.html</anchorfile>
      <anchor>aaa904369e1198463b383a98b6625e1ff</anchor>
      <arglist>(const ImageData&lt; dimensions &gt; &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ImageData</name>
      <anchorfile>classMagnum_1_1Trade_1_1ImageData.html</anchorfile>
      <anchor>ac47cbef3c7561397e34758cbc602a9ea</anchor>
      <arglist>(ImageData&lt; dimensions &gt; &amp;&amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type>ImageData&lt; dimensions &gt; &amp;</type>
      <name>operator=</name>
      <anchorfile>classMagnum_1_1Trade_1_1ImageData.html</anchorfile>
      <anchor>ae5e0988988912baa22521951260001b4</anchor>
      <arglist>(const ImageData&lt; dimensions &gt; &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>ImageData&lt; dimensions &gt; &amp;</type>
      <name>operator=</name>
      <anchorfile>classMagnum_1_1Trade_1_1ImageData.html</anchorfile>
      <anchor>aa44c71fada8488bbe2721dd8fdb57284</anchor>
      <arglist>(ImageData&lt; dimensions &gt; &amp;&amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isCompressed</name>
      <anchorfile>classMagnum_1_1Trade_1_1ImageData.html</anchorfile>
      <anchor>ad5658bcc416724998c0b903b733e60d0</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator ImageView&lt; dimensions &gt;</name>
      <anchorfile>classMagnum_1_1Trade_1_1ImageData.html</anchorfile>
      <anchor>a402dbe0481e465647e25b3493cc3b0ae</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator CompressedImageView&lt; dimensions &gt;</name>
      <anchorfile>classMagnum_1_1Trade_1_1ImageData.html</anchorfile>
      <anchor>a6ab79cf334357d6ebabca56953ed3aab</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>PixelStorage</type>
      <name>storage</name>
      <anchorfile>classMagnum_1_1Trade_1_1ImageData.html</anchorfile>
      <anchor>aa44a0c5c532b8dfd86447b953f1d4c42</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>PixelFormat</type>
      <name>format</name>
      <anchorfile>classMagnum_1_1Trade_1_1ImageData.html</anchorfile>
      <anchor>a78f65e0d15af7ecb7348ec6dbbb3cbe2</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>PixelType</type>
      <name>type</name>
      <anchorfile>classMagnum_1_1Trade_1_1ImageData.html</anchorfile>
      <anchor>a98f4d5263248aeb4eeef0ae895be5870</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>CompressedPixelStorage</type>
      <name>compressedStorage</name>
      <anchorfile>classMagnum_1_1Trade_1_1ImageData.html</anchorfile>
      <anchor>af776e8d267d3c6c5b562bc769e87c409</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>CompressedPixelFormat</type>
      <name>compressedFormat</name>
      <anchorfile>classMagnum_1_1Trade_1_1ImageData.html</anchorfile>
      <anchor>a4c24a677e9aa199677f56fc11b7442ae</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>std::size_t</type>
      <name>pixelSize</name>
      <anchorfile>classMagnum_1_1Trade_1_1ImageData.html</anchorfile>
      <anchor>a21acf5ffae12db27f969e47ea3769801</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>VectorTypeFor&lt; dimensions, Int &gt;</type>
      <name>size</name>
      <anchorfile>classMagnum_1_1Trade_1_1ImageData.html</anchorfile>
      <anchor>a6c8763364affdb6e45d759913d45eb29</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>std::tuple&lt; VectorTypeFor&lt; dimensions, std::size_t &gt;, VectorTypeFor&lt; dimensions, std::size_t &gt;, std::size_t &gt;</type>
      <name>dataProperties</name>
      <anchorfile>classMagnum_1_1Trade_1_1ImageData.html</anchorfile>
      <anchor>a0fdfd2fe67a732f6a6d2ef413efaa6d1</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Containers::ArrayView&lt; char &gt;</type>
      <name>data</name>
      <anchorfile>classMagnum_1_1Trade_1_1ImageData.html</anchorfile>
      <anchor>aff9cedfbea15eb919f2dc24c107dbbce</anchor>
      <arglist>()&amp;</arglist>
    </member>
    <member kind="function">
      <type>Containers::ArrayView&lt; char &gt;</type>
      <name>data</name>
      <anchorfile>classMagnum_1_1Trade_1_1ImageData.html</anchorfile>
      <anchor>aa00b488cd837a63f1b0e281a33e91b9d</anchor>
      <arglist>()&amp;&amp;=delete</arglist>
    </member>
    <member kind="function">
      <type>Containers::ArrayView&lt; const char &gt;</type>
      <name>data</name>
      <anchorfile>classMagnum_1_1Trade_1_1ImageData.html</anchorfile>
      <anchor>a38d52cf66f08e451ab3e9bacdd72b727</anchor>
      <arglist>() const  &amp;</arglist>
    </member>
    <member kind="function">
      <type>Containers::ArrayView&lt; const char &gt;</type>
      <name>data</name>
      <anchorfile>classMagnum_1_1Trade_1_1ImageData.html</anchorfile>
      <anchor>a3d82c483ae638159d94fdd48afa66143</anchor>
      <arglist>() const  &amp;&amp;=delete</arglist>
    </member>
    <member kind="function">
      <type>T *</type>
      <name>data</name>
      <anchorfile>classMagnum_1_1Trade_1_1ImageData.html</anchorfile>
      <anchor>adbf60195ea9cb248fa823c1adc702c11</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const T *</type>
      <name>data</name>
      <anchorfile>classMagnum_1_1Trade_1_1ImageData.html</anchorfile>
      <anchor>a53eadf2729146f2e0f047dc6c1309fcb</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Containers::Array&lt; char &gt;</type>
      <name>release</name>
      <anchorfile>classMagnum_1_1Trade_1_1ImageData.html</anchorfile>
      <anchor>a85cf1643a5c7e3da9a44ddf0344f160f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const void *</type>
      <name>importerState</name>
      <anchorfile>classMagnum_1_1Trade_1_1ImageData.html</anchorfile>
      <anchor>a6fd9e86275b5b209cd6d1140381c5f27</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Magnum::Trade::JpegImporter</name>
    <filename>classMagnum_1_1Trade_1_1JpegImporter.html</filename>
    <base>Magnum::Trade::AbstractImporter</base>
    <member kind="function">
      <type></type>
      <name>JpegImporter</name>
      <anchorfile>classMagnum_1_1Trade_1_1JpegImporter.html</anchorfile>
      <anchor>a51a922b0bb5a43b0624d5fc7c18b4011</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>JpegImporter</name>
      <anchorfile>classMagnum_1_1Trade_1_1JpegImporter.html</anchorfile>
      <anchor>af91070f1cc313c219aab3dce4aa2f187</anchor>
      <arglist>(PluginManager::AbstractManager &amp;manager, const std::string &amp;plugin)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Magnum::Trade::LightData</name>
    <filename>classMagnum_1_1Trade_1_1LightData.html</filename>
    <member kind="enumeration">
      <type></type>
      <name>Type</name>
      <anchorfile>classMagnum_1_1Trade_1_1LightData.html</anchorfile>
      <anchor>a9d1ceb04c31f72d53a98340b776a4573</anchor>
      <arglist></arglist>
      <enumvalue file="classMagnum_1_1Trade_1_1LightData.html" anchor="a9d1ceb04c31f72d53a98340b776a4573ab10e24496ff8fec66189548a92a67045">Infinite</enumvalue>
      <enumvalue file="classMagnum_1_1Trade_1_1LightData.html" anchor="a9d1ceb04c31f72d53a98340b776a4573a2a3cd5946cfd317eb99c3d32e35e2d4c">Point</enumvalue>
      <enumvalue file="classMagnum_1_1Trade_1_1LightData.html" anchor="a9d1ceb04c31f72d53a98340b776a4573a6c9d6b8aea6f3d16847bdebe05878a2d">Spot</enumvalue>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>LightData</name>
      <anchorfile>classMagnum_1_1Trade_1_1LightData.html</anchorfile>
      <anchor>a6676394eab8ed9d3f62aebef74fb298b</anchor>
      <arglist>(Type type, const Color3 &amp;color, Float intensity, const void *importerState=nullptr) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>LightData</name>
      <anchorfile>classMagnum_1_1Trade_1_1LightData.html</anchorfile>
      <anchor>a1dcddc91419dac0d7ecea21aa0ed4d21</anchor>
      <arglist>(const LightData &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>LightData</name>
      <anchorfile>classMagnum_1_1Trade_1_1LightData.html</anchorfile>
      <anchor>a98894d0817ca5f0125be4c20a2de68be</anchor>
      <arglist>(LightData &amp;&amp;) noexcept=default</arglist>
    </member>
    <member kind="function">
      <type>LightData &amp;</type>
      <name>operator=</name>
      <anchorfile>classMagnum_1_1Trade_1_1LightData.html</anchorfile>
      <anchor>ac601963c8c9f48e4809f04cd3756893a</anchor>
      <arglist>(const LightData &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>LightData &amp;</type>
      <name>operator=</name>
      <anchorfile>classMagnum_1_1Trade_1_1LightData.html</anchorfile>
      <anchor>a67d52c77a5db331d10ad8d739056c4ba</anchor>
      <arglist>(LightData &amp;&amp;) noexcept=default</arglist>
    </member>
    <member kind="function">
      <type>constexpr Type</type>
      <name>type</name>
      <anchorfile>classMagnum_1_1Trade_1_1LightData.html</anchorfile>
      <anchor>a880d78f727590ee7dd6eb661549ab56d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>constexpr Color3</type>
      <name>color</name>
      <anchorfile>classMagnum_1_1Trade_1_1LightData.html</anchorfile>
      <anchor>a253e50f5b8c1e09fddc8fcf05aeda634</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>constexpr Float</type>
      <name>intensity</name>
      <anchorfile>classMagnum_1_1Trade_1_1LightData.html</anchorfile>
      <anchor>a25931372f19f9e2c46ffe4688bbc2955</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const void *</type>
      <name>importerState</name>
      <anchorfile>classMagnum_1_1Trade_1_1LightData.html</anchorfile>
      <anchor>aa9064ebc95663408b7801e38f8f47144</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Magnum::Trade::MeshData2D</name>
    <filename>classMagnum_1_1Trade_1_1MeshData2D.html</filename>
    <member kind="function">
      <type></type>
      <name>MeshData2D</name>
      <anchorfile>classMagnum_1_1Trade_1_1MeshData2D.html</anchorfile>
      <anchor>a6205d3c06750aa5cc1f4bdadfe0934a3</anchor>
      <arglist>(MeshPrimitive primitive, std::vector&lt; UnsignedInt &gt; indices, std::vector&lt; std::vector&lt; Vector2 &gt;&gt; positions, std::vector&lt; std::vector&lt; Vector2 &gt;&gt; textureCoords2D, std::vector&lt; std::vector&lt; Color4 &gt;&gt; colors, const void *importerState=nullptr)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>MeshData2D</name>
      <anchorfile>classMagnum_1_1Trade_1_1MeshData2D.html</anchorfile>
      <anchor>af9933d99c817b23894b6bf541751cc6f</anchor>
      <arglist>(MeshPrimitive primitive, std::vector&lt; UnsignedInt &gt; indices, std::vector&lt; std::vector&lt; Vector2 &gt;&gt; positions, std::vector&lt; std::vector&lt; Vector2 &gt;&gt; textureCoords2D, const void *importerState=nullptr)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>MeshData2D</name>
      <anchorfile>classMagnum_1_1Trade_1_1MeshData2D.html</anchorfile>
      <anchor>a02d004d955f299d15ad8b3bf12583d82</anchor>
      <arglist>(const MeshData2D &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>MeshData2D</name>
      <anchorfile>classMagnum_1_1Trade_1_1MeshData2D.html</anchorfile>
      <anchor>ac3154cdc64002ea3b7913a652abbaab8</anchor>
      <arglist>(MeshData2D &amp;&amp;) noexcept</arglist>
    </member>
    <member kind="function">
      <type>MeshData2D &amp;</type>
      <name>operator=</name>
      <anchorfile>classMagnum_1_1Trade_1_1MeshData2D.html</anchorfile>
      <anchor>acc89711da9da350ca3a53ff82a6f9417</anchor>
      <arglist>(const MeshData2D &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>MeshData2D &amp;</type>
      <name>operator=</name>
      <anchorfile>classMagnum_1_1Trade_1_1MeshData2D.html</anchorfile>
      <anchor>acb6705ef3ccc3ef856243cc88e2144e3</anchor>
      <arglist>(MeshData2D &amp;&amp;) noexcept</arglist>
    </member>
    <member kind="function">
      <type>MeshPrimitive</type>
      <name>primitive</name>
      <anchorfile>classMagnum_1_1Trade_1_1MeshData2D.html</anchorfile>
      <anchor>aeae9dfe90ec138ae02b18e8387331416</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isIndexed</name>
      <anchorfile>classMagnum_1_1Trade_1_1MeshData2D.html</anchorfile>
      <anchor>a929ff22be1bbf2c92f0e7c4396b3b70e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; UnsignedInt &gt; &amp;</type>
      <name>indices</name>
      <anchorfile>classMagnum_1_1Trade_1_1MeshData2D.html</anchorfile>
      <anchor>ac82245373df0de57028bf9d5241af66d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const std::vector&lt; UnsignedInt &gt; &amp;</type>
      <name>indices</name>
      <anchorfile>classMagnum_1_1Trade_1_1MeshData2D.html</anchorfile>
      <anchor>a18edd001e3dcb32aa158fce3e8b3daa0</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>UnsignedInt</type>
      <name>positionArrayCount</name>
      <anchorfile>classMagnum_1_1Trade_1_1MeshData2D.html</anchorfile>
      <anchor>a1f90317676a96a2c46b7feba74eb2ac4</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; Vector2 &gt; &amp;</type>
      <name>positions</name>
      <anchorfile>classMagnum_1_1Trade_1_1MeshData2D.html</anchorfile>
      <anchor>a4eb9b3a081b9d112c4be29b88fa0ad06</anchor>
      <arglist>(UnsignedInt id)</arglist>
    </member>
    <member kind="function">
      <type>const std::vector&lt; Vector2 &gt; &amp;</type>
      <name>positions</name>
      <anchorfile>classMagnum_1_1Trade_1_1MeshData2D.html</anchorfile>
      <anchor>a2717b940172c10ccb152de2a2f2c36bc</anchor>
      <arglist>(UnsignedInt id) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>hasTextureCoords2D</name>
      <anchorfile>classMagnum_1_1Trade_1_1MeshData2D.html</anchorfile>
      <anchor>a053c28b31149618c39f624786889f8de</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>UnsignedInt</type>
      <name>textureCoords2DArrayCount</name>
      <anchorfile>classMagnum_1_1Trade_1_1MeshData2D.html</anchorfile>
      <anchor>adb01ce3eedd6ffd00bbb1c86eaf983fd</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; Vector2 &gt; &amp;</type>
      <name>textureCoords2D</name>
      <anchorfile>classMagnum_1_1Trade_1_1MeshData2D.html</anchorfile>
      <anchor>a42004db929f797a9a7fe356e3a2ef0ed</anchor>
      <arglist>(UnsignedInt id)</arglist>
    </member>
    <member kind="function">
      <type>const std::vector&lt; Vector2 &gt; &amp;</type>
      <name>textureCoords2D</name>
      <anchorfile>classMagnum_1_1Trade_1_1MeshData2D.html</anchorfile>
      <anchor>a1f10e56181c6902960f72d57b7d4ab2c</anchor>
      <arglist>(UnsignedInt id) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>hasColors</name>
      <anchorfile>classMagnum_1_1Trade_1_1MeshData2D.html</anchorfile>
      <anchor>a007052592a9a61017f384d3c1b8bc175</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>UnsignedInt</type>
      <name>colorArrayCount</name>
      <anchorfile>classMagnum_1_1Trade_1_1MeshData2D.html</anchorfile>
      <anchor>a039872a175b31b790f60849e7ff9f9bd</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; Color4 &gt; &amp;</type>
      <name>colors</name>
      <anchorfile>classMagnum_1_1Trade_1_1MeshData2D.html</anchorfile>
      <anchor>a14187a57ab4fcd0d5aa86136880402c7</anchor>
      <arglist>(UnsignedInt id)</arglist>
    </member>
    <member kind="function">
      <type>const std::vector&lt; Color4 &gt; &amp;</type>
      <name>colors</name>
      <anchorfile>classMagnum_1_1Trade_1_1MeshData2D.html</anchorfile>
      <anchor>ab9f8a559734c962502300b1fc73ecd77</anchor>
      <arglist>(UnsignedInt id) const </arglist>
    </member>
    <member kind="function">
      <type>const void *</type>
      <name>importerState</name>
      <anchorfile>classMagnum_1_1Trade_1_1MeshData2D.html</anchorfile>
      <anchor>ab5ed2777675634f37d4fe999b99b0966</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Magnum::Trade::MeshData3D</name>
    <filename>classMagnum_1_1Trade_1_1MeshData3D.html</filename>
    <member kind="function">
      <type></type>
      <name>MeshData3D</name>
      <anchorfile>classMagnum_1_1Trade_1_1MeshData3D.html</anchorfile>
      <anchor>ada396a22db051ba3f2663c9f6fa133c4</anchor>
      <arglist>(MeshPrimitive primitive, std::vector&lt; UnsignedInt &gt; indices, std::vector&lt; std::vector&lt; Vector3 &gt;&gt; positions, std::vector&lt; std::vector&lt; Vector3 &gt;&gt; normals, std::vector&lt; std::vector&lt; Vector2 &gt;&gt; textureCoords2D, std::vector&lt; std::vector&lt; Color4 &gt;&gt; colors, const void *importerState=nullptr)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>MeshData3D</name>
      <anchorfile>classMagnum_1_1Trade_1_1MeshData3D.html</anchorfile>
      <anchor>a5cdc4321c9150be066ad2142f8e75def</anchor>
      <arglist>(MeshPrimitive primitive, std::vector&lt; UnsignedInt &gt; indices, std::vector&lt; std::vector&lt; Vector3 &gt;&gt; positions, std::vector&lt; std::vector&lt; Vector3 &gt;&gt; normals, std::vector&lt; std::vector&lt; Vector2 &gt;&gt; textureCoords2D, const void *importerState=nullptr)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>MeshData3D</name>
      <anchorfile>classMagnum_1_1Trade_1_1MeshData3D.html</anchorfile>
      <anchor>abce0e734d14de13a406fe9d532714876</anchor>
      <arglist>(const MeshData3D &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>MeshData3D</name>
      <anchorfile>classMagnum_1_1Trade_1_1MeshData3D.html</anchorfile>
      <anchor>a23ece5529972243059d452aeb6aebb5b</anchor>
      <arglist>(MeshData3D &amp;&amp;) noexcept</arglist>
    </member>
    <member kind="function">
      <type>MeshData3D &amp;</type>
      <name>operator=</name>
      <anchorfile>classMagnum_1_1Trade_1_1MeshData3D.html</anchorfile>
      <anchor>a4b3dd20efac3eb0c19070446c3da7442</anchor>
      <arglist>(const MeshData3D &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>MeshData3D &amp;</type>
      <name>operator=</name>
      <anchorfile>classMagnum_1_1Trade_1_1MeshData3D.html</anchorfile>
      <anchor>a633912144e5e2deb8ffe0a4a8cb83aaa</anchor>
      <arglist>(MeshData3D &amp;&amp;) noexcept</arglist>
    </member>
    <member kind="function">
      <type>MeshPrimitive</type>
      <name>primitive</name>
      <anchorfile>classMagnum_1_1Trade_1_1MeshData3D.html</anchorfile>
      <anchor>a03b12dde3f35f0bd38c6aed1ab26e863</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isIndexed</name>
      <anchorfile>classMagnum_1_1Trade_1_1MeshData3D.html</anchorfile>
      <anchor>a0764488c52db1359b2034ffaf678520f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; UnsignedInt &gt; &amp;</type>
      <name>indices</name>
      <anchorfile>classMagnum_1_1Trade_1_1MeshData3D.html</anchorfile>
      <anchor>adcdfdfe2c727c996c6255e357a4d7329</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const std::vector&lt; UnsignedInt &gt; &amp;</type>
      <name>indices</name>
      <anchorfile>classMagnum_1_1Trade_1_1MeshData3D.html</anchorfile>
      <anchor>a9297119120e354c7dd1678d47787d7a9</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>UnsignedInt</type>
      <name>positionArrayCount</name>
      <anchorfile>classMagnum_1_1Trade_1_1MeshData3D.html</anchorfile>
      <anchor>a0a33582b3a749cd5d293d9a6dca10c0c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; Vector3 &gt; &amp;</type>
      <name>positions</name>
      <anchorfile>classMagnum_1_1Trade_1_1MeshData3D.html</anchorfile>
      <anchor>a0d2b51293d1aeb7cfde9842548936fa5</anchor>
      <arglist>(UnsignedInt id)</arglist>
    </member>
    <member kind="function">
      <type>const std::vector&lt; Vector3 &gt; &amp;</type>
      <name>positions</name>
      <anchorfile>classMagnum_1_1Trade_1_1MeshData3D.html</anchorfile>
      <anchor>abca0d7142ae54e3935e722212b7c0d44</anchor>
      <arglist>(UnsignedInt id) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>hasNormals</name>
      <anchorfile>classMagnum_1_1Trade_1_1MeshData3D.html</anchorfile>
      <anchor>afec0ce1cc39f10e25d04798a3d7f87e1</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>UnsignedInt</type>
      <name>normalArrayCount</name>
      <anchorfile>classMagnum_1_1Trade_1_1MeshData3D.html</anchorfile>
      <anchor>ad76bc93f66ffcf6194d29c13bfd4107c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; Vector3 &gt; &amp;</type>
      <name>normals</name>
      <anchorfile>classMagnum_1_1Trade_1_1MeshData3D.html</anchorfile>
      <anchor>a4a58685ceb458cbc2b109cd93d72be62</anchor>
      <arglist>(UnsignedInt id)</arglist>
    </member>
    <member kind="function">
      <type>const std::vector&lt; Vector3 &gt; &amp;</type>
      <name>normals</name>
      <anchorfile>classMagnum_1_1Trade_1_1MeshData3D.html</anchorfile>
      <anchor>ac993c91cbaafc071836c850c8e1b8ab2</anchor>
      <arglist>(UnsignedInt id) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>hasTextureCoords2D</name>
      <anchorfile>classMagnum_1_1Trade_1_1MeshData3D.html</anchorfile>
      <anchor>aac70c12f456df2b2f17b130a1667b8a7</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>UnsignedInt</type>
      <name>textureCoords2DArrayCount</name>
      <anchorfile>classMagnum_1_1Trade_1_1MeshData3D.html</anchorfile>
      <anchor>ab42b904ab15eb95059c149989cdb74e4</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; Vector2 &gt; &amp;</type>
      <name>textureCoords2D</name>
      <anchorfile>classMagnum_1_1Trade_1_1MeshData3D.html</anchorfile>
      <anchor>a104c772a3c1ef89464cbc7606dde85c4</anchor>
      <arglist>(UnsignedInt id)</arglist>
    </member>
    <member kind="function">
      <type>const std::vector&lt; Vector2 &gt; &amp;</type>
      <name>textureCoords2D</name>
      <anchorfile>classMagnum_1_1Trade_1_1MeshData3D.html</anchorfile>
      <anchor>aa873473522ffd35fe723258df08503cf</anchor>
      <arglist>(UnsignedInt id) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>hasColors</name>
      <anchorfile>classMagnum_1_1Trade_1_1MeshData3D.html</anchorfile>
      <anchor>af5cc8f3273cfda2611f757aafbac92d2</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>UnsignedInt</type>
      <name>colorArrayCount</name>
      <anchorfile>classMagnum_1_1Trade_1_1MeshData3D.html</anchorfile>
      <anchor>abe3a58d37be47982c0ab1261945fb11e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; Color4 &gt; &amp;</type>
      <name>colors</name>
      <anchorfile>classMagnum_1_1Trade_1_1MeshData3D.html</anchorfile>
      <anchor>ad8052dd1c016f6e583fde87f3ab36341</anchor>
      <arglist>(UnsignedInt id)</arglist>
    </member>
    <member kind="function">
      <type>const std::vector&lt; Color4 &gt; &amp;</type>
      <name>colors</name>
      <anchorfile>classMagnum_1_1Trade_1_1MeshData3D.html</anchorfile>
      <anchor>a52e5f8cbe595fb1b528ca80a6c0c8a01</anchor>
      <arglist>(UnsignedInt id) const </arglist>
    </member>
    <member kind="function">
      <type>const void *</type>
      <name>importerState</name>
      <anchorfile>classMagnum_1_1Trade_1_1MeshData3D.html</anchorfile>
      <anchor>adcc88010e930b8d87f10d3f54a28b92b</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Magnum::Trade::MeshObjectData2D</name>
    <filename>classMagnum_1_1Trade_1_1MeshObjectData2D.html</filename>
    <base>Magnum::Trade::ObjectData2D</base>
    <member kind="function">
      <type></type>
      <name>MeshObjectData2D</name>
      <anchorfile>classMagnum_1_1Trade_1_1MeshObjectData2D.html</anchorfile>
      <anchor>a2f22f481fa3f3eb1ee37dd58c87f048d</anchor>
      <arglist>(std::vector&lt; UnsignedInt &gt; children, const Matrix3 &amp;transformation, UnsignedInt instance, Int material, const void *importerState=nullptr)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>MeshObjectData2D</name>
      <anchorfile>classMagnum_1_1Trade_1_1MeshObjectData2D.html</anchorfile>
      <anchor>a722b1a86629d737cf33e762ffe77648d</anchor>
      <arglist>(const MeshObjectData2D &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>MeshObjectData2D</name>
      <anchorfile>classMagnum_1_1Trade_1_1MeshObjectData2D.html</anchorfile>
      <anchor>a25bda1516a6be978f2c5a76055ea3cd9</anchor>
      <arglist>(MeshObjectData2D &amp;&amp;) noexcept=default</arglist>
    </member>
    <member kind="function">
      <type>MeshObjectData2D &amp;</type>
      <name>operator=</name>
      <anchorfile>classMagnum_1_1Trade_1_1MeshObjectData2D.html</anchorfile>
      <anchor>aecbeb0985efd931ce8cd68dc414e879b</anchor>
      <arglist>(const MeshObjectData2D &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>MeshObjectData2D &amp;</type>
      <name>operator=</name>
      <anchorfile>classMagnum_1_1Trade_1_1MeshObjectData2D.html</anchorfile>
      <anchor>a2618adadb291021420e80059ca213d20</anchor>
      <arglist>(MeshObjectData2D &amp;&amp;) noexcept=default</arglist>
    </member>
    <member kind="function">
      <type>Int</type>
      <name>material</name>
      <anchorfile>classMagnum_1_1Trade_1_1MeshObjectData2D.html</anchorfile>
      <anchor>a86b7008158696c1d18fa5b70e814227a</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Magnum::Trade::MeshObjectData3D</name>
    <filename>classMagnum_1_1Trade_1_1MeshObjectData3D.html</filename>
    <base>Magnum::Trade::ObjectData3D</base>
    <member kind="function">
      <type></type>
      <name>MeshObjectData3D</name>
      <anchorfile>classMagnum_1_1Trade_1_1MeshObjectData3D.html</anchorfile>
      <anchor>ab64e2b6875e9df89bfd5a748b3dffa91</anchor>
      <arglist>(std::vector&lt; UnsignedInt &gt; children, const Matrix4 &amp;transformation, UnsignedInt instance, Int material, const void *importerState=nullptr)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>MeshObjectData3D</name>
      <anchorfile>classMagnum_1_1Trade_1_1MeshObjectData3D.html</anchorfile>
      <anchor>a6823439f9c0fea6048659efca8c75b1b</anchor>
      <arglist>(const MeshObjectData3D &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>MeshObjectData3D</name>
      <anchorfile>classMagnum_1_1Trade_1_1MeshObjectData3D.html</anchorfile>
      <anchor>a349480878d7d4a14c1058e23460090c3</anchor>
      <arglist>(MeshObjectData3D &amp;&amp;) noexcept=default</arglist>
    </member>
    <member kind="function">
      <type>MeshObjectData3D &amp;</type>
      <name>operator=</name>
      <anchorfile>classMagnum_1_1Trade_1_1MeshObjectData3D.html</anchorfile>
      <anchor>a5be6b30771e9a9e29e5289c4ab7e37fa</anchor>
      <arglist>(const MeshObjectData3D &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>MeshObjectData3D &amp;</type>
      <name>operator=</name>
      <anchorfile>classMagnum_1_1Trade_1_1MeshObjectData3D.html</anchorfile>
      <anchor>a38135110ac8c85809234946756271696</anchor>
      <arglist>(MeshObjectData3D &amp;&amp;) noexcept=default</arglist>
    </member>
    <member kind="function">
      <type>Int</type>
      <name>material</name>
      <anchorfile>classMagnum_1_1Trade_1_1MeshObjectData3D.html</anchorfile>
      <anchor>ab51c5c0bbb30498ab9de5b74ed6620cf</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Magnum::Trade::MiniExrImageConverter</name>
    <filename>classMagnum_1_1Trade_1_1MiniExrImageConverter.html</filename>
    <base>Magnum::Trade::AbstractImageConverter</base>
    <member kind="function">
      <type></type>
      <name>MiniExrImageConverter</name>
      <anchorfile>classMagnum_1_1Trade_1_1MiniExrImageConverter.html</anchorfile>
      <anchor>a7bc884ed573ad3df73a4132aeb577304</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>MiniExrImageConverter</name>
      <anchorfile>classMagnum_1_1Trade_1_1MiniExrImageConverter.html</anchorfile>
      <anchor>ab70f9b4d4df668e371c5f58124ee3616</anchor>
      <arglist>(PluginManager::AbstractManager &amp;manager, const std::string &amp;plugin)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Magnum::Trade::ObjectData2D</name>
    <filename>classMagnum_1_1Trade_1_1ObjectData2D.html</filename>
    <member kind="function">
      <type></type>
      <name>ObjectData2D</name>
      <anchorfile>classMagnum_1_1Trade_1_1ObjectData2D.html</anchorfile>
      <anchor>ad5da3673d5d955fa9b47e9e195ec0ac6</anchor>
      <arglist>(std::vector&lt; UnsignedInt &gt; children, const Matrix3 &amp;transformation, ObjectInstanceType2D instanceType, UnsignedInt instance, const void *importerState=nullptr)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ObjectData2D</name>
      <anchorfile>classMagnum_1_1Trade_1_1ObjectData2D.html</anchorfile>
      <anchor>abd91e7c7f05b68638c6f27f6f881daf2</anchor>
      <arglist>(std::vector&lt; UnsignedInt &gt; children, const Matrix3 &amp;transformation, const void *importerState=nullptr)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ObjectData2D</name>
      <anchorfile>classMagnum_1_1Trade_1_1ObjectData2D.html</anchorfile>
      <anchor>a725537c8f6826b3e6f9aec547ee92f24</anchor>
      <arglist>(const ObjectData2D &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ObjectData2D</name>
      <anchorfile>classMagnum_1_1Trade_1_1ObjectData2D.html</anchorfile>
      <anchor>af7e966dc0fc86cc93660e8620c2c33d0</anchor>
      <arglist>(ObjectData2D &amp;&amp;) noexcept</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ObjectData2D</name>
      <anchorfile>classMagnum_1_1Trade_1_1ObjectData2D.html</anchorfile>
      <anchor>a03185f270c3dc3981ac3c3c1d6f81aa3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>ObjectData2D &amp;</type>
      <name>operator=</name>
      <anchorfile>classMagnum_1_1Trade_1_1ObjectData2D.html</anchorfile>
      <anchor>a37d163f72dfcc82d240fc4e7358e54a5</anchor>
      <arglist>(const ObjectData2D &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>ObjectData2D &amp;</type>
      <name>operator=</name>
      <anchorfile>classMagnum_1_1Trade_1_1ObjectData2D.html</anchorfile>
      <anchor>a869a2b62b435bd60f69d2e5a43a1de4b</anchor>
      <arglist>(ObjectData2D &amp;&amp;) noexcept</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; UnsignedInt &gt; &amp;</type>
      <name>children</name>
      <anchorfile>classMagnum_1_1Trade_1_1ObjectData2D.html</anchorfile>
      <anchor>acccf7212f3b6a0cdbfe43dd1051d0e00</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const std::vector&lt; UnsignedInt &gt; &amp;</type>
      <name>children</name>
      <anchorfile>classMagnum_1_1Trade_1_1ObjectData2D.html</anchorfile>
      <anchor>a02a2b0980d569073adccae064249d9c4</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Matrix3</type>
      <name>transformation</name>
      <anchorfile>classMagnum_1_1Trade_1_1ObjectData2D.html</anchorfile>
      <anchor>a1dd052bf7bb595cf014f1d2e7c54aa2e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>ObjectInstanceType2D</type>
      <name>instanceType</name>
      <anchorfile>classMagnum_1_1Trade_1_1ObjectData2D.html</anchorfile>
      <anchor>a9ae3e700794454eec2e6ae837036c7dd</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Int</type>
      <name>instance</name>
      <anchorfile>classMagnum_1_1Trade_1_1ObjectData2D.html</anchorfile>
      <anchor>a837d78507c4d3d296891e888ce05c58b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const void *</type>
      <name>importerState</name>
      <anchorfile>classMagnum_1_1Trade_1_1ObjectData2D.html</anchorfile>
      <anchor>a7d7df568dc70fdf6fb063f7c80676874</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Magnum::Trade::ObjectData3D</name>
    <filename>classMagnum_1_1Trade_1_1ObjectData3D.html</filename>
    <member kind="function">
      <type></type>
      <name>ObjectData3D</name>
      <anchorfile>classMagnum_1_1Trade_1_1ObjectData3D.html</anchorfile>
      <anchor>af4bb0aeb975603cf66256df95542e660</anchor>
      <arglist>(std::vector&lt; UnsignedInt &gt; children, const Matrix4 &amp;transformation, ObjectInstanceType3D instanceType, UnsignedInt instance, const void *importerState=nullptr)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ObjectData3D</name>
      <anchorfile>classMagnum_1_1Trade_1_1ObjectData3D.html</anchorfile>
      <anchor>a429c03200788b916d9ec1db6b347f31a</anchor>
      <arglist>(std::vector&lt; UnsignedInt &gt; children, const Matrix4 &amp;transformation, const void *importerState=nullptr)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ObjectData3D</name>
      <anchorfile>classMagnum_1_1Trade_1_1ObjectData3D.html</anchorfile>
      <anchor>a4207cec65afb303bab5d436b5177b7e8</anchor>
      <arglist>(const ObjectData3D &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ObjectData3D</name>
      <anchorfile>classMagnum_1_1Trade_1_1ObjectData3D.html</anchorfile>
      <anchor>af6cb5de6e909e03284c677ba6171154e</anchor>
      <arglist>(ObjectData3D &amp;&amp;) noexcept</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ObjectData3D</name>
      <anchorfile>classMagnum_1_1Trade_1_1ObjectData3D.html</anchorfile>
      <anchor>af34305970824e31579f393d7334f7d88</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>ObjectData3D &amp;</type>
      <name>operator=</name>
      <anchorfile>classMagnum_1_1Trade_1_1ObjectData3D.html</anchorfile>
      <anchor>ac8a3e48a182eb4b3d1908b70f1645899</anchor>
      <arglist>(const ObjectData3D &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>ObjectData3D &amp;</type>
      <name>operator=</name>
      <anchorfile>classMagnum_1_1Trade_1_1ObjectData3D.html</anchorfile>
      <anchor>a68a0d64673483570a8a875c896392938</anchor>
      <arglist>(ObjectData3D &amp;&amp;) noexcept</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; UnsignedInt &gt; &amp;</type>
      <name>children</name>
      <anchorfile>classMagnum_1_1Trade_1_1ObjectData3D.html</anchorfile>
      <anchor>a173fda98f2e5b46eb45b8bd80bff7227</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const std::vector&lt; UnsignedInt &gt; &amp;</type>
      <name>children</name>
      <anchorfile>classMagnum_1_1Trade_1_1ObjectData3D.html</anchorfile>
      <anchor>a383296a2c8aa5327849e7194ef60d561</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Matrix4</type>
      <name>transformation</name>
      <anchorfile>classMagnum_1_1Trade_1_1ObjectData3D.html</anchorfile>
      <anchor>ab5c8c4389afaeae2be9e97a416e24ae8</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>ObjectInstanceType3D</type>
      <name>instanceType</name>
      <anchorfile>classMagnum_1_1Trade_1_1ObjectData3D.html</anchorfile>
      <anchor>a33f5282eee68f55833eba18e9d79453a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Int</type>
      <name>instance</name>
      <anchorfile>classMagnum_1_1Trade_1_1ObjectData3D.html</anchorfile>
      <anchor>ae9d8800c68dd58f181ca32d77a81ff25</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const void *</type>
      <name>importerState</name>
      <anchorfile>classMagnum_1_1Trade_1_1ObjectData3D.html</anchorfile>
      <anchor>a798ee18156921754e4c2ba88a82086e7</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Magnum::Trade::ObjImporter</name>
    <filename>classMagnum_1_1Trade_1_1ObjImporter.html</filename>
    <base>Magnum::Trade::AbstractImporter</base>
    <member kind="function">
      <type></type>
      <name>ObjImporter</name>
      <anchorfile>classMagnum_1_1Trade_1_1ObjImporter.html</anchorfile>
      <anchor>a9e4d2725b98876ecea91ed06ed2bde96</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ObjImporter</name>
      <anchorfile>classMagnum_1_1Trade_1_1ObjImporter.html</anchorfile>
      <anchor>a28e7782925186f7e48a7d24a89dbb3f8</anchor>
      <arglist>(PluginManager::AbstractManager &amp;manager, const std::string &amp;plugin)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Magnum::Trade::OpenGexImporter</name>
    <filename>classMagnum_1_1Trade_1_1OpenGexImporter.html</filename>
    <base>Magnum::Trade::AbstractImporter</base>
    <member kind="function">
      <type></type>
      <name>OpenGexImporter</name>
      <anchorfile>classMagnum_1_1Trade_1_1OpenGexImporter.html</anchorfile>
      <anchor>ac4e76996bd6c41b18d4d358adde8db05</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>OpenGexImporter</name>
      <anchorfile>classMagnum_1_1Trade_1_1OpenGexImporter.html</anchorfile>
      <anchor>adc2222e32fac0894eef1829e3930b9d2</anchor>
      <arglist>(PluginManager::Manager&lt; AbstractImporter &gt; &amp;manager)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>OpenGexImporter</name>
      <anchorfile>classMagnum_1_1Trade_1_1OpenGexImporter.html</anchorfile>
      <anchor>ae562ddc1ca25f7678031b4ef6a27d6a0</anchor>
      <arglist>(PluginManager::AbstractManager &amp;manager, const std::string &amp;plugin)</arglist>
    </member>
    <member kind="function">
      <type>const OpenDdl::Document *</type>
      <name>importerState</name>
      <anchorfile>classMagnum_1_1Trade_1_1OpenGexImporter.html</anchorfile>
      <anchor>a7655b00adc0a080386e0d4ed93817587</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Magnum::Trade::PhongMaterialData</name>
    <filename>classMagnum_1_1Trade_1_1PhongMaterialData.html</filename>
    <base>Magnum::Trade::AbstractMaterialData</base>
    <member kind="enumvalue">
      <name>AmbientTextureID</name>
      <anchorfile>classMagnum_1_1Trade_1_1PhongMaterialData.html</anchorfile>
      <anchor>adeeae54e01bc86a0cb4cc025be623dd2a60525165e4b63ce3d6b958d7f57833fc</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DiffuseTextureID</name>
      <anchorfile>classMagnum_1_1Trade_1_1PhongMaterialData.html</anchorfile>
      <anchor>adeeae54e01bc86a0cb4cc025be623dd2a8ce0cffb8630f599dd0adb1c5e696b0d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SpecularTextureID</name>
      <anchorfile>classMagnum_1_1Trade_1_1PhongMaterialData.html</anchorfile>
      <anchor>adeeae54e01bc86a0cb4cc025be623dd2a3d470e854c71c4b6e4849c09a4d36f47</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>Flag</name>
      <anchorfile>classMagnum_1_1Trade_1_1PhongMaterialData.html</anchorfile>
      <anchor>a13618b622d87df20f9b65f00d062f803</anchor>
      <arglist></arglist>
      <enumvalue file="classMagnum_1_1Trade_1_1PhongMaterialData.html" anchor="a13618b622d87df20f9b65f00d062f803a3ae56a8ec764ef7cd26cdde384d85e19">AmbientTexture</enumvalue>
      <enumvalue file="classMagnum_1_1Trade_1_1PhongMaterialData.html" anchor="a13618b622d87df20f9b65f00d062f803ae712876b5313699d4e38e6f70c7c725e">DiffuseTexture</enumvalue>
      <enumvalue file="classMagnum_1_1Trade_1_1PhongMaterialData.html" anchor="a13618b622d87df20f9b65f00d062f803a8f19fa0f2cc4078c09a89d31205980e7">SpecularTexture</enumvalue>
    </member>
    <member kind="typedef">
      <type>Containers::EnumSet&lt; Flag &gt;</type>
      <name>Flags</name>
      <anchorfile>classMagnum_1_1Trade_1_1PhongMaterialData.html</anchorfile>
      <anchor>abe5616dfbd96d288a563c7b955fb80dd</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>AmbientTextureID</name>
      <anchorfile>classMagnum_1_1Trade_1_1PhongMaterialData.html</anchorfile>
      <anchor>adeeae54e01bc86a0cb4cc025be623dd2a60525165e4b63ce3d6b958d7f57833fc</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DiffuseTextureID</name>
      <anchorfile>classMagnum_1_1Trade_1_1PhongMaterialData.html</anchorfile>
      <anchor>adeeae54e01bc86a0cb4cc025be623dd2a8ce0cffb8630f599dd0adb1c5e696b0d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SpecularTextureID</name>
      <anchorfile>classMagnum_1_1Trade_1_1PhongMaterialData.html</anchorfile>
      <anchor>adeeae54e01bc86a0cb4cc025be623dd2a3d470e854c71c4b6e4849c09a4d36f47</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PhongMaterialData</name>
      <anchorfile>classMagnum_1_1Trade_1_1PhongMaterialData.html</anchorfile>
      <anchor>abe571a296a6a4a940a7169b272930989</anchor>
      <arglist>(Flags flags, Float shininess, const void *importerState=nullptr) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PhongMaterialData</name>
      <anchorfile>classMagnum_1_1Trade_1_1PhongMaterialData.html</anchorfile>
      <anchor>a1e670d8b4772d9c0f677c37762e4965f</anchor>
      <arglist>(const PhongMaterialData &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PhongMaterialData</name>
      <anchorfile>classMagnum_1_1Trade_1_1PhongMaterialData.html</anchorfile>
      <anchor>a4e519f49e85251966541adf562d405ae</anchor>
      <arglist>(PhongMaterialData &amp;&amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type>PhongMaterialData &amp;</type>
      <name>operator=</name>
      <anchorfile>classMagnum_1_1Trade_1_1PhongMaterialData.html</anchorfile>
      <anchor>addb372273a69360aaf12594c5165bf3c</anchor>
      <arglist>(const PhongMaterialData &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>PhongMaterialData &amp;</type>
      <name>operator=</name>
      <anchorfile>classMagnum_1_1Trade_1_1PhongMaterialData.html</anchorfile>
      <anchor>a4427b2acf3b2ffa452ed2285b3a4fa76</anchor>
      <arglist>(PhongMaterialData &amp;&amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type>Flags</type>
      <name>flags</name>
      <anchorfile>classMagnum_1_1Trade_1_1PhongMaterialData.html</anchorfile>
      <anchor>aa18cb5979d862369a829486d3bce489c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Color3 &amp;</type>
      <name>ambientColor</name>
      <anchorfile>classMagnum_1_1Trade_1_1PhongMaterialData.html</anchorfile>
      <anchor>a32d54318638f6a45be7dee763ba8d074</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Color3</type>
      <name>ambientColor</name>
      <anchorfile>classMagnum_1_1Trade_1_1PhongMaterialData.html</anchorfile>
      <anchor>ada2d41c855116435b07f4f9d5fb698be</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>UnsignedInt &amp;</type>
      <name>ambientTexture</name>
      <anchorfile>classMagnum_1_1Trade_1_1PhongMaterialData.html</anchorfile>
      <anchor>a0da9570f0cce4085aa822a761bea9d14</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>UnsignedInt</type>
      <name>ambientTexture</name>
      <anchorfile>classMagnum_1_1Trade_1_1PhongMaterialData.html</anchorfile>
      <anchor>af5f27703667c9f127e78dbca66fdac35</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Color3 &amp;</type>
      <name>diffuseColor</name>
      <anchorfile>classMagnum_1_1Trade_1_1PhongMaterialData.html</anchorfile>
      <anchor>a7e74a2629f833e6efc6d65a0664f21fc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Color3</type>
      <name>diffuseColor</name>
      <anchorfile>classMagnum_1_1Trade_1_1PhongMaterialData.html</anchorfile>
      <anchor>a3856b49d8454effed2f0ee89bf5b262b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>UnsignedInt &amp;</type>
      <name>diffuseTexture</name>
      <anchorfile>classMagnum_1_1Trade_1_1PhongMaterialData.html</anchorfile>
      <anchor>a5f14c94d710850395d149d0cb056fc99</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>UnsignedInt</type>
      <name>diffuseTexture</name>
      <anchorfile>classMagnum_1_1Trade_1_1PhongMaterialData.html</anchorfile>
      <anchor>a39ac869f7117f9457e8da482ab9d91db</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Color3 &amp;</type>
      <name>specularColor</name>
      <anchorfile>classMagnum_1_1Trade_1_1PhongMaterialData.html</anchorfile>
      <anchor>af3e2b99d9d5e7797bf5a7f34690fe654</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Color3</type>
      <name>specularColor</name>
      <anchorfile>classMagnum_1_1Trade_1_1PhongMaterialData.html</anchorfile>
      <anchor>aa751c4c6a52cbb0cae9bc91161fff1ca</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>UnsignedInt &amp;</type>
      <name>specularTexture</name>
      <anchorfile>classMagnum_1_1Trade_1_1PhongMaterialData.html</anchorfile>
      <anchor>abc537e77b1f5454fb733d3c92f9bff6d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>UnsignedInt</type>
      <name>specularTexture</name>
      <anchorfile>classMagnum_1_1Trade_1_1PhongMaterialData.html</anchorfile>
      <anchor>a43f42fa32a87d0be59ef1b74cb5e6ebb</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Float</type>
      <name>shininess</name>
      <anchorfile>classMagnum_1_1Trade_1_1PhongMaterialData.html</anchorfile>
      <anchor>a7fa25ae3d4bf80bb2b7da2b80bb991ec</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Magnum::Trade::PngImageConverter</name>
    <filename>classMagnum_1_1Trade_1_1PngImageConverter.html</filename>
    <base>Magnum::Trade::AbstractImageConverter</base>
    <member kind="function">
      <type></type>
      <name>PngImageConverter</name>
      <anchorfile>classMagnum_1_1Trade_1_1PngImageConverter.html</anchorfile>
      <anchor>a40e24beede9e0b19520f5951c4a05f1e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PngImageConverter</name>
      <anchorfile>classMagnum_1_1Trade_1_1PngImageConverter.html</anchorfile>
      <anchor>a5dfdb17ac581eae30b2f9fe5da481508</anchor>
      <arglist>(PluginManager::AbstractManager &amp;manager, const std::string &amp;plugin)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Magnum::Trade::PngImporter</name>
    <filename>classMagnum_1_1Trade_1_1PngImporter.html</filename>
    <base>Magnum::Trade::AbstractImporter</base>
    <member kind="function">
      <type></type>
      <name>PngImporter</name>
      <anchorfile>classMagnum_1_1Trade_1_1PngImporter.html</anchorfile>
      <anchor>aa4dfc44a15f47850b1c41608c6a228b2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PngImporter</name>
      <anchorfile>classMagnum_1_1Trade_1_1PngImporter.html</anchorfile>
      <anchor>ab3dd63cbd09bc3c6a79312a7050df0e4</anchor>
      <arglist>(PluginManager::AbstractManager &amp;manager, const std::string &amp;plugin)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Magnum::Trade::SceneData</name>
    <filename>classMagnum_1_1Trade_1_1SceneData.html</filename>
    <member kind="function">
      <type></type>
      <name>SceneData</name>
      <anchorfile>classMagnum_1_1Trade_1_1SceneData.html</anchorfile>
      <anchor>a0c582d6c2acc94b4e7e670933148941c</anchor>
      <arglist>(std::vector&lt; UnsignedInt &gt; children2D, std::vector&lt; UnsignedInt &gt; children3D, const void *importerState=nullptr)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SceneData</name>
      <anchorfile>classMagnum_1_1Trade_1_1SceneData.html</anchorfile>
      <anchor>a2156613e193b93a8ca297a42447db601</anchor>
      <arglist>(const SceneData &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SceneData</name>
      <anchorfile>classMagnum_1_1Trade_1_1SceneData.html</anchorfile>
      <anchor>a7f1181e4143dc2afc4bd4a661ac560d5</anchor>
      <arglist>(SceneData &amp;&amp;) noexcept</arglist>
    </member>
    <member kind="function">
      <type>SceneData &amp;</type>
      <name>operator=</name>
      <anchorfile>classMagnum_1_1Trade_1_1SceneData.html</anchorfile>
      <anchor>add6c3c87c94b1584166c59f19b648075</anchor>
      <arglist>(const SceneData &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>SceneData &amp;</type>
      <name>operator=</name>
      <anchorfile>classMagnum_1_1Trade_1_1SceneData.html</anchorfile>
      <anchor>aba5008d1a3a51241b06513fb85d3404c</anchor>
      <arglist>(SceneData &amp;&amp;) noexcept</arglist>
    </member>
    <member kind="function">
      <type>const std::vector&lt; UnsignedInt &gt; &amp;</type>
      <name>children2D</name>
      <anchorfile>classMagnum_1_1Trade_1_1SceneData.html</anchorfile>
      <anchor>a0eeede63be8e38775a6d7205a09201c9</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const std::vector&lt; UnsignedInt &gt; &amp;</type>
      <name>children3D</name>
      <anchorfile>classMagnum_1_1Trade_1_1SceneData.html</anchorfile>
      <anchor>a56f7ebd2b9d84507f674c1dcf317c58d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const void *</type>
      <name>importerState</name>
      <anchorfile>classMagnum_1_1Trade_1_1SceneData.html</anchorfile>
      <anchor>ad483df54344bc0e7e11374929c9b7677</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Magnum::Trade::StanfordImporter</name>
    <filename>classMagnum_1_1Trade_1_1StanfordImporter.html</filename>
    <base>Magnum::Trade::AbstractImporter</base>
    <member kind="function">
      <type></type>
      <name>StanfordImporter</name>
      <anchorfile>classMagnum_1_1Trade_1_1StanfordImporter.html</anchorfile>
      <anchor>a6fa64dd5dc0a257c039292509c624ec6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>StanfordImporter</name>
      <anchorfile>classMagnum_1_1Trade_1_1StanfordImporter.html</anchorfile>
      <anchor>a05793db47f6296de0164a23746654725</anchor>
      <arglist>(PluginManager::AbstractManager &amp;manager, const std::string &amp;plugin)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Magnum::Trade::StbImageConverter</name>
    <filename>classMagnum_1_1Trade_1_1StbImageConverter.html</filename>
    <base>Magnum::Trade::AbstractImageConverter</base>
    <member kind="enumeration">
      <type></type>
      <name>Format</name>
      <anchorfile>classMagnum_1_1Trade_1_1StbImageConverter.html</anchorfile>
      <anchor>a1cea7b044053b2cc098ffdd84f440c8c</anchor>
      <arglist></arglist>
      <enumvalue file="classMagnum_1_1Trade_1_1StbImageConverter.html" anchor="a1cea7b044053b2cc098ffdd84f440c8ca021d8346462df53d4272607b0f41a8d8">Bmp</enumvalue>
      <enumvalue file="classMagnum_1_1Trade_1_1StbImageConverter.html" anchor="a1cea7b044053b2cc098ffdd84f440c8caf8a4be0d1aba40b00ba882376e50779c">Hdr</enumvalue>
      <enumvalue file="classMagnum_1_1Trade_1_1StbImageConverter.html" anchor="a1cea7b044053b2cc098ffdd84f440c8caf8fd4f1b5b05c6b1cc6a661141fd4f54">Png</enumvalue>
      <enumvalue file="classMagnum_1_1Trade_1_1StbImageConverter.html" anchor="a1cea7b044053b2cc098ffdd84f440c8ca38f4e5f66749f755f54ef67faa2058dc">Tga</enumvalue>
    </member>
    <member kind="function">
      <type></type>
      <name>StbImageConverter</name>
      <anchorfile>classMagnum_1_1Trade_1_1StbImageConverter.html</anchorfile>
      <anchor>a783ed719d0de86faa795fe5ceb6283d8</anchor>
      <arglist>(Format format)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>StbImageConverter</name>
      <anchorfile>classMagnum_1_1Trade_1_1StbImageConverter.html</anchorfile>
      <anchor>ad359fe3bbb622866083ed069539fa23f</anchor>
      <arglist>(PluginManager::AbstractManager &amp;manager, const std::string &amp;plugin)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Magnum::Trade::StbImageImporter</name>
    <filename>classMagnum_1_1Trade_1_1StbImageImporter.html</filename>
    <base>Magnum::Trade::AbstractImporter</base>
    <member kind="function">
      <type></type>
      <name>StbImageImporter</name>
      <anchorfile>classMagnum_1_1Trade_1_1StbImageImporter.html</anchorfile>
      <anchor>a12a0f8024022018157e171fb0a2a24b1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>StbImageImporter</name>
      <anchorfile>classMagnum_1_1Trade_1_1StbImageImporter.html</anchorfile>
      <anchor>adfd862eff86b731884f1dffc77a8facd</anchor>
      <arglist>(PluginManager::AbstractManager &amp;manager, const std::string &amp;plugin)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Magnum::Trade::TextureData</name>
    <filename>classMagnum_1_1Trade_1_1TextureData.html</filename>
    <member kind="enumeration">
      <type></type>
      <name>Type</name>
      <anchorfile>classMagnum_1_1Trade_1_1TextureData.html</anchorfile>
      <anchor>a01347bdc3cd1a6d14933998090d91425</anchor>
      <arglist></arglist>
      <enumvalue file="classMagnum_1_1Trade_1_1TextureData.html" anchor="a01347bdc3cd1a6d14933998090d91425adc7f989aa32631adaea4eb6a609b0de4">Texture1D</enumvalue>
      <enumvalue file="classMagnum_1_1Trade_1_1TextureData.html" anchor="a01347bdc3cd1a6d14933998090d91425aa6e2bae752d3bf4e34cb392bca789995">Texture2D</enumvalue>
      <enumvalue file="classMagnum_1_1Trade_1_1TextureData.html" anchor="a01347bdc3cd1a6d14933998090d91425a89c915587e16bcf8963be7cf41a0d9fd">Texture3D</enumvalue>
      <enumvalue file="classMagnum_1_1Trade_1_1TextureData.html" anchor="a01347bdc3cd1a6d14933998090d91425aa296104f0c61a9cf39f4824d05315e12">Cube</enumvalue>
    </member>
    <member kind="function">
      <type></type>
      <name>TextureData</name>
      <anchorfile>classMagnum_1_1Trade_1_1TextureData.html</anchorfile>
      <anchor>a071c04e369d6cb9d7ff902e0675987c9</anchor>
      <arglist>(Type type, Sampler::Filter minificationFilter, Sampler::Filter magnificationFilter, Sampler::Mipmap mipmapFilter, Array3D&lt; Sampler::Wrapping &gt; wrapping, UnsignedInt image, const void *importerState=nullptr) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TextureData</name>
      <anchorfile>classMagnum_1_1Trade_1_1TextureData.html</anchorfile>
      <anchor>aa22ff24104a9d5bff40c21b466b83db7</anchor>
      <arglist>(const TextureData &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TextureData</name>
      <anchorfile>classMagnum_1_1Trade_1_1TextureData.html</anchorfile>
      <anchor>a3248ff78ba97da7b3860365ae02017f8</anchor>
      <arglist>(TextureData &amp;&amp;) noexcept=default</arglist>
    </member>
    <member kind="function">
      <type>TextureData &amp;</type>
      <name>operator=</name>
      <anchorfile>classMagnum_1_1Trade_1_1TextureData.html</anchorfile>
      <anchor>a907f30225492bcbf68d9ddcff45ee16d</anchor>
      <arglist>(const TextureData &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>TextureData &amp;</type>
      <name>operator=</name>
      <anchorfile>classMagnum_1_1Trade_1_1TextureData.html</anchorfile>
      <anchor>aac60bad6af35966aa6b2848a27f2b38e</anchor>
      <arglist>(TextureData &amp;&amp;) noexcept=default</arglist>
    </member>
    <member kind="function">
      <type>Type</type>
      <name>type</name>
      <anchorfile>classMagnum_1_1Trade_1_1TextureData.html</anchorfile>
      <anchor>aa81c8b9ad25cd990c79aa28104c4db23</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Sampler::Filter</type>
      <name>minificationFilter</name>
      <anchorfile>classMagnum_1_1Trade_1_1TextureData.html</anchorfile>
      <anchor>a36aa9ee269e0f580f0cad98743ba936a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Sampler::Filter</type>
      <name>magnificationFilter</name>
      <anchorfile>classMagnum_1_1Trade_1_1TextureData.html</anchorfile>
      <anchor>a95034301e8dcad0bc70c67212f26d278</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Sampler::Mipmap</type>
      <name>mipmapFilter</name>
      <anchorfile>classMagnum_1_1Trade_1_1TextureData.html</anchorfile>
      <anchor>a8f95178c02e3bd3c30662b852f832f5c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Array3D&lt; Sampler::Wrapping &gt;</type>
      <name>wrapping</name>
      <anchorfile>classMagnum_1_1Trade_1_1TextureData.html</anchorfile>
      <anchor>ad539be1af8e2dcc7d2780d3681508f08</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>UnsignedInt</type>
      <name>image</name>
      <anchorfile>classMagnum_1_1Trade_1_1TextureData.html</anchorfile>
      <anchor>a6255c97f77786f2f5bd1a257a154084f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const void *</type>
      <name>importerState</name>
      <anchorfile>classMagnum_1_1Trade_1_1TextureData.html</anchorfile>
      <anchor>a958652c94a61e499b9a95b6563fd30c5</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>classMagnum_1_1Trade_1_1TextureData.html</anchorfile>
      <anchor>a5fb39c5f1a765358446a9ef3caa31682</anchor>
      <arglist>(Debug &amp;debug, TextureData::Type value)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Magnum::Trade::TgaHeader</name>
    <filename>structMagnum_1_1Trade_1_1TgaHeader.html</filename>
    <member kind="variable">
      <type>UnsignedByte</type>
      <name>identsize</name>
      <anchorfile>structMagnum_1_1Trade_1_1TgaHeader.html</anchorfile>
      <anchor>a7054cecca1034bf4fe72ad5d973eae97</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>UnsignedByte</type>
      <name>colorMapType</name>
      <anchorfile>structMagnum_1_1Trade_1_1TgaHeader.html</anchorfile>
      <anchor>ad6dceb9f563e31a90ef25184c70e378b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>UnsignedByte</type>
      <name>imageType</name>
      <anchorfile>structMagnum_1_1Trade_1_1TgaHeader.html</anchorfile>
      <anchor>a7b6d64177ae150e4dfea77be10439cdb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>UnsignedShort</type>
      <name>colorMapStart</name>
      <anchorfile>structMagnum_1_1Trade_1_1TgaHeader.html</anchorfile>
      <anchor>ae20a378752bf193bf66f5989d3e10ec9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>UnsignedShort</type>
      <name>colorMapLength</name>
      <anchorfile>structMagnum_1_1Trade_1_1TgaHeader.html</anchorfile>
      <anchor>aa71915293f3220bd6487082382d5dcd1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>UnsignedByte</type>
      <name>colorMapBpp</name>
      <anchorfile>structMagnum_1_1Trade_1_1TgaHeader.html</anchorfile>
      <anchor>aa259522621eb33773c0811e64107d1b3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>UnsignedShort</type>
      <name>beginX</name>
      <anchorfile>structMagnum_1_1Trade_1_1TgaHeader.html</anchorfile>
      <anchor>a2280c06726be106c7358f539f5ca115d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>UnsignedShort</type>
      <name>beginY</name>
      <anchorfile>structMagnum_1_1Trade_1_1TgaHeader.html</anchorfile>
      <anchor>a033fbc1ab0e9fe405f4884ab3be54769</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>UnsignedShort</type>
      <name>width</name>
      <anchorfile>structMagnum_1_1Trade_1_1TgaHeader.html</anchorfile>
      <anchor>aeb3be24ff41a963fdea858c1669d2b51</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>UnsignedShort</type>
      <name>height</name>
      <anchorfile>structMagnum_1_1Trade_1_1TgaHeader.html</anchorfile>
      <anchor>a236c52fbff737a75b9386df47307087d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>UnsignedByte</type>
      <name>bpp</name>
      <anchorfile>structMagnum_1_1Trade_1_1TgaHeader.html</anchorfile>
      <anchor>a507ecccb0a61781ffeefd564f34a03af</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>UnsignedByte</type>
      <name>descriptor</name>
      <anchorfile>structMagnum_1_1Trade_1_1TgaHeader.html</anchorfile>
      <anchor>a50cf26f43cf071fe4a5661e721353150</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Magnum::Trade::TgaImageConverter</name>
    <filename>classMagnum_1_1Trade_1_1TgaImageConverter.html</filename>
    <base>Magnum::Trade::AbstractImageConverter</base>
    <member kind="function">
      <type></type>
      <name>TgaImageConverter</name>
      <anchorfile>classMagnum_1_1Trade_1_1TgaImageConverter.html</anchorfile>
      <anchor>aff6cbfa359ebb4ab3c7ca37da1d59aeb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TgaImageConverter</name>
      <anchorfile>classMagnum_1_1Trade_1_1TgaImageConverter.html</anchorfile>
      <anchor>aaef2517042d9d4ebaf1b512e0a17ff70</anchor>
      <arglist>(PluginManager::AbstractManager &amp;manager, const std::string &amp;plugin)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Magnum::Trade::TgaImporter</name>
    <filename>classMagnum_1_1Trade_1_1TgaImporter.html</filename>
    <base>Magnum::Trade::AbstractImporter</base>
    <member kind="function">
      <type></type>
      <name>TgaImporter</name>
      <anchorfile>classMagnum_1_1Trade_1_1TgaImporter.html</anchorfile>
      <anchor>acfe78313e5acf5e2ce63edc087bedc44</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TgaImporter</name>
      <anchorfile>classMagnum_1_1Trade_1_1TgaImporter.html</anchorfile>
      <anchor>ad5bd85df8e7646a71487ec8ff6ef9a89</anchor>
      <arglist>(PluginManager::AbstractManager &amp;manager, const std::string &amp;plugin)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Magnum::TransformFeedback</name>
    <filename>classMagnum_1_1TransformFeedback.html</filename>
    <base>Magnum::AbstractObject</base>
    <member kind="enumeration">
      <type></type>
      <name>PrimitiveMode</name>
      <anchorfile>classMagnum_1_1TransformFeedback.html</anchorfile>
      <anchor>a2dc3b3a85c831f72ebf6548c91772cc8</anchor>
      <arglist></arglist>
      <enumvalue file="classMagnum_1_1TransformFeedback.html" anchor="a2dc3b3a85c831f72ebf6548c91772cc8a75dd5f1160a3f02b6fae89c54361a1b3">Points</enumvalue>
      <enumvalue file="classMagnum_1_1TransformFeedback.html" anchor="a2dc3b3a85c831f72ebf6548c91772cc8aa0b0293a2db49f5f93c15a62e095c819">Lines</enumvalue>
      <enumvalue file="classMagnum_1_1TransformFeedback.html" anchor="a2dc3b3a85c831f72ebf6548c91772cc8a7ca66fdfaad3eb33fc65d7490178f856">Triangles</enumvalue>
    </member>
    <member kind="function">
      <type></type>
      <name>TransformFeedback</name>
      <anchorfile>classMagnum_1_1TransformFeedback.html</anchorfile>
      <anchor>a4b05e533a8991c137d8410167a1b7284</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TransformFeedback</name>
      <anchorfile>classMagnum_1_1TransformFeedback.html</anchorfile>
      <anchor>a353b7fda89ad278e620d01e12f4164a5</anchor>
      <arglist>(NoCreateT) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TransformFeedback</name>
      <anchorfile>classMagnum_1_1TransformFeedback.html</anchorfile>
      <anchor>a8ad833d1beb67e87e5526fb67b4cd7aa</anchor>
      <arglist>(const TransformFeedback &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TransformFeedback</name>
      <anchorfile>classMagnum_1_1TransformFeedback.html</anchorfile>
      <anchor>a76e9513a48739772dd8bd090b21f69f4</anchor>
      <arglist>(TransformFeedback &amp;&amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~TransformFeedback</name>
      <anchorfile>classMagnum_1_1TransformFeedback.html</anchorfile>
      <anchor>a8764d40b6472b27a74223d40f2a3a9d9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>TransformFeedback &amp;</type>
      <name>operator=</name>
      <anchorfile>classMagnum_1_1TransformFeedback.html</anchorfile>
      <anchor>aa7c74ad30db0a748ab345ad9eb490770</anchor>
      <arglist>(const TransformFeedback &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>TransformFeedback &amp;</type>
      <name>operator=</name>
      <anchorfile>classMagnum_1_1TransformFeedback.html</anchorfile>
      <anchor>a132323cfff6a68d331ce01d26f747ff4</anchor>
      <arglist>(TransformFeedback &amp;&amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type>GLuint</type>
      <name>id</name>
      <anchorfile>classMagnum_1_1TransformFeedback.html</anchorfile>
      <anchor>a29136a1970f0b315bb2d206b9a9cf2c0</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>GLuint</type>
      <name>release</name>
      <anchorfile>classMagnum_1_1TransformFeedback.html</anchorfile>
      <anchor>aa8ceb77775f54b87cc42f66190f4ebd3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>label</name>
      <anchorfile>classMagnum_1_1TransformFeedback.html</anchorfile>
      <anchor>a3e4a78e5907b72a9c7be03d82e2d4ed6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>TransformFeedback &amp;</type>
      <name>setLabel</name>
      <anchorfile>classMagnum_1_1TransformFeedback.html</anchorfile>
      <anchor>aeb4e118a801aedce019585e31aa06d94</anchor>
      <arglist>(const std::string &amp;label)</arglist>
    </member>
    <member kind="function">
      <type>TransformFeedback &amp;</type>
      <name>setLabel</name>
      <anchorfile>classMagnum_1_1TransformFeedback.html</anchorfile>
      <anchor>a0879bc33e9a6b4637bfef9fc93f606f8</anchor>
      <arglist>(const char(&amp;label)[size])</arglist>
    </member>
    <member kind="function">
      <type>TransformFeedback &amp;</type>
      <name>attachBuffer</name>
      <anchorfile>classMagnum_1_1TransformFeedback.html</anchorfile>
      <anchor>a96ff80b5689b7a9c024a365d24f0b35d</anchor>
      <arglist>(UnsignedInt index, Buffer &amp;buffer, GLintptr offset, GLsizeiptr size)</arglist>
    </member>
    <member kind="function">
      <type>TransformFeedback &amp;</type>
      <name>attachBuffer</name>
      <anchorfile>classMagnum_1_1TransformFeedback.html</anchorfile>
      <anchor>a5a32cfb445c3e51c9e9e6a4ce4196da4</anchor>
      <arglist>(UnsignedInt index, Buffer &amp;buffer)</arglist>
    </member>
    <member kind="function">
      <type>TransformFeedback &amp;</type>
      <name>attachBuffers</name>
      <anchorfile>classMagnum_1_1TransformFeedback.html</anchorfile>
      <anchor>a7e4dc4b9c858d1f073c3334ece2988f9</anchor>
      <arglist>(UnsignedInt firstIndex, std::initializer_list&lt; std::tuple&lt; Buffer *, GLintptr, GLsizeiptr &gt;&gt; buffers)</arglist>
    </member>
    <member kind="function">
      <type>TransformFeedback &amp;</type>
      <name>attachBuffers</name>
      <anchorfile>classMagnum_1_1TransformFeedback.html</anchorfile>
      <anchor>a9c1d67a0cd9926701c1020206740f058</anchor>
      <arglist>(UnsignedInt firstIndex, std::initializer_list&lt; Buffer * &gt; buffers)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>begin</name>
      <anchorfile>classMagnum_1_1TransformFeedback.html</anchorfile>
      <anchor>ac2df025c87ff513fd35ca2ee5e76686c</anchor>
      <arglist>(AbstractShaderProgram &amp;shader, PrimitiveMode mode)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>pause</name>
      <anchorfile>classMagnum_1_1TransformFeedback.html</anchorfile>
      <anchor>acec1491a9213b545e46fdbc85ec85732</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>resume</name>
      <anchorfile>classMagnum_1_1TransformFeedback.html</anchorfile>
      <anchor>a8f3c7fc53cff5f58feaa64304d8751f1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>end</name>
      <anchorfile>classMagnum_1_1TransformFeedback.html</anchorfile>
      <anchor>a6a75358154bc5e8817b484743d3dc284</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Int</type>
      <name>maxInterleavedComponents</name>
      <anchorfile>classMagnum_1_1TransformFeedback.html</anchorfile>
      <anchor>a876f305633d471cd8178b1d2fb3337fd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Int</type>
      <name>maxSeparateAttributes</name>
      <anchorfile>classMagnum_1_1TransformFeedback.html</anchorfile>
      <anchor>a4f26460e1c7277a13e55630c4dfab4db</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Int</type>
      <name>maxSeparateComponents</name>
      <anchorfile>classMagnum_1_1TransformFeedback.html</anchorfile>
      <anchor>ae89ce23e764ebe5234cb045548072957</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Int</type>
      <name>maxBuffers</name>
      <anchorfile>classMagnum_1_1TransformFeedback.html</anchorfile>
      <anchor>ab4ed4aadc6833d97d9f4c37febddc342</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Int</type>
      <name>maxVertexStreams</name>
      <anchorfile>classMagnum_1_1TransformFeedback.html</anchorfile>
      <anchor>a9ab2ec32e5a995cb0cdd8906e796945a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static TransformFeedback</type>
      <name>wrap</name>
      <anchorfile>classMagnum_1_1TransformFeedback.html</anchorfile>
      <anchor>a624c1c03be6e5afbae2c31e7f65e3d9e</anchor>
      <arglist>(GLuint id, ObjectFlags flags={})</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Magnum::Ui::AbstractPlane</name>
    <filename>classMagnum_1_1Ui_1_1AbstractPlane.html</filename>
    <base protection="private">LinkedListItem&lt; AbstractPlane, AbstractUserInterface &gt;</base>
    <member kind="typedef">
      <type>PlaneFlag</type>
      <name>Flag</name>
      <anchorfile>classMagnum_1_1Ui_1_1AbstractPlane.html</anchorfile>
      <anchor>a3d20d4a4de7c712c767d7949ca79c054</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>PlaneFlags</type>
      <name>Flags</name>
      <anchorfile>classMagnum_1_1Ui_1_1AbstractPlane.html</anchorfile>
      <anchor>a97723d0cf8a3f137a9b0ff12145f8460</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AbstractPlane</name>
      <anchorfile>classMagnum_1_1Ui_1_1AbstractPlane.html</anchorfile>
      <anchor>a1cd2aad88f535870f8fce43fd18c4d5f</anchor>
      <arglist>(AbstractUserInterface &amp;ui, const Anchor &amp;anchor, const Range2D &amp;padding, const Vector2 &amp;margin)</arglist>
    </member>
    <member kind="function">
      <type>AbstractUserInterface &amp;</type>
      <name>ui</name>
      <anchorfile>classMagnum_1_1Ui_1_1AbstractPlane.html</anchorfile>
      <anchor>a5dfa75c99b10b3c388e9649d70eebad5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const AbstractUserInterface &amp;</type>
      <name>ui</name>
      <anchorfile>classMagnum_1_1Ui_1_1AbstractPlane.html</anchorfile>
      <anchor>ae11b9678d2eb6ebef9d754486c11434b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Range2D</type>
      <name>rect</name>
      <anchorfile>classMagnum_1_1Ui_1_1AbstractPlane.html</anchorfile>
      <anchor>afa25715a8f93584a184b36f57157b77e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Range2D</type>
      <name>padding</name>
      <anchorfile>classMagnum_1_1Ui_1_1AbstractPlane.html</anchorfile>
      <anchor>a461215f8cb28222da9aa626a44b014f0</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Vector2</type>
      <name>margin</name>
      <anchorfile>classMagnum_1_1Ui_1_1AbstractPlane.html</anchorfile>
      <anchor>a0af4ed5d5064d772c30c828592e693f3</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>PlaneFlags</type>
      <name>flags</name>
      <anchorfile>classMagnum_1_1Ui_1_1AbstractPlane.html</anchorfile>
      <anchor>a9043121b195f75e4636007bc60cbdec1</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>AbstractPlane *</type>
      <name>previousActivePlane</name>
      <anchorfile>classMagnum_1_1Ui_1_1AbstractPlane.html</anchorfile>
      <anchor>a240c78a3086c504a5c6ce0c0ae7c6062</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const AbstractPlane *</type>
      <name>previousActivePlane</name>
      <anchorfile>classMagnum_1_1Ui_1_1AbstractPlane.html</anchorfile>
      <anchor>a66696e809f1711526740da8bad799e3c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>AbstractPlane *</type>
      <name>nextActivePlane</name>
      <anchorfile>classMagnum_1_1Ui_1_1AbstractPlane.html</anchorfile>
      <anchor>ab4e74d5c0611ea1f55d4d2bb902952b4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const AbstractPlane *</type>
      <name>nextActivePlane</name>
      <anchorfile>classMagnum_1_1Ui_1_1AbstractPlane.html</anchorfile>
      <anchor>a1e9045fe8722d8c251002e619084a8ea</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>activate</name>
      <anchorfile>classMagnum_1_1Ui_1_1AbstractPlane.html</anchorfile>
      <anchor>a79c67701947303af216d251a1eff6e6f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>hide</name>
      <anchorfile>classMagnum_1_1Ui_1_1AbstractPlane.html</anchorfile>
      <anchor>a6eb8c3f394c4981c4e02427d40bfdc54</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Magnum::Ui::AbstractUiShader</name>
    <filename>classMagnum_1_1Ui_1_1AbstractUiShader.html</filename>
    <base>Magnum::AbstractShaderProgram</base>
    <member kind="function">
      <type>AbstractUiShader &amp;</type>
      <name>setTransformationProjectionMatrix</name>
      <anchorfile>classMagnum_1_1Ui_1_1AbstractUiShader.html</anchorfile>
      <anchor>ae325c20907c5301821472e50ed78809a</anchor>
      <arglist>(const Matrix3 &amp;matrix)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Magnum::Ui::AbstractUserInterface</name>
    <filename>classMagnum_1_1Ui_1_1AbstractUserInterface.html</filename>
    <base protection="private">LinkedList&lt; AbstractPlane &gt;</base>
    <member kind="function">
      <type></type>
      <name>AbstractUserInterface</name>
      <anchorfile>classMagnum_1_1Ui_1_1AbstractUserInterface.html</anchorfile>
      <anchor>a31c9a98612d2d3ac18487499bc9833dc</anchor>
      <arglist>(const Vector2 &amp;size, const Vector2i &amp;screenSize)</arglist>
    </member>
    <member kind="function">
      <type>Vector2</type>
      <name>size</name>
      <anchorfile>classMagnum_1_1Ui_1_1AbstractUserInterface.html</anchorfile>
      <anchor>ae912b78efeafa4c1b9692ced7fda2dec</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>AbstractPlane *</type>
      <name>activePlane</name>
      <anchorfile>classMagnum_1_1Ui_1_1AbstractUserInterface.html</anchorfile>
      <anchor>a6727b8cc09e0158ef48314e4608194b4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const AbstractPlane *</type>
      <name>activePlane</name>
      <anchorfile>classMagnum_1_1Ui_1_1AbstractUserInterface.html</anchorfile>
      <anchor>a43731d06d5980bfa362fc86ccf1cbf5c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>handleMoveEvent</name>
      <anchorfile>classMagnum_1_1Ui_1_1AbstractUserInterface.html</anchorfile>
      <anchor>abd9c725ce32b0a9da964b3bf62824541</anchor>
      <arglist>(const Vector2i &amp;screenPosition)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>handlePressEvent</name>
      <anchorfile>classMagnum_1_1Ui_1_1AbstractUserInterface.html</anchorfile>
      <anchor>a1eeb34cc255306f4a3e3213217a8d95f</anchor>
      <arglist>(const Vector2i &amp;screenPosition)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>handleReleaseEvent</name>
      <anchorfile>classMagnum_1_1Ui_1_1AbstractUserInterface.html</anchorfile>
      <anchor>adc1d10e9c1a750ab8d764cc23d753dd9</anchor>
      <arglist>(const Vector2i &amp;screenPosition)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Magnum::Ui::Anchor</name>
    <filename>classMagnum_1_1Ui_1_1Anchor.html</filename>
    <member kind="function">
      <type></type>
      <name>Anchor</name>
      <anchorfile>classMagnum_1_1Ui_1_1Anchor.html</anchorfile>
      <anchor>a465094f9180d12ed3d04f962a673bed1</anchor>
      <arglist>(Snaps snaps, const Range2D &amp;rect)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Anchor</name>
      <anchorfile>classMagnum_1_1Ui_1_1Anchor.html</anchorfile>
      <anchor>a28661db2fb9e2f49a8a988c1ced9e64a</anchor>
      <arglist>(Snaps snaps, const Vector2 &amp;size={})</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Anchor</name>
      <anchorfile>classMagnum_1_1Ui_1_1Anchor.html</anchorfile>
      <anchor>a20510497b32788a815947150663ee571</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Anchor</name>
      <anchorfile>classMagnum_1_1Ui_1_1Anchor.html</anchorfile>
      <anchor>a85c8a549f0a7f2cf5c69dccadeba1a97</anchor>
      <arglist>(Snaps snaps, const Widget &amp;widget, const Range2D &amp;rect)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Anchor</name>
      <anchorfile>classMagnum_1_1Ui_1_1Anchor.html</anchorfile>
      <anchor>aafb58c8db86923ee742499755d074aeb</anchor>
      <arglist>(Snaps snaps, const Widget &amp;widget, const Vector2 &amp;size={})</arglist>
    </member>
    <member kind="function">
      <type>Range2D</type>
      <name>rect</name>
      <anchorfile>classMagnum_1_1Ui_1_1Anchor.html</anchorfile>
      <anchor>adae34f1e14c7b7bb434f371b68789eb9</anchor>
      <arglist>(const AbstractPlane &amp;plane) const </arglist>
    </member>
    <member kind="function">
      <type>Range2D</type>
      <name>rect</name>
      <anchorfile>classMagnum_1_1Ui_1_1Anchor.html</anchorfile>
      <anchor>aef82aa4d96d54645abcc01c7a43e3eba</anchor>
      <arglist>(const AbstractUserInterface &amp;ui) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Magnum::Ui::BasicGLLayer</name>
    <filename>classMagnum_1_1Ui_1_1BasicGLLayer.html</filename>
    <templarg>VertexData</templarg>
    <base>Magnum::Ui::BasicLayer</base>
    <member kind="function">
      <type>Buffer &amp;</type>
      <name>buffer</name>
      <anchorfile>classMagnum_1_1Ui_1_1BasicGLLayer.html</anchorfile>
      <anchor>a350a949e9fdf518aaf787a0d1c9fd6a1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Mesh &amp;</type>
      <name>mesh</name>
      <anchorfile>classMagnum_1_1Ui_1_1BasicGLLayer.html</anchorfile>
      <anchor>a835778d2ba1f56f31f76503385389585</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reset</name>
      <anchorfile>classMagnum_1_1Ui_1_1BasicGLLayer.html</anchorfile>
      <anchor>aaf58c60adbc177fb921a1046198047dc</anchor>
      <arglist>(std::size_t elementCapacity, std::size_t dataCapacity, BufferUsage usage)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>update</name>
      <anchorfile>classMagnum_1_1Ui_1_1BasicGLLayer.html</anchorfile>
      <anchor>ae0cb956dbed82c1fc7cabcd67d31a35e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>draw</name>
      <anchorfile>classMagnum_1_1Ui_1_1BasicGLLayer.html</anchorfile>
      <anchor>a4a3a47a9d5f8fd9e235b646066fd11e7</anchor>
      <arglist>(AbstractUiShader &amp;shader)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Magnum::Ui::BasicInstancedGLLayer</name>
    <filename>classMagnum_1_1Ui_1_1BasicInstancedGLLayer.html</filename>
    <templarg>InstanceData</templarg>
    <base>Magnum::Ui::BasicInstancedLayer</base>
    <member kind="function">
      <type>Buffer &amp;</type>
      <name>buffer</name>
      <anchorfile>classMagnum_1_1Ui_1_1BasicInstancedGLLayer.html</anchorfile>
      <anchor>add1f2513a9386f24bd3c947a85f73b67</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Mesh &amp;</type>
      <name>mesh</name>
      <anchorfile>classMagnum_1_1Ui_1_1BasicInstancedGLLayer.html</anchorfile>
      <anchor>acc5a99df11f33ebdc8e9ff7ceae0ba4f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reset</name>
      <anchorfile>classMagnum_1_1Ui_1_1BasicInstancedGLLayer.html</anchorfile>
      <anchor>a011954671078ca02b4b5a698e93c7633</anchor>
      <arglist>(std::size_t capacity, BufferUsage usage)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>update</name>
      <anchorfile>classMagnum_1_1Ui_1_1BasicInstancedGLLayer.html</anchorfile>
      <anchor>ab44ea3d731a8fef5d8b23a968263ff4f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>draw</name>
      <anchorfile>classMagnum_1_1Ui_1_1BasicInstancedGLLayer.html</anchorfile>
      <anchor>a32c8efb389dbe7b2113590a76ae5f143</anchor>
      <arglist>(AbstractUiShader &amp;shader)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Magnum::Ui::BasicInstancedLayer</name>
    <filename>classMagnum_1_1Ui_1_1BasicInstancedLayer.html</filename>
    <templarg></templarg>
    <member kind="function">
      <type>std::size_t</type>
      <name>capacity</name>
      <anchorfile>classMagnum_1_1Ui_1_1BasicInstancedLayer.html</anchorfile>
      <anchor>a9fcb64de41da89f5ba0338ace8a07c76</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>std::size_t</type>
      <name>size</name>
      <anchorfile>classMagnum_1_1Ui_1_1BasicInstancedLayer.html</anchorfile>
      <anchor>aa60bad4456accb64cf8f748337657e1c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Containers::ArrayView&lt; const InstanceData &gt;</type>
      <name>data</name>
      <anchorfile>classMagnum_1_1Ui_1_1BasicInstancedLayer.html</anchorfile>
      <anchor>ab6fd6d700aa59a2eb664d219ed0a89b4</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Math::Range1D&lt; std::size_t &gt;</type>
      <name>modified</name>
      <anchorfile>classMagnum_1_1Ui_1_1BasicInstancedLayer.html</anchorfile>
      <anchor>abc136d46203c5aaec5fd75a32479dc43</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>resetModified</name>
      <anchorfile>classMagnum_1_1Ui_1_1BasicInstancedLayer.html</anchorfile>
      <anchor>a0689ea8bca9c3267aadc007982431368</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reset</name>
      <anchorfile>classMagnum_1_1Ui_1_1BasicInstancedLayer.html</anchorfile>
      <anchor>a7a0bbd28d2664d0458e1aeb8962cfbfa</anchor>
      <arglist>(std::size_t capacity)</arglist>
    </member>
    <member kind="function">
      <type>std::size_t</type>
      <name>addElement</name>
      <anchorfile>classMagnum_1_1Ui_1_1BasicInstancedLayer.html</anchorfile>
      <anchor>ab8a109ea532589e0e40a9aa35429ce9d</anchor>
      <arglist>(const InstanceData &amp;instanceData)</arglist>
    </member>
    <member kind="function">
      <type>InstanceData &amp;</type>
      <name>modifyElement</name>
      <anchorfile>classMagnum_1_1Ui_1_1BasicInstancedLayer.html</anchorfile>
      <anchor>af3d9c54328b06285254aeabef9458671</anchor>
      <arglist>(std::size_t id)</arglist>
    </member>
    <member kind="function">
      <type>const InstanceData &amp;</type>
      <name>elementData</name>
      <anchorfile>classMagnum_1_1Ui_1_1BasicInstancedLayer.html</anchorfile>
      <anchor>afabeb6a7f38094069c50854fdd8cf674</anchor>
      <arglist>(std::size_t id) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Magnum::Ui::BasicLayer</name>
    <filename>classMagnum_1_1Ui_1_1BasicLayer.html</filename>
    <templarg></templarg>
    <member kind="function">
      <type>std::size_t</type>
      <name>capacity</name>
      <anchorfile>classMagnum_1_1Ui_1_1BasicLayer.html</anchorfile>
      <anchor>a084a70d8b2d51426c99955a72cb68a72</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>std::size_t</type>
      <name>elementCapacity</name>
      <anchorfile>classMagnum_1_1Ui_1_1BasicLayer.html</anchorfile>
      <anchor>acaf16d653c4321304b4ad8d6a3e9c008</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>std::size_t</type>
      <name>size</name>
      <anchorfile>classMagnum_1_1Ui_1_1BasicLayer.html</anchorfile>
      <anchor>a8019da02f85134185872793912b7b437</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>std::size_t</type>
      <name>elementCount</name>
      <anchorfile>classMagnum_1_1Ui_1_1BasicLayer.html</anchorfile>
      <anchor>a673ad8f5d9c42029278aa6d27d56a6b3</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>std::size_t</type>
      <name>indexCount</name>
      <anchorfile>classMagnum_1_1Ui_1_1BasicLayer.html</anchorfile>
      <anchor>a2d52fb40d27938789487ef5b64d39bd6</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Containers::ArrayView&lt; const VertexData &gt;</type>
      <name>data</name>
      <anchorfile>classMagnum_1_1Ui_1_1BasicLayer.html</anchorfile>
      <anchor>adc6d16c2321c825edf4ec286a8691484</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Math::Range1D&lt; std::size_t &gt;</type>
      <name>modified</name>
      <anchorfile>classMagnum_1_1Ui_1_1BasicLayer.html</anchorfile>
      <anchor>a91dfcbfd2a5ec80a3164a35595d57f5b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>resetModified</name>
      <anchorfile>classMagnum_1_1Ui_1_1BasicLayer.html</anchorfile>
      <anchor>abf45ac94af5df0998c25a2ab7ba1ab21</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reset</name>
      <anchorfile>classMagnum_1_1Ui_1_1BasicLayer.html</anchorfile>
      <anchor>a932f31f6e0477feafdac33c1e0369dfb</anchor>
      <arglist>(std::size_t elementCapacity, std::size_t dataCapacity)</arglist>
    </member>
    <member kind="function">
      <type>std::size_t</type>
      <name>addElement</name>
      <anchorfile>classMagnum_1_1Ui_1_1BasicLayer.html</anchorfile>
      <anchor>a8f4e982919911c8efd5b930db1b09411</anchor>
      <arglist>(Containers::ArrayView&lt; const VertexData &gt; data, std::size_t indexCount)</arglist>
    </member>
    <member kind="function">
      <type>Containers::ArrayView&lt; VertexData &gt;</type>
      <name>modifyElement</name>
      <anchorfile>classMagnum_1_1Ui_1_1BasicLayer.html</anchorfile>
      <anchor>a9e398ef767c71e00bff0c0b0aa9cf4b6</anchor>
      <arglist>(std::size_t id)</arglist>
    </member>
    <member kind="function">
      <type>std::size_t</type>
      <name>elementSize</name>
      <anchorfile>classMagnum_1_1Ui_1_1BasicLayer.html</anchorfile>
      <anchor>a8da4b96895aca1515071e111cf610428</anchor>
      <arglist>(std::size_t id) const </arglist>
    </member>
    <member kind="function">
      <type>Containers::ArrayView&lt; const VertexData &gt;</type>
      <name>elementData</name>
      <anchorfile>classMagnum_1_1Ui_1_1BasicLayer.html</anchorfile>
      <anchor>a453b81e2a0551d7ade61f79c16c67dfe</anchor>
      <arglist>(std::size_t id) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Magnum::Ui::BasicPlane</name>
    <filename>classMagnum_1_1Ui_1_1BasicPlane.html</filename>
    <templarg>Layers</templarg>
    <base>Magnum::Ui::AbstractPlane</base>
    <member kind="function">
      <type></type>
      <name>BasicPlane</name>
      <anchorfile>classMagnum_1_1Ui_1_1BasicPlane.html</anchorfile>
      <anchor>ab1910883c3200c2885f3568746523dab</anchor>
      <arglist>(BasicUserInterface&lt; Layers... &gt; &amp;ui, const Anchor &amp;anchor, const Range2D &amp;padding, const Vector2 &amp;margin, Layers &amp;...layers)</arglist>
    </member>
    <member kind="function">
      <type>BasicUserInterface&lt; Layers... &gt; &amp;</type>
      <name>ui</name>
      <anchorfile>classMagnum_1_1Ui_1_1BasicPlane.html</anchorfile>
      <anchor>ac37549266429d56219fe2d06b86d4402</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const BasicUserInterface&lt; Layers... &gt; &amp;</type>
      <name>ui</name>
      <anchorfile>classMagnum_1_1Ui_1_1BasicPlane.html</anchorfile>
      <anchor>a2654f0cbeea22764828287747bbd2a42</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>BasicPlane&lt; Layers... &gt; *</type>
      <name>previousActivePlane</name>
      <anchorfile>classMagnum_1_1Ui_1_1BasicPlane.html</anchorfile>
      <anchor>aae0d2e027c159d7fa0aa86f716a97bc8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const BasicPlane&lt; Layers... &gt; *</type>
      <name>previousActivePlane</name>
      <anchorfile>classMagnum_1_1Ui_1_1BasicPlane.html</anchorfile>
      <anchor>a060ee802d53fcb3a275131d7cf6c5c8d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>BasicPlane&lt; Layers... &gt; *</type>
      <name>nextActivePlane</name>
      <anchorfile>classMagnum_1_1Ui_1_1BasicPlane.html</anchorfile>
      <anchor>a95bc95e91201688786836544dd21bee0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const BasicPlane&lt; Layers... &gt; *</type>
      <name>nextActivePlane</name>
      <anchorfile>classMagnum_1_1Ui_1_1BasicPlane.html</anchorfile>
      <anchor>a8bf263e173964ed1203014ebb43f555f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>update</name>
      <anchorfile>classMagnum_1_1Ui_1_1BasicPlane.html</anchorfile>
      <anchor>a7ba55309488e42143106e09c6ec3655a</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Magnum::Ui::BasicUserInterface</name>
    <filename>classMagnum_1_1Ui_1_1BasicUserInterface.html</filename>
    <templarg>Layers</templarg>
    <base>Magnum::Ui::AbstractUserInterface</base>
    <member kind="function">
      <type></type>
      <name>BasicUserInterface</name>
      <anchorfile>classMagnum_1_1Ui_1_1BasicUserInterface.html</anchorfile>
      <anchor>a92215736a625a8ae1441ca5ec8544cd6</anchor>
      <arglist>(const Vector2 &amp;size, const Vector2i &amp;screenSize)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>update</name>
      <anchorfile>classMagnum_1_1Ui_1_1BasicUserInterface.html</anchorfile>
      <anchor>a96b8eb29dd07c4a1b04c771513f852ea</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>draw</name>
      <anchorfile>classMagnum_1_1Ui_1_1BasicUserInterface.html</anchorfile>
      <anchor>aac072592ef4cf82350f3d169e1caf7c6</anchor>
      <arglist>(const std::array&lt; std::reference_wrapper&lt; AbstractUiShader &gt;, sizeof...(Layers)&gt; &amp;shaders)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Magnum::Ui::Button</name>
    <filename>classMagnum_1_1Ui_1_1Button.html</filename>
    <base>Magnum::Ui::Widget</base>
    <base>Corrade::Interconnect::Emitter</base>
    <member kind="function">
      <type></type>
      <name>Button</name>
      <anchorfile>classMagnum_1_1Ui_1_1Button.html</anchorfile>
      <anchor>a6a64bdf5fb4800738a41be15494c7431</anchor>
      <arglist>(Plane &amp;plane, const Anchor &amp;anchor, const std::string &amp;text, std::size_t capacity=0, Style style=Style::Default)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Button</name>
      <anchorfile>classMagnum_1_1Ui_1_1Button.html</anchorfile>
      <anchor>a23bc366dd1c907502cf1f6b52148fcd8</anchor>
      <arglist>(Plane &amp;plane, const Anchor &amp;anchor, const std::string &amp;text, Style style)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Button</name>
      <anchorfile>classMagnum_1_1Ui_1_1Button.html</anchorfile>
      <anchor>a7befdc65b1c07c8604069f7297c5319c</anchor>
      <arglist>(Plane &amp;plane, const Anchor &amp;anchor, const char(&amp;text)[size], std::size_t capacity=0, Style style=Style::Default)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Button</name>
      <anchorfile>classMagnum_1_1Ui_1_1Button.html</anchorfile>
      <anchor>a53086ff3e092136e0013e6d5476c9752</anchor>
      <arglist>(Plane &amp;plane, const Anchor &amp;anchor, const char(&amp;text)[size], Style style)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Button</name>
      <anchorfile>classMagnum_1_1Ui_1_1Button.html</anchorfile>
      <anchor>adef91afed0ad4f19e767f2e6e67d5b82</anchor>
      <arglist>(Plane &amp;plane, const Anchor &amp;anchor, Containers::ArrayView&lt; const char &gt; text, std::size_t capacity=0, Style style=Style::Default)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Button</name>
      <anchorfile>classMagnum_1_1Ui_1_1Button.html</anchorfile>
      <anchor>a12bf5a32384ec9602d3bdd15fca2dc7c</anchor>
      <arglist>(Plane &amp;plane, const Anchor &amp;anchor, Containers::ArrayView&lt; const char &gt; text, Style style)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setStyle</name>
      <anchorfile>classMagnum_1_1Ui_1_1Button.html</anchorfile>
      <anchor>a863df8a803ed4dbb2391fd4268d2daab</anchor>
      <arglist>(Style style)</arglist>
    </member>
    <member kind="function">
      <type>Button &amp;</type>
      <name>setText</name>
      <anchorfile>classMagnum_1_1Ui_1_1Button.html</anchorfile>
      <anchor>a6891d6097b167a7bf4d5b8bbf9dd555f</anchor>
      <arglist>(const std::string &amp;text)</arglist>
    </member>
    <member kind="function">
      <type>Button &amp;</type>
      <name>setText</name>
      <anchorfile>classMagnum_1_1Ui_1_1Button.html</anchorfile>
      <anchor>aed645a1d8cb9a63f0c3a6c3d6f53373b</anchor>
      <arglist>(Containers::ArrayView&lt; const char &gt; text)</arglist>
    </member>
    <member kind="function">
      <type>Button &amp;</type>
      <name>setText</name>
      <anchorfile>classMagnum_1_1Ui_1_1Button.html</anchorfile>
      <anchor>a714f758d26812fb406df407d6a4766e2</anchor>
      <arglist>(const char(&amp;text)[size])</arglist>
    </member>
    <member kind="function">
      <type>Signal</type>
      <name>tapped</name>
      <anchorfile>classMagnum_1_1Ui_1_1Button.html</anchorfile>
      <anchor>a0903428b90b7e71c9390da426572b036</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Magnum::Ui::Input</name>
    <filename>classMagnum_1_1Ui_1_1Input.html</filename>
    <base>Magnum::Ui::Widget</base>
    <base>Corrade::Interconnect::Emitter</base>
    <member kind="function">
      <type></type>
      <name>Input</name>
      <anchorfile>classMagnum_1_1Ui_1_1Input.html</anchorfile>
      <anchor>a983475f7f7fed85d10dac4ba7ebe3864</anchor>
      <arglist>(Plane &amp;plane, const Anchor &amp;anchor, std::string value, std::size_t maxValueSize, Style style=Style::Default)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Input</name>
      <anchorfile>classMagnum_1_1Ui_1_1Input.html</anchorfile>
      <anchor>a1aa94e29a51c72bec50cb186d6aefa29</anchor>
      <arglist>(Plane &amp;plane, const Anchor &amp;anchor, std::size_t maxValueSize, Style style=Style::Default)</arglist>
    </member>
    <member kind="function">
      <type>Input &amp;</type>
      <name>setStyle</name>
      <anchorfile>classMagnum_1_1Ui_1_1Input.html</anchorfile>
      <anchor>a64f1bfe618c3026d269f744a4c5bbd1d</anchor>
      <arglist>(Style style)</arglist>
    </member>
    <member kind="function">
      <type>std::size_t</type>
      <name>maxValueSize</name>
      <anchorfile>classMagnum_1_1Ui_1_1Input.html</anchorfile>
      <anchor>a1ee51e2d4db069bd0c3c8d7dbf25023b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>value</name>
      <anchorfile>classMagnum_1_1Ui_1_1Input.html</anchorfile>
      <anchor>ae42f47e81c65115e8902a20fa37a67d6</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Input &amp;</type>
      <name>setValue</name>
      <anchorfile>classMagnum_1_1Ui_1_1Input.html</anchorfile>
      <anchor>ace163bfc843f768fe28e4cb1ba639692</anchor>
      <arglist>(const std::string &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>Input &amp;</type>
      <name>setValue</name>
      <anchorfile>classMagnum_1_1Ui_1_1Input.html</anchorfile>
      <anchor>a330f1425ed6bda2a24e4eae75df4ff6a</anchor>
      <arglist>(std::string &amp;&amp;value)</arglist>
    </member>
    <member kind="function">
      <type>Input &amp;</type>
      <name>setValue</name>
      <anchorfile>classMagnum_1_1Ui_1_1Input.html</anchorfile>
      <anchor>ad9fa975db22b6c4c53be4513ed444398</anchor>
      <arglist>(Containers::ArrayView&lt; const char &gt; value)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>handleKeyPress</name>
      <anchorfile>classMagnum_1_1Ui_1_1Input.html</anchorfile>
      <anchor>af78602131162b91bf24b9016eadec77d</anchor>
      <arglist>(KeyEvent &amp;keyEvent)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>handleTextInput</name>
      <anchorfile>classMagnum_1_1Ui_1_1Input.html</anchorfile>
      <anchor>aa56f3b212d26124728a61c9ae66ac924</anchor>
      <arglist>(TextInputEvent &amp;textInputEvent)</arglist>
    </member>
    <member kind="function">
      <type>Signal</type>
      <name>focused</name>
      <anchorfile>classMagnum_1_1Ui_1_1Input.html</anchorfile>
      <anchor>a88ec9f6958502d05e3184419861a70d8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Signal</type>
      <name>blurred</name>
      <anchorfile>classMagnum_1_1Ui_1_1Input.html</anchorfile>
      <anchor>a872cdfd023d4e31b118b30de141522ec</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Signal</type>
      <name>valueChanged</name>
      <anchorfile>classMagnum_1_1Ui_1_1Input.html</anchorfile>
      <anchor>a5407fafcf25f97016f03fd3b63a08d05</anchor>
      <arglist>(const std::string &amp;value)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Magnum::Ui::Label</name>
    <filename>classMagnum_1_1Ui_1_1Label.html</filename>
    <base>Magnum::Ui::Widget</base>
    <member kind="function">
      <type></type>
      <name>Label</name>
      <anchorfile>classMagnum_1_1Ui_1_1Label.html</anchorfile>
      <anchor>a87668bd975cdf7c5c23c807a1e330e41</anchor>
      <arglist>(Plane &amp;plane, const Anchor &amp;anchor, const std::string &amp;text, Text::Alignment alignment, std::size_t capacity=0, Style style=Style::Default)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Label</name>
      <anchorfile>classMagnum_1_1Ui_1_1Label.html</anchorfile>
      <anchor>a2583f18b31e4acfb9e074ae12f59f577</anchor>
      <arglist>(Plane &amp;plane, const Anchor &amp;anchor, const std::string &amp;text, Text::Alignment alignment, Style style)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Label</name>
      <anchorfile>classMagnum_1_1Ui_1_1Label.html</anchorfile>
      <anchor>ab05a1513626a4948164ff1ab6f6bcca4</anchor>
      <arglist>(Plane &amp;plane, const Anchor &amp;anchor, const char(&amp;text)[size], Text::Alignment alignment, std::size_t capacity=0, Style style=Style::Default)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Label</name>
      <anchorfile>classMagnum_1_1Ui_1_1Label.html</anchorfile>
      <anchor>ae1c291a794ba82f45bc2aac8fa015a1e</anchor>
      <arglist>(Plane &amp;plane, const Anchor &amp;anchor, const char(&amp;text)[size], Text::Alignment alignment, Style style)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Label</name>
      <anchorfile>classMagnum_1_1Ui_1_1Label.html</anchorfile>
      <anchor>af2364501609e130bdab6d6010e6107f2</anchor>
      <arglist>(Plane &amp;plane, const Anchor &amp;anchor, Containers::ArrayView&lt; const char &gt; text, Text::Alignment alignment, std::size_t capacity=0, Style style=Style::Default)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Label</name>
      <anchorfile>classMagnum_1_1Ui_1_1Label.html</anchorfile>
      <anchor>a7a29f0cf1b6c942257460d412855d482</anchor>
      <arglist>(Plane &amp;plane, const Anchor &amp;anchor, Containers::ArrayView&lt; const char &gt; text, Text::Alignment alignment, Style style=Style::Default)</arglist>
    </member>
    <member kind="function">
      <type>Label &amp;</type>
      <name>setStyle</name>
      <anchorfile>classMagnum_1_1Ui_1_1Label.html</anchorfile>
      <anchor>abf64d9627711000b95e1577b85e297f8</anchor>
      <arglist>(Style style)</arglist>
    </member>
    <member kind="function">
      <type>Label &amp;</type>
      <name>setText</name>
      <anchorfile>classMagnum_1_1Ui_1_1Label.html</anchorfile>
      <anchor>abdd84f64e7ae22adff7c764faf2c6ac8</anchor>
      <arglist>(const std::string &amp;text)</arglist>
    </member>
    <member kind="function">
      <type>Label &amp;</type>
      <name>setText</name>
      <anchorfile>classMagnum_1_1Ui_1_1Label.html</anchorfile>
      <anchor>a23eb77e4eb34e2910accf7c8df91932d</anchor>
      <arglist>(Containers::ArrayView&lt; const char &gt; text)</arglist>
    </member>
    <member kind="function">
      <type>Label &amp;</type>
      <name>setText</name>
      <anchorfile>classMagnum_1_1Ui_1_1Label.html</anchorfile>
      <anchor>a2b86dd9734b6b123b3c5fae10edc2b84</anchor>
      <arglist>(const char(&amp;text)[size])</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Magnum::Ui::Modal</name>
    <filename>classMagnum_1_1Ui_1_1Modal.html</filename>
    <base>Magnum::Ui::Widget</base>
    <member kind="function">
      <type></type>
      <name>Modal</name>
      <anchorfile>classMagnum_1_1Ui_1_1Modal.html</anchorfile>
      <anchor>aa8423e5553e547e742d3e01ab6c12a7a</anchor>
      <arglist>(Plane &amp;plane, const Anchor &amp;anchor, Style style=Style::Default)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Magnum::Ui::Plane</name>
    <filename>classMagnum_1_1Ui_1_1Plane.html</filename>
    <base>BasicPlane&lt; Implementation::QuadLayer, Implementation::QuadLayer, Implementation::TextLayer &gt;</base>
    <member kind="function">
      <type></type>
      <name>Plane</name>
      <anchorfile>classMagnum_1_1Ui_1_1Plane.html</anchorfile>
      <anchor>a3f9f63932fb216cd58520999b8da6301</anchor>
      <arglist>(UserInterface &amp;ui, const Anchor &amp;anchor)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Plane</name>
      <anchorfile>classMagnum_1_1Ui_1_1Plane.html</anchorfile>
      <anchor>a9a18470c7e7871e8553ad89cf2b057a2</anchor>
      <arglist>(UserInterface &amp;ui, const Anchor &amp;anchor, std::size_t backgroundCapacity, std::size_t foregroundCapacity, std::size_t textCapacity)</arglist>
    </member>
    <member kind="function">
      <type>UserInterface &amp;</type>
      <name>ui</name>
      <anchorfile>classMagnum_1_1Ui_1_1Plane.html</anchorfile>
      <anchor>ae47685664562bbdb7f2ab50523e53c50</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const UserInterface &amp;</type>
      <name>ui</name>
      <anchorfile>classMagnum_1_1Ui_1_1Plane.html</anchorfile>
      <anchor>a1f7016eb604f25dd53ce2a3c5262a07d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Plane *</type>
      <name>previousActivePlane</name>
      <anchorfile>classMagnum_1_1Ui_1_1Plane.html</anchorfile>
      <anchor>ac17bb705f566d11a43d65acba18460a4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const Plane *</type>
      <name>previousActivePlane</name>
      <anchorfile>classMagnum_1_1Ui_1_1Plane.html</anchorfile>
      <anchor>a94134e62e6b3834a731d4675749823d5</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reset</name>
      <anchorfile>classMagnum_1_1Ui_1_1Plane.html</anchorfile>
      <anchor>a0d1da51ff17444f89f54dd4dbbd81fb8</anchor>
      <arglist>(std::size_t backgroundCapacity, std::size_t foregroundCapacity, std::size_t textCapacity)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Magnum::Ui::StyleConfiguration</name>
    <filename>classMagnum_1_1Ui_1_1StyleConfiguration.html</filename>
    <member kind="function">
      <type></type>
      <name>StyleConfiguration</name>
      <anchorfile>classMagnum_1_1Ui_1_1StyleConfiguration.html</anchorfile>
      <anchor>ae4d79560759412d3d1aa7f1c2018de18</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Float</type>
      <name>fontSize</name>
      <anchorfile>classMagnum_1_1Ui_1_1StyleConfiguration.html</anchorfile>
      <anchor>a5d3bb808d0941ba6d88c1b886a6dd2c6</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>StyleConfiguration &amp;</type>
      <name>setFontSize</name>
      <anchorfile>classMagnum_1_1Ui_1_1StyleConfiguration.html</anchorfile>
      <anchor>a8386138da026c18efbd1905dd76b5f79</anchor>
      <arglist>(Float size)</arglist>
    </member>
    <member kind="function">
      <type>Float</type>
      <name>borderWidth</name>
      <anchorfile>classMagnum_1_1Ui_1_1StyleConfiguration.html</anchorfile>
      <anchor>af1d2e842597baf46ac0d0427adfee67a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>StyleConfiguration &amp;</type>
      <name>setBorderWidth</name>
      <anchorfile>classMagnum_1_1Ui_1_1StyleConfiguration.html</anchorfile>
      <anchor>ac8dd70c0ae4f9e8a8c4d60897e9a9baa</anchor>
      <arglist>(Float width)</arglist>
    </member>
    <member kind="function">
      <type>Float</type>
      <name>cornerRadius</name>
      <anchorfile>classMagnum_1_1Ui_1_1StyleConfiguration.html</anchorfile>
      <anchor>a1baebcc9241488a42a1b66f6eb665627</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>StyleConfiguration &amp;</type>
      <name>setCornerRadius</name>
      <anchorfile>classMagnum_1_1Ui_1_1StyleConfiguration.html</anchorfile>
      <anchor>a3344275765f740511df73778b2a6951f</anchor>
      <arglist>(Float radius)</arglist>
    </member>
    <member kind="function">
      <type>Float</type>
      <name>cornerSmoothnessIn</name>
      <anchorfile>classMagnum_1_1Ui_1_1StyleConfiguration.html</anchorfile>
      <anchor>a11d6932e9cef6b05c6ce6ffeb61c22d4</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>StyleConfiguration &amp;</type>
      <name>setCornerSmoothnessIn</name>
      <anchorfile>classMagnum_1_1Ui_1_1StyleConfiguration.html</anchorfile>
      <anchor>acfd0b5717e9100b2086ea22c64b35ec4</anchor>
      <arglist>(Float smoothness)</arglist>
    </member>
    <member kind="function">
      <type>Float</type>
      <name>cornerSmoothnessOut</name>
      <anchorfile>classMagnum_1_1Ui_1_1StyleConfiguration.html</anchorfile>
      <anchor>aac48bb91ce236690cda32594a811c36d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>StyleConfiguration &amp;</type>
      <name>setCornerSmoothnessOut</name>
      <anchorfile>classMagnum_1_1Ui_1_1StyleConfiguration.html</anchorfile>
      <anchor>af0e914a29af3745524a52ba2e88acd67</anchor>
      <arglist>(Float smoothness)</arglist>
    </member>
    <member kind="function">
      <type>Vector2</type>
      <name>padding</name>
      <anchorfile>classMagnum_1_1Ui_1_1StyleConfiguration.html</anchorfile>
      <anchor>a45340381cf2063f85c7250357850dbe6</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>StyleConfiguration &amp;</type>
      <name>setPadding</name>
      <anchorfile>classMagnum_1_1Ui_1_1StyleConfiguration.html</anchorfile>
      <anchor>a8ef151e2440d687c4d383f2252549725</anchor>
      <arglist>(const Vector2 &amp;padding)</arglist>
    </member>
    <member kind="function">
      <type>Vector2</type>
      <name>margin</name>
      <anchorfile>classMagnum_1_1Ui_1_1StyleConfiguration.html</anchorfile>
      <anchor>a6a895f1cca08002d96151e39289e8990</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>StyleConfiguration &amp;</type>
      <name>setMargin</name>
      <anchorfile>classMagnum_1_1Ui_1_1StyleConfiguration.html</anchorfile>
      <anchor>a7634997ba6d841c7813273251774176f</anchor>
      <arglist>(const Vector2 &amp;margin)</arglist>
    </member>
    <member kind="function">
      <type>Color4</type>
      <name>backgroundColor</name>
      <anchorfile>classMagnum_1_1Ui_1_1StyleConfiguration.html</anchorfile>
      <anchor>a2775b87d55977007de2be005eacf2056</anchor>
      <arglist>(Type type, Style style, State state) const </arglist>
    </member>
    <member kind="function">
      <type>StyleConfiguration &amp;</type>
      <name>setBackgroundColor</name>
      <anchorfile>classMagnum_1_1Ui_1_1StyleConfiguration.html</anchorfile>
      <anchor>a0f3a1da1645f220b70d430726ff94ad0</anchor>
      <arglist>(Type type, Style style, State state, const Color4 &amp;color)</arglist>
    </member>
    <member kind="function">
      <type>Color4</type>
      <name>topFillColor</name>
      <anchorfile>classMagnum_1_1Ui_1_1StyleConfiguration.html</anchorfile>
      <anchor>a22eb71594d300ba8b8fe701e0ccab182</anchor>
      <arglist>(Type type, Style style, State state) const </arglist>
    </member>
    <member kind="function">
      <type>StyleConfiguration &amp;</type>
      <name>setTopFillColor</name>
      <anchorfile>classMagnum_1_1Ui_1_1StyleConfiguration.html</anchorfile>
      <anchor>aba0fb9a7f850e69aa009bd85b1157c8f</anchor>
      <arglist>(Type type, Style style, State state, const Color4 &amp;color)</arglist>
    </member>
    <member kind="function">
      <type>Color4</type>
      <name>bottomFillColor</name>
      <anchorfile>classMagnum_1_1Ui_1_1StyleConfiguration.html</anchorfile>
      <anchor>a97cceea72d41abdf7c47de8f95983ccf</anchor>
      <arglist>(Type type, Style style, State state) const </arglist>
    </member>
    <member kind="function">
      <type>StyleConfiguration &amp;</type>
      <name>setBottomFillColor</name>
      <anchorfile>classMagnum_1_1Ui_1_1StyleConfiguration.html</anchorfile>
      <anchor>a8f492e5d1a7395cc96bc60f79c2bc07d</anchor>
      <arglist>(Type type, Style style, State state, const Color4 &amp;color)</arglist>
    </member>
    <member kind="function">
      <type>Color4</type>
      <name>borderColor</name>
      <anchorfile>classMagnum_1_1Ui_1_1StyleConfiguration.html</anchorfile>
      <anchor>ad5b76ef330559602a2c152364f6f8905</anchor>
      <arglist>(Type type, Style style, State state) const </arglist>
    </member>
    <member kind="function">
      <type>StyleConfiguration &amp;</type>
      <name>setBorderColor</name>
      <anchorfile>classMagnum_1_1Ui_1_1StyleConfiguration.html</anchorfile>
      <anchor>a41d0b2375980023d6546dfb3b9bc818a</anchor>
      <arglist>(Type type, Style style, State state, const Color4 &amp;color)</arglist>
    </member>
    <member kind="function">
      <type>Color4</type>
      <name>textColor</name>
      <anchorfile>classMagnum_1_1Ui_1_1StyleConfiguration.html</anchorfile>
      <anchor>a81afb4adad72c5431d1ba4617d49e8ef</anchor>
      <arglist>(Type type, Style style, State state) const </arglist>
    </member>
    <member kind="function">
      <type>StyleConfiguration &amp;</type>
      <name>setTextColor</name>
      <anchorfile>classMagnum_1_1Ui_1_1StyleConfiguration.html</anchorfile>
      <anchor>a46eaeffe232dea57f451602afef08cbf</anchor>
      <arglist>(Type type, Style style, State state, const Color4 &amp;color)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>pack</name>
      <anchorfile>classMagnum_1_1Ui_1_1StyleConfiguration.html</anchorfile>
      <anchor>a8108eb60e2814b6db95e402396d454ad</anchor>
      <arglist>(Buffer &amp;backgroundUniforms, Buffer &amp;foregroundUniforms, Buffer &amp;textUniforms) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Magnum::Ui::UserInterface</name>
    <filename>classMagnum_1_1Ui_1_1UserInterface.html</filename>
    <base>BasicUserInterface&lt; Implementation::QuadLayer, Implementation::QuadLayer, Implementation::TextLayer &gt;</base>
    <base>Corrade::Interconnect::Emitter</base>
    <member kind="function">
      <type></type>
      <name>UserInterface</name>
      <anchorfile>classMagnum_1_1Ui_1_1UserInterface.html</anchorfile>
      <anchor>a43a2ceeaa33a82068abdf69ce3edb544</anchor>
      <arglist>(const Vector2 &amp;size, const Vector2i &amp;screenSize, Text::AbstractFont &amp;font, const StyleConfiguration &amp;styleConfiguration)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>UserInterface</name>
      <anchorfile>classMagnum_1_1Ui_1_1UserInterface.html</anchorfile>
      <anchor>a6906ddd0571d5750bc39de19ff9184b1</anchor>
      <arglist>(const Vector2 &amp;size, const Vector2i &amp;screenSize, Text::AbstractFont &amp;font)</arglist>
    </member>
    <member kind="function">
      <type>Plane *</type>
      <name>activePlane</name>
      <anchorfile>classMagnum_1_1Ui_1_1UserInterface.html</anchorfile>
      <anchor>ad9b16b9ab800d97ebdb88623b50c9a59</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const Plane *</type>
      <name>activePlane</name>
      <anchorfile>classMagnum_1_1Ui_1_1UserInterface.html</anchorfile>
      <anchor>ab226c6263a445ae8307cdc80c536e0e1</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const StyleConfiguration &amp;</type>
      <name>styleConfiguration</name>
      <anchorfile>classMagnum_1_1Ui_1_1UserInterface.html</anchorfile>
      <anchor>a8fbb89fe03f751b0978d58dc5a9c1ebb</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setStyleConfiguration</name>
      <anchorfile>classMagnum_1_1Ui_1_1UserInterface.html</anchorfile>
      <anchor>ab28f5abee373399300163215a1d0bde9</anchor>
      <arglist>(const StyleConfiguration &amp;configuration)</arglist>
    </member>
    <member kind="function">
      <type>const Text::AbstractFont &amp;</type>
      <name>font</name>
      <anchorfile>classMagnum_1_1Ui_1_1UserInterface.html</anchorfile>
      <anchor>a2bc3f46b5cc6e4b9fc60babed7308984</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Input *</type>
      <name>focusedInputWidget</name>
      <anchorfile>classMagnum_1_1Ui_1_1UserInterface.html</anchorfile>
      <anchor>a74e3585f78486b5306dabf3349eb1254</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>draw</name>
      <anchorfile>classMagnum_1_1Ui_1_1UserInterface.html</anchorfile>
      <anchor>a266d12187043ca4236b75c37bc913720</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Signal</type>
      <name>inputWidgetFocused</name>
      <anchorfile>classMagnum_1_1Ui_1_1UserInterface.html</anchorfile>
      <anchor>ae6356d2cc3400b6b80f06822696f0be1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Signal</type>
      <name>inputWidgetBlurred</name>
      <anchorfile>classMagnum_1_1Ui_1_1UserInterface.html</anchorfile>
      <anchor>a4101e9b947d67939d32b96dbb8658e8e</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Magnum::Ui::ValidatedInput</name>
    <filename>classMagnum_1_1Ui_1_1ValidatedInput.html</filename>
    <base>Magnum::Ui::Input</base>
    <base>Corrade::Interconnect::Receiver</base>
    <member kind="function">
      <type></type>
      <name>ValidatedInput</name>
      <anchorfile>classMagnum_1_1Ui_1_1ValidatedInput.html</anchorfile>
      <anchor>a372a4d687e1ebafec15ba0b0c6a41828</anchor>
      <arglist>(Plane &amp;plane, const Anchor &amp;anchor, const std::regex &amp;validator, std::string value, std::size_t maxValueSize, Style style=Style::Default)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ValidatedInput</name>
      <anchorfile>classMagnum_1_1Ui_1_1ValidatedInput.html</anchorfile>
      <anchor>a832456abf49e7485d9bcbb5f2fff9672</anchor>
      <arglist>(Plane &amp;plane, const Anchor &amp;anchor, std::regex &amp;&amp;validator, std::string value, std::size_t maxValueSize, Style style=Style::Default)=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ValidatedInput</name>
      <anchorfile>classMagnum_1_1Ui_1_1ValidatedInput.html</anchorfile>
      <anchor>a1ee0082fa9a6fa101991f2f8bd0dfb0f</anchor>
      <arglist>(Plane &amp;plane, const Anchor &amp;anchor, const std::regex &amp;validator, std::size_t maxValueSize, Style style=Style::Default)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ValidatedInput</name>
      <anchorfile>classMagnum_1_1Ui_1_1ValidatedInput.html</anchorfile>
      <anchor>a1b1478c2f977f4771c725580cb3df16a</anchor>
      <arglist>(Plane &amp;plane, const Anchor &amp;anchor, std::regex &amp;&amp;validator, std::size_t maxValueSize, Style style=Style::Default)=delete</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isValid</name>
      <anchorfile>classMagnum_1_1Ui_1_1ValidatedInput.html</anchorfile>
      <anchor>a6a07966d7b9cc2ba2a63804bd728222d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>allValid</name>
      <anchorfile>classMagnum_1_1Ui_1_1ValidatedInput.html</anchorfile>
      <anchor>a049345563bed9cb4d026d3566aea89d4</anchor>
      <arglist>(std::initializer_list&lt; std::reference_wrapper&lt; const ValidatedInput &gt;&gt; inputs)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Magnum::Ui::Widget</name>
    <filename>classMagnum_1_1Ui_1_1Widget.html</filename>
    <member kind="function">
      <type></type>
      <name>Widget</name>
      <anchorfile>classMagnum_1_1Ui_1_1Widget.html</anchorfile>
      <anchor>ad13d3e4bd32a41134c41cddec5ff466a</anchor>
      <arglist>(AbstractPlane &amp;plane, const Anchor &amp;anchor, const Range2D &amp;padding={})</arglist>
    </member>
    <member kind="function">
      <type>Range2D</type>
      <name>rect</name>
      <anchorfile>classMagnum_1_1Ui_1_1Widget.html</anchorfile>
      <anchor>a11ea16ff2efa31d0e56bbcb641a58e1a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Range2D</type>
      <name>padding</name>
      <anchorfile>classMagnum_1_1Ui_1_1Widget.html</anchorfile>
      <anchor>afeba9dc50a5e42c41c540fa6acae0a97</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>WidgetFlags</type>
      <name>flags</name>
      <anchorfile>classMagnum_1_1Ui_1_1Widget.html</anchorfile>
      <anchor>a04ba186acc6a59132bdbbcc4733352b4</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Widget &amp;</type>
      <name>disable</name>
      <anchorfile>classMagnum_1_1Ui_1_1Widget.html</anchorfile>
      <anchor>ab1464bfa2fe3235bd467efc5575be4c3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Widget &amp;</type>
      <name>enable</name>
      <anchorfile>classMagnum_1_1Ui_1_1Widget.html</anchorfile>
      <anchor>a11f74d189816803d973a8d56577e7e13</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Widget &amp;</type>
      <name>setEnabled</name>
      <anchorfile>classMagnum_1_1Ui_1_1Widget.html</anchorfile>
      <anchor>ace0a12d0bf2813eef117259d25e47a9b</anchor>
      <arglist>(bool enabled)</arglist>
    </member>
    <member kind="function">
      <type>Widget &amp;</type>
      <name>hide</name>
      <anchorfile>classMagnum_1_1Ui_1_1Widget.html</anchorfile>
      <anchor>ac1ce3c2636b34e11e05020261c4f8ea7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Widget &amp;</type>
      <name>show</name>
      <anchorfile>classMagnum_1_1Ui_1_1Widget.html</anchorfile>
      <anchor>a8aa3942cfb5a6dfd74e214a3597e1f02</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Widget &amp;</type>
      <name>setVisible</name>
      <anchorfile>classMagnum_1_1Ui_1_1Widget.html</anchorfile>
      <anchor>af6ba36a4ff6982a91fafd9537fd008d0</anchor>
      <arglist>(bool visible)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>disable</name>
      <anchorfile>classMagnum_1_1Ui_1_1Widget.html</anchorfile>
      <anchor>af38a80ca570b3215c3f0b64127ab44ff</anchor>
      <arglist>(std::initializer_list&lt; std::reference_wrapper&lt; Widget &gt;&gt; widgets)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>enable</name>
      <anchorfile>classMagnum_1_1Ui_1_1Widget.html</anchorfile>
      <anchor>a8a602624f5a738970749c1a33339f74a</anchor>
      <arglist>(std::initializer_list&lt; std::reference_wrapper&lt; Widget &gt;&gt; widgets)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>setEnabled</name>
      <anchorfile>classMagnum_1_1Ui_1_1Widget.html</anchorfile>
      <anchor>a629f8638a3f71074472f9a96e02bdba2</anchor>
      <arglist>(bool enabled, std::initializer_list&lt; std::reference_wrapper&lt; Widget &gt;&gt; widgets)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>hide</name>
      <anchorfile>classMagnum_1_1Ui_1_1Widget.html</anchorfile>
      <anchor>a822ab97e814f262f684ceecab62b8bf9</anchor>
      <arglist>(std::initializer_list&lt; std::reference_wrapper&lt; Widget &gt;&gt; widgets)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>show</name>
      <anchorfile>classMagnum_1_1Ui_1_1Widget.html</anchorfile>
      <anchor>a275694b90f44f8e86bf965c2325e781f</anchor>
      <arglist>(std::initializer_list&lt; std::reference_wrapper&lt; Widget &gt;&gt; widgets)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>setVisible</name>
      <anchorfile>classMagnum_1_1Ui_1_1Widget.html</anchorfile>
      <anchor>aaf9db04fba15ef836c4e6b5f1bab911c</anchor>
      <arglist>(bool visible, std::initializer_list&lt; std::reference_wrapper&lt; Widget &gt;&gt; widgets)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>AbstractPlane &amp;</type>
      <name>plane</name>
      <anchorfile>classMagnum_1_1Ui_1_1Widget.html</anchorfile>
      <anchor>acfc2f862cc100abe9f6acd5f582d00b6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>const AbstractPlane &amp;</type>
      <name>plane</name>
      <anchorfile>classMagnum_1_1Ui_1_1Widget.html</anchorfile>
      <anchor>a1382a875967f9f62f14d3228177ac713</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>update</name>
      <anchorfile>classMagnum_1_1Ui_1_1Widget.html</anchorfile>
      <anchor>a21729423f6deaf7f54707a07da0d0391</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual bool</type>
      <name>hoverEvent</name>
      <anchorfile>classMagnum_1_1Ui_1_1Widget.html</anchorfile>
      <anchor>ac3d19334858e9ddda48391994bc642ac</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual bool</type>
      <name>pressEvent</name>
      <anchorfile>classMagnum_1_1Ui_1_1Widget.html</anchorfile>
      <anchor>a7af7e6b61f671cab8953f69e2e19ae7a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual bool</type>
      <name>releaseEvent</name>
      <anchorfile>classMagnum_1_1Ui_1_1Widget.html</anchorfile>
      <anchor>ae9ec3b38a91bfb4e0f3539011bce1989</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual bool</type>
      <name>focusEvent</name>
      <anchorfile>classMagnum_1_1Ui_1_1Widget.html</anchorfile>
      <anchor>aa0cbaff23dc3b2159ac96f768f92c03b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual bool</type>
      <name>blurEvent</name>
      <anchorfile>classMagnum_1_1Ui_1_1Widget.html</anchorfile>
      <anchor>afdaa4ec9086b73244eb522995c89dde0</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Matrix3&lt; Float &gt;</name>
    <filename>classMagnum_1_1Math_1_1Matrix3.html</filename>
    <base>Magnum::Math::Matrix</base>
    <member kind="function">
      <type>Vector2&lt; Float &gt; &amp;</type>
      <name>translation</name>
      <anchorfile>classMagnum_1_1Math_1_1Matrix3.html</anchorfile>
      <anchor>a05ed7ce765c5c0a3cdbda15b8d5355da</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>constexpr Vector2&lt; Float &gt;</type>
      <name>translation</name>
      <anchorfile>classMagnum_1_1Math_1_1Matrix3.html</anchorfile>
      <anchor>ae9be59b02f72ada29df67ca43363c4f9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Matrix2x2&lt; Float &gt;</type>
      <name>rotation</name>
      <anchorfile>classMagnum_1_1Math_1_1Matrix3.html</anchorfile>
      <anchor>aa62eca00108d827c350e13f6121bada3</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Matrix3</name>
      <anchorfile>classMagnum_1_1Math_1_1Matrix3.html</anchorfile>
      <anchor>aa50d936be37151345b8abe31fbe7de45</anchor>
      <arglist>(IdentityInitT=IdentityInit, Float value=Float{1}) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Matrix3</name>
      <anchorfile>classMagnum_1_1Math_1_1Matrix3.html</anchorfile>
      <anchor>a84877a6cfca61b877cc156b1343eb163</anchor>
      <arglist>(ZeroInitT) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Matrix3</name>
      <anchorfile>classMagnum_1_1Math_1_1Matrix3.html</anchorfile>
      <anchor>a07a3083c64e4336cfd5c6f23bf034846</anchor>
      <arglist>(NoInitT) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Matrix3</name>
      <anchorfile>classMagnum_1_1Math_1_1Matrix3.html</anchorfile>
      <anchor>a046b4514311f06a092081949f702d41a</anchor>
      <arglist>(const Vector3&lt; Float &gt; &amp;first, const Vector3&lt; Float &gt; &amp;second, const Vector3&lt; Float &gt; &amp;third) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Matrix3</name>
      <anchorfile>classMagnum_1_1Math_1_1Matrix3.html</anchorfile>
      <anchor>ab7ab26d8c749e484e2759d9c47d70217</anchor>
      <arglist>(Float value) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Matrix3</name>
      <anchorfile>classMagnum_1_1Math_1_1Matrix3.html</anchorfile>
      <anchor>a606b8212d38868a43dc068bacae061ca</anchor>
      <arglist>(const RectangularMatrix&lt; 3, 3, U &gt; &amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Matrix3</name>
      <anchorfile>classMagnum_1_1Math_1_1Matrix3.html</anchorfile>
      <anchor>a460014a92e0ad60f5e4cd617f87839e3</anchor>
      <arglist>(const U &amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Matrix3</name>
      <anchorfile>classMagnum_1_1Math_1_1Matrix3.html</anchorfile>
      <anchor>a8d13e6f0adec507471b69f23ac88ec4c</anchor>
      <arglist>(const RectangularMatrix&lt; 3, 3, Float &gt; &amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isRigidTransformation</name>
      <anchorfile>classMagnum_1_1Math_1_1Matrix3.html</anchorfile>
      <anchor>a267cce4346f18620cd93df07bf858234</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>constexpr Matrix2x2&lt; Float &gt;</type>
      <name>rotationScaling</name>
      <anchorfile>classMagnum_1_1Math_1_1Matrix3.html</anchorfile>
      <anchor>a68c155883727032ae44b117d9cd2f692</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Matrix2x2&lt; Float &gt;</type>
      <name>rotationNormalized</name>
      <anchorfile>classMagnum_1_1Math_1_1Matrix3.html</anchorfile>
      <anchor>acff2ca2d2860f0f90af6929e2b45245e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Float</type>
      <name>uniformScalingSquared</name>
      <anchorfile>classMagnum_1_1Math_1_1Matrix3.html</anchorfile>
      <anchor>ac3408032a87372772709ae973346e2f0</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Float</type>
      <name>uniformScaling</name>
      <anchorfile>classMagnum_1_1Math_1_1Matrix3.html</anchorfile>
      <anchor>a56f14460dad75555792f35aeb8b94703</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector2&lt; Float &gt; &amp;</type>
      <name>right</name>
      <anchorfile>classMagnum_1_1Math_1_1Matrix3.html</anchorfile>
      <anchor>ad166d31fcb12797eb258230b47ca80f5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>constexpr Vector2&lt; Float &gt;</type>
      <name>right</name>
      <anchorfile>classMagnum_1_1Math_1_1Matrix3.html</anchorfile>
      <anchor>ad78d8311a4493694bb74aca0789685f4</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector2&lt; Float &gt; &amp;</type>
      <name>up</name>
      <anchorfile>classMagnum_1_1Math_1_1Matrix3.html</anchorfile>
      <anchor>aeb8a324e5abe64f09bc888e4bc58e114</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>constexpr Vector2&lt; Float &gt;</type>
      <name>up</name>
      <anchorfile>classMagnum_1_1Math_1_1Matrix3.html</anchorfile>
      <anchor>abdd0458024615486175d18ce5951100d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Matrix3&lt; Float &gt;</type>
      <name>invertedRigid</name>
      <anchorfile>classMagnum_1_1Math_1_1Matrix3.html</anchorfile>
      <anchor>ad52993fc4b52ae189156af7394190eeb</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector2&lt; Float &gt;</type>
      <name>transformVector</name>
      <anchorfile>classMagnum_1_1Math_1_1Matrix3.html</anchorfile>
      <anchor>a0abd22e4d34e468c60ac7ac95e182c2b</anchor>
      <arglist>(const Vector2&lt; Float &gt; &amp;vector) const</arglist>
    </member>
    <member kind="function">
      <type>Vector2&lt; Float &gt;</type>
      <name>transformPoint</name>
      <anchorfile>classMagnum_1_1Math_1_1Matrix3.html</anchorfile>
      <anchor>a7766c1ba545814dd774a739424edad6b</anchor>
      <arglist>(const Vector2&lt; Float &gt; &amp;vector) const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static constexpr Matrix3&lt; Float &gt;</type>
      <name>translation</name>
      <anchorfile>classMagnum_1_1Math_1_1Matrix3.html</anchorfile>
      <anchor>ae22c375a0af7fac1a22cb8bbc5bba1c1</anchor>
      <arglist>(const Vector2&lt; Float &gt; &amp;vector)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static constexpr Matrix3&lt; Float &gt;</type>
      <name>scaling</name>
      <anchorfile>classMagnum_1_1Math_1_1Matrix3.html</anchorfile>
      <anchor>a8d1392224570b254702baeaadfa79692</anchor>
      <arglist>(const Vector2&lt; Float &gt; &amp;vector)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Matrix3&lt; Float &gt;</type>
      <name>rotation</name>
      <anchorfile>classMagnum_1_1Math_1_1Matrix3.html</anchorfile>
      <anchor>a51a3dddeb726e7679cbaa2190d1e889c</anchor>
      <arglist>(Rad&lt; Float &gt; angle)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Matrix3&lt; Float &gt;</type>
      <name>reflection</name>
      <anchorfile>classMagnum_1_1Math_1_1Matrix3.html</anchorfile>
      <anchor>a4c517f1a78c5300fc9c207496ea867e2</anchor>
      <arglist>(const Vector2&lt; Float &gt; &amp;normal)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static constexpr Matrix3&lt; Float &gt;</type>
      <name>shearingX</name>
      <anchorfile>classMagnum_1_1Math_1_1Matrix3.html</anchorfile>
      <anchor>a5a10fe4eb0b05f0fae43797642ad8570</anchor>
      <arglist>(Float amount)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static constexpr Matrix3&lt; Float &gt;</type>
      <name>shearingY</name>
      <anchorfile>classMagnum_1_1Math_1_1Matrix3.html</anchorfile>
      <anchor>a791d5ea6cff14636c10374826668749c</anchor>
      <arglist>(Float amount)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Matrix3&lt; Float &gt;</type>
      <name>projection</name>
      <anchorfile>classMagnum_1_1Math_1_1Matrix3.html</anchorfile>
      <anchor>a8a782bf6187750b0f4bc763623ee3857</anchor>
      <arglist>(const Vector2&lt; Float &gt; &amp;size)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static constexpr Matrix3&lt; Float &gt;</type>
      <name>from</name>
      <anchorfile>classMagnum_1_1Math_1_1Matrix3.html</anchorfile>
      <anchor>a04ab2a75059c8016904ad30f5ed7d89c</anchor>
      <arglist>(const Matrix2x2&lt; Float &gt; &amp;rotationScaling, const Vector2&lt; Float &gt; &amp;translation)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Matrix4&lt; Float &gt;</name>
    <filename>classMagnum_1_1Math_1_1Matrix4.html</filename>
    <base>Magnum::Math::Matrix</base>
    <member kind="function">
      <type>Vector3&lt; Float &gt; &amp;</type>
      <name>translation</name>
      <anchorfile>classMagnum_1_1Math_1_1Matrix4.html</anchorfile>
      <anchor>a9a2876c4f7d3f3af31defa3af839f8ef</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>constexpr Vector3&lt; Float &gt;</type>
      <name>translation</name>
      <anchorfile>classMagnum_1_1Math_1_1Matrix4.html</anchorfile>
      <anchor>a925ea442a6d8e964ec4b598afce3ae23</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Matrix3x3&lt; Float &gt;</type>
      <name>rotation</name>
      <anchorfile>classMagnum_1_1Math_1_1Matrix4.html</anchorfile>
      <anchor>ad4c2ec6a5a71b575c6df932d39d0f688</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Matrix4</name>
      <anchorfile>classMagnum_1_1Math_1_1Matrix4.html</anchorfile>
      <anchor>a0be8f8e761f7e807400a6c2bff1fa2c2</anchor>
      <arglist>(IdentityInitT=IdentityInit, Float value=Float{1}) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Matrix4</name>
      <anchorfile>classMagnum_1_1Math_1_1Matrix4.html</anchorfile>
      <anchor>a07a734e23014fa82b969228965f4aea2</anchor>
      <arglist>(ZeroInitT) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Matrix4</name>
      <anchorfile>classMagnum_1_1Math_1_1Matrix4.html</anchorfile>
      <anchor>a8640c92bd243d3ff10ce37af5cc1e908</anchor>
      <arglist>(NoInitT) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Matrix4</name>
      <anchorfile>classMagnum_1_1Math_1_1Matrix4.html</anchorfile>
      <anchor>abf0b673faa0db9089a403c9c45ede727</anchor>
      <arglist>(const Vector4&lt; Float &gt; &amp;first, const Vector4&lt; Float &gt; &amp;second, const Vector4&lt; Float &gt; &amp;third, const Vector4&lt; Float &gt; &amp;fourth) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Matrix4</name>
      <anchorfile>classMagnum_1_1Math_1_1Matrix4.html</anchorfile>
      <anchor>ac633e90736fe4d196813d1ab30ed2c47</anchor>
      <arglist>(Float value) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Matrix4</name>
      <anchorfile>classMagnum_1_1Math_1_1Matrix4.html</anchorfile>
      <anchor>ac4240b374984e79fee6a98c00848b6d0</anchor>
      <arglist>(const RectangularMatrix&lt; 4, 4, U &gt; &amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Matrix4</name>
      <anchorfile>classMagnum_1_1Math_1_1Matrix4.html</anchorfile>
      <anchor>a6448feda6260b10d8269e562bea39eb2</anchor>
      <arglist>(const U &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Matrix4</name>
      <anchorfile>classMagnum_1_1Math_1_1Matrix4.html</anchorfile>
      <anchor>a826e3c118fb9be8590d2ba0ff32997c8</anchor>
      <arglist>(const RectangularMatrix&lt; 4, 4, Float &gt; &amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isRigidTransformation</name>
      <anchorfile>classMagnum_1_1Math_1_1Matrix4.html</anchorfile>
      <anchor>a4d4ebbb7a7634e8359f60bbc117d476e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>constexpr Matrix3x3&lt; Float &gt;</type>
      <name>rotationScaling</name>
      <anchorfile>classMagnum_1_1Math_1_1Matrix4.html</anchorfile>
      <anchor>a6d9b7d667bd87a3fbf605275adfb3c68</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Matrix3x3&lt; Float &gt;</type>
      <name>rotationNormalized</name>
      <anchorfile>classMagnum_1_1Math_1_1Matrix4.html</anchorfile>
      <anchor>a0ba00945e3f99705c25c317d55a9a690</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Float</type>
      <name>uniformScalingSquared</name>
      <anchorfile>classMagnum_1_1Math_1_1Matrix4.html</anchorfile>
      <anchor>a70114530ab7f0f3cef2aa036abdbd4df</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Float</type>
      <name>uniformScaling</name>
      <anchorfile>classMagnum_1_1Math_1_1Matrix4.html</anchorfile>
      <anchor>a947c7fd3fd5643bbb653e1a4cdeb4259</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector3&lt; Float &gt; &amp;</type>
      <name>right</name>
      <anchorfile>classMagnum_1_1Math_1_1Matrix4.html</anchorfile>
      <anchor>a01d3d5de521bddf5b4a91fbcc24adad4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>constexpr Vector3&lt; Float &gt;</type>
      <name>right</name>
      <anchorfile>classMagnum_1_1Math_1_1Matrix4.html</anchorfile>
      <anchor>a831c5babce197bb93cae4b6cf6131c58</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector3&lt; Float &gt; &amp;</type>
      <name>up</name>
      <anchorfile>classMagnum_1_1Math_1_1Matrix4.html</anchorfile>
      <anchor>a91a49eeea70603cb4446f21abc7e4bf7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>constexpr Vector3&lt; Float &gt;</type>
      <name>up</name>
      <anchorfile>classMagnum_1_1Math_1_1Matrix4.html</anchorfile>
      <anchor>a88f6c8989599bc19e72dfdb6fa51d872</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector3&lt; Float &gt; &amp;</type>
      <name>backward</name>
      <anchorfile>classMagnum_1_1Math_1_1Matrix4.html</anchorfile>
      <anchor>abbb01409dd273bb1f0f00b4d251d096f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>constexpr Vector3&lt; Float &gt;</type>
      <name>backward</name>
      <anchorfile>classMagnum_1_1Math_1_1Matrix4.html</anchorfile>
      <anchor>a0a0cc1891edf68c4c3fb382521c474bc</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Matrix4&lt; Float &gt;</type>
      <name>invertedRigid</name>
      <anchorfile>classMagnum_1_1Math_1_1Matrix4.html</anchorfile>
      <anchor>abeb1abab1ff39721909c3d0f9ee27500</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector3&lt; Float &gt;</type>
      <name>transformVector</name>
      <anchorfile>classMagnum_1_1Math_1_1Matrix4.html</anchorfile>
      <anchor>a11d32c7ef893c2b46be17909b8e459e2</anchor>
      <arglist>(const Vector3&lt; Float &gt; &amp;vector) const</arglist>
    </member>
    <member kind="function">
      <type>Vector3&lt; Float &gt;</type>
      <name>transformPoint</name>
      <anchorfile>classMagnum_1_1Math_1_1Matrix4.html</anchorfile>
      <anchor>a06e09bd8b0113dad4e8f5b1b5edb6cac</anchor>
      <arglist>(const Vector3&lt; Float &gt; &amp;vector) const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static constexpr Matrix4&lt; Float &gt;</type>
      <name>translation</name>
      <anchorfile>classMagnum_1_1Math_1_1Matrix4.html</anchorfile>
      <anchor>a45c6efa069510006c721f6668c1085aa</anchor>
      <arglist>(const Vector3&lt; Float &gt; &amp;vector)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static constexpr Matrix4&lt; Float &gt;</type>
      <name>scaling</name>
      <anchorfile>classMagnum_1_1Math_1_1Matrix4.html</anchorfile>
      <anchor>af7be765c3968058eaa46212573d08f51</anchor>
      <arglist>(const Vector3&lt; Float &gt; &amp;vector)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Matrix4&lt; Float &gt;</type>
      <name>rotation</name>
      <anchorfile>classMagnum_1_1Math_1_1Matrix4.html</anchorfile>
      <anchor>a33c92542c8fa696eccb4ab1a988b197e</anchor>
      <arglist>(Rad&lt; Float &gt; angle, const Vector3&lt; Float &gt; &amp;normalizedAxis)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Matrix4&lt; Float &gt;</type>
      <name>rotationX</name>
      <anchorfile>classMagnum_1_1Math_1_1Matrix4.html</anchorfile>
      <anchor>af13627059189e2a41972bc050fc64380</anchor>
      <arglist>(Rad&lt; Float &gt; angle)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Matrix4&lt; Float &gt;</type>
      <name>rotationY</name>
      <anchorfile>classMagnum_1_1Math_1_1Matrix4.html</anchorfile>
      <anchor>afb3faf19d351e69287e62a9a1b5a58d9</anchor>
      <arglist>(Rad&lt; Float &gt; angle)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Matrix4&lt; Float &gt;</type>
      <name>rotationZ</name>
      <anchorfile>classMagnum_1_1Math_1_1Matrix4.html</anchorfile>
      <anchor>a4233c4525af0e29ca99f036b48ecd4cb</anchor>
      <arglist>(Rad&lt; Float &gt; angle)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Matrix4&lt; Float &gt;</type>
      <name>reflection</name>
      <anchorfile>classMagnum_1_1Math_1_1Matrix4.html</anchorfile>
      <anchor>ac873401ad2ba0868ab7d6ee0bafc1a0d</anchor>
      <arglist>(const Vector3&lt; Float &gt; &amp;normal)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static constexpr Matrix4&lt; Float &gt;</type>
      <name>shearingXY</name>
      <anchorfile>classMagnum_1_1Math_1_1Matrix4.html</anchorfile>
      <anchor>aaf0d40fe677b13ce587cd60fc770a503</anchor>
      <arglist>(Float amountX, Float amountY)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static constexpr Matrix4&lt; Float &gt;</type>
      <name>shearingXZ</name>
      <anchorfile>classMagnum_1_1Math_1_1Matrix4.html</anchorfile>
      <anchor>af45de8e18101c8d5c3a207d2528cd966</anchor>
      <arglist>(Float amountX, Float amountZ)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static constexpr Matrix4&lt; Float &gt;</type>
      <name>shearingYZ</name>
      <anchorfile>classMagnum_1_1Math_1_1Matrix4.html</anchorfile>
      <anchor>a39ca88e718fab9bf21d22aa6a633deb3</anchor>
      <arglist>(Float amountY, Float amountZ)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Matrix4&lt; Float &gt;</type>
      <name>orthographicProjection</name>
      <anchorfile>classMagnum_1_1Math_1_1Matrix4.html</anchorfile>
      <anchor>a41a7c41a0f1c450758fa0e91c31f9bf6</anchor>
      <arglist>(const Vector2&lt; Float &gt; &amp;size, Float near, Float far)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Matrix4&lt; Float &gt;</type>
      <name>perspectiveProjection</name>
      <anchorfile>classMagnum_1_1Math_1_1Matrix4.html</anchorfile>
      <anchor>aeed8f8ff2daedc28b7e3638e8e4ded47</anchor>
      <arglist>(const Vector2&lt; Float &gt; &amp;size, Float near, Float far)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Matrix4&lt; Float &gt;</type>
      <name>perspectiveProjection</name>
      <anchorfile>classMagnum_1_1Math_1_1Matrix4.html</anchorfile>
      <anchor>a6475b3ef155c9142b890c8133504ae9b</anchor>
      <arglist>(Rad&lt; Float &gt; fov, Float aspectRatio, Float near, Float far)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Matrix4&lt; Float &gt;</type>
      <name>lookAt</name>
      <anchorfile>classMagnum_1_1Math_1_1Matrix4.html</anchorfile>
      <anchor>a568407217908849afa90cfe99ccf54a7</anchor>
      <arglist>(const Vector3&lt; Float &gt; &amp;eye, const Vector3&lt; Float &gt; &amp;target, const Vector3&lt; Float &gt; &amp;up)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static constexpr Matrix4&lt; Float &gt;</type>
      <name>from</name>
      <anchorfile>classMagnum_1_1Math_1_1Matrix4.html</anchorfile>
      <anchor>a557b7e93cc1cf9f0efc3bd972dfa8db5</anchor>
      <arglist>(const Matrix3x3&lt; Float &gt; &amp;rotationScaling, const Vector3&lt; Float &gt; &amp;translation)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Rad&lt; Float &gt;</name>
    <filename>classMagnum_1_1Math_1_1Rad.html</filename>
    <base>Unit&lt; Rad, Float &gt;</base>
    <member kind="function">
      <type>constexpr</type>
      <name>Rad</name>
      <anchorfile>classMagnum_1_1Math_1_1Rad.html</anchorfile>
      <anchor>ac2379e7bd29ee10507bbcaf9e2fb7074</anchor>
      <arglist>(ZeroInitT=ZeroInit) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Rad</name>
      <anchorfile>classMagnum_1_1Math_1_1Rad.html</anchorfile>
      <anchor>a0ffa51c6c54c775284fbcdf896e49350</anchor>
      <arglist>(NoInitT) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Rad</name>
      <anchorfile>classMagnum_1_1Math_1_1Rad.html</anchorfile>
      <anchor>a3103647d758537197096e0eeda87aa8a</anchor>
      <arglist>(Float value) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Rad</name>
      <anchorfile>classMagnum_1_1Math_1_1Rad.html</anchorfile>
      <anchor>a259baea5e418004734ee1d8d47293648</anchor>
      <arglist>(Unit&lt; Math::Rad, U &gt; value) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Rad</name>
      <anchorfile>classMagnum_1_1Math_1_1Rad.html</anchorfile>
      <anchor>a808735c8f585f24db7e764b231d0f5c2</anchor>
      <arglist>(Unit&lt; Math::Rad, Float &gt; value) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Rad</name>
      <anchorfile>classMagnum_1_1Math_1_1Rad.html</anchorfile>
      <anchor>a6666a48047298ac78dda704a21be4dd5</anchor>
      <arglist>(Unit&lt; Deg, Float &gt; value)</arglist>
    </member>
    <member kind="function">
      <type>constexpr Rad&lt; Double &gt;</type>
      <name>operator&quot;&quot;_rad</name>
      <anchorfile>classMagnum_1_1Math_1_1Rad.html</anchorfile>
      <anchor>aaf0bfb135a94f2bfd98cae7acc20a495</anchor>
      <arglist>(long double value)</arglist>
    </member>
    <member kind="function">
      <type>constexpr Rad&lt; Float &gt;</type>
      <name>operator&quot;&quot;_radf</name>
      <anchorfile>classMagnum_1_1Math_1_1Rad.html</anchorfile>
      <anchor>a143288fa3c5bea5542c6ab59798d4013</anchor>
      <arglist>(long double value)</arglist>
    </member>
    <member kind="function">
      <type>Corrade::Utility::Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>classMagnum_1_1Math_1_1Rad.html</anchorfile>
      <anchor>a577c8c280a0b3753ef06a23b5b496a3a</anchor>
      <arglist>(Corrade::Utility::Debug &amp;debug, const Unit&lt; Rad, Float &gt; &amp;value)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Range2D&lt; Float &gt;</name>
    <filename>classMagnum_1_1Math_1_1Range2D.html</filename>
    <base>Range&lt; 2, Float &gt;</base>
    <member kind="function">
      <type>constexpr</type>
      <name>Range2D</name>
      <anchorfile>classMagnum_1_1Math_1_1Range2D.html</anchorfile>
      <anchor>ac9b21c1c010f3048b61043bee2196930</anchor>
      <arglist>(ZeroInitT=ZeroInit) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Range2D</name>
      <anchorfile>classMagnum_1_1Math_1_1Range2D.html</anchorfile>
      <anchor>aba01c4477be2625eeac588c1291012f1</anchor>
      <arglist>(NoInitT) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Range2D</name>
      <anchorfile>classMagnum_1_1Math_1_1Range2D.html</anchorfile>
      <anchor>a29a5b08d68619e6f88d1ebcc71a14d7d</anchor>
      <arglist>(const Vector2&lt; Float &gt; &amp;min, const Vector2&lt; Float &gt; &amp;max) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Range2D</name>
      <anchorfile>classMagnum_1_1Math_1_1Range2D.html</anchorfile>
      <anchor>abf4ff365167312845528c8c29d9fa13b</anchor>
      <arglist>(const Range2D&lt; U &gt; &amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Range2D</name>
      <anchorfile>classMagnum_1_1Math_1_1Range2D.html</anchorfile>
      <anchor>ac6fff4886595aa98843ea4b0143953dc</anchor>
      <arglist>(const U &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Range2D</name>
      <anchorfile>classMagnum_1_1Math_1_1Range2D.html</anchorfile>
      <anchor>ac6b2efabb797a86e2695ae5c52345ad8</anchor>
      <arglist>(const Range&lt; 2, Float &gt; &amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type>Vector2&lt; Float &gt; &amp;</type>
      <name>bottomLeft</name>
      <anchorfile>classMagnum_1_1Math_1_1Range2D.html</anchorfile>
      <anchor>a72523c0c53c0c1eb52b2bf4ee20ef655</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>constexpr Vector2&lt; Float &gt;</type>
      <name>bottomLeft</name>
      <anchorfile>classMagnum_1_1Math_1_1Range2D.html</anchorfile>
      <anchor>a28186724a268176f57686d429e92c5fb</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>constexpr Vector2&lt; Float &gt;</type>
      <name>bottomRight</name>
      <anchorfile>classMagnum_1_1Math_1_1Range2D.html</anchorfile>
      <anchor>af3a9755414f0f24198f348d2a42abfa5</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>constexpr Vector2&lt; Float &gt;</type>
      <name>topLeft</name>
      <anchorfile>classMagnum_1_1Math_1_1Range2D.html</anchorfile>
      <anchor>a5110b0a07c99cc91ac2ec8e5552dc509</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector2&lt; Float &gt; &amp;</type>
      <name>topRight</name>
      <anchorfile>classMagnum_1_1Math_1_1Range2D.html</anchorfile>
      <anchor>af722c06c6594f0c95dd8e226ada01e4d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>constexpr Vector2&lt; Float &gt;</type>
      <name>topRight</name>
      <anchorfile>classMagnum_1_1Math_1_1Range2D.html</anchorfile>
      <anchor>a04a4c8cbcc28a0bb07f3c3592c3aadf6</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Float &amp;</type>
      <name>left</name>
      <anchorfile>classMagnum_1_1Math_1_1Range2D.html</anchorfile>
      <anchor>ab0045c3d9efc537479a7e1a3b62a3d31</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>constexpr Float</type>
      <name>left</name>
      <anchorfile>classMagnum_1_1Math_1_1Range2D.html</anchorfile>
      <anchor>a2fa814e30f4cdad45fa6c380f3d99b8e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Float &amp;</type>
      <name>right</name>
      <anchorfile>classMagnum_1_1Math_1_1Range2D.html</anchorfile>
      <anchor>a6dd0190fea1c0ca659b08761d7de8d21</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>constexpr Float</type>
      <name>right</name>
      <anchorfile>classMagnum_1_1Math_1_1Range2D.html</anchorfile>
      <anchor>a8030f3a61af4ff73d63098bb2144a17e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Float &amp;</type>
      <name>bottom</name>
      <anchorfile>classMagnum_1_1Math_1_1Range2D.html</anchorfile>
      <anchor>add87a538ca7568b55d86377b16192226</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>constexpr Float</type>
      <name>bottom</name>
      <anchorfile>classMagnum_1_1Math_1_1Range2D.html</anchorfile>
      <anchor>af9bd86239bf1fa1b5369c7c519350186</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Float &amp;</type>
      <name>top</name>
      <anchorfile>classMagnum_1_1Math_1_1Range2D.html</anchorfile>
      <anchor>a304ac9d040df205686a08ec706ccc51a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>constexpr Float</type>
      <name>top</name>
      <anchorfile>classMagnum_1_1Math_1_1Range2D.html</anchorfile>
      <anchor>a3a0d317a8bc81ed7244ce7a0cbeb9380</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Float</type>
      <name>sizeX</name>
      <anchorfile>classMagnum_1_1Math_1_1Range2D.html</anchorfile>
      <anchor>ac343ff898317524885afeeb1819fd247</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Float</type>
      <name>sizeY</name>
      <anchorfile>classMagnum_1_1Math_1_1Range2D.html</anchorfile>
      <anchor>a831779452acbec2dd6cee8de64628ba2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Float</type>
      <name>centerX</name>
      <anchorfile>classMagnum_1_1Math_1_1Range2D.html</anchorfile>
      <anchor>ac8900baf384f28e1128a2996310140ab</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Float</type>
      <name>centerY</name>
      <anchorfile>classMagnum_1_1Math_1_1Range2D.html</anchorfile>
      <anchor>a91bea624576d859dfc812306ee696849</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Range2D&lt; Int &gt;</name>
    <filename>classMagnum_1_1Math_1_1Range2D.html</filename>
    <base>Range&lt; 2, Int &gt;</base>
    <member kind="function">
      <type>constexpr</type>
      <name>Range2D</name>
      <anchorfile>classMagnum_1_1Math_1_1Range2D.html</anchorfile>
      <anchor>ac9b21c1c010f3048b61043bee2196930</anchor>
      <arglist>(ZeroInitT=ZeroInit) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Range2D</name>
      <anchorfile>classMagnum_1_1Math_1_1Range2D.html</anchorfile>
      <anchor>aba01c4477be2625eeac588c1291012f1</anchor>
      <arglist>(NoInitT) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Range2D</name>
      <anchorfile>classMagnum_1_1Math_1_1Range2D.html</anchorfile>
      <anchor>a29a5b08d68619e6f88d1ebcc71a14d7d</anchor>
      <arglist>(const Vector2&lt; Int &gt; &amp;min, const Vector2&lt; Int &gt; &amp;max) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Range2D</name>
      <anchorfile>classMagnum_1_1Math_1_1Range2D.html</anchorfile>
      <anchor>abf4ff365167312845528c8c29d9fa13b</anchor>
      <arglist>(const Range2D&lt; U &gt; &amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Range2D</name>
      <anchorfile>classMagnum_1_1Math_1_1Range2D.html</anchorfile>
      <anchor>ac6fff4886595aa98843ea4b0143953dc</anchor>
      <arglist>(const U &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Range2D</name>
      <anchorfile>classMagnum_1_1Math_1_1Range2D.html</anchorfile>
      <anchor>ac6b2efabb797a86e2695ae5c52345ad8</anchor>
      <arglist>(const Range&lt; 2, Int &gt; &amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type>Vector2&lt; Int &gt; &amp;</type>
      <name>bottomLeft</name>
      <anchorfile>classMagnum_1_1Math_1_1Range2D.html</anchorfile>
      <anchor>a72523c0c53c0c1eb52b2bf4ee20ef655</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>constexpr Vector2&lt; Int &gt;</type>
      <name>bottomLeft</name>
      <anchorfile>classMagnum_1_1Math_1_1Range2D.html</anchorfile>
      <anchor>a28186724a268176f57686d429e92c5fb</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>constexpr Vector2&lt; Int &gt;</type>
      <name>bottomRight</name>
      <anchorfile>classMagnum_1_1Math_1_1Range2D.html</anchorfile>
      <anchor>af3a9755414f0f24198f348d2a42abfa5</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>constexpr Vector2&lt; Int &gt;</type>
      <name>topLeft</name>
      <anchorfile>classMagnum_1_1Math_1_1Range2D.html</anchorfile>
      <anchor>a5110b0a07c99cc91ac2ec8e5552dc509</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector2&lt; Int &gt; &amp;</type>
      <name>topRight</name>
      <anchorfile>classMagnum_1_1Math_1_1Range2D.html</anchorfile>
      <anchor>af722c06c6594f0c95dd8e226ada01e4d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>constexpr Vector2&lt; Int &gt;</type>
      <name>topRight</name>
      <anchorfile>classMagnum_1_1Math_1_1Range2D.html</anchorfile>
      <anchor>a04a4c8cbcc28a0bb07f3c3592c3aadf6</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Int &amp;</type>
      <name>left</name>
      <anchorfile>classMagnum_1_1Math_1_1Range2D.html</anchorfile>
      <anchor>ab0045c3d9efc537479a7e1a3b62a3d31</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>constexpr Int</type>
      <name>left</name>
      <anchorfile>classMagnum_1_1Math_1_1Range2D.html</anchorfile>
      <anchor>a2fa814e30f4cdad45fa6c380f3d99b8e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Int &amp;</type>
      <name>right</name>
      <anchorfile>classMagnum_1_1Math_1_1Range2D.html</anchorfile>
      <anchor>a6dd0190fea1c0ca659b08761d7de8d21</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>constexpr Int</type>
      <name>right</name>
      <anchorfile>classMagnum_1_1Math_1_1Range2D.html</anchorfile>
      <anchor>a8030f3a61af4ff73d63098bb2144a17e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Int &amp;</type>
      <name>bottom</name>
      <anchorfile>classMagnum_1_1Math_1_1Range2D.html</anchorfile>
      <anchor>add87a538ca7568b55d86377b16192226</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>constexpr Int</type>
      <name>bottom</name>
      <anchorfile>classMagnum_1_1Math_1_1Range2D.html</anchorfile>
      <anchor>af9bd86239bf1fa1b5369c7c519350186</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Int &amp;</type>
      <name>top</name>
      <anchorfile>classMagnum_1_1Math_1_1Range2D.html</anchorfile>
      <anchor>a304ac9d040df205686a08ec706ccc51a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>constexpr Int</type>
      <name>top</name>
      <anchorfile>classMagnum_1_1Math_1_1Range2D.html</anchorfile>
      <anchor>a3a0d317a8bc81ed7244ce7a0cbeb9380</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Int</type>
      <name>sizeX</name>
      <anchorfile>classMagnum_1_1Math_1_1Range2D.html</anchorfile>
      <anchor>ac343ff898317524885afeeb1819fd247</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Int</type>
      <name>sizeY</name>
      <anchorfile>classMagnum_1_1Math_1_1Range2D.html</anchorfile>
      <anchor>a831779452acbec2dd6cee8de64628ba2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Int</type>
      <name>centerX</name>
      <anchorfile>classMagnum_1_1Math_1_1Range2D.html</anchorfile>
      <anchor>ac8900baf384f28e1128a2996310140ab</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Int</type>
      <name>centerY</name>
      <anchorfile>classMagnum_1_1Math_1_1Range2D.html</anchorfile>
      <anchor>a91bea624576d859dfc812306ee696849</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Range&lt; 2, Float &gt;</name>
    <filename>classMagnum_1_1Math_1_1Range.html</filename>
    <member kind="typedef">
      <type>Implementation::RangeTraits&lt; dimensions, Float &gt;::Type</type>
      <name>VectorType</name>
      <anchorfile>classMagnum_1_1Math_1_1Range.html</anchorfile>
      <anchor>a9b67475211cb779b753bf6e7c4a0a71b</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Range</name>
      <anchorfile>classMagnum_1_1Math_1_1Range.html</anchorfile>
      <anchor>a9924f26a86ab957d3d7dc232c9cf0fed</anchor>
      <arglist>(ZeroInitT=ZeroInit) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Range</name>
      <anchorfile>classMagnum_1_1Math_1_1Range.html</anchorfile>
      <anchor>a37cf32f96975f2252d535476aee0a0b0</anchor>
      <arglist>(NoInitT) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Range</name>
      <anchorfile>classMagnum_1_1Math_1_1Range.html</anchorfile>
      <anchor>adbcdfa9101feecf1ff90ba5c246997eb</anchor>
      <arglist>(const VectorType &amp;min, const VectorType &amp;max) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Range</name>
      <anchorfile>classMagnum_1_1Math_1_1Range.html</anchorfile>
      <anchor>a42d6842532079884d60019890d0de09d</anchor>
      <arglist>(const Range&lt; dimensions, U &gt; &amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Range</name>
      <anchorfile>classMagnum_1_1Math_1_1Range.html</anchorfile>
      <anchor>a2060f88e1d0f1efe96068ca5341260c9</anchor>
      <arglist>(const U &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Range</name>
      <anchorfile>classMagnum_1_1Math_1_1Range.html</anchorfile>
      <anchor>af98d7db502faa0044a758c879c9d2972</anchor>
      <arglist>(const Range&lt; dimensions, Float &gt; &amp;) noexcept=default</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>operator U</name>
      <anchorfile>classMagnum_1_1Math_1_1Range.html</anchorfile>
      <anchor>a3e4433fedea0f498d6bcdea1a984aec8</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>constexpr bool</type>
      <name>operator==</name>
      <anchorfile>classMagnum_1_1Math_1_1Range.html</anchorfile>
      <anchor>a13b922251c81c7db9c2894f290670386</anchor>
      <arglist>(const Range&lt; dimensions, Float &gt; &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>constexpr bool</type>
      <name>operator!=</name>
      <anchorfile>classMagnum_1_1Math_1_1Range.html</anchorfile>
      <anchor>a92733cd0ee541eff518047cefe143662</anchor>
      <arglist>(const Range&lt; dimensions, Float &gt; &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>Float *</type>
      <name>data</name>
      <anchorfile>classMagnum_1_1Math_1_1Range.html</anchorfile>
      <anchor>a2715cd7abca4c9c0ede4d3227507495f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>constexpr const Float *</type>
      <name>data</name>
      <anchorfile>classMagnum_1_1Math_1_1Range.html</anchorfile>
      <anchor>aab6fc4832ec6db6cfd30eb0075f6d1ec</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>VectorType &amp;</type>
      <name>min</name>
      <anchorfile>classMagnum_1_1Math_1_1Range.html</anchorfile>
      <anchor>ad4919361a2086212fac96da0221e4dcd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>constexpr const VectorType</type>
      <name>min</name>
      <anchorfile>classMagnum_1_1Math_1_1Range.html</anchorfile>
      <anchor>a22af2191e4ab88b45f082ef14aa45185</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>VectorType &amp;</type>
      <name>max</name>
      <anchorfile>classMagnum_1_1Math_1_1Range.html</anchorfile>
      <anchor>ae792027e5ae23ebd90d55f6447746b86</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>constexpr const VectorType</type>
      <name>max</name>
      <anchorfile>classMagnum_1_1Math_1_1Range.html</anchorfile>
      <anchor>a98aa3d62cafaed130433f67ddbcd65a3</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>VectorType</type>
      <name>size</name>
      <anchorfile>classMagnum_1_1Math_1_1Range.html</anchorfile>
      <anchor>a8328c2de860a05e916529171520e7041</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>VectorType</type>
      <name>center</name>
      <anchorfile>classMagnum_1_1Math_1_1Range.html</anchorfile>
      <anchor>a5a374b7a860a80ac95fedd29235652f2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Range&lt; dimensions, Float &gt;</type>
      <name>translated</name>
      <anchorfile>classMagnum_1_1Math_1_1Range.html</anchorfile>
      <anchor>a68d9e8d01c037336459189b76f912ad4</anchor>
      <arglist>(const VectorType &amp;vector) const</arglist>
    </member>
    <member kind="function">
      <type>Range&lt; dimensions, Float &gt;</type>
      <name>padded</name>
      <anchorfile>classMagnum_1_1Math_1_1Range.html</anchorfile>
      <anchor>a854aa4f39708f9ef839937836cd5eb00</anchor>
      <arglist>(const VectorType &amp;padding) const</arglist>
    </member>
    <member kind="function">
      <type>Range&lt; dimensions, Float &gt;</type>
      <name>scaled</name>
      <anchorfile>classMagnum_1_1Math_1_1Range.html</anchorfile>
      <anchor>a4065a6203ccc5f9609be0019878c111e</anchor>
      <arglist>(const VectorType &amp;scaling) const</arglist>
    </member>
    <member kind="function">
      <type>constexpr bool</type>
      <name>contains</name>
      <anchorfile>classMagnum_1_1Math_1_1Range.html</anchorfile>
      <anchor>a941252e9325679e8e9c2966a13ec1330</anchor>
      <arglist>(const VectorType &amp;a) const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Range&lt; dimensions, Float &gt;</type>
      <name>fromSize</name>
      <anchorfile>classMagnum_1_1Math_1_1Range.html</anchorfile>
      <anchor>a6c72f85612084d91d80c5c95905b2e32</anchor>
      <arglist>(const VectorType &amp;min, const VectorType &amp;size)</arglist>
    </member>
    <member kind="function">
      <type>Range&lt; dimensions, Float &gt;</type>
      <name>join</name>
      <anchorfile>classMagnum_1_1Math_1_1Range.html</anchorfile>
      <anchor>ab1a605df6c5b25fe493c1ee83e2ae6d6</anchor>
      <arglist>(const Range&lt; dimensions, Float &gt; &amp;a, const Range&lt; dimensions, Float &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>Corrade::Utility::Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>classMagnum_1_1Math_1_1Range.html</anchorfile>
      <anchor>a1f3385fec96840d6f57368596e7b8fe5</anchor>
      <arglist>(Corrade::Utility::Debug &amp;debug, const Range&lt; dimensions, Float &gt; &amp;value)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Range&lt; 2, Int &gt;</name>
    <filename>classMagnum_1_1Math_1_1Range.html</filename>
    <member kind="typedef">
      <type>Implementation::RangeTraits&lt; dimensions, Int &gt;::Type</type>
      <name>VectorType</name>
      <anchorfile>classMagnum_1_1Math_1_1Range.html</anchorfile>
      <anchor>a9b67475211cb779b753bf6e7c4a0a71b</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Range</name>
      <anchorfile>classMagnum_1_1Math_1_1Range.html</anchorfile>
      <anchor>a9924f26a86ab957d3d7dc232c9cf0fed</anchor>
      <arglist>(ZeroInitT=ZeroInit) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Range</name>
      <anchorfile>classMagnum_1_1Math_1_1Range.html</anchorfile>
      <anchor>a37cf32f96975f2252d535476aee0a0b0</anchor>
      <arglist>(NoInitT) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Range</name>
      <anchorfile>classMagnum_1_1Math_1_1Range.html</anchorfile>
      <anchor>adbcdfa9101feecf1ff90ba5c246997eb</anchor>
      <arglist>(const VectorType &amp;min, const VectorType &amp;max) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Range</name>
      <anchorfile>classMagnum_1_1Math_1_1Range.html</anchorfile>
      <anchor>a42d6842532079884d60019890d0de09d</anchor>
      <arglist>(const Range&lt; dimensions, U &gt; &amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Range</name>
      <anchorfile>classMagnum_1_1Math_1_1Range.html</anchorfile>
      <anchor>a2060f88e1d0f1efe96068ca5341260c9</anchor>
      <arglist>(const U &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Range</name>
      <anchorfile>classMagnum_1_1Math_1_1Range.html</anchorfile>
      <anchor>af98d7db502faa0044a758c879c9d2972</anchor>
      <arglist>(const Range&lt; dimensions, Int &gt; &amp;) noexcept=default</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>operator U</name>
      <anchorfile>classMagnum_1_1Math_1_1Range.html</anchorfile>
      <anchor>a3e4433fedea0f498d6bcdea1a984aec8</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>constexpr bool</type>
      <name>operator==</name>
      <anchorfile>classMagnum_1_1Math_1_1Range.html</anchorfile>
      <anchor>a13b922251c81c7db9c2894f290670386</anchor>
      <arglist>(const Range&lt; dimensions, Int &gt; &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>constexpr bool</type>
      <name>operator!=</name>
      <anchorfile>classMagnum_1_1Math_1_1Range.html</anchorfile>
      <anchor>a92733cd0ee541eff518047cefe143662</anchor>
      <arglist>(const Range&lt; dimensions, Int &gt; &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>Int *</type>
      <name>data</name>
      <anchorfile>classMagnum_1_1Math_1_1Range.html</anchorfile>
      <anchor>a2715cd7abca4c9c0ede4d3227507495f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>constexpr const Int *</type>
      <name>data</name>
      <anchorfile>classMagnum_1_1Math_1_1Range.html</anchorfile>
      <anchor>aab6fc4832ec6db6cfd30eb0075f6d1ec</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>VectorType &amp;</type>
      <name>min</name>
      <anchorfile>classMagnum_1_1Math_1_1Range.html</anchorfile>
      <anchor>ad4919361a2086212fac96da0221e4dcd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>constexpr const VectorType</type>
      <name>min</name>
      <anchorfile>classMagnum_1_1Math_1_1Range.html</anchorfile>
      <anchor>a22af2191e4ab88b45f082ef14aa45185</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>VectorType &amp;</type>
      <name>max</name>
      <anchorfile>classMagnum_1_1Math_1_1Range.html</anchorfile>
      <anchor>ae792027e5ae23ebd90d55f6447746b86</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>constexpr const VectorType</type>
      <name>max</name>
      <anchorfile>classMagnum_1_1Math_1_1Range.html</anchorfile>
      <anchor>a98aa3d62cafaed130433f67ddbcd65a3</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>VectorType</type>
      <name>size</name>
      <anchorfile>classMagnum_1_1Math_1_1Range.html</anchorfile>
      <anchor>a8328c2de860a05e916529171520e7041</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>VectorType</type>
      <name>center</name>
      <anchorfile>classMagnum_1_1Math_1_1Range.html</anchorfile>
      <anchor>a5a374b7a860a80ac95fedd29235652f2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Range&lt; dimensions, Int &gt;</type>
      <name>translated</name>
      <anchorfile>classMagnum_1_1Math_1_1Range.html</anchorfile>
      <anchor>a68d9e8d01c037336459189b76f912ad4</anchor>
      <arglist>(const VectorType &amp;vector) const</arglist>
    </member>
    <member kind="function">
      <type>Range&lt; dimensions, Int &gt;</type>
      <name>padded</name>
      <anchorfile>classMagnum_1_1Math_1_1Range.html</anchorfile>
      <anchor>a854aa4f39708f9ef839937836cd5eb00</anchor>
      <arglist>(const VectorType &amp;padding) const</arglist>
    </member>
    <member kind="function">
      <type>Range&lt; dimensions, Int &gt;</type>
      <name>scaled</name>
      <anchorfile>classMagnum_1_1Math_1_1Range.html</anchorfile>
      <anchor>a4065a6203ccc5f9609be0019878c111e</anchor>
      <arglist>(const VectorType &amp;scaling) const</arglist>
    </member>
    <member kind="function">
      <type>constexpr bool</type>
      <name>contains</name>
      <anchorfile>classMagnum_1_1Math_1_1Range.html</anchorfile>
      <anchor>a941252e9325679e8e9c2966a13ec1330</anchor>
      <arglist>(const VectorType &amp;a) const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Range&lt; dimensions, Int &gt;</type>
      <name>fromSize</name>
      <anchorfile>classMagnum_1_1Math_1_1Range.html</anchorfile>
      <anchor>a6c72f85612084d91d80c5c95905b2e32</anchor>
      <arglist>(const VectorType &amp;min, const VectorType &amp;size)</arglist>
    </member>
    <member kind="function">
      <type>Range&lt; dimensions, Int &gt;</type>
      <name>join</name>
      <anchorfile>classMagnum_1_1Math_1_1Range.html</anchorfile>
      <anchor>ab1a605df6c5b25fe493c1ee83e2ae6d6</anchor>
      <arglist>(const Range&lt; dimensions, Int &gt; &amp;a, const Range&lt; dimensions, Int &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>Corrade::Utility::Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>classMagnum_1_1Math_1_1Range.html</anchorfile>
      <anchor>a1f3385fec96840d6f57368596e7b8fe5</anchor>
      <arglist>(Corrade::Utility::Debug &amp;debug, const Range&lt; dimensions, Int &gt; &amp;value)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Range&lt; 2, T &gt;</name>
    <filename>classMagnum_1_1Math_1_1Range.html</filename>
    <member kind="typedef">
      <type>Implementation::RangeTraits&lt; dimensions, T &gt;::Type</type>
      <name>VectorType</name>
      <anchorfile>classMagnum_1_1Math_1_1Range.html</anchorfile>
      <anchor>a9b67475211cb779b753bf6e7c4a0a71b</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Range</name>
      <anchorfile>classMagnum_1_1Math_1_1Range.html</anchorfile>
      <anchor>a9924f26a86ab957d3d7dc232c9cf0fed</anchor>
      <arglist>(ZeroInitT=ZeroInit) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Range</name>
      <anchorfile>classMagnum_1_1Math_1_1Range.html</anchorfile>
      <anchor>a37cf32f96975f2252d535476aee0a0b0</anchor>
      <arglist>(NoInitT) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Range</name>
      <anchorfile>classMagnum_1_1Math_1_1Range.html</anchorfile>
      <anchor>adbcdfa9101feecf1ff90ba5c246997eb</anchor>
      <arglist>(const VectorType &amp;min, const VectorType &amp;max) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Range</name>
      <anchorfile>classMagnum_1_1Math_1_1Range.html</anchorfile>
      <anchor>a42d6842532079884d60019890d0de09d</anchor>
      <arglist>(const Range&lt; dimensions, U &gt; &amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Range</name>
      <anchorfile>classMagnum_1_1Math_1_1Range.html</anchorfile>
      <anchor>a2060f88e1d0f1efe96068ca5341260c9</anchor>
      <arglist>(const U &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Range</name>
      <anchorfile>classMagnum_1_1Math_1_1Range.html</anchorfile>
      <anchor>af98d7db502faa0044a758c879c9d2972</anchor>
      <arglist>(const Range&lt; dimensions, T &gt; &amp;) noexcept=default</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>operator U</name>
      <anchorfile>classMagnum_1_1Math_1_1Range.html</anchorfile>
      <anchor>a3e4433fedea0f498d6bcdea1a984aec8</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>constexpr bool</type>
      <name>operator==</name>
      <anchorfile>classMagnum_1_1Math_1_1Range.html</anchorfile>
      <anchor>a13b922251c81c7db9c2894f290670386</anchor>
      <arglist>(const Range&lt; dimensions, T &gt; &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>constexpr bool</type>
      <name>operator!=</name>
      <anchorfile>classMagnum_1_1Math_1_1Range.html</anchorfile>
      <anchor>a92733cd0ee541eff518047cefe143662</anchor>
      <arglist>(const Range&lt; dimensions, T &gt; &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>T *</type>
      <name>data</name>
      <anchorfile>classMagnum_1_1Math_1_1Range.html</anchorfile>
      <anchor>a2715cd7abca4c9c0ede4d3227507495f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>constexpr const T *</type>
      <name>data</name>
      <anchorfile>classMagnum_1_1Math_1_1Range.html</anchorfile>
      <anchor>aab6fc4832ec6db6cfd30eb0075f6d1ec</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>VectorType &amp;</type>
      <name>min</name>
      <anchorfile>classMagnum_1_1Math_1_1Range.html</anchorfile>
      <anchor>ad4919361a2086212fac96da0221e4dcd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>constexpr const VectorType</type>
      <name>min</name>
      <anchorfile>classMagnum_1_1Math_1_1Range.html</anchorfile>
      <anchor>a22af2191e4ab88b45f082ef14aa45185</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>VectorType &amp;</type>
      <name>max</name>
      <anchorfile>classMagnum_1_1Math_1_1Range.html</anchorfile>
      <anchor>ae792027e5ae23ebd90d55f6447746b86</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>constexpr const VectorType</type>
      <name>max</name>
      <anchorfile>classMagnum_1_1Math_1_1Range.html</anchorfile>
      <anchor>a98aa3d62cafaed130433f67ddbcd65a3</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>VectorType</type>
      <name>size</name>
      <anchorfile>classMagnum_1_1Math_1_1Range.html</anchorfile>
      <anchor>a8328c2de860a05e916529171520e7041</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>VectorType</type>
      <name>center</name>
      <anchorfile>classMagnum_1_1Math_1_1Range.html</anchorfile>
      <anchor>a5a374b7a860a80ac95fedd29235652f2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Range&lt; dimensions, T &gt;</type>
      <name>translated</name>
      <anchorfile>classMagnum_1_1Math_1_1Range.html</anchorfile>
      <anchor>a68d9e8d01c037336459189b76f912ad4</anchor>
      <arglist>(const VectorType &amp;vector) const</arglist>
    </member>
    <member kind="function">
      <type>Range&lt; dimensions, T &gt;</type>
      <name>padded</name>
      <anchorfile>classMagnum_1_1Math_1_1Range.html</anchorfile>
      <anchor>a854aa4f39708f9ef839937836cd5eb00</anchor>
      <arglist>(const VectorType &amp;padding) const</arglist>
    </member>
    <member kind="function">
      <type>Range&lt; dimensions, T &gt;</type>
      <name>scaled</name>
      <anchorfile>classMagnum_1_1Math_1_1Range.html</anchorfile>
      <anchor>a4065a6203ccc5f9609be0019878c111e</anchor>
      <arglist>(const VectorType &amp;scaling) const</arglist>
    </member>
    <member kind="function">
      <type>constexpr bool</type>
      <name>contains</name>
      <anchorfile>classMagnum_1_1Math_1_1Range.html</anchorfile>
      <anchor>a941252e9325679e8e9c2966a13ec1330</anchor>
      <arglist>(const VectorType &amp;a) const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Range&lt; dimensions, T &gt;</type>
      <name>fromSize</name>
      <anchorfile>classMagnum_1_1Math_1_1Range.html</anchorfile>
      <anchor>a6c72f85612084d91d80c5c95905b2e32</anchor>
      <arglist>(const VectorType &amp;min, const VectorType &amp;size)</arglist>
    </member>
    <member kind="function">
      <type>Range&lt; dimensions, T &gt;</type>
      <name>join</name>
      <anchorfile>classMagnum_1_1Math_1_1Range.html</anchorfile>
      <anchor>ab1a605df6c5b25fe493c1ee83e2ae6d6</anchor>
      <arglist>(const Range&lt; dimensions, T &gt; &amp;a, const Range&lt; dimensions, T &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>Corrade::Utility::Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>classMagnum_1_1Math_1_1Range.html</anchorfile>
      <anchor>a1f3385fec96840d6f57368596e7b8fe5</anchor>
      <arglist>(Corrade::Utility::Debug &amp;debug, const Range&lt; dimensions, T &gt; &amp;value)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Range&lt; 3, T &gt;</name>
    <filename>classMagnum_1_1Math_1_1Range.html</filename>
    <member kind="typedef">
      <type>Implementation::RangeTraits&lt; dimensions, T &gt;::Type</type>
      <name>VectorType</name>
      <anchorfile>classMagnum_1_1Math_1_1Range.html</anchorfile>
      <anchor>a9b67475211cb779b753bf6e7c4a0a71b</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Range</name>
      <anchorfile>classMagnum_1_1Math_1_1Range.html</anchorfile>
      <anchor>a9924f26a86ab957d3d7dc232c9cf0fed</anchor>
      <arglist>(ZeroInitT=ZeroInit) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Range</name>
      <anchorfile>classMagnum_1_1Math_1_1Range.html</anchorfile>
      <anchor>a37cf32f96975f2252d535476aee0a0b0</anchor>
      <arglist>(NoInitT) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Range</name>
      <anchorfile>classMagnum_1_1Math_1_1Range.html</anchorfile>
      <anchor>adbcdfa9101feecf1ff90ba5c246997eb</anchor>
      <arglist>(const VectorType &amp;min, const VectorType &amp;max) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Range</name>
      <anchorfile>classMagnum_1_1Math_1_1Range.html</anchorfile>
      <anchor>a42d6842532079884d60019890d0de09d</anchor>
      <arglist>(const Range&lt; dimensions, U &gt; &amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Range</name>
      <anchorfile>classMagnum_1_1Math_1_1Range.html</anchorfile>
      <anchor>a2060f88e1d0f1efe96068ca5341260c9</anchor>
      <arglist>(const U &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Range</name>
      <anchorfile>classMagnum_1_1Math_1_1Range.html</anchorfile>
      <anchor>af98d7db502faa0044a758c879c9d2972</anchor>
      <arglist>(const Range&lt; dimensions, T &gt; &amp;) noexcept=default</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>operator U</name>
      <anchorfile>classMagnum_1_1Math_1_1Range.html</anchorfile>
      <anchor>a3e4433fedea0f498d6bcdea1a984aec8</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>constexpr bool</type>
      <name>operator==</name>
      <anchorfile>classMagnum_1_1Math_1_1Range.html</anchorfile>
      <anchor>a13b922251c81c7db9c2894f290670386</anchor>
      <arglist>(const Range&lt; dimensions, T &gt; &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>constexpr bool</type>
      <name>operator!=</name>
      <anchorfile>classMagnum_1_1Math_1_1Range.html</anchorfile>
      <anchor>a92733cd0ee541eff518047cefe143662</anchor>
      <arglist>(const Range&lt; dimensions, T &gt; &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>T *</type>
      <name>data</name>
      <anchorfile>classMagnum_1_1Math_1_1Range.html</anchorfile>
      <anchor>a2715cd7abca4c9c0ede4d3227507495f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>constexpr const T *</type>
      <name>data</name>
      <anchorfile>classMagnum_1_1Math_1_1Range.html</anchorfile>
      <anchor>aab6fc4832ec6db6cfd30eb0075f6d1ec</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>VectorType &amp;</type>
      <name>min</name>
      <anchorfile>classMagnum_1_1Math_1_1Range.html</anchorfile>
      <anchor>ad4919361a2086212fac96da0221e4dcd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>constexpr const VectorType</type>
      <name>min</name>
      <anchorfile>classMagnum_1_1Math_1_1Range.html</anchorfile>
      <anchor>a22af2191e4ab88b45f082ef14aa45185</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>VectorType &amp;</type>
      <name>max</name>
      <anchorfile>classMagnum_1_1Math_1_1Range.html</anchorfile>
      <anchor>ae792027e5ae23ebd90d55f6447746b86</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>constexpr const VectorType</type>
      <name>max</name>
      <anchorfile>classMagnum_1_1Math_1_1Range.html</anchorfile>
      <anchor>a98aa3d62cafaed130433f67ddbcd65a3</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>VectorType</type>
      <name>size</name>
      <anchorfile>classMagnum_1_1Math_1_1Range.html</anchorfile>
      <anchor>a8328c2de860a05e916529171520e7041</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>VectorType</type>
      <name>center</name>
      <anchorfile>classMagnum_1_1Math_1_1Range.html</anchorfile>
      <anchor>a5a374b7a860a80ac95fedd29235652f2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Range&lt; dimensions, T &gt;</type>
      <name>translated</name>
      <anchorfile>classMagnum_1_1Math_1_1Range.html</anchorfile>
      <anchor>a68d9e8d01c037336459189b76f912ad4</anchor>
      <arglist>(const VectorType &amp;vector) const</arglist>
    </member>
    <member kind="function">
      <type>Range&lt; dimensions, T &gt;</type>
      <name>padded</name>
      <anchorfile>classMagnum_1_1Math_1_1Range.html</anchorfile>
      <anchor>a854aa4f39708f9ef839937836cd5eb00</anchor>
      <arglist>(const VectorType &amp;padding) const</arglist>
    </member>
    <member kind="function">
      <type>Range&lt; dimensions, T &gt;</type>
      <name>scaled</name>
      <anchorfile>classMagnum_1_1Math_1_1Range.html</anchorfile>
      <anchor>a4065a6203ccc5f9609be0019878c111e</anchor>
      <arglist>(const VectorType &amp;scaling) const</arglist>
    </member>
    <member kind="function">
      <type>constexpr bool</type>
      <name>contains</name>
      <anchorfile>classMagnum_1_1Math_1_1Range.html</anchorfile>
      <anchor>a941252e9325679e8e9c2966a13ec1330</anchor>
      <arglist>(const VectorType &amp;a) const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Range&lt; dimensions, T &gt;</type>
      <name>fromSize</name>
      <anchorfile>classMagnum_1_1Math_1_1Range.html</anchorfile>
      <anchor>a6c72f85612084d91d80c5c95905b2e32</anchor>
      <arglist>(const VectorType &amp;min, const VectorType &amp;size)</arglist>
    </member>
    <member kind="function">
      <type>Range&lt; dimensions, T &gt;</type>
      <name>join</name>
      <anchorfile>classMagnum_1_1Math_1_1Range.html</anchorfile>
      <anchor>ab1a605df6c5b25fe493c1ee83e2ae6d6</anchor>
      <arglist>(const Range&lt; dimensions, T &gt; &amp;a, const Range&lt; dimensions, T &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>Corrade::Utility::Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>classMagnum_1_1Math_1_1Range.html</anchorfile>
      <anchor>a1f3385fec96840d6f57368596e7b8fe5</anchor>
      <arglist>(Corrade::Utility::Debug &amp;debug, const Range&lt; dimensions, T &gt; &amp;value)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Range&lt; std::size_t &gt;</name>
    <filename>classMagnum_1_1Math_1_1Range.html</filename>
    <member kind="typedef">
      <type>Implementation::RangeTraits&lt; dimensions, T &gt;::Type</type>
      <name>VectorType</name>
      <anchorfile>classMagnum_1_1Math_1_1Range.html</anchorfile>
      <anchor>a9b67475211cb779b753bf6e7c4a0a71b</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Range</name>
      <anchorfile>classMagnum_1_1Math_1_1Range.html</anchorfile>
      <anchor>a9924f26a86ab957d3d7dc232c9cf0fed</anchor>
      <arglist>(ZeroInitT=ZeroInit) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Range</name>
      <anchorfile>classMagnum_1_1Math_1_1Range.html</anchorfile>
      <anchor>a37cf32f96975f2252d535476aee0a0b0</anchor>
      <arglist>(NoInitT) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Range</name>
      <anchorfile>classMagnum_1_1Math_1_1Range.html</anchorfile>
      <anchor>adbcdfa9101feecf1ff90ba5c246997eb</anchor>
      <arglist>(const VectorType &amp;min, const VectorType &amp;max) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Range</name>
      <anchorfile>classMagnum_1_1Math_1_1Range.html</anchorfile>
      <anchor>a42d6842532079884d60019890d0de09d</anchor>
      <arglist>(const Range&lt; dimensions, U &gt; &amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Range</name>
      <anchorfile>classMagnum_1_1Math_1_1Range.html</anchorfile>
      <anchor>a2060f88e1d0f1efe96068ca5341260c9</anchor>
      <arglist>(const U &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Range</name>
      <anchorfile>classMagnum_1_1Math_1_1Range.html</anchorfile>
      <anchor>af98d7db502faa0044a758c879c9d2972</anchor>
      <arglist>(const Range&lt; dimensions, T &gt; &amp;) noexcept=default</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>operator U</name>
      <anchorfile>classMagnum_1_1Math_1_1Range.html</anchorfile>
      <anchor>a3e4433fedea0f498d6bcdea1a984aec8</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>constexpr bool</type>
      <name>operator==</name>
      <anchorfile>classMagnum_1_1Math_1_1Range.html</anchorfile>
      <anchor>a13b922251c81c7db9c2894f290670386</anchor>
      <arglist>(const Range&lt; dimensions, T &gt; &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>constexpr bool</type>
      <name>operator!=</name>
      <anchorfile>classMagnum_1_1Math_1_1Range.html</anchorfile>
      <anchor>a92733cd0ee541eff518047cefe143662</anchor>
      <arglist>(const Range&lt; dimensions, T &gt; &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>T *</type>
      <name>data</name>
      <anchorfile>classMagnum_1_1Math_1_1Range.html</anchorfile>
      <anchor>a2715cd7abca4c9c0ede4d3227507495f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>constexpr const T *</type>
      <name>data</name>
      <anchorfile>classMagnum_1_1Math_1_1Range.html</anchorfile>
      <anchor>aab6fc4832ec6db6cfd30eb0075f6d1ec</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>VectorType &amp;</type>
      <name>min</name>
      <anchorfile>classMagnum_1_1Math_1_1Range.html</anchorfile>
      <anchor>ad4919361a2086212fac96da0221e4dcd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>constexpr const VectorType</type>
      <name>min</name>
      <anchorfile>classMagnum_1_1Math_1_1Range.html</anchorfile>
      <anchor>a22af2191e4ab88b45f082ef14aa45185</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>VectorType &amp;</type>
      <name>max</name>
      <anchorfile>classMagnum_1_1Math_1_1Range.html</anchorfile>
      <anchor>ae792027e5ae23ebd90d55f6447746b86</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>constexpr const VectorType</type>
      <name>max</name>
      <anchorfile>classMagnum_1_1Math_1_1Range.html</anchorfile>
      <anchor>a98aa3d62cafaed130433f67ddbcd65a3</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>VectorType</type>
      <name>size</name>
      <anchorfile>classMagnum_1_1Math_1_1Range.html</anchorfile>
      <anchor>a8328c2de860a05e916529171520e7041</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>VectorType</type>
      <name>center</name>
      <anchorfile>classMagnum_1_1Math_1_1Range.html</anchorfile>
      <anchor>a5a374b7a860a80ac95fedd29235652f2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Range&lt; dimensions, T &gt;</type>
      <name>translated</name>
      <anchorfile>classMagnum_1_1Math_1_1Range.html</anchorfile>
      <anchor>a68d9e8d01c037336459189b76f912ad4</anchor>
      <arglist>(const VectorType &amp;vector) const</arglist>
    </member>
    <member kind="function">
      <type>Range&lt; dimensions, T &gt;</type>
      <name>padded</name>
      <anchorfile>classMagnum_1_1Math_1_1Range.html</anchorfile>
      <anchor>a854aa4f39708f9ef839937836cd5eb00</anchor>
      <arglist>(const VectorType &amp;padding) const</arglist>
    </member>
    <member kind="function">
      <type>Range&lt; dimensions, T &gt;</type>
      <name>scaled</name>
      <anchorfile>classMagnum_1_1Math_1_1Range.html</anchorfile>
      <anchor>a4065a6203ccc5f9609be0019878c111e</anchor>
      <arglist>(const VectorType &amp;scaling) const</arglist>
    </member>
    <member kind="function">
      <type>constexpr bool</type>
      <name>contains</name>
      <anchorfile>classMagnum_1_1Math_1_1Range.html</anchorfile>
      <anchor>a941252e9325679e8e9c2966a13ec1330</anchor>
      <arglist>(const VectorType &amp;a) const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Range&lt; dimensions, T &gt;</type>
      <name>fromSize</name>
      <anchorfile>classMagnum_1_1Math_1_1Range.html</anchorfile>
      <anchor>a6c72f85612084d91d80c5c95905b2e32</anchor>
      <arglist>(const VectorType &amp;min, const VectorType &amp;size)</arglist>
    </member>
    <member kind="function">
      <type>Range&lt; dimensions, T &gt;</type>
      <name>join</name>
      <anchorfile>classMagnum_1_1Math_1_1Range.html</anchorfile>
      <anchor>ab1a605df6c5b25fe493c1ee83e2ae6d6</anchor>
      <arglist>(const Range&lt; dimensions, T &gt; &amp;a, const Range&lt; dimensions, T &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>Corrade::Utility::Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>classMagnum_1_1Math_1_1Range.html</anchorfile>
      <anchor>a1f3385fec96840d6f57368596e7b8fe5</anchor>
      <arglist>(Corrade::Utility::Debug &amp;debug, const Range&lt; dimensions, T &gt; &amp;value)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>RectangularMatrix&lt; size, size, T &gt;</name>
    <filename>classMagnum_1_1Math_1_1RectangularMatrix.html</filename>
    <member kind="typedef">
      <type>T</type>
      <name>Type</name>
      <anchorfile>classMagnum_1_1Math_1_1RectangularMatrix.html</anchorfile>
      <anchor>a518fcd0815a9c2b24b429ffc6a9ef5a7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Cols</name>
      <anchorfile>classMagnum_1_1Math_1_1RectangularMatrix.html</anchorfile>
      <anchor>a00871b3b1d1e8429a7b83757c8f554d2ab1d8e57eaa8f76414d64eec51b2c69a2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Rows</name>
      <anchorfile>classMagnum_1_1Math_1_1RectangularMatrix.html</anchorfile>
      <anchor>a00871b3b1d1e8429a7b83757c8f554d2ad1257f2c47ba6de49124e584aa29fa5e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DiagonalSize</name>
      <anchorfile>classMagnum_1_1Math_1_1RectangularMatrix.html</anchorfile>
      <anchor>a00871b3b1d1e8429a7b83757c8f554d2af08ebca5bb2c2fbf4d0a2340cbd5b46a</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>RectangularMatrix</name>
      <anchorfile>classMagnum_1_1Math_1_1RectangularMatrix.html</anchorfile>
      <anchor>abeb0103eaf56ea2342b5ad73f9970dfa</anchor>
      <arglist>(ZeroInitT=ZeroInit) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>RectangularMatrix</name>
      <anchorfile>classMagnum_1_1Math_1_1RectangularMatrix.html</anchorfile>
      <anchor>a04fb3ef57a300c528475d4f77c190b1b</anchor>
      <arglist>(NoInitT) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>RectangularMatrix</name>
      <anchorfile>classMagnum_1_1Math_1_1RectangularMatrix.html</anchorfile>
      <anchor>a16d0b5cf79623d310c7c5abc9831e5b7</anchor>
      <arglist>(const Vector&lt; rows, T &gt; &amp;first, const U &amp;...next) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>RectangularMatrix</name>
      <anchorfile>classMagnum_1_1Math_1_1RectangularMatrix.html</anchorfile>
      <anchor>a04b9085c6de3a53567f36b45c4eb9225</anchor>
      <arglist>(T value) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>RectangularMatrix</name>
      <anchorfile>classMagnum_1_1Math_1_1RectangularMatrix.html</anchorfile>
      <anchor>a5df773bcf7827a2c23cfc477f73306ca</anchor>
      <arglist>(const RectangularMatrix&lt; cols, rows, U &gt; &amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>RectangularMatrix</name>
      <anchorfile>classMagnum_1_1Math_1_1RectangularMatrix.html</anchorfile>
      <anchor>a3ecfd82db21760be18d560777edc67a5</anchor>
      <arglist>(const U &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>RectangularMatrix</name>
      <anchorfile>classMagnum_1_1Math_1_1RectangularMatrix.html</anchorfile>
      <anchor>a66735ff7cfdf23ff7fc8c8fca466f8e3</anchor>
      <arglist>(const RectangularMatrix&lt; cols, rows, T &gt; &amp;) noexcept=default</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>operator U</name>
      <anchorfile>classMagnum_1_1Math_1_1RectangularMatrix.html</anchorfile>
      <anchor>ae1797564efe6c8c095f4b08320e50f22</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>T *</type>
      <name>data</name>
      <anchorfile>classMagnum_1_1Math_1_1RectangularMatrix.html</anchorfile>
      <anchor>a18852de01a97e7f65398097520364288</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>constexpr const T *</type>
      <name>data</name>
      <anchorfile>classMagnum_1_1Math_1_1RectangularMatrix.html</anchorfile>
      <anchor>aecfcf9ea8076aececd9c70abf0cfcaf9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; rows, T &gt; &amp;</type>
      <name>operator[]</name>
      <anchorfile>classMagnum_1_1Math_1_1RectangularMatrix.html</anchorfile>
      <anchor>a9bc7bd15bebd143c7eab6dda01b8c647</anchor>
      <arglist>(std::size_t col)</arglist>
    </member>
    <member kind="function">
      <type>constexpr const Vector&lt; rows, T &gt; &amp;</type>
      <name>operator[]</name>
      <anchorfile>classMagnum_1_1Math_1_1RectangularMatrix.html</anchorfile>
      <anchor>a1ba7f4d40b671b6ba65f21a5080a09f6</anchor>
      <arglist>(std::size_t col) const</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; cols, T &gt;</type>
      <name>row</name>
      <anchorfile>classMagnum_1_1Math_1_1RectangularMatrix.html</anchorfile>
      <anchor>abedb1f8acd1fc9f58f6446baed7491a6</anchor>
      <arglist>(std::size_t row) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setRow</name>
      <anchorfile>classMagnum_1_1Math_1_1RectangularMatrix.html</anchorfile>
      <anchor>afa7d894585174e509984a83ab9e9538a</anchor>
      <arglist>(std::size_t row, const Vector&lt; cols, T &gt; &amp;data)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classMagnum_1_1Math_1_1RectangularMatrix.html</anchorfile>
      <anchor>a04359c5c51fce4ddabd1117aecb9ddae</anchor>
      <arglist>(const RectangularMatrix&lt; cols, rows, T &gt; &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>classMagnum_1_1Math_1_1RectangularMatrix.html</anchorfile>
      <anchor>a9ff08e750e5a3937d8edafffd0c3974c</anchor>
      <arglist>(const RectangularMatrix&lt; cols, rows, T &gt; &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>BoolVector&lt; cols *rows &gt;</type>
      <name>operator&lt;</name>
      <anchorfile>classMagnum_1_1Math_1_1RectangularMatrix.html</anchorfile>
      <anchor>afd58f21f31b6a90b14476edbaf958cd7</anchor>
      <arglist>(const RectangularMatrix&lt; cols, rows, T &gt; &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>BoolVector&lt; cols *rows &gt;</type>
      <name>operator&lt;=</name>
      <anchorfile>classMagnum_1_1Math_1_1RectangularMatrix.html</anchorfile>
      <anchor>a0902af6f9c2e261bfe3aef19dbfa2093</anchor>
      <arglist>(const RectangularMatrix&lt; cols, rows, T &gt; &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>BoolVector&lt; cols *rows &gt;</type>
      <name>operator&gt;=</name>
      <anchorfile>classMagnum_1_1Math_1_1RectangularMatrix.html</anchorfile>
      <anchor>a555cffe66d5982a0b7758b57a8ae3f0c</anchor>
      <arglist>(const RectangularMatrix&lt; cols, rows, T &gt; &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>BoolVector&lt; cols *rows &gt;</type>
      <name>operator&gt;</name>
      <anchorfile>classMagnum_1_1Math_1_1RectangularMatrix.html</anchorfile>
      <anchor>aca71d8ec978feba4f507659cb58974fa</anchor>
      <arglist>(const RectangularMatrix&lt; cols, rows, T &gt; &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>RectangularMatrix&lt; cols, rows, T &gt;</type>
      <name>operator-</name>
      <anchorfile>classMagnum_1_1Math_1_1RectangularMatrix.html</anchorfile>
      <anchor>a56df3aa8c8cabe7722d2e8a63e143c42</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>RectangularMatrix&lt; cols, rows, T &gt;</type>
      <name>operator-</name>
      <anchorfile>classMagnum_1_1Math_1_1RectangularMatrix.html</anchorfile>
      <anchor>a38bb971739f349010623e9f8e6298b66</anchor>
      <arglist>(const RectangularMatrix&lt; cols, rows, T &gt; &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>RectangularMatrix&lt; cols, rows, T &gt; &amp;</type>
      <name>operator+=</name>
      <anchorfile>classMagnum_1_1Math_1_1RectangularMatrix.html</anchorfile>
      <anchor>adf84e802e22d8196d542bcf8530097a5</anchor>
      <arglist>(const RectangularMatrix&lt; cols, rows, T &gt; &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>RectangularMatrix&lt; cols, rows, T &gt;</type>
      <name>operator+</name>
      <anchorfile>classMagnum_1_1Math_1_1RectangularMatrix.html</anchorfile>
      <anchor>a6308213ae3081318615f7c1ddf4f90a7</anchor>
      <arglist>(const RectangularMatrix&lt; cols, rows, T &gt; &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>RectangularMatrix&lt; cols, rows, T &gt; &amp;</type>
      <name>operator-=</name>
      <anchorfile>classMagnum_1_1Math_1_1RectangularMatrix.html</anchorfile>
      <anchor>aa15b9de3a8dcc459b1a40d30b1cba635</anchor>
      <arglist>(const RectangularMatrix&lt; cols, rows, T &gt; &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>RectangularMatrix&lt; cols, rows, T &gt; &amp;</type>
      <name>operator*=</name>
      <anchorfile>classMagnum_1_1Math_1_1RectangularMatrix.html</anchorfile>
      <anchor>a90efff6a6ac599ec3acf6d8de4f375ef</anchor>
      <arglist>(T number)</arglist>
    </member>
    <member kind="function">
      <type>RectangularMatrix&lt; cols, rows, T &gt;</type>
      <name>operator*</name>
      <anchorfile>classMagnum_1_1Math_1_1RectangularMatrix.html</anchorfile>
      <anchor>a9d03c078ef8a3703b58e979664eea089</anchor>
      <arglist>(T number) const</arglist>
    </member>
    <member kind="function">
      <type>RectangularMatrix&lt; size, rows, T &gt;</type>
      <name>operator*</name>
      <anchorfile>classMagnum_1_1Math_1_1RectangularMatrix.html</anchorfile>
      <anchor>ab343d946420995d745239bec70c6c502</anchor>
      <arglist>(const RectangularMatrix&lt; size, cols, T &gt; &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; rows, T &gt;</type>
      <name>operator*</name>
      <anchorfile>classMagnum_1_1Math_1_1RectangularMatrix.html</anchorfile>
      <anchor>ae483fd1aa11f16b9cccdb949cfbce548</anchor>
      <arglist>(const Vector&lt; cols, T &gt; &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>RectangularMatrix&lt; cols, rows, T &gt; &amp;</type>
      <name>operator/=</name>
      <anchorfile>classMagnum_1_1Math_1_1RectangularMatrix.html</anchorfile>
      <anchor>ada246062b0ab6ed68fb90392f4e0fc08</anchor>
      <arglist>(T number)</arglist>
    </member>
    <member kind="function">
      <type>RectangularMatrix&lt; cols, rows, T &gt;</type>
      <name>operator/</name>
      <anchorfile>classMagnum_1_1Math_1_1RectangularMatrix.html</anchorfile>
      <anchor>ab1d338c6c37d3fa93ce0fa179847d9d5</anchor>
      <arglist>(T number) const</arglist>
    </member>
    <member kind="function">
      <type>RectangularMatrix&lt; rows, cols, T &gt;</type>
      <name>transposed</name>
      <anchorfile>classMagnum_1_1Math_1_1RectangularMatrix.html</anchorfile>
      <anchor>afd5bf2dee828b14d2ac5c565982a7ed3</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>constexpr RectangularMatrix&lt; cols, rows, T &gt;</type>
      <name>flippedCols</name>
      <anchorfile>classMagnum_1_1Math_1_1RectangularMatrix.html</anchorfile>
      <anchor>aa1f60a1b3eef57a0af586740665a62be</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>constexpr RectangularMatrix&lt; cols, rows, T &gt;</type>
      <name>flippedRows</name>
      <anchorfile>classMagnum_1_1Math_1_1RectangularMatrix.html</anchorfile>
      <anchor>ade92f4f23889b47feca0e56d2d269d8a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>constexpr Vector&lt; DiagonalSize, T &gt;</type>
      <name>diagonal</name>
      <anchorfile>classMagnum_1_1Math_1_1RectangularMatrix.html</anchorfile>
      <anchor>afed2a91f453117cd2ed5b7005806321c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; rows *cols, T &gt;</type>
      <name>toVector</name>
      <anchorfile>classMagnum_1_1Math_1_1RectangularMatrix.html</anchorfile>
      <anchor>a608d91c19d3c37e98b696c99a45fbee0</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static RectangularMatrix&lt; cols, rows, T &gt; &amp;</type>
      <name>from</name>
      <anchorfile>classMagnum_1_1Math_1_1RectangularMatrix.html</anchorfile>
      <anchor>aedde7d7c746be363bf845ebce7496274</anchor>
      <arglist>(T *data)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const RectangularMatrix&lt; cols, rows, T &gt; &amp;</type>
      <name>from</name>
      <anchorfile>classMagnum_1_1Math_1_1RectangularMatrix.html</anchorfile>
      <anchor>a482af1168480ab08df88d4529a71fa2b</anchor>
      <arglist>(const T *data)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static RectangularMatrix&lt; cols, rows, T &gt;</type>
      <name>fromVector</name>
      <anchorfile>classMagnum_1_1Math_1_1RectangularMatrix.html</anchorfile>
      <anchor>aaf45a111900971de89b0448ffafa29c6</anchor>
      <arglist>(const Vector&lt; cols *rows, T &gt; &amp;vector)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static constexpr RectangularMatrix&lt; cols, rows, T &gt;</type>
      <name>fromDiagonal</name>
      <anchorfile>classMagnum_1_1Math_1_1RectangularMatrix.html</anchorfile>
      <anchor>a2b5423dcaab476595937428092187123</anchor>
      <arglist>(const Vector&lt; DiagonalSize, T &gt; &amp;diagonal) noexcept</arglist>
    </member>
    <member kind="function">
      <type>RectangularMatrix&lt; cols, rows, T &gt;</type>
      <name>operator*</name>
      <anchorfile>classMagnum_1_1Math_1_1RectangularMatrix.html</anchorfile>
      <anchor>a2af5b4261c4b9c572e02280dfe4c4ded</anchor>
      <arglist>(T number, const RectangularMatrix&lt; cols, rows, T &gt; &amp;matrix)</arglist>
    </member>
    <member kind="function">
      <type>RectangularMatrix&lt; cols, size, T &gt;</type>
      <name>operator*</name>
      <anchorfile>classMagnum_1_1Math_1_1RectangularMatrix.html</anchorfile>
      <anchor>a2e5256167618367219131497a1e6c806</anchor>
      <arglist>(const Vector&lt; size, T &gt; &amp;vector, const RectangularMatrix&lt; cols, 1, T &gt; &amp;matrix)</arglist>
    </member>
    <member kind="function">
      <type>RectangularMatrix&lt; cols, rows, T &gt;</type>
      <name>operator/</name>
      <anchorfile>classMagnum_1_1Math_1_1RectangularMatrix.html</anchorfile>
      <anchor>ad0953eb681885b46309e31592f2d41fe</anchor>
      <arglist>(T number, const RectangularMatrix&lt; cols, rows, T &gt; &amp;matrix)</arglist>
    </member>
    <member kind="function">
      <type>Corrade::Utility::Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>classMagnum_1_1Math_1_1RectangularMatrix.html</anchorfile>
      <anchor>a2b4c9a90c6ef57998d88efe24b223a07</anchor>
      <arglist>(Corrade::Utility::Debug &amp;debug, const Magnum::Math::RectangularMatrix&lt; cols, rows, T &gt; &amp;value)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Resource&lt; Magnum::AbstractShaderProgram, Magnum::Shaders::Flat&lt; dimensions &gt; &gt;</name>
    <filename>classMagnum_1_1Resource.html</filename>
    <member kind="function">
      <type></type>
      <name>Resource</name>
      <anchorfile>classMagnum_1_1Resource.html</anchorfile>
      <anchor>ab6e1f1b111342c493675cdeee71559a8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Resource</name>
      <anchorfile>classMagnum_1_1Resource.html</anchorfile>
      <anchor>aadfc7b76c1a904524f94b88bd3e4b9ec</anchor>
      <arglist>(const Resource&lt; Magnum::AbstractShaderProgram, Magnum::Shaders::Flat&lt; dimensions &gt; &gt; &amp;other)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Resource</name>
      <anchorfile>classMagnum_1_1Resource.html</anchorfile>
      <anchor>a28c9e646a89ef0e1b7aaf41bd2126a49</anchor>
      <arglist>(Resource&lt; Magnum::AbstractShaderProgram, Magnum::Shaders::Flat&lt; dimensions &gt; &gt; &amp;&amp;other)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~Resource</name>
      <anchorfile>classMagnum_1_1Resource.html</anchorfile>
      <anchor>acaa03453bcac81107851500b0cbf2391</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Resource&lt; Magnum::AbstractShaderProgram, Magnum::Shaders::Flat&lt; dimensions &gt; &gt; &amp;</type>
      <name>operator=</name>
      <anchorfile>classMagnum_1_1Resource.html</anchorfile>
      <anchor>a8f59ed76d3e4eb888959dba5efb853bd</anchor>
      <arglist>(const Resource&lt; Magnum::AbstractShaderProgram, Magnum::Shaders::Flat&lt; dimensions &gt; &gt; &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>Resource&lt; Magnum::AbstractShaderProgram, Magnum::Shaders::Flat&lt; dimensions &gt; &gt; &amp;</type>
      <name>operator=</name>
      <anchorfile>classMagnum_1_1Resource.html</anchorfile>
      <anchor>ac990bb8ae690e0a3b2df1126f7e9d064</anchor>
      <arglist>(Resource&lt; Magnum::AbstractShaderProgram, Magnum::Shaders::Flat&lt; dimensions &gt; &gt; &amp;&amp;other)</arglist>
    </member>
    <member kind="function">
      <type>ResourceKey</type>
      <name>key</name>
      <anchorfile>classMagnum_1_1Resource.html</anchorfile>
      <anchor>a692ee36d9dd046923c4f4c0d1e3d9b35</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>ResourceState</type>
      <name>state</name>
      <anchorfile>classMagnum_1_1Resource.html</anchorfile>
      <anchor>a6b5f26c073b9b9a03f2f66362c714e73</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator bool</name>
      <anchorfile>classMagnum_1_1Resource.html</anchorfile>
      <anchor>a20a00427fdb3862f1f00adadb604d15c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator Magnum::Shaders::Flat&lt; dimensions &gt; *</name>
      <anchorfile>classMagnum_1_1Resource.html</anchorfile>
      <anchor>ac17914776e1ab6dc20cd7ee443ed301f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Magnum::Shaders::Flat&lt; dimensions &gt; &amp;</type>
      <name>operator*</name>
      <anchorfile>classMagnum_1_1Resource.html</anchorfile>
      <anchor>a037ff89f088feeb9cc6af72e228bb176</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Magnum::Shaders::Flat&lt; dimensions &gt; *</type>
      <name>operator-&gt;</name>
      <anchorfile>classMagnum_1_1Resource.html</anchorfile>
      <anchor>a918bd916f8acbf70781b2f9af133e8b8</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Resource&lt; Magnum::AbstractShaderProgram, Magnum::Shaders::VertexColor&lt; dimensions &gt; &gt;</name>
    <filename>classMagnum_1_1Resource.html</filename>
    <member kind="function">
      <type></type>
      <name>Resource</name>
      <anchorfile>classMagnum_1_1Resource.html</anchorfile>
      <anchor>ab6e1f1b111342c493675cdeee71559a8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Resource</name>
      <anchorfile>classMagnum_1_1Resource.html</anchorfile>
      <anchor>aadfc7b76c1a904524f94b88bd3e4b9ec</anchor>
      <arglist>(const Resource&lt; Magnum::AbstractShaderProgram, Magnum::Shaders::VertexColor&lt; dimensions &gt; &gt; &amp;other)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Resource</name>
      <anchorfile>classMagnum_1_1Resource.html</anchorfile>
      <anchor>a28c9e646a89ef0e1b7aaf41bd2126a49</anchor>
      <arglist>(Resource&lt; Magnum::AbstractShaderProgram, Magnum::Shaders::VertexColor&lt; dimensions &gt; &gt; &amp;&amp;other)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~Resource</name>
      <anchorfile>classMagnum_1_1Resource.html</anchorfile>
      <anchor>acaa03453bcac81107851500b0cbf2391</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Resource&lt; Magnum::AbstractShaderProgram, Magnum::Shaders::VertexColor&lt; dimensions &gt; &gt; &amp;</type>
      <name>operator=</name>
      <anchorfile>classMagnum_1_1Resource.html</anchorfile>
      <anchor>a8f59ed76d3e4eb888959dba5efb853bd</anchor>
      <arglist>(const Resource&lt; Magnum::AbstractShaderProgram, Magnum::Shaders::VertexColor&lt; dimensions &gt; &gt; &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>Resource&lt; Magnum::AbstractShaderProgram, Magnum::Shaders::VertexColor&lt; dimensions &gt; &gt; &amp;</type>
      <name>operator=</name>
      <anchorfile>classMagnum_1_1Resource.html</anchorfile>
      <anchor>ac990bb8ae690e0a3b2df1126f7e9d064</anchor>
      <arglist>(Resource&lt; Magnum::AbstractShaderProgram, Magnum::Shaders::VertexColor&lt; dimensions &gt; &gt; &amp;&amp;other)</arglist>
    </member>
    <member kind="function">
      <type>ResourceKey</type>
      <name>key</name>
      <anchorfile>classMagnum_1_1Resource.html</anchorfile>
      <anchor>a692ee36d9dd046923c4f4c0d1e3d9b35</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>ResourceState</type>
      <name>state</name>
      <anchorfile>classMagnum_1_1Resource.html</anchorfile>
      <anchor>a6b5f26c073b9b9a03f2f66362c714e73</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator bool</name>
      <anchorfile>classMagnum_1_1Resource.html</anchorfile>
      <anchor>a20a00427fdb3862f1f00adadb604d15c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator Magnum::Shaders::VertexColor&lt; dimensions &gt; *</name>
      <anchorfile>classMagnum_1_1Resource.html</anchorfile>
      <anchor>ac17914776e1ab6dc20cd7ee443ed301f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Magnum::Shaders::VertexColor&lt; dimensions &gt; &amp;</type>
      <name>operator*</name>
      <anchorfile>classMagnum_1_1Resource.html</anchorfile>
      <anchor>a037ff89f088feeb9cc6af72e228bb176</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Magnum::Shaders::VertexColor&lt; dimensions &gt; *</type>
      <name>operator-&gt;</name>
      <anchorfile>classMagnum_1_1Resource.html</anchorfile>
      <anchor>a918bd916f8acbf70781b2f9af133e8b8</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Resource&lt; Magnum::Buffer &gt;</name>
    <filename>classMagnum_1_1Resource.html</filename>
    <member kind="function">
      <type></type>
      <name>Resource</name>
      <anchorfile>classMagnum_1_1Resource.html</anchorfile>
      <anchor>ab6e1f1b111342c493675cdeee71559a8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Resource</name>
      <anchorfile>classMagnum_1_1Resource.html</anchorfile>
      <anchor>aadfc7b76c1a904524f94b88bd3e4b9ec</anchor>
      <arglist>(const Resource&lt; Magnum::Buffer, Magnum::Buffer &gt; &amp;other)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Resource</name>
      <anchorfile>classMagnum_1_1Resource.html</anchorfile>
      <anchor>a28c9e646a89ef0e1b7aaf41bd2126a49</anchor>
      <arglist>(Resource&lt; Magnum::Buffer, Magnum::Buffer &gt; &amp;&amp;other)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~Resource</name>
      <anchorfile>classMagnum_1_1Resource.html</anchorfile>
      <anchor>acaa03453bcac81107851500b0cbf2391</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Resource&lt; Magnum::Buffer, Magnum::Buffer &gt; &amp;</type>
      <name>operator=</name>
      <anchorfile>classMagnum_1_1Resource.html</anchorfile>
      <anchor>a8f59ed76d3e4eb888959dba5efb853bd</anchor>
      <arglist>(const Resource&lt; Magnum::Buffer, Magnum::Buffer &gt; &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>Resource&lt; Magnum::Buffer, Magnum::Buffer &gt; &amp;</type>
      <name>operator=</name>
      <anchorfile>classMagnum_1_1Resource.html</anchorfile>
      <anchor>ac990bb8ae690e0a3b2df1126f7e9d064</anchor>
      <arglist>(Resource&lt; Magnum::Buffer, Magnum::Buffer &gt; &amp;&amp;other)</arglist>
    </member>
    <member kind="function">
      <type>ResourceKey</type>
      <name>key</name>
      <anchorfile>classMagnum_1_1Resource.html</anchorfile>
      <anchor>a692ee36d9dd046923c4f4c0d1e3d9b35</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>ResourceState</type>
      <name>state</name>
      <anchorfile>classMagnum_1_1Resource.html</anchorfile>
      <anchor>a6b5f26c073b9b9a03f2f66362c714e73</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator bool</name>
      <anchorfile>classMagnum_1_1Resource.html</anchorfile>
      <anchor>a20a00427fdb3862f1f00adadb604d15c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator Magnum::Buffer *</name>
      <anchorfile>classMagnum_1_1Resource.html</anchorfile>
      <anchor>ac17914776e1ab6dc20cd7ee443ed301f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Magnum::Buffer &amp;</type>
      <name>operator*</name>
      <anchorfile>classMagnum_1_1Resource.html</anchorfile>
      <anchor>a037ff89f088feeb9cc6af72e228bb176</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Magnum::Buffer *</type>
      <name>operator-&gt;</name>
      <anchorfile>classMagnum_1_1Resource.html</anchorfile>
      <anchor>a918bd916f8acbf70781b2f9af133e8b8</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Resource&lt; Magnum::DebugTools::ForceRendererOptions &gt;</name>
    <filename>classMagnum_1_1Resource.html</filename>
    <member kind="function">
      <type></type>
      <name>Resource</name>
      <anchorfile>classMagnum_1_1Resource.html</anchorfile>
      <anchor>ab6e1f1b111342c493675cdeee71559a8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Resource</name>
      <anchorfile>classMagnum_1_1Resource.html</anchorfile>
      <anchor>aadfc7b76c1a904524f94b88bd3e4b9ec</anchor>
      <arglist>(const Resource&lt; Magnum::DebugTools::ForceRendererOptions, Magnum::DebugTools::ForceRendererOptions &gt; &amp;other)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Resource</name>
      <anchorfile>classMagnum_1_1Resource.html</anchorfile>
      <anchor>a28c9e646a89ef0e1b7aaf41bd2126a49</anchor>
      <arglist>(Resource&lt; Magnum::DebugTools::ForceRendererOptions, Magnum::DebugTools::ForceRendererOptions &gt; &amp;&amp;other)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~Resource</name>
      <anchorfile>classMagnum_1_1Resource.html</anchorfile>
      <anchor>acaa03453bcac81107851500b0cbf2391</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Resource&lt; Magnum::DebugTools::ForceRendererOptions, Magnum::DebugTools::ForceRendererOptions &gt; &amp;</type>
      <name>operator=</name>
      <anchorfile>classMagnum_1_1Resource.html</anchorfile>
      <anchor>a8f59ed76d3e4eb888959dba5efb853bd</anchor>
      <arglist>(const Resource&lt; Magnum::DebugTools::ForceRendererOptions, Magnum::DebugTools::ForceRendererOptions &gt; &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>Resource&lt; Magnum::DebugTools::ForceRendererOptions, Magnum::DebugTools::ForceRendererOptions &gt; &amp;</type>
      <name>operator=</name>
      <anchorfile>classMagnum_1_1Resource.html</anchorfile>
      <anchor>ac990bb8ae690e0a3b2df1126f7e9d064</anchor>
      <arglist>(Resource&lt; Magnum::DebugTools::ForceRendererOptions, Magnum::DebugTools::ForceRendererOptions &gt; &amp;&amp;other)</arglist>
    </member>
    <member kind="function">
      <type>ResourceKey</type>
      <name>key</name>
      <anchorfile>classMagnum_1_1Resource.html</anchorfile>
      <anchor>a692ee36d9dd046923c4f4c0d1e3d9b35</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>ResourceState</type>
      <name>state</name>
      <anchorfile>classMagnum_1_1Resource.html</anchorfile>
      <anchor>a6b5f26c073b9b9a03f2f66362c714e73</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator bool</name>
      <anchorfile>classMagnum_1_1Resource.html</anchorfile>
      <anchor>a20a00427fdb3862f1f00adadb604d15c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator Magnum::DebugTools::ForceRendererOptions *</name>
      <anchorfile>classMagnum_1_1Resource.html</anchorfile>
      <anchor>ac17914776e1ab6dc20cd7ee443ed301f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Magnum::DebugTools::ForceRendererOptions &amp;</type>
      <name>operator*</name>
      <anchorfile>classMagnum_1_1Resource.html</anchorfile>
      <anchor>a037ff89f088feeb9cc6af72e228bb176</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Magnum::DebugTools::ForceRendererOptions *</type>
      <name>operator-&gt;</name>
      <anchorfile>classMagnum_1_1Resource.html</anchorfile>
      <anchor>a918bd916f8acbf70781b2f9af133e8b8</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Resource&lt; Magnum::DebugTools::ObjectRendererOptions &gt;</name>
    <filename>classMagnum_1_1Resource.html</filename>
    <member kind="function">
      <type></type>
      <name>Resource</name>
      <anchorfile>classMagnum_1_1Resource.html</anchorfile>
      <anchor>ab6e1f1b111342c493675cdeee71559a8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Resource</name>
      <anchorfile>classMagnum_1_1Resource.html</anchorfile>
      <anchor>aadfc7b76c1a904524f94b88bd3e4b9ec</anchor>
      <arglist>(const Resource&lt; Magnum::DebugTools::ObjectRendererOptions, Magnum::DebugTools::ObjectRendererOptions &gt; &amp;other)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Resource</name>
      <anchorfile>classMagnum_1_1Resource.html</anchorfile>
      <anchor>a28c9e646a89ef0e1b7aaf41bd2126a49</anchor>
      <arglist>(Resource&lt; Magnum::DebugTools::ObjectRendererOptions, Magnum::DebugTools::ObjectRendererOptions &gt; &amp;&amp;other)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~Resource</name>
      <anchorfile>classMagnum_1_1Resource.html</anchorfile>
      <anchor>acaa03453bcac81107851500b0cbf2391</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Resource&lt; Magnum::DebugTools::ObjectRendererOptions, Magnum::DebugTools::ObjectRendererOptions &gt; &amp;</type>
      <name>operator=</name>
      <anchorfile>classMagnum_1_1Resource.html</anchorfile>
      <anchor>a8f59ed76d3e4eb888959dba5efb853bd</anchor>
      <arglist>(const Resource&lt; Magnum::DebugTools::ObjectRendererOptions, Magnum::DebugTools::ObjectRendererOptions &gt; &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>Resource&lt; Magnum::DebugTools::ObjectRendererOptions, Magnum::DebugTools::ObjectRendererOptions &gt; &amp;</type>
      <name>operator=</name>
      <anchorfile>classMagnum_1_1Resource.html</anchorfile>
      <anchor>ac990bb8ae690e0a3b2df1126f7e9d064</anchor>
      <arglist>(Resource&lt; Magnum::DebugTools::ObjectRendererOptions, Magnum::DebugTools::ObjectRendererOptions &gt; &amp;&amp;other)</arglist>
    </member>
    <member kind="function">
      <type>ResourceKey</type>
      <name>key</name>
      <anchorfile>classMagnum_1_1Resource.html</anchorfile>
      <anchor>a692ee36d9dd046923c4f4c0d1e3d9b35</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>ResourceState</type>
      <name>state</name>
      <anchorfile>classMagnum_1_1Resource.html</anchorfile>
      <anchor>a6b5f26c073b9b9a03f2f66362c714e73</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator bool</name>
      <anchorfile>classMagnum_1_1Resource.html</anchorfile>
      <anchor>a20a00427fdb3862f1f00adadb604d15c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator Magnum::DebugTools::ObjectRendererOptions *</name>
      <anchorfile>classMagnum_1_1Resource.html</anchorfile>
      <anchor>ac17914776e1ab6dc20cd7ee443ed301f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Magnum::DebugTools::ObjectRendererOptions &amp;</type>
      <name>operator*</name>
      <anchorfile>classMagnum_1_1Resource.html</anchorfile>
      <anchor>a037ff89f088feeb9cc6af72e228bb176</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Magnum::DebugTools::ObjectRendererOptions *</type>
      <name>operator-&gt;</name>
      <anchorfile>classMagnum_1_1Resource.html</anchorfile>
      <anchor>a918bd916f8acbf70781b2f9af133e8b8</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Resource&lt; Magnum::DebugTools::ShapeRendererOptions &gt;</name>
    <filename>classMagnum_1_1Resource.html</filename>
    <member kind="function">
      <type></type>
      <name>Resource</name>
      <anchorfile>classMagnum_1_1Resource.html</anchorfile>
      <anchor>ab6e1f1b111342c493675cdeee71559a8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Resource</name>
      <anchorfile>classMagnum_1_1Resource.html</anchorfile>
      <anchor>aadfc7b76c1a904524f94b88bd3e4b9ec</anchor>
      <arglist>(const Resource&lt; Magnum::DebugTools::ShapeRendererOptions, Magnum::DebugTools::ShapeRendererOptions &gt; &amp;other)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Resource</name>
      <anchorfile>classMagnum_1_1Resource.html</anchorfile>
      <anchor>a28c9e646a89ef0e1b7aaf41bd2126a49</anchor>
      <arglist>(Resource&lt; Magnum::DebugTools::ShapeRendererOptions, Magnum::DebugTools::ShapeRendererOptions &gt; &amp;&amp;other)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~Resource</name>
      <anchorfile>classMagnum_1_1Resource.html</anchorfile>
      <anchor>acaa03453bcac81107851500b0cbf2391</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Resource&lt; Magnum::DebugTools::ShapeRendererOptions, Magnum::DebugTools::ShapeRendererOptions &gt; &amp;</type>
      <name>operator=</name>
      <anchorfile>classMagnum_1_1Resource.html</anchorfile>
      <anchor>a8f59ed76d3e4eb888959dba5efb853bd</anchor>
      <arglist>(const Resource&lt; Magnum::DebugTools::ShapeRendererOptions, Magnum::DebugTools::ShapeRendererOptions &gt; &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>Resource&lt; Magnum::DebugTools::ShapeRendererOptions, Magnum::DebugTools::ShapeRendererOptions &gt; &amp;</type>
      <name>operator=</name>
      <anchorfile>classMagnum_1_1Resource.html</anchorfile>
      <anchor>ac990bb8ae690e0a3b2df1126f7e9d064</anchor>
      <arglist>(Resource&lt; Magnum::DebugTools::ShapeRendererOptions, Magnum::DebugTools::ShapeRendererOptions &gt; &amp;&amp;other)</arglist>
    </member>
    <member kind="function">
      <type>ResourceKey</type>
      <name>key</name>
      <anchorfile>classMagnum_1_1Resource.html</anchorfile>
      <anchor>a692ee36d9dd046923c4f4c0d1e3d9b35</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>ResourceState</type>
      <name>state</name>
      <anchorfile>classMagnum_1_1Resource.html</anchorfile>
      <anchor>a6b5f26c073b9b9a03f2f66362c714e73</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator bool</name>
      <anchorfile>classMagnum_1_1Resource.html</anchorfile>
      <anchor>a20a00427fdb3862f1f00adadb604d15c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator Magnum::DebugTools::ShapeRendererOptions *</name>
      <anchorfile>classMagnum_1_1Resource.html</anchorfile>
      <anchor>ac17914776e1ab6dc20cd7ee443ed301f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Magnum::DebugTools::ShapeRendererOptions &amp;</type>
      <name>operator*</name>
      <anchorfile>classMagnum_1_1Resource.html</anchorfile>
      <anchor>a037ff89f088feeb9cc6af72e228bb176</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Magnum::DebugTools::ShapeRendererOptions *</type>
      <name>operator-&gt;</name>
      <anchorfile>classMagnum_1_1Resource.html</anchorfile>
      <anchor>a918bd916f8acbf70781b2f9af133e8b8</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Resource&lt; Magnum::Mesh &gt;</name>
    <filename>classMagnum_1_1Resource.html</filename>
    <member kind="function">
      <type></type>
      <name>Resource</name>
      <anchorfile>classMagnum_1_1Resource.html</anchorfile>
      <anchor>ab6e1f1b111342c493675cdeee71559a8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Resource</name>
      <anchorfile>classMagnum_1_1Resource.html</anchorfile>
      <anchor>aadfc7b76c1a904524f94b88bd3e4b9ec</anchor>
      <arglist>(const Resource&lt; Magnum::Mesh, Magnum::Mesh &gt; &amp;other)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Resource</name>
      <anchorfile>classMagnum_1_1Resource.html</anchorfile>
      <anchor>a28c9e646a89ef0e1b7aaf41bd2126a49</anchor>
      <arglist>(Resource&lt; Magnum::Mesh, Magnum::Mesh &gt; &amp;&amp;other)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~Resource</name>
      <anchorfile>classMagnum_1_1Resource.html</anchorfile>
      <anchor>acaa03453bcac81107851500b0cbf2391</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Resource&lt; Magnum::Mesh, Magnum::Mesh &gt; &amp;</type>
      <name>operator=</name>
      <anchorfile>classMagnum_1_1Resource.html</anchorfile>
      <anchor>a8f59ed76d3e4eb888959dba5efb853bd</anchor>
      <arglist>(const Resource&lt; Magnum::Mesh, Magnum::Mesh &gt; &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>Resource&lt; Magnum::Mesh, Magnum::Mesh &gt; &amp;</type>
      <name>operator=</name>
      <anchorfile>classMagnum_1_1Resource.html</anchorfile>
      <anchor>ac990bb8ae690e0a3b2df1126f7e9d064</anchor>
      <arglist>(Resource&lt; Magnum::Mesh, Magnum::Mesh &gt; &amp;&amp;other)</arglist>
    </member>
    <member kind="function">
      <type>ResourceKey</type>
      <name>key</name>
      <anchorfile>classMagnum_1_1Resource.html</anchorfile>
      <anchor>a692ee36d9dd046923c4f4c0d1e3d9b35</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>ResourceState</type>
      <name>state</name>
      <anchorfile>classMagnum_1_1Resource.html</anchorfile>
      <anchor>a6b5f26c073b9b9a03f2f66362c714e73</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator bool</name>
      <anchorfile>classMagnum_1_1Resource.html</anchorfile>
      <anchor>a20a00427fdb3862f1f00adadb604d15c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator Magnum::Mesh *</name>
      <anchorfile>classMagnum_1_1Resource.html</anchorfile>
      <anchor>ac17914776e1ab6dc20cd7ee443ed301f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Magnum::Mesh &amp;</type>
      <name>operator*</name>
      <anchorfile>classMagnum_1_1Resource.html</anchorfile>
      <anchor>a037ff89f088feeb9cc6af72e228bb176</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Magnum::Mesh *</type>
      <name>operator-&gt;</name>
      <anchorfile>classMagnum_1_1Resource.html</anchorfile>
      <anchor>a918bd916f8acbf70781b2f9af133e8b8</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ResourceManager&lt; Magnum::Implementation::ResourceManagerLocalInstance, AbstractShaderProgram, Buffer, Mesh, MeshView, DebugTools::ForceRendererOptions, DebugTools::ObjectRendererOptions, DebugTools::ShapeRendererOptions &gt;</name>
    <filename>classMagnum_1_1ResourceManager.html</filename>
  </compound>
  <compound kind="struct">
    <name>std::hash&lt; Magnum::ResourceKey &gt;</name>
    <filename>structstd_1_1hash_3_01Magnum_1_1ResourceKey_01_4.html</filename>
  </compound>
  <compound kind="class">
    <name>Texture&lt; 2 &gt;</name>
    <filename>classMagnum_1_1Texture.html</filename>
    <base>Magnum::AbstractTexture</base>
    <member kind="enumvalue">
      <name>Dimensions</name>
      <anchorfile>classMagnum_1_1Texture.html</anchorfile>
      <anchor>a80f22984174468606ccca21cf4cfbec1a598501d2ab4758dbe219f51c23a402a3</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Texture</name>
      <anchorfile>classMagnum_1_1Texture.html</anchorfile>
      <anchor>a33b8d8bdeb5c7333b6e12937fae28f69</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Texture</name>
      <anchorfile>classMagnum_1_1Texture.html</anchorfile>
      <anchor>a4d61495bc67515fac49798f8003b6493</anchor>
      <arglist>(NoCreateT) noexcept</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>bindImage</name>
      <anchorfile>classMagnum_1_1Texture.html</anchorfile>
      <anchor>a0c63cbaf240c5db2b1a5c41c3d805240</anchor>
      <arglist>(Int imageUnit, Int level, ImageAccess access, ImageFormat format)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>bindImage</name>
      <anchorfile>classMagnum_1_1Texture.html</anchorfile>
      <anchor>a17f377c4d9517bfcd0878f8d96a87fdb</anchor>
      <arglist>(Int imageUnit, Int level, Int layer, ImageAccess access, ImageFormat format)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>bindImageLayered</name>
      <anchorfile>classMagnum_1_1Texture.html</anchorfile>
      <anchor>a4183db748773ae3c21b5c5cd38f1f1af</anchor>
      <arglist>(Int imageUnit, Int level, ImageAccess access, ImageFormat format)</arglist>
    </member>
    <member kind="function">
      <type>Texture&lt; dimensions &gt; &amp;</type>
      <name>setBaseLevel</name>
      <anchorfile>classMagnum_1_1Texture.html</anchorfile>
      <anchor>ad6ec8d93ff9d903c4cd34376a2000e20</anchor>
      <arglist>(Int level)</arglist>
    </member>
    <member kind="function">
      <type>Texture&lt; dimensions &gt; &amp;</type>
      <name>setMaxLevel</name>
      <anchorfile>classMagnum_1_1Texture.html</anchorfile>
      <anchor>acd729a1441093482f19c64bd68a561cc</anchor>
      <arglist>(Int level)</arglist>
    </member>
    <member kind="function">
      <type>Texture&lt; dimensions &gt; &amp;</type>
      <name>setMinificationFilter</name>
      <anchorfile>classMagnum_1_1Texture.html</anchorfile>
      <anchor>a3e7f3562060bca41341bdcdbfbdc83ab</anchor>
      <arglist>(Sampler::Filter filter, Sampler::Mipmap mipmap=Sampler::Mipmap::Base)</arglist>
    </member>
    <member kind="function">
      <type>Texture&lt; dimensions &gt; &amp;</type>
      <name>setMagnificationFilter</name>
      <anchorfile>classMagnum_1_1Texture.html</anchorfile>
      <anchor>afd5671ef45a518d4f0da7d61b92c7b72</anchor>
      <arglist>(Sampler::Filter filter)</arglist>
    </member>
    <member kind="function">
      <type>Texture&lt; dimensions &gt; &amp;</type>
      <name>setMinLod</name>
      <anchorfile>classMagnum_1_1Texture.html</anchorfile>
      <anchor>aa9400cc92f12da6e5b81bea11eb68a12</anchor>
      <arglist>(Float lod)</arglist>
    </member>
    <member kind="function">
      <type>Texture&lt; dimensions &gt; &amp;</type>
      <name>setMaxLod</name>
      <anchorfile>classMagnum_1_1Texture.html</anchorfile>
      <anchor>a9da13ca71d395212d86968c697d53e37</anchor>
      <arglist>(Float lod)</arglist>
    </member>
    <member kind="function">
      <type>Texture&lt; dimensions &gt; &amp;</type>
      <name>setLodBias</name>
      <anchorfile>classMagnum_1_1Texture.html</anchorfile>
      <anchor>a5a7b1cec0b122eb4c152216b89781519</anchor>
      <arglist>(Float bias)</arglist>
    </member>
    <member kind="function">
      <type>Texture&lt; dimensions &gt; &amp;</type>
      <name>setWrapping</name>
      <anchorfile>classMagnum_1_1Texture.html</anchorfile>
      <anchor>a254892c123d5be7e4ebf2e1c5181ff9b</anchor>
      <arglist>(const Array&lt; dimensions, Sampler::Wrapping &gt; &amp;wrapping)</arglist>
    </member>
    <member kind="function">
      <type>Texture&lt; dimensions &gt; &amp;</type>
      <name>setBorderColor</name>
      <anchorfile>classMagnum_1_1Texture.html</anchorfile>
      <anchor>a738d1a52677345de2e9d9d94efa4cdab</anchor>
      <arglist>(const Color4 &amp;color)</arglist>
    </member>
    <member kind="function">
      <type>Texture&lt; dimensions &gt; &amp;</type>
      <name>setBorderColor</name>
      <anchorfile>classMagnum_1_1Texture.html</anchorfile>
      <anchor>a0ad2b621fcd89c86ea4ec827daeafad5</anchor>
      <arglist>(const Vector4ui &amp;color)</arglist>
    </member>
    <member kind="function">
      <type>Texture&lt; dimensions &gt; &amp;</type>
      <name>setBorderColor</name>
      <anchorfile>classMagnum_1_1Texture.html</anchorfile>
      <anchor>a2ca401ac74ddf03b30ec8144dbe12051</anchor>
      <arglist>(const Vector4i &amp;color)</arglist>
    </member>
    <member kind="function">
      <type>Texture&lt; dimensions &gt; &amp;</type>
      <name>setMaxAnisotropy</name>
      <anchorfile>classMagnum_1_1Texture.html</anchorfile>
      <anchor>aac1e4d9d57a306dd0ff4ea3420d4958c</anchor>
      <arglist>(Float anisotropy)</arglist>
    </member>
    <member kind="function">
      <type>Texture&lt; dimensions &gt; &amp;</type>
      <name>setSRGBDecode</name>
      <anchorfile>classMagnum_1_1Texture.html</anchorfile>
      <anchor>a97a8b94b07228c3c6b1b2dfd2de5843b</anchor>
      <arglist>(bool decode)</arglist>
    </member>
    <member kind="function">
      <type>Texture&lt; dimensions &gt; &amp;</type>
      <name>setSwizzle</name>
      <anchorfile>classMagnum_1_1Texture.html</anchorfile>
      <anchor>afd921fd8977e2a294f71de29d3dcb18f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Texture&lt; dimensions &gt; &amp;</type>
      <name>setCompareMode</name>
      <anchorfile>classMagnum_1_1Texture.html</anchorfile>
      <anchor>a507b88eec154fa94cc92e37e8060a9b8</anchor>
      <arglist>(Sampler::CompareMode mode)</arglist>
    </member>
    <member kind="function">
      <type>Texture&lt; dimensions &gt; &amp;</type>
      <name>setCompareFunction</name>
      <anchorfile>classMagnum_1_1Texture.html</anchorfile>
      <anchor>a14abacaae5d6e5bb43012fe023b2554e</anchor>
      <arglist>(Sampler::CompareFunction function)</arglist>
    </member>
    <member kind="function">
      <type>Texture&lt; dimensions &gt; &amp;</type>
      <name>setDepthStencilMode</name>
      <anchorfile>classMagnum_1_1Texture.html</anchorfile>
      <anchor>ae160972e8f7ca13c17716f9f2552fd2f</anchor>
      <arglist>(Sampler::DepthStencilMode mode)</arglist>
    </member>
    <member kind="function">
      <type>Texture&lt; dimensions &gt; &amp;</type>
      <name>setStorage</name>
      <anchorfile>classMagnum_1_1Texture.html</anchorfile>
      <anchor>af3970cd29d112b663e43382b4b9343ba</anchor>
      <arglist>(Int levels, TextureFormat internalFormat, const VectorTypeFor&lt; dimensions, Int &gt; &amp;size)</arglist>
    </member>
    <member kind="function">
      <type>VectorTypeFor&lt; dimensions, Int &gt;</type>
      <name>imageSize</name>
      <anchorfile>classMagnum_1_1Texture.html</anchorfile>
      <anchor>a495e8bc778e2918bd181b76a7fe9986a</anchor>
      <arglist>(Int level)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>image</name>
      <anchorfile>classMagnum_1_1Texture.html</anchorfile>
      <anchor>ab5d89c39d191a6208a5f8e206ed70700</anchor>
      <arglist>(Int level, Image&lt; dimensions &gt; &amp;image)</arglist>
    </member>
    <member kind="function">
      <type>Image&lt; dimensions &gt;</type>
      <name>image</name>
      <anchorfile>classMagnum_1_1Texture.html</anchorfile>
      <anchor>a883c7b23b7512d211b8e797a7c170723</anchor>
      <arglist>(Int level, Image&lt; dimensions &gt; &amp;&amp;image)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>image</name>
      <anchorfile>classMagnum_1_1Texture.html</anchorfile>
      <anchor>a0e68a723039018a7737e36069fd35d64</anchor>
      <arglist>(Int level, BufferImage&lt; dimensions &gt; &amp;image, BufferUsage usage)</arglist>
    </member>
    <member kind="function">
      <type>BufferImage&lt; dimensions &gt;</type>
      <name>image</name>
      <anchorfile>classMagnum_1_1Texture.html</anchorfile>
      <anchor>a8f16a9162e6306dee99082adcb5e70cd</anchor>
      <arglist>(Int level, BufferImage&lt; dimensions &gt; &amp;&amp;image, BufferUsage usage)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>compressedImage</name>
      <anchorfile>classMagnum_1_1Texture.html</anchorfile>
      <anchor>adfcae4214db91888d30179de41a5db67</anchor>
      <arglist>(Int level, CompressedImage&lt; dimensions &gt; &amp;image)</arglist>
    </member>
    <member kind="function">
      <type>CompressedImage&lt; dimensions &gt;</type>
      <name>compressedImage</name>
      <anchorfile>classMagnum_1_1Texture.html</anchorfile>
      <anchor>a3f9d9b2bcfc33cb4a0d701188af46d4f</anchor>
      <arglist>(Int level, CompressedImage&lt; dimensions &gt; &amp;&amp;image)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>compressedImage</name>
      <anchorfile>classMagnum_1_1Texture.html</anchorfile>
      <anchor>a445e54b65ee6352735a24a8eda7e87d6</anchor>
      <arglist>(Int level, CompressedBufferImage&lt; dimensions &gt; &amp;image, BufferUsage usage)</arglist>
    </member>
    <member kind="function">
      <type>CompressedBufferImage&lt; dimensions &gt;</type>
      <name>compressedImage</name>
      <anchorfile>classMagnum_1_1Texture.html</anchorfile>
      <anchor>a638e8449b043f67c96e2eb3bad95314d</anchor>
      <arglist>(Int level, CompressedBufferImage&lt; dimensions &gt; &amp;&amp;image, BufferUsage usage)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>subImage</name>
      <anchorfile>classMagnum_1_1Texture.html</anchorfile>
      <anchor>a3ad1052ed0f746c5cd89b611c467742a</anchor>
      <arglist>(Int level, const RangeTypeFor&lt; dimensions, Int &gt; &amp;range, Image&lt; dimensions &gt; &amp;image)</arglist>
    </member>
    <member kind="function">
      <type>Image&lt; dimensions &gt;</type>
      <name>subImage</name>
      <anchorfile>classMagnum_1_1Texture.html</anchorfile>
      <anchor>a3b773586f577b4a47cc50c65d6310587</anchor>
      <arglist>(Int level, const RangeTypeFor&lt; dimensions, Int &gt; &amp;range, Image&lt; dimensions &gt; &amp;&amp;image)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>subImage</name>
      <anchorfile>classMagnum_1_1Texture.html</anchorfile>
      <anchor>a33732f9408a1a961999a6513c9ab0073</anchor>
      <arglist>(Int level, const RangeTypeFor&lt; dimensions, Int &gt; &amp;range, BufferImage&lt; dimensions &gt; &amp;image, BufferUsage usage)</arglist>
    </member>
    <member kind="function">
      <type>BufferImage&lt; dimensions &gt;</type>
      <name>subImage</name>
      <anchorfile>classMagnum_1_1Texture.html</anchorfile>
      <anchor>a2f146d61b4df41dda2eabbf1de2014be</anchor>
      <arglist>(Int level, const RangeTypeFor&lt; dimensions, Int &gt; &amp;range, BufferImage&lt; dimensions &gt; &amp;&amp;image, BufferUsage usage)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>compressedSubImage</name>
      <anchorfile>classMagnum_1_1Texture.html</anchorfile>
      <anchor>a1e96933c08466a17e8ccc68605106f6a</anchor>
      <arglist>(Int level, const RangeTypeFor&lt; dimensions, Int &gt; &amp;range, CompressedImage&lt; dimensions &gt; &amp;image)</arglist>
    </member>
    <member kind="function">
      <type>CompressedImage&lt; dimensions &gt;</type>
      <name>compressedSubImage</name>
      <anchorfile>classMagnum_1_1Texture.html</anchorfile>
      <anchor>a4cffb4b2db4b494a095407e8c24cdde9</anchor>
      <arglist>(Int level, const RangeTypeFor&lt; dimensions, Int &gt; &amp;range, CompressedImage&lt; dimensions &gt; &amp;&amp;image)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>compressedSubImage</name>
      <anchorfile>classMagnum_1_1Texture.html</anchorfile>
      <anchor>ad46a4e1333a9c369e9b71f75136f4c38</anchor>
      <arglist>(Int level, const RangeTypeFor&lt; dimensions, Int &gt; &amp;range, CompressedBufferImage&lt; dimensions &gt; &amp;image, BufferUsage usage)</arglist>
    </member>
    <member kind="function">
      <type>CompressedBufferImage&lt; dimensions &gt;</type>
      <name>compressedSubImage</name>
      <anchorfile>classMagnum_1_1Texture.html</anchorfile>
      <anchor>a28702f36832fb49f1c71467602297225</anchor>
      <arglist>(Int level, const RangeTypeFor&lt; dimensions, Int &gt; &amp;range, CompressedBufferImage&lt; dimensions &gt; &amp;&amp;image, BufferUsage usage)</arglist>
    </member>
    <member kind="function">
      <type>Texture&lt; dimensions &gt; &amp;</type>
      <name>setImage</name>
      <anchorfile>classMagnum_1_1Texture.html</anchorfile>
      <anchor>a4bf795f4ec288be7f7c05b1c3d945223</anchor>
      <arglist>(Int level, TextureFormat internalFormat, const ImageView&lt; dimensions &gt; &amp;image)</arglist>
    </member>
    <member kind="function">
      <type>Texture&lt; dimensions &gt; &amp;</type>
      <name>setImage</name>
      <anchorfile>classMagnum_1_1Texture.html</anchorfile>
      <anchor>a19e7062867cf447a624b070a348447a5</anchor>
      <arglist>(Int level, TextureFormat internalFormat, BufferImage&lt; dimensions &gt; &amp;image)</arglist>
    </member>
    <member kind="function">
      <type>Texture&lt; dimensions &gt; &amp;</type>
      <name>setImage</name>
      <anchorfile>classMagnum_1_1Texture.html</anchorfile>
      <anchor>a11920b7b8b46ab335624b3528368eb07</anchor>
      <arglist>(Int level, TextureFormat internalFormat, BufferImage&lt; dimensions &gt; &amp;&amp;image)</arglist>
    </member>
    <member kind="function">
      <type>Texture&lt; dimensions &gt; &amp;</type>
      <name>setCompressedImage</name>
      <anchorfile>classMagnum_1_1Texture.html</anchorfile>
      <anchor>aabcffc038bd8fbdaea5f58bb2daffd5d</anchor>
      <arglist>(Int level, const CompressedImageView&lt; dimensions &gt; &amp;image)</arglist>
    </member>
    <member kind="function">
      <type>Texture&lt; dimensions &gt; &amp;</type>
      <name>setCompressedImage</name>
      <anchorfile>classMagnum_1_1Texture.html</anchorfile>
      <anchor>a8333acee229a35e334b810ad04214ea0</anchor>
      <arglist>(Int level, CompressedBufferImage&lt; dimensions &gt; &amp;image)</arglist>
    </member>
    <member kind="function">
      <type>Texture&lt; dimensions &gt; &amp;</type>
      <name>setCompressedImage</name>
      <anchorfile>classMagnum_1_1Texture.html</anchorfile>
      <anchor>a89304f56c9c9a717a84e6cf1836e3677</anchor>
      <arglist>(Int level, CompressedBufferImage&lt; dimensions &gt; &amp;&amp;image)</arglist>
    </member>
    <member kind="function">
      <type>Texture&lt; dimensions &gt; &amp;</type>
      <name>setSubImage</name>
      <anchorfile>classMagnum_1_1Texture.html</anchorfile>
      <anchor>a30f6b3d0d385e34cff08c000cb1ce59b</anchor>
      <arglist>(Int level, const VectorTypeFor&lt; dimensions, Int &gt; &amp;offset, const ImageView&lt; dimensions &gt; &amp;image)</arglist>
    </member>
    <member kind="function">
      <type>Texture&lt; dimensions &gt; &amp;</type>
      <name>setSubImage</name>
      <anchorfile>classMagnum_1_1Texture.html</anchorfile>
      <anchor>ad8e8ac0560b6c9332c8e1d4cc086ee3b</anchor>
      <arglist>(Int level, const VectorTypeFor&lt; dimensions, Int &gt; &amp;offset, BufferImage&lt; dimensions &gt; &amp;image)</arglist>
    </member>
    <member kind="function">
      <type>Texture&lt; dimensions &gt; &amp;</type>
      <name>setSubImage</name>
      <anchorfile>classMagnum_1_1Texture.html</anchorfile>
      <anchor>abdf2ec9558f145da4104db2721ccc180</anchor>
      <arglist>(Int level, const VectorTypeFor&lt; dimensions, Int &gt; &amp;offset, BufferImage&lt; dimensions &gt; &amp;&amp;image)</arglist>
    </member>
    <member kind="function">
      <type>Texture&lt; dimensions &gt; &amp;</type>
      <name>setCompressedSubImage</name>
      <anchorfile>classMagnum_1_1Texture.html</anchorfile>
      <anchor>a5c290a62432b169281e1bb0646400c08</anchor>
      <arglist>(Int level, const VectorTypeFor&lt; dimensions, Int &gt; &amp;offset, const CompressedImageView&lt; dimensions &gt; &amp;image)</arglist>
    </member>
    <member kind="function">
      <type>Texture&lt; dimensions &gt; &amp;</type>
      <name>setCompressedSubImage</name>
      <anchorfile>classMagnum_1_1Texture.html</anchorfile>
      <anchor>a88e1eb12d5facd9dbe1c6f5f9454d534</anchor>
      <arglist>(Int level, const VectorTypeFor&lt; dimensions, Int &gt; &amp;offset, CompressedBufferImage&lt; dimensions &gt; &amp;image)</arglist>
    </member>
    <member kind="function">
      <type>Texture&lt; dimensions &gt; &amp;</type>
      <name>setCompressedSubImage</name>
      <anchorfile>classMagnum_1_1Texture.html</anchorfile>
      <anchor>a71c6073487426d0298b1e99349711181</anchor>
      <arglist>(Int level, const VectorTypeFor&lt; dimensions, Int &gt; &amp;offset, CompressedBufferImage&lt; dimensions &gt; &amp;&amp;image)</arglist>
    </member>
    <member kind="function">
      <type>Texture&lt; dimensions &gt; &amp;</type>
      <name>generateMipmap</name>
      <anchorfile>classMagnum_1_1Texture.html</anchorfile>
      <anchor>a048fb78acf9fe6db98c05e0777c815df</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>invalidateImage</name>
      <anchorfile>classMagnum_1_1Texture.html</anchorfile>
      <anchor>af7bfeef6b96126289023a882aeafbc94</anchor>
      <arglist>(Int level)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>invalidateSubImage</name>
      <anchorfile>classMagnum_1_1Texture.html</anchorfile>
      <anchor>a94b04e510616f84b94f9a7345412de1d</anchor>
      <arglist>(Int level, const VectorTypeFor&lt; dimensions, Int &gt; &amp;offset, const VectorTypeFor&lt; dimensions, Int &gt; &amp;size)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static VectorTypeFor&lt; dimensions, Int &gt;</type>
      <name>maxSize</name>
      <anchorfile>classMagnum_1_1Texture.html</anchorfile>
      <anchor>a011ed0bb2982364e722916b6816f4786</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static VectorTypeFor&lt; dimensions, Int &gt;</type>
      <name>compressedBlockSize</name>
      <anchorfile>classMagnum_1_1Texture.html</anchorfile>
      <anchor>a43b9fe4290be65df12ffe5d6536c811f</anchor>
      <arglist>(TextureFormat format)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Int</type>
      <name>compressedBlockDataSize</name>
      <anchorfile>classMagnum_1_1Texture.html</anchorfile>
      <anchor>ab5b59b4394c892b1a1ecaa1a15af7d18</anchor>
      <arglist>(TextureFormat format)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Texture&lt; dimensions &gt;</type>
      <name>wrap</name>
      <anchorfile>classMagnum_1_1Texture.html</anchorfile>
      <anchor>ac5fa2d224fa575571997401dc87b3194</anchor>
      <arglist>(GLuint id, ObjectFlags flags={})</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Unit&lt; Deg, T &gt;</name>
    <filename>classMagnum_1_1Math_1_1Unit.html</filename>
    <member kind="typedef">
      <type>T</type>
      <name>Type</name>
      <anchorfile>classMagnum_1_1Math_1_1Unit.html</anchorfile>
      <anchor>ab2e8497e07678a07d34a06afa2f626e6</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Unit</name>
      <anchorfile>classMagnum_1_1Math_1_1Unit.html</anchorfile>
      <anchor>a9714e781ce84621954ca716011a07bed</anchor>
      <arglist>(ZeroInitT=ZeroInit) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Unit</name>
      <anchorfile>classMagnum_1_1Math_1_1Unit.html</anchorfile>
      <anchor>aae41c717c1a7e3d87249b094e2e7a2cc</anchor>
      <arglist>(NoInitT) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Unit</name>
      <anchorfile>classMagnum_1_1Math_1_1Unit.html</anchorfile>
      <anchor>a12be119a79e2633d6a63bc8725d6254e</anchor>
      <arglist>(T value) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Unit</name>
      <anchorfile>classMagnum_1_1Math_1_1Unit.html</anchorfile>
      <anchor>ad3433bd988806231e5912b8f9c97cd12</anchor>
      <arglist>(Unit&lt; Deg, U &gt; value) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Unit</name>
      <anchorfile>classMagnum_1_1Math_1_1Unit.html</anchorfile>
      <anchor>aef1230eb1f0f105cc5fa361252fd82ba</anchor>
      <arglist>(const Unit&lt; Deg, T &gt; &amp;other) noexcept=default</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>operator T</name>
      <anchorfile>classMagnum_1_1Math_1_1Unit.html</anchorfile>
      <anchor>a060dd8946fbd0b7d568ccdb2181d6dd4</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>constexpr bool</type>
      <name>operator==</name>
      <anchorfile>classMagnum_1_1Math_1_1Unit.html</anchorfile>
      <anchor>aecae7a6e50cd0259e119150c3ac5be8f</anchor>
      <arglist>(Unit&lt; Deg, T &gt; other) const</arglist>
    </member>
    <member kind="function">
      <type>constexpr bool</type>
      <name>operator!=</name>
      <anchorfile>classMagnum_1_1Math_1_1Unit.html</anchorfile>
      <anchor>ad77d8c8304b2f55f69e321e7350e2ec5</anchor>
      <arglist>(Unit&lt; Deg, T &gt; other) const</arglist>
    </member>
    <member kind="function">
      <type>constexpr bool</type>
      <name>operator&lt;</name>
      <anchorfile>classMagnum_1_1Math_1_1Unit.html</anchorfile>
      <anchor>a8e328aba2be9bd15818d5d55d9da5644</anchor>
      <arglist>(Unit&lt; Deg, T &gt; other) const</arglist>
    </member>
    <member kind="function">
      <type>constexpr bool</type>
      <name>operator&gt;</name>
      <anchorfile>classMagnum_1_1Math_1_1Unit.html</anchorfile>
      <anchor>a6ada6eb1cac8298362fa744976173b12</anchor>
      <arglist>(Unit&lt; Deg, T &gt; other) const</arglist>
    </member>
    <member kind="function">
      <type>constexpr bool</type>
      <name>operator&lt;=</name>
      <anchorfile>classMagnum_1_1Math_1_1Unit.html</anchorfile>
      <anchor>aac1b2bb835b4c3e4c063be342c418860</anchor>
      <arglist>(Unit&lt; Deg, T &gt; other) const</arglist>
    </member>
    <member kind="function">
      <type>constexpr bool</type>
      <name>operator&gt;=</name>
      <anchorfile>classMagnum_1_1Math_1_1Unit.html</anchorfile>
      <anchor>ab23269bde76adb76a215ceed699c41f4</anchor>
      <arglist>(Unit&lt; Deg, T &gt; other) const</arglist>
    </member>
    <member kind="function">
      <type>constexpr Unit&lt; Deg, T &gt;</type>
      <name>operator-</name>
      <anchorfile>classMagnum_1_1Math_1_1Unit.html</anchorfile>
      <anchor>ae280b852ad882a1ccb89de1de1cc73c7</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>constexpr Unit&lt; Deg, T &gt;</type>
      <name>operator-</name>
      <anchorfile>classMagnum_1_1Math_1_1Unit.html</anchorfile>
      <anchor>aae35bc84166b8a8de235a468265d6cdc</anchor>
      <arglist>(Unit&lt; Deg, T &gt; other) const</arglist>
    </member>
    <member kind="function">
      <type>Unit&lt; Deg, T &gt; &amp;</type>
      <name>operator+=</name>
      <anchorfile>classMagnum_1_1Math_1_1Unit.html</anchorfile>
      <anchor>aacb4f2522bf1dd729c588e7f58cbdd84</anchor>
      <arglist>(Unit&lt; Deg, T &gt; other)</arglist>
    </member>
    <member kind="function">
      <type>constexpr Unit&lt; Deg, T &gt;</type>
      <name>operator+</name>
      <anchorfile>classMagnum_1_1Math_1_1Unit.html</anchorfile>
      <anchor>a2291122c678dcd0272b6cbe053138c48</anchor>
      <arglist>(Unit&lt; Deg, T &gt; other) const</arglist>
    </member>
    <member kind="function">
      <type>Unit&lt; Deg, T &gt; &amp;</type>
      <name>operator-=</name>
      <anchorfile>classMagnum_1_1Math_1_1Unit.html</anchorfile>
      <anchor>a331d372da95342b27e44314083b288d6</anchor>
      <arglist>(Unit&lt; Deg, T &gt; other)</arglist>
    </member>
    <member kind="function">
      <type>Unit&lt; Deg, T &gt; &amp;</type>
      <name>operator*=</name>
      <anchorfile>classMagnum_1_1Math_1_1Unit.html</anchorfile>
      <anchor>a6c362f3be5c210a6a696ae2535bc19c7</anchor>
      <arglist>(T number)</arglist>
    </member>
    <member kind="function">
      <type>constexpr Unit&lt; Deg, T &gt;</type>
      <name>operator*</name>
      <anchorfile>classMagnum_1_1Math_1_1Unit.html</anchorfile>
      <anchor>a34bec93e6d2b4937001ef3bf872a95d5</anchor>
      <arglist>(T number) const</arglist>
    </member>
    <member kind="function">
      <type>Unit&lt; Deg, T &gt; &amp;</type>
      <name>operator/=</name>
      <anchorfile>classMagnum_1_1Math_1_1Unit.html</anchorfile>
      <anchor>a0f6cf00382251fa20c2b3a2a1c5b4424</anchor>
      <arglist>(T number)</arglist>
    </member>
    <member kind="function">
      <type>constexpr Unit&lt; Deg, T &gt;</type>
      <name>operator/</name>
      <anchorfile>classMagnum_1_1Math_1_1Unit.html</anchorfile>
      <anchor>a9eefd6344d69cbf0d2fd7c8032726069</anchor>
      <arglist>(T number) const</arglist>
    </member>
    <member kind="function">
      <type>constexpr T</type>
      <name>operator/</name>
      <anchorfile>classMagnum_1_1Math_1_1Unit.html</anchorfile>
      <anchor>a7ccac99ba500a9c043cd4b240434cb1e</anchor>
      <arglist>(Unit&lt; Deg, T &gt; other) const</arglist>
    </member>
    <member kind="function">
      <type>constexpr Unit&lt; Deg, T &gt;</type>
      <name>operator*</name>
      <anchorfile>classMagnum_1_1Math_1_1Unit.html</anchorfile>
      <anchor>a1cc2f0ac6ddeb4018cd6822ee154e930</anchor>
      <arglist>(typename std::common_type&lt; T &gt;::type number, const Unit&lt; Deg, T &gt; &amp;value)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Unit&lt; Rad, Float &gt;</name>
    <filename>classMagnum_1_1Math_1_1Unit.html</filename>
    <member kind="typedef">
      <type>Float</type>
      <name>Type</name>
      <anchorfile>classMagnum_1_1Math_1_1Unit.html</anchorfile>
      <anchor>ab2e8497e07678a07d34a06afa2f626e6</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Unit</name>
      <anchorfile>classMagnum_1_1Math_1_1Unit.html</anchorfile>
      <anchor>a9714e781ce84621954ca716011a07bed</anchor>
      <arglist>(ZeroInitT=ZeroInit) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Unit</name>
      <anchorfile>classMagnum_1_1Math_1_1Unit.html</anchorfile>
      <anchor>aae41c717c1a7e3d87249b094e2e7a2cc</anchor>
      <arglist>(NoInitT) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Unit</name>
      <anchorfile>classMagnum_1_1Math_1_1Unit.html</anchorfile>
      <anchor>a12be119a79e2633d6a63bc8725d6254e</anchor>
      <arglist>(Float value) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Unit</name>
      <anchorfile>classMagnum_1_1Math_1_1Unit.html</anchorfile>
      <anchor>ad3433bd988806231e5912b8f9c97cd12</anchor>
      <arglist>(Unit&lt; Rad, U &gt; value) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Unit</name>
      <anchorfile>classMagnum_1_1Math_1_1Unit.html</anchorfile>
      <anchor>aef1230eb1f0f105cc5fa361252fd82ba</anchor>
      <arglist>(const Unit&lt; Rad, Float &gt; &amp;other) noexcept=default</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>operator Float</name>
      <anchorfile>classMagnum_1_1Math_1_1Unit.html</anchorfile>
      <anchor>a060dd8946fbd0b7d568ccdb2181d6dd4</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>constexpr bool</type>
      <name>operator==</name>
      <anchorfile>classMagnum_1_1Math_1_1Unit.html</anchorfile>
      <anchor>aecae7a6e50cd0259e119150c3ac5be8f</anchor>
      <arglist>(Unit&lt; Rad, Float &gt; other) const</arglist>
    </member>
    <member kind="function">
      <type>constexpr bool</type>
      <name>operator!=</name>
      <anchorfile>classMagnum_1_1Math_1_1Unit.html</anchorfile>
      <anchor>ad77d8c8304b2f55f69e321e7350e2ec5</anchor>
      <arglist>(Unit&lt; Rad, Float &gt; other) const</arglist>
    </member>
    <member kind="function">
      <type>constexpr bool</type>
      <name>operator&lt;</name>
      <anchorfile>classMagnum_1_1Math_1_1Unit.html</anchorfile>
      <anchor>a8e328aba2be9bd15818d5d55d9da5644</anchor>
      <arglist>(Unit&lt; Rad, Float &gt; other) const</arglist>
    </member>
    <member kind="function">
      <type>constexpr bool</type>
      <name>operator&gt;</name>
      <anchorfile>classMagnum_1_1Math_1_1Unit.html</anchorfile>
      <anchor>a6ada6eb1cac8298362fa744976173b12</anchor>
      <arglist>(Unit&lt; Rad, Float &gt; other) const</arglist>
    </member>
    <member kind="function">
      <type>constexpr bool</type>
      <name>operator&lt;=</name>
      <anchorfile>classMagnum_1_1Math_1_1Unit.html</anchorfile>
      <anchor>aac1b2bb835b4c3e4c063be342c418860</anchor>
      <arglist>(Unit&lt; Rad, Float &gt; other) const</arglist>
    </member>
    <member kind="function">
      <type>constexpr bool</type>
      <name>operator&gt;=</name>
      <anchorfile>classMagnum_1_1Math_1_1Unit.html</anchorfile>
      <anchor>ab23269bde76adb76a215ceed699c41f4</anchor>
      <arglist>(Unit&lt; Rad, Float &gt; other) const</arglist>
    </member>
    <member kind="function">
      <type>constexpr Unit&lt; Rad, Float &gt;</type>
      <name>operator-</name>
      <anchorfile>classMagnum_1_1Math_1_1Unit.html</anchorfile>
      <anchor>ae280b852ad882a1ccb89de1de1cc73c7</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>constexpr Unit&lt; Rad, Float &gt;</type>
      <name>operator-</name>
      <anchorfile>classMagnum_1_1Math_1_1Unit.html</anchorfile>
      <anchor>aae35bc84166b8a8de235a468265d6cdc</anchor>
      <arglist>(Unit&lt; Rad, Float &gt; other) const</arglist>
    </member>
    <member kind="function">
      <type>Unit&lt; Rad, Float &gt; &amp;</type>
      <name>operator+=</name>
      <anchorfile>classMagnum_1_1Math_1_1Unit.html</anchorfile>
      <anchor>aacb4f2522bf1dd729c588e7f58cbdd84</anchor>
      <arglist>(Unit&lt; Rad, Float &gt; other)</arglist>
    </member>
    <member kind="function">
      <type>constexpr Unit&lt; Rad, Float &gt;</type>
      <name>operator+</name>
      <anchorfile>classMagnum_1_1Math_1_1Unit.html</anchorfile>
      <anchor>a2291122c678dcd0272b6cbe053138c48</anchor>
      <arglist>(Unit&lt; Rad, Float &gt; other) const</arglist>
    </member>
    <member kind="function">
      <type>Unit&lt; Rad, Float &gt; &amp;</type>
      <name>operator-=</name>
      <anchorfile>classMagnum_1_1Math_1_1Unit.html</anchorfile>
      <anchor>a331d372da95342b27e44314083b288d6</anchor>
      <arglist>(Unit&lt; Rad, Float &gt; other)</arglist>
    </member>
    <member kind="function">
      <type>Unit&lt; Rad, Float &gt; &amp;</type>
      <name>operator*=</name>
      <anchorfile>classMagnum_1_1Math_1_1Unit.html</anchorfile>
      <anchor>a6c362f3be5c210a6a696ae2535bc19c7</anchor>
      <arglist>(Float number)</arglist>
    </member>
    <member kind="function">
      <type>constexpr Unit&lt; Rad, Float &gt;</type>
      <name>operator*</name>
      <anchorfile>classMagnum_1_1Math_1_1Unit.html</anchorfile>
      <anchor>a34bec93e6d2b4937001ef3bf872a95d5</anchor>
      <arglist>(Float number) const</arglist>
    </member>
    <member kind="function">
      <type>Unit&lt; Rad, Float &gt; &amp;</type>
      <name>operator/=</name>
      <anchorfile>classMagnum_1_1Math_1_1Unit.html</anchorfile>
      <anchor>a0f6cf00382251fa20c2b3a2a1c5b4424</anchor>
      <arglist>(Float number)</arglist>
    </member>
    <member kind="function">
      <type>constexpr Unit&lt; Rad, Float &gt;</type>
      <name>operator/</name>
      <anchorfile>classMagnum_1_1Math_1_1Unit.html</anchorfile>
      <anchor>a9eefd6344d69cbf0d2fd7c8032726069</anchor>
      <arglist>(Float number) const</arglist>
    </member>
    <member kind="function">
      <type>constexpr Float</type>
      <name>operator/</name>
      <anchorfile>classMagnum_1_1Math_1_1Unit.html</anchorfile>
      <anchor>a7ccac99ba500a9c043cd4b240434cb1e</anchor>
      <arglist>(Unit&lt; Rad, Float &gt; other) const</arglist>
    </member>
    <member kind="function">
      <type>constexpr Unit&lt; Rad, Float &gt;</type>
      <name>operator*</name>
      <anchorfile>classMagnum_1_1Math_1_1Unit.html</anchorfile>
      <anchor>a1cc2f0ac6ddeb4018cd6822ee154e930</anchor>
      <arglist>(typename std::common_type&lt; Float &gt;::type number, const Unit&lt; Rad, Float &gt; &amp;value)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Unit&lt; Rad, T &gt;</name>
    <filename>classMagnum_1_1Math_1_1Unit.html</filename>
    <member kind="typedef">
      <type>T</type>
      <name>Type</name>
      <anchorfile>classMagnum_1_1Math_1_1Unit.html</anchorfile>
      <anchor>ab2e8497e07678a07d34a06afa2f626e6</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Unit</name>
      <anchorfile>classMagnum_1_1Math_1_1Unit.html</anchorfile>
      <anchor>a9714e781ce84621954ca716011a07bed</anchor>
      <arglist>(ZeroInitT=ZeroInit) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Unit</name>
      <anchorfile>classMagnum_1_1Math_1_1Unit.html</anchorfile>
      <anchor>aae41c717c1a7e3d87249b094e2e7a2cc</anchor>
      <arglist>(NoInitT) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Unit</name>
      <anchorfile>classMagnum_1_1Math_1_1Unit.html</anchorfile>
      <anchor>a12be119a79e2633d6a63bc8725d6254e</anchor>
      <arglist>(T value) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Unit</name>
      <anchorfile>classMagnum_1_1Math_1_1Unit.html</anchorfile>
      <anchor>ad3433bd988806231e5912b8f9c97cd12</anchor>
      <arglist>(Unit&lt; Rad, U &gt; value) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Unit</name>
      <anchorfile>classMagnum_1_1Math_1_1Unit.html</anchorfile>
      <anchor>aef1230eb1f0f105cc5fa361252fd82ba</anchor>
      <arglist>(const Unit&lt; Rad, T &gt; &amp;other) noexcept=default</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>operator T</name>
      <anchorfile>classMagnum_1_1Math_1_1Unit.html</anchorfile>
      <anchor>a060dd8946fbd0b7d568ccdb2181d6dd4</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>constexpr bool</type>
      <name>operator==</name>
      <anchorfile>classMagnum_1_1Math_1_1Unit.html</anchorfile>
      <anchor>aecae7a6e50cd0259e119150c3ac5be8f</anchor>
      <arglist>(Unit&lt; Rad, T &gt; other) const</arglist>
    </member>
    <member kind="function">
      <type>constexpr bool</type>
      <name>operator!=</name>
      <anchorfile>classMagnum_1_1Math_1_1Unit.html</anchorfile>
      <anchor>ad77d8c8304b2f55f69e321e7350e2ec5</anchor>
      <arglist>(Unit&lt; Rad, T &gt; other) const</arglist>
    </member>
    <member kind="function">
      <type>constexpr bool</type>
      <name>operator&lt;</name>
      <anchorfile>classMagnum_1_1Math_1_1Unit.html</anchorfile>
      <anchor>a8e328aba2be9bd15818d5d55d9da5644</anchor>
      <arglist>(Unit&lt; Rad, T &gt; other) const</arglist>
    </member>
    <member kind="function">
      <type>constexpr bool</type>
      <name>operator&gt;</name>
      <anchorfile>classMagnum_1_1Math_1_1Unit.html</anchorfile>
      <anchor>a6ada6eb1cac8298362fa744976173b12</anchor>
      <arglist>(Unit&lt; Rad, T &gt; other) const</arglist>
    </member>
    <member kind="function">
      <type>constexpr bool</type>
      <name>operator&lt;=</name>
      <anchorfile>classMagnum_1_1Math_1_1Unit.html</anchorfile>
      <anchor>aac1b2bb835b4c3e4c063be342c418860</anchor>
      <arglist>(Unit&lt; Rad, T &gt; other) const</arglist>
    </member>
    <member kind="function">
      <type>constexpr bool</type>
      <name>operator&gt;=</name>
      <anchorfile>classMagnum_1_1Math_1_1Unit.html</anchorfile>
      <anchor>ab23269bde76adb76a215ceed699c41f4</anchor>
      <arglist>(Unit&lt; Rad, T &gt; other) const</arglist>
    </member>
    <member kind="function">
      <type>constexpr Unit&lt; Rad, T &gt;</type>
      <name>operator-</name>
      <anchorfile>classMagnum_1_1Math_1_1Unit.html</anchorfile>
      <anchor>ae280b852ad882a1ccb89de1de1cc73c7</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>constexpr Unit&lt; Rad, T &gt;</type>
      <name>operator-</name>
      <anchorfile>classMagnum_1_1Math_1_1Unit.html</anchorfile>
      <anchor>aae35bc84166b8a8de235a468265d6cdc</anchor>
      <arglist>(Unit&lt; Rad, T &gt; other) const</arglist>
    </member>
    <member kind="function">
      <type>Unit&lt; Rad, T &gt; &amp;</type>
      <name>operator+=</name>
      <anchorfile>classMagnum_1_1Math_1_1Unit.html</anchorfile>
      <anchor>aacb4f2522bf1dd729c588e7f58cbdd84</anchor>
      <arglist>(Unit&lt; Rad, T &gt; other)</arglist>
    </member>
    <member kind="function">
      <type>constexpr Unit&lt; Rad, T &gt;</type>
      <name>operator+</name>
      <anchorfile>classMagnum_1_1Math_1_1Unit.html</anchorfile>
      <anchor>a2291122c678dcd0272b6cbe053138c48</anchor>
      <arglist>(Unit&lt; Rad, T &gt; other) const</arglist>
    </member>
    <member kind="function">
      <type>Unit&lt; Rad, T &gt; &amp;</type>
      <name>operator-=</name>
      <anchorfile>classMagnum_1_1Math_1_1Unit.html</anchorfile>
      <anchor>a331d372da95342b27e44314083b288d6</anchor>
      <arglist>(Unit&lt; Rad, T &gt; other)</arglist>
    </member>
    <member kind="function">
      <type>Unit&lt; Rad, T &gt; &amp;</type>
      <name>operator*=</name>
      <anchorfile>classMagnum_1_1Math_1_1Unit.html</anchorfile>
      <anchor>a6c362f3be5c210a6a696ae2535bc19c7</anchor>
      <arglist>(T number)</arglist>
    </member>
    <member kind="function">
      <type>constexpr Unit&lt; Rad, T &gt;</type>
      <name>operator*</name>
      <anchorfile>classMagnum_1_1Math_1_1Unit.html</anchorfile>
      <anchor>a34bec93e6d2b4937001ef3bf872a95d5</anchor>
      <arglist>(T number) const</arglist>
    </member>
    <member kind="function">
      <type>Unit&lt; Rad, T &gt; &amp;</type>
      <name>operator/=</name>
      <anchorfile>classMagnum_1_1Math_1_1Unit.html</anchorfile>
      <anchor>a0f6cf00382251fa20c2b3a2a1c5b4424</anchor>
      <arglist>(T number)</arglist>
    </member>
    <member kind="function">
      <type>constexpr Unit&lt; Rad, T &gt;</type>
      <name>operator/</name>
      <anchorfile>classMagnum_1_1Math_1_1Unit.html</anchorfile>
      <anchor>a9eefd6344d69cbf0d2fd7c8032726069</anchor>
      <arglist>(T number) const</arglist>
    </member>
    <member kind="function">
      <type>constexpr T</type>
      <name>operator/</name>
      <anchorfile>classMagnum_1_1Math_1_1Unit.html</anchorfile>
      <anchor>a7ccac99ba500a9c043cd4b240434cb1e</anchor>
      <arglist>(Unit&lt; Rad, T &gt; other) const</arglist>
    </member>
    <member kind="function">
      <type>constexpr Unit&lt; Rad, T &gt;</type>
      <name>operator*</name>
      <anchorfile>classMagnum_1_1Math_1_1Unit.html</anchorfile>
      <anchor>a1cc2f0ac6ddeb4018cd6822ee154e930</anchor>
      <arglist>(typename std::common_type&lt; T &gt;::type number, const Unit&lt; Rad, T &gt; &amp;value)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Vector2&lt; Float &gt;</name>
    <filename>classMagnum_1_1Math_1_1Vector2.html</filename>
    <base>Vector&lt; 2, Float &gt;</base>
    <member kind="function">
      <type>constexpr</type>
      <name>Vector2</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector2.html</anchorfile>
      <anchor>a17e35d30f59d967caf01fd5367b0915d</anchor>
      <arglist>(ZeroInitT=ZeroInit) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Vector2</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector2.html</anchorfile>
      <anchor>ae39d10df93e68e4d0415ada257e826de</anchor>
      <arglist>(NoInitT) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Vector2</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector2.html</anchorfile>
      <anchor>a594b5a10001b0a5626011490aee1b553</anchor>
      <arglist>(Float value) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Vector2</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector2.html</anchorfile>
      <anchor>abc9c7d99a718e2280028cd40cbfcb2c6</anchor>
      <arglist>(Float x, Float y) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Vector2</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector2.html</anchorfile>
      <anchor>a271e60cacd2cf82cdccc2c6be2d1d832</anchor>
      <arglist>(const Vector&lt; 2, U &gt; &amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Vector2</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector2.html</anchorfile>
      <anchor>ae15a00d470ae74d85596deb6ba5ee32c</anchor>
      <arglist>(const U &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Vector2</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector2.html</anchorfile>
      <anchor>a4f5d0735664c9600830a6cefbdac221c</anchor>
      <arglist>(const Vector&lt; 2, Float &gt; &amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type>Float &amp;</type>
      <name>x</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector2.html</anchorfile>
      <anchor>a4d5125c64aec36d08023c2e82f6acbdd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>constexpr Float</type>
      <name>x</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector2.html</anchorfile>
      <anchor>a6867f8e5d904edc3a0b51b31f3f4c875</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Float &amp;</type>
      <name>y</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector2.html</anchorfile>
      <anchor>a65a74d0a2d9ab8ffa032c2085b2ebc7d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>constexpr Float</type>
      <name>y</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector2.html</anchorfile>
      <anchor>a202aeeb65e4673a350d9a90d8e2a06b7</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector2&lt; Float &gt;</type>
      <name>perpendicular</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector2.html</anchorfile>
      <anchor>afeb5611409a95c72ce8d21efbf3635b0</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Float</type>
      <name>aspectRatio</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector2.html</anchorfile>
      <anchor>adcdf3a06017e8ec98aae3a2adf3e73b2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static constexpr Vector2&lt; Float &gt;</type>
      <name>xAxis</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector2.html</anchorfile>
      <anchor>a90795a3ca77e0df1017cdbcb9552e3f5</anchor>
      <arglist>(Float length=Float(1))</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static constexpr Vector2&lt; Float &gt;</type>
      <name>yAxis</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector2.html</anchorfile>
      <anchor>ae842e564c385b5c6d7a3bf6a7710798a</anchor>
      <arglist>(Float length=Float(1))</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static constexpr Vector2&lt; Float &gt;</type>
      <name>xScale</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector2.html</anchorfile>
      <anchor>a0ea3ef7c48c5c304f8ca2304138ead91</anchor>
      <arglist>(Float scale)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static constexpr Vector2&lt; Float &gt;</type>
      <name>yScale</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector2.html</anchorfile>
      <anchor>ae24066f2e0ad888faeaa839149068586</anchor>
      <arglist>(Float scale)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Float</type>
      <name>cross</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector2.html</anchorfile>
      <anchor>a38e98bc84d9a393653eca57c6fe6466e</anchor>
      <arglist>(const Vector2&lt; Float &gt; &amp;a, const Vector2&lt; Float &gt; &amp;b)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Vector2&lt; Int &gt;</name>
    <filename>classMagnum_1_1Math_1_1Vector2.html</filename>
    <base>Vector&lt; 2, Int &gt;</base>
    <member kind="function">
      <type>constexpr</type>
      <name>Vector2</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector2.html</anchorfile>
      <anchor>a17e35d30f59d967caf01fd5367b0915d</anchor>
      <arglist>(ZeroInitT=ZeroInit) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Vector2</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector2.html</anchorfile>
      <anchor>ae39d10df93e68e4d0415ada257e826de</anchor>
      <arglist>(NoInitT) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Vector2</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector2.html</anchorfile>
      <anchor>a594b5a10001b0a5626011490aee1b553</anchor>
      <arglist>(Int value) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Vector2</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector2.html</anchorfile>
      <anchor>abc9c7d99a718e2280028cd40cbfcb2c6</anchor>
      <arglist>(Int x, Int y) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Vector2</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector2.html</anchorfile>
      <anchor>a271e60cacd2cf82cdccc2c6be2d1d832</anchor>
      <arglist>(const Vector&lt; 2, U &gt; &amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Vector2</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector2.html</anchorfile>
      <anchor>ae15a00d470ae74d85596deb6ba5ee32c</anchor>
      <arglist>(const U &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Vector2</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector2.html</anchorfile>
      <anchor>a4f5d0735664c9600830a6cefbdac221c</anchor>
      <arglist>(const Vector&lt; 2, Int &gt; &amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type>Int &amp;</type>
      <name>x</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector2.html</anchorfile>
      <anchor>a4d5125c64aec36d08023c2e82f6acbdd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>constexpr Int</type>
      <name>x</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector2.html</anchorfile>
      <anchor>a6867f8e5d904edc3a0b51b31f3f4c875</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Int &amp;</type>
      <name>y</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector2.html</anchorfile>
      <anchor>a65a74d0a2d9ab8ffa032c2085b2ebc7d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>constexpr Int</type>
      <name>y</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector2.html</anchorfile>
      <anchor>a202aeeb65e4673a350d9a90d8e2a06b7</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector2&lt; Int &gt;</type>
      <name>perpendicular</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector2.html</anchorfile>
      <anchor>afeb5611409a95c72ce8d21efbf3635b0</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Int</type>
      <name>aspectRatio</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector2.html</anchorfile>
      <anchor>adcdf3a06017e8ec98aae3a2adf3e73b2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static constexpr Vector2&lt; Int &gt;</type>
      <name>xAxis</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector2.html</anchorfile>
      <anchor>a90795a3ca77e0df1017cdbcb9552e3f5</anchor>
      <arglist>(Int length=Int(1))</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static constexpr Vector2&lt; Int &gt;</type>
      <name>yAxis</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector2.html</anchorfile>
      <anchor>ae842e564c385b5c6d7a3bf6a7710798a</anchor>
      <arglist>(Int length=Int(1))</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static constexpr Vector2&lt; Int &gt;</type>
      <name>xScale</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector2.html</anchorfile>
      <anchor>a0ea3ef7c48c5c304f8ca2304138ead91</anchor>
      <arglist>(Int scale)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static constexpr Vector2&lt; Int &gt;</type>
      <name>yScale</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector2.html</anchorfile>
      <anchor>ae24066f2e0ad888faeaa839149068586</anchor>
      <arglist>(Int scale)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Int</type>
      <name>cross</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector2.html</anchorfile>
      <anchor>a38e98bc84d9a393653eca57c6fe6466e</anchor>
      <arglist>(const Vector2&lt; Int &gt; &amp;a, const Vector2&lt; Int &gt; &amp;b)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Vector3&lt; Float &gt;</name>
    <filename>classMagnum_1_1Math_1_1Vector3.html</filename>
    <base>Vector&lt; 3, Float &gt;</base>
    <member kind="function">
      <type>constexpr</type>
      <name>Vector3</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector3.html</anchorfile>
      <anchor>adda67d067f2efe9554e0ee7fe251175d</anchor>
      <arglist>(ZeroInitT=ZeroInit) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Vector3</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector3.html</anchorfile>
      <anchor>a68b81fc43343ea75bb6bd4c705aea7e0</anchor>
      <arglist>(NoInitT) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Vector3</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector3.html</anchorfile>
      <anchor>a61a987b9bd7ae821f95fbe67d4d3a60b</anchor>
      <arglist>(Float value) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Vector3</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector3.html</anchorfile>
      <anchor>ae802b9e422b70b200a70b7c8f40625dc</anchor>
      <arglist>(Float x, Float y, Float z) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Vector3</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector3.html</anchorfile>
      <anchor>a75ef10a3f27446ff9bd02b1dd1b5f58d</anchor>
      <arglist>(const Vector2&lt; Float &gt; &amp;xy, Float z) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Vector3</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector3.html</anchorfile>
      <anchor>a779b7e5a6262b2cfd9577414dc63c716</anchor>
      <arglist>(const Vector&lt; 3, U &gt; &amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Vector3</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector3.html</anchorfile>
      <anchor>a058879e4b043bcd45e4387f5051619cb</anchor>
      <arglist>(const U &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Vector3</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector3.html</anchorfile>
      <anchor>a25e3da8ce96c645cf2a782305a2b12a5</anchor>
      <arglist>(const Vector&lt; 3, Float &gt; &amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type>Float &amp;</type>
      <name>x</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector3.html</anchorfile>
      <anchor>a30c538699bff804fb2fb205e1e30d207</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>constexpr Float</type>
      <name>x</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector3.html</anchorfile>
      <anchor>a67588136815bf00c81e5fbd4cbce17dd</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Float &amp;</type>
      <name>y</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector3.html</anchorfile>
      <anchor>ae51e27f72cf5db9142a8761a4dce56fd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>constexpr Float</type>
      <name>y</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector3.html</anchorfile>
      <anchor>aafc310504776bb057d9af029148df55a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Float &amp;</type>
      <name>z</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector3.html</anchorfile>
      <anchor>a194609d99092b9f3443208f355c685ff</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>constexpr Float</type>
      <name>z</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector3.html</anchorfile>
      <anchor>a1fe14f31a055c41fa80723ee815ce0c4</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Float &amp;</type>
      <name>r</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector3.html</anchorfile>
      <anchor>a4b90a303fe009795f5a48214da862be9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>constexpr Float</type>
      <name>r</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector3.html</anchorfile>
      <anchor>a4f25498c9ebaf5b762ff59dc2b9e2c6c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Float &amp;</type>
      <name>g</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector3.html</anchorfile>
      <anchor>a5635d89362bf6559fb014d0ecabc6813</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>constexpr Float</type>
      <name>g</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector3.html</anchorfile>
      <anchor>a212835360c56b8a1f1baa086f469551d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Float &amp;</type>
      <name>b</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector3.html</anchorfile>
      <anchor>a240568b4069ed8aabd9eb7bba3d4a8d2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>constexpr Float</type>
      <name>b</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector3.html</anchorfile>
      <anchor>ac0206c89f4d1759986bf852c8958d075</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector2&lt; Float &gt; &amp;</type>
      <name>xy</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector3.html</anchorfile>
      <anchor>aedf182498210bb6999346591599ffb44</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>constexpr const Vector2&lt; Float &gt;</type>
      <name>xy</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector3.html</anchorfile>
      <anchor>ae958b56a59c356d53711b616c15373ae</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static constexpr Vector3&lt; Float &gt;</type>
      <name>xAxis</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector3.html</anchorfile>
      <anchor>a922be261842df8d174cdcfe1e1eb72da</anchor>
      <arglist>(Float length=Float(1))</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static constexpr Vector3&lt; Float &gt;</type>
      <name>yAxis</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector3.html</anchorfile>
      <anchor>a49a18966ee5980786f9e42162febf82f</anchor>
      <arglist>(Float length=Float(1))</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static constexpr Vector3&lt; Float &gt;</type>
      <name>zAxis</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector3.html</anchorfile>
      <anchor>a9476a5845a4b28caa36c8cb75298f0db</anchor>
      <arglist>(Float length=Float(1))</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static constexpr Vector3&lt; Float &gt;</type>
      <name>xScale</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector3.html</anchorfile>
      <anchor>a2272fdcf3efb0aa0ea7c79e1927c5b91</anchor>
      <arglist>(Float scale)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static constexpr Vector3&lt; Float &gt;</type>
      <name>yScale</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector3.html</anchorfile>
      <anchor>a84688a819f616d059d472e92c6f80f54</anchor>
      <arglist>(Float scale)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static constexpr Vector3&lt; Float &gt;</type>
      <name>zScale</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector3.html</anchorfile>
      <anchor>ada1b75b4ea58dfe1771d0593e8c2e071</anchor>
      <arglist>(Float scale)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Vector3&lt; Float &gt;</type>
      <name>cross</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector3.html</anchorfile>
      <anchor>a03306665111e6ac30efa8f76103fbf5b</anchor>
      <arglist>(const Vector3&lt; Float &gt; &amp;a, const Vector3&lt; Float &gt; &amp;b)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Vector3&lt; Int &gt;</name>
    <filename>classMagnum_1_1Math_1_1Vector3.html</filename>
    <base>Vector&lt; 3, Int &gt;</base>
    <member kind="function">
      <type>constexpr</type>
      <name>Vector3</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector3.html</anchorfile>
      <anchor>adda67d067f2efe9554e0ee7fe251175d</anchor>
      <arglist>(ZeroInitT=ZeroInit) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Vector3</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector3.html</anchorfile>
      <anchor>a68b81fc43343ea75bb6bd4c705aea7e0</anchor>
      <arglist>(NoInitT) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Vector3</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector3.html</anchorfile>
      <anchor>a61a987b9bd7ae821f95fbe67d4d3a60b</anchor>
      <arglist>(Int value) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Vector3</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector3.html</anchorfile>
      <anchor>ae802b9e422b70b200a70b7c8f40625dc</anchor>
      <arglist>(Int x, Int y, Int z) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Vector3</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector3.html</anchorfile>
      <anchor>a75ef10a3f27446ff9bd02b1dd1b5f58d</anchor>
      <arglist>(const Vector2&lt; Int &gt; &amp;xy, Int z) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Vector3</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector3.html</anchorfile>
      <anchor>a779b7e5a6262b2cfd9577414dc63c716</anchor>
      <arglist>(const Vector&lt; 3, U &gt; &amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Vector3</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector3.html</anchorfile>
      <anchor>a058879e4b043bcd45e4387f5051619cb</anchor>
      <arglist>(const U &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Vector3</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector3.html</anchorfile>
      <anchor>a25e3da8ce96c645cf2a782305a2b12a5</anchor>
      <arglist>(const Vector&lt; 3, Int &gt; &amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type>Int &amp;</type>
      <name>x</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector3.html</anchorfile>
      <anchor>a30c538699bff804fb2fb205e1e30d207</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>constexpr Int</type>
      <name>x</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector3.html</anchorfile>
      <anchor>a67588136815bf00c81e5fbd4cbce17dd</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Int &amp;</type>
      <name>y</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector3.html</anchorfile>
      <anchor>ae51e27f72cf5db9142a8761a4dce56fd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>constexpr Int</type>
      <name>y</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector3.html</anchorfile>
      <anchor>aafc310504776bb057d9af029148df55a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Int &amp;</type>
      <name>z</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector3.html</anchorfile>
      <anchor>a194609d99092b9f3443208f355c685ff</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>constexpr Int</type>
      <name>z</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector3.html</anchorfile>
      <anchor>a1fe14f31a055c41fa80723ee815ce0c4</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Int &amp;</type>
      <name>r</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector3.html</anchorfile>
      <anchor>a4b90a303fe009795f5a48214da862be9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>constexpr Int</type>
      <name>r</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector3.html</anchorfile>
      <anchor>a4f25498c9ebaf5b762ff59dc2b9e2c6c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Int &amp;</type>
      <name>g</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector3.html</anchorfile>
      <anchor>a5635d89362bf6559fb014d0ecabc6813</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>constexpr Int</type>
      <name>g</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector3.html</anchorfile>
      <anchor>a212835360c56b8a1f1baa086f469551d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Int &amp;</type>
      <name>b</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector3.html</anchorfile>
      <anchor>a240568b4069ed8aabd9eb7bba3d4a8d2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>constexpr Int</type>
      <name>b</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector3.html</anchorfile>
      <anchor>ac0206c89f4d1759986bf852c8958d075</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector2&lt; Int &gt; &amp;</type>
      <name>xy</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector3.html</anchorfile>
      <anchor>aedf182498210bb6999346591599ffb44</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>constexpr const Vector2&lt; Int &gt;</type>
      <name>xy</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector3.html</anchorfile>
      <anchor>ae958b56a59c356d53711b616c15373ae</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static constexpr Vector3&lt; Int &gt;</type>
      <name>xAxis</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector3.html</anchorfile>
      <anchor>a922be261842df8d174cdcfe1e1eb72da</anchor>
      <arglist>(Int length=Int(1))</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static constexpr Vector3&lt; Int &gt;</type>
      <name>yAxis</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector3.html</anchorfile>
      <anchor>a49a18966ee5980786f9e42162febf82f</anchor>
      <arglist>(Int length=Int(1))</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static constexpr Vector3&lt; Int &gt;</type>
      <name>zAxis</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector3.html</anchorfile>
      <anchor>a9476a5845a4b28caa36c8cb75298f0db</anchor>
      <arglist>(Int length=Int(1))</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static constexpr Vector3&lt; Int &gt;</type>
      <name>xScale</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector3.html</anchorfile>
      <anchor>a2272fdcf3efb0aa0ea7c79e1927c5b91</anchor>
      <arglist>(Int scale)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static constexpr Vector3&lt; Int &gt;</type>
      <name>yScale</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector3.html</anchorfile>
      <anchor>a84688a819f616d059d472e92c6f80f54</anchor>
      <arglist>(Int scale)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static constexpr Vector3&lt; Int &gt;</type>
      <name>zScale</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector3.html</anchorfile>
      <anchor>ada1b75b4ea58dfe1771d0593e8c2e071</anchor>
      <arglist>(Int scale)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Vector3&lt; Int &gt;</type>
      <name>cross</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector3.html</anchorfile>
      <anchor>a03306665111e6ac30efa8f76103fbf5b</anchor>
      <arglist>(const Vector3&lt; Int &gt; &amp;a, const Vector3&lt; Int &gt; &amp;b)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Vector4&lt; Float &gt;</name>
    <filename>classMagnum_1_1Math_1_1Vector4.html</filename>
    <base>Vector&lt; 4, Float &gt;</base>
    <member kind="function">
      <type>constexpr</type>
      <name>Vector4</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector4.html</anchorfile>
      <anchor>a858a8009a77b9b4743cbbb72ef6e4c00</anchor>
      <arglist>(ZeroInitT=ZeroInit) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Vector4</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector4.html</anchorfile>
      <anchor>ae6892ff7c3ed4626ea99b73f29bc9235</anchor>
      <arglist>(NoInitT) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Vector4</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector4.html</anchorfile>
      <anchor>ac311a28a30f9ce485a2a61f18c4c801b</anchor>
      <arglist>(Float value) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Vector4</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector4.html</anchorfile>
      <anchor>a71c9a0ed0b5b185672501fca3c51a98c</anchor>
      <arglist>(Float x, Float y, Float z, Float w) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Vector4</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector4.html</anchorfile>
      <anchor>aff20895adccd77f096e8a454533312a6</anchor>
      <arglist>(const Vector3&lt; Float &gt; &amp;xyz, Float w) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Vector4</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector4.html</anchorfile>
      <anchor>ab00c86b71d9bb66d4216b31b3b5b86cf</anchor>
      <arglist>(const Vector&lt; 4, U &gt; &amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Vector4</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector4.html</anchorfile>
      <anchor>a485318584ef67c13775b2885efb31671</anchor>
      <arglist>(const U &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Vector4</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector4.html</anchorfile>
      <anchor>a99ad9f8b03a4a5db2bafdd38d0bf820b</anchor>
      <arglist>(const Vector&lt; 4, Float &gt; &amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type>Float &amp;</type>
      <name>x</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector4.html</anchorfile>
      <anchor>a44cc44ad96da15bf040b711fc433c68e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>constexpr Float</type>
      <name>x</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector4.html</anchorfile>
      <anchor>a1d0135600f09946a0012f40955a978c9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Float &amp;</type>
      <name>y</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector4.html</anchorfile>
      <anchor>a36379d5ad3bf107bae1350b79053162b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>constexpr Float</type>
      <name>y</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector4.html</anchorfile>
      <anchor>a7d6e8ed01599c959d6110a038a9972ec</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Float &amp;</type>
      <name>z</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector4.html</anchorfile>
      <anchor>a2ca432de620e30419826ab63d01dc11e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>constexpr Float</type>
      <name>z</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector4.html</anchorfile>
      <anchor>ac46deee3786ea4c96a1523ed19d771ee</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Float &amp;</type>
      <name>w</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector4.html</anchorfile>
      <anchor>a7d629f87754fb6f3c588594c4bf23f6a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>constexpr Float</type>
      <name>w</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector4.html</anchorfile>
      <anchor>af36c343491d223a1a59f32a3647fe2d5</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Float &amp;</type>
      <name>r</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector4.html</anchorfile>
      <anchor>a63f020a0b0efecc40b7e77a6a5c8faab</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>constexpr Float</type>
      <name>r</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector4.html</anchorfile>
      <anchor>a5f033d194de83498996d9e06acadfa27</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Float &amp;</type>
      <name>g</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector4.html</anchorfile>
      <anchor>a0a4427077479ae52b3d208e15c0e915f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>constexpr Float</type>
      <name>g</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector4.html</anchorfile>
      <anchor>a52328b1737e3fb03f99877fae64dc4c1</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Float &amp;</type>
      <name>b</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector4.html</anchorfile>
      <anchor>aa6d70fccd810e231fe5b8917d2ce0ab4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>constexpr Float</type>
      <name>b</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector4.html</anchorfile>
      <anchor>aa04b6ac15e1a1eafd75276db3083d0b7</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Float &amp;</type>
      <name>a</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector4.html</anchorfile>
      <anchor>ac18be154bdf0d5a6c52f6dbcd1a33139</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>constexpr Float</type>
      <name>a</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector4.html</anchorfile>
      <anchor>a86570dd2f007e80ea2289caaafe3422d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector3&lt; Float &gt; &amp;</type>
      <name>xyz</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector4.html</anchorfile>
      <anchor>a22aae9d118103c82fb5411b8c5616d62</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>constexpr const Vector3&lt; Float &gt;</type>
      <name>xyz</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector4.html</anchorfile>
      <anchor>ad353c205bf4adeec70a8203206c1010a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector3&lt; Float &gt; &amp;</type>
      <name>rgb</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector4.html</anchorfile>
      <anchor>aa731470df39b494e1c65f6d12a2551fd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>constexpr const Vector3&lt; Float &gt;</type>
      <name>rgb</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector4.html</anchorfile>
      <anchor>ab097fac7538e99875fecf7aa94e551cb</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector2&lt; Float &gt; &amp;</type>
      <name>xy</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector4.html</anchorfile>
      <anchor>a3325cd512caa0c56c49bb74a022dc965</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>constexpr const Vector2&lt; Float &gt;</type>
      <name>xy</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector4.html</anchorfile>
      <anchor>a772dd8abb03d74d42a88de7b6db48aee</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static constexpr Vector4&lt; Float &gt;</type>
      <name>pad</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector4.html</anchorfile>
      <anchor>a2ffd1bba90fe992a80655bb192075d4c</anchor>
      <arglist>(const Vector&lt; otherSize, Float &gt; &amp;a, Float xyz, Float w)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Vector&lt; 2, Float &gt;</name>
    <filename>classMagnum_1_1Math_1_1Vector.html</filename>
    <member kind="typedef">
      <type>Float</type>
      <name>Type</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a799a265eb81bc32c08a88cedfa104879</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Size</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a5bea718d1a6ae8731ff2abe60169cc73a2743ca2e6cd2d98e8248e18a7bfc0b32</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>Float</type>
      <name>dot</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a27cd08ebde959f77b5f95a25b4e4c433</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Vector</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>aef609f61883287f2da4754a7d194d1c9</anchor>
      <arglist>(ZeroInitT=ZeroInit) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Vector</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>ac4607314a44afd4d55f5a8fba1c6cde6</anchor>
      <arglist>(NoInitT) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Vector</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a18ebfc260c5d7553780314ba223c450e</anchor>
      <arglist>(Float first, U...next) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Vector</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>abc0b3737f4be19d7fca3c0c928d10269</anchor>
      <arglist>(Float value) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Vector</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a87d5b00ae87e9ebc62fb6a1f6c89e88c</anchor>
      <arglist>(const Vector&lt; size, U &gt; &amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Vector</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>ad12afa60a22bbfad159641d28515e63d</anchor>
      <arglist>(const U &amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Vector</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a0a29fb87300604a5b09eca4d6e832450</anchor>
      <arglist>(const Vector&lt; size, Float &gt; &amp;) noexcept=default</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>operator U</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a7ea21e43819d2c24a40d4bdbe4c732ec</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Float *</type>
      <name>data</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a3c8693d13c4bb5c98fda71953ea23e1b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>constexpr const Float *</type>
      <name>data</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>aa499f6ed07b06982bf1881bc3df4d75f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Float &amp;</type>
      <name>operator[]</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>af1fb6b30bdaf2fb2ebeeae5fcceae660</anchor>
      <arglist>(std::size_t pos)</arglist>
    </member>
    <member kind="function">
      <type>constexpr Float</type>
      <name>operator[]</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>af7a1c0969aea6861334031dd21df3aeb</anchor>
      <arglist>(std::size_t pos) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a919d88c687a64fbf439add184fd83e26</anchor>
      <arglist>(const Vector&lt; size, Float &gt; &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a012b1b785d237f267f01b5eab1128795</anchor>
      <arglist>(const Vector&lt; size, Float &gt; &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>BoolVector&lt; size &gt;</type>
      <name>operator&lt;</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>ade479b15513d5fe5e3e77b58255140a5</anchor>
      <arglist>(const Vector&lt; size, Float &gt; &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>BoolVector&lt; size &gt;</type>
      <name>operator&lt;=</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a98eca28be48e27ce39f71780a1b08b53</anchor>
      <arglist>(const Vector&lt; size, Float &gt; &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>BoolVector&lt; size &gt;</type>
      <name>operator&gt;=</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>af357da6a5a72afa948dfa36b928e81d7</anchor>
      <arglist>(const Vector&lt; size, Float &gt; &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>BoolVector&lt; size &gt;</type>
      <name>operator&gt;</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a81d67cccc8c178c8dbbc62785ff8ce52</anchor>
      <arglist>(const Vector&lt; size, Float &gt; &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isZero</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a2cf5ab65f37c0c87f894acaa88704fc4</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isNormalized</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a90e3bf3dddebb3e57d1ebf62d4e1e394</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Float &gt;</type>
      <name>operator-</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a2384a93655f0e39fbbf54891634167c9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Float &gt;</type>
      <name>operator-</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>af2dafe1a15e8cd4588d03e6ae844aa6d</anchor>
      <arglist>(const Vector&lt; size, Float &gt; &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Float &gt; &amp;</type>
      <name>operator+=</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>ac0d2c99872bab8dfecdd3e09667c7292</anchor>
      <arglist>(const Vector&lt; size, Float &gt; &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Float &gt;</type>
      <name>operator+</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a91f951330a2e574eb22eba396785cf75</anchor>
      <arglist>(const Vector&lt; size, Float &gt; &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Float &gt; &amp;</type>
      <name>operator-=</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a2879e6a7da21fb210a32731b085e8db4</anchor>
      <arglist>(const Vector&lt; size, Float &gt; &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Float &gt; &amp;</type>
      <name>operator*=</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>acf36c1445de24bd87912f0a107e51d5b</anchor>
      <arglist>(Float number)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Float &gt; &amp;</type>
      <name>operator*=</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a212500235cc0ef744d7a0b9e1d443156</anchor>
      <arglist>(const Vector&lt; size, Float &gt; &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Float &gt;</type>
      <name>operator*</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>acb266b5c55a30d7cd871a5c07de8bba4</anchor>
      <arglist>(Float number) const</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Float &gt;</type>
      <name>operator*</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>adb264b0fa9decead346d8ad55ea27156</anchor>
      <arglist>(const Vector&lt; size, Float &gt; &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Float &gt; &amp;</type>
      <name>operator/=</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>acdea6a05fcd2c83f44107294a436c82a</anchor>
      <arglist>(Float number)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Float &gt; &amp;</type>
      <name>operator/=</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>afc091891a46419127de515a9714ed9ef</anchor>
      <arglist>(const Vector&lt; size, Float &gt; &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Float &gt;</type>
      <name>operator/</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>aac7cb85a8c6c9018536a7cc3a88c52aa</anchor>
      <arglist>(Float number) const</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Float &gt;</type>
      <name>operator/</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a453483612a7d579a160ce854d42052c6</anchor>
      <arglist>(const Vector&lt; size, Float &gt; &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>Float</type>
      <name>length</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>ab4e8d3ce060ec466ce084f01d2d88c14</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Float</type>
      <name>lengthInverted</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a04f15a7423d2a4f144afb0266844463a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Float &gt;</type>
      <name>normalized</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>aa1678ce501cc313b3432c49ed8eb033c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Float &gt;</type>
      <name>resized</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a0a48a0a0ceff711ff667453721cb6f5f</anchor>
      <arglist>(Float length) const</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Float &gt;</type>
      <name>projected</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a0ee82cf43c67f4a0bcca58b13ae39a96</anchor>
      <arglist>(const Vector&lt; size, Float &gt; &amp;line) const</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Float &gt;</type>
      <name>projectedOntoNormalized</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a91d96dda853b90e29891003ebc394ad5</anchor>
      <arglist>(const Vector&lt; size, Float &gt; &amp;line) const</arglist>
    </member>
    <member kind="function">
      <type>constexpr Vector&lt; size, Float &gt;</type>
      <name>flipped</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a2f11ab0253d3d99574af9e4e4875dc26</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Float</type>
      <name>sum</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a28add84fe498a71e46d422b9ba31bb84</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Float</type>
      <name>product</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a001c2ede68e794a2b3648004a3b712af</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Float</type>
      <name>min</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>af029f9f7810201f0bd8d9580af273bde</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Float</type>
      <name>max</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a0e5e9bb60ceb49f00569ec9a919e025a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::pair&lt; Float, Float &gt;</type>
      <name>minmax</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a958d3a01ab7b3a416d9d051b23bdee85</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Vector&lt; size, Float &gt; &amp;</type>
      <name>from</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>abe9b9bbf9d5a2fdaca278cfab504cbe0</anchor>
      <arglist>(Float *data)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const Vector&lt; size, Float &gt; &amp;</type>
      <name>from</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a3f9691a1ce7d74a1a59867673f2324e3</anchor>
      <arglist>(const Float *data)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static constexpr Vector&lt; size, Float &gt;</type>
      <name>pad</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>acfc88ca9f6c47b731a90ef0e1d8ec8c0</anchor>
      <arglist>(const Vector&lt; otherSize, Float &gt; &amp;a, Float value=Float(0))</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Float</type>
      <name>dot</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>af9737bbef2c4c895dfb6f2bdc6426d72</anchor>
      <arglist>(const Vector&lt; size, Float &gt; &amp;a, const Vector&lt; size, Float &gt; &amp;b)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Rad&lt; Float &gt;</type>
      <name>angle</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a8d15d1f369cbb4543d1bd73d7c24f8a8</anchor>
      <arglist>(const Vector&lt; size, Float &gt; &amp;normalizedA, const Vector&lt; size, Float &gt; &amp;normalizedB)</arglist>
    </member>
    <member kind="function">
      <type>Float</type>
      <name>dot</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>afcea7c945bee7d210d66d1a47d85944d</anchor>
      <arglist>(const Vector&lt; size, Float &gt; &amp;a, const Vector&lt; size, Float &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>Rad&lt; Float &gt;</type>
      <name>angle</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a754897e5423279be34bfaba81777e51c</anchor>
      <arglist>(const Vector&lt; size, Float &gt; &amp;normalizedA, const Vector&lt; size, Float &gt; &amp;normalizedB)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt; &amp;</type>
      <name>operator*=</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>aeb4ed8ac931963834097f37248a43a38</anchor>
      <arglist>(Vector&lt; size, Integral &gt; &amp;vector, FloatingPoint number)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt; &amp;</type>
      <name>operator*=</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a118fb08966b961aafa620802ab232b90</anchor>
      <arglist>(Vector&lt; size, Integral &gt; &amp;a, const Vector&lt; size, FloatingPoint &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Float &gt;</type>
      <name>operator*</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a00e2b338cabfb20cbaf475bc4a74fe5a</anchor>
      <arglist>(Float number, const Vector&lt; size, Float &gt; &amp;vector)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt;</type>
      <name>operator*</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a951d0c686b0e14fc4b2c20cdd6c01dfc</anchor>
      <arglist>(const Vector&lt; size, Integral &gt; &amp;vector, FloatingPoint number)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt;</type>
      <name>operator*</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a2dd6210e8bfbcd1306eaecb9ca999c9d</anchor>
      <arglist>(FloatingPoint number, const Vector&lt; size, Integral &gt; &amp;vector)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt;</type>
      <name>operator*</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a4ca332f0533a3e7577a44495d91b6e74</anchor>
      <arglist>(const Vector&lt; size, Integral &gt; &amp;a, const Vector&lt; size, FloatingPoint &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt;</type>
      <name>operator*</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a6e8e1bd5f68c4bdc2aa32c77acd11791</anchor>
      <arglist>(const Vector&lt; size, FloatingPoint &gt; &amp;a, const Vector&lt; size, Integral &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt; &amp;</type>
      <name>operator/=</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a8ff1ad5c99830e1f120e027119013624</anchor>
      <arglist>(Vector&lt; size, Integral &gt; &amp;vector, FloatingPoint number)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt; &amp;</type>
      <name>operator/=</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a5877523931df8f205ff225d7580088f8</anchor>
      <arglist>(Vector&lt; size, Integral &gt; &amp;a, const Vector&lt; size, FloatingPoint &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Float &gt;</type>
      <name>operator/</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>ac602863261ec1a6ff02fe1ec5bffad37</anchor>
      <arglist>(Float number, const Vector&lt; size, Float &gt; &amp;vector)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt;</type>
      <name>operator/</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a790689ac947bedb3f294ebfc9aeb686a</anchor>
      <arglist>(const Vector&lt; size, Integral &gt; &amp;vector, FloatingPoint number)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt;</type>
      <name>operator/</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a1da0ed702e57e8ec6464e474497913d8</anchor>
      <arglist>(const Vector&lt; size, Integral &gt; &amp;a, const Vector&lt; size, FloatingPoint &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt; &amp;</type>
      <name>operator%=</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>ade632882b22533924e5dcd2c8b3f44a1</anchor>
      <arglist>(Vector&lt; size, Integral &gt; &amp;a, Integral b)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt; &amp;</type>
      <name>operator%=</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a4a51f33fcbcdb59bc27313898d069769</anchor>
      <arglist>(Vector&lt; size, Integral &gt; &amp;a, const Vector&lt; size, Integral &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt;</type>
      <name>operator%</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a4d5f66e2c273e6ddd6f5d97410778980</anchor>
      <arglist>(const Vector&lt; size, Integral &gt; &amp;a, Integral b)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt;</type>
      <name>operator%</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>ae757e71a5675609a908ba245919d7b5c</anchor>
      <arglist>(const Vector&lt; size, Integral &gt; &amp;a, const Vector&lt; size, Integral &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt;</type>
      <name>operator~</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a00411ab4b5b07889daa66f136426b4ea</anchor>
      <arglist>(const Vector&lt; size, Integral &gt; &amp;vector)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt; &amp;</type>
      <name>operator&amp;=</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a3b78d1d2ce3be67ea17653af50d19619</anchor>
      <arglist>(Vector&lt; size, Integral &gt; &amp;a, const Vector&lt; size, Integral &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt;</type>
      <name>operator&amp;</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a0238714e940497dcaea6d382a0414d6a</anchor>
      <arglist>(const Vector&lt; size, Integral &gt; &amp;a, const Vector&lt; size, Integral &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt; &amp;</type>
      <name>operator|=</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a5df02285d88aba20bd36f6d4b8ac3c7c</anchor>
      <arglist>(Vector&lt; size, Integral &gt; &amp;a, const Vector&lt; size, Integral &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt;</type>
      <name>operator|</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>ac012aaff8d2971cb052a5dd9a526be2a</anchor>
      <arglist>(const Vector&lt; size, Integral &gt; &amp;a, const Vector&lt; size, Integral &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt; &amp;</type>
      <name>operator^=</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>af87d3deaa8742d561764bec080dbc191</anchor>
      <arglist>(Vector&lt; size, Integral &gt; &amp;a, const Vector&lt; size, Integral &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt;</type>
      <name>operator^</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>af0c70565adfae8fefcdc9e2f204802df</anchor>
      <arglist>(const Vector&lt; size, Integral &gt; &amp;a, const Vector&lt; size, Integral &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt; &amp;</type>
      <name>operator&lt;&lt;=</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a701d71a72018077de086cbacb7af8cde</anchor>
      <arglist>(Vector&lt; size, Integral &gt; &amp;vector, Integral shift)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a36525d8e60373fca36eee6d299daac1f</anchor>
      <arglist>(const Vector&lt; size, Integral &gt; &amp;vector, Integral shift)</arglist>
    </member>
    <member kind="function">
      <type>Corrade::Utility::Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a342462ce2d3144347242b0c1b0eb2613</anchor>
      <arglist>(Corrade::Utility::Debug &amp;debug, const Vector&lt; size, Float &gt; &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt; &amp;</type>
      <name>operator&gt;&gt;=</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>ab1a92b51f3a3ac5ee700196a370a28d0</anchor>
      <arglist>(Vector&lt; size, Integral &gt; &amp;vector, Integral shift)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt;</type>
      <name>operator&gt;&gt;</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a08e4344912fb1df2eafbe4f322c128cd</anchor>
      <arglist>(const Vector&lt; size, Integral &gt; &amp;vector, Integral shift)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Vector&lt; 2, Int &gt;</name>
    <filename>classMagnum_1_1Math_1_1Vector.html</filename>
    <member kind="typedef">
      <type>Int</type>
      <name>Type</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a799a265eb81bc32c08a88cedfa104879</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Size</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a5bea718d1a6ae8731ff2abe60169cc73a2743ca2e6cd2d98e8248e18a7bfc0b32</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>Int</type>
      <name>dot</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a27cd08ebde959f77b5f95a25b4e4c433</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Vector</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>aef609f61883287f2da4754a7d194d1c9</anchor>
      <arglist>(ZeroInitT=ZeroInit) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Vector</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>ac4607314a44afd4d55f5a8fba1c6cde6</anchor>
      <arglist>(NoInitT) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Vector</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a18ebfc260c5d7553780314ba223c450e</anchor>
      <arglist>(Int first, U...next) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Vector</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>abc0b3737f4be19d7fca3c0c928d10269</anchor>
      <arglist>(Int value) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Vector</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a87d5b00ae87e9ebc62fb6a1f6c89e88c</anchor>
      <arglist>(const Vector&lt; size, U &gt; &amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Vector</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>ad12afa60a22bbfad159641d28515e63d</anchor>
      <arglist>(const U &amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Vector</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a0a29fb87300604a5b09eca4d6e832450</anchor>
      <arglist>(const Vector&lt; size, Int &gt; &amp;) noexcept=default</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>operator U</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a7ea21e43819d2c24a40d4bdbe4c732ec</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Int *</type>
      <name>data</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a3c8693d13c4bb5c98fda71953ea23e1b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>constexpr const Int *</type>
      <name>data</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>aa499f6ed07b06982bf1881bc3df4d75f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Int &amp;</type>
      <name>operator[]</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>af1fb6b30bdaf2fb2ebeeae5fcceae660</anchor>
      <arglist>(std::size_t pos)</arglist>
    </member>
    <member kind="function">
      <type>constexpr Int</type>
      <name>operator[]</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>af7a1c0969aea6861334031dd21df3aeb</anchor>
      <arglist>(std::size_t pos) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a919d88c687a64fbf439add184fd83e26</anchor>
      <arglist>(const Vector&lt; size, Int &gt; &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a012b1b785d237f267f01b5eab1128795</anchor>
      <arglist>(const Vector&lt; size, Int &gt; &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>BoolVector&lt; size &gt;</type>
      <name>operator&lt;</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>ade479b15513d5fe5e3e77b58255140a5</anchor>
      <arglist>(const Vector&lt; size, Int &gt; &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>BoolVector&lt; size &gt;</type>
      <name>operator&lt;=</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a98eca28be48e27ce39f71780a1b08b53</anchor>
      <arglist>(const Vector&lt; size, Int &gt; &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>BoolVector&lt; size &gt;</type>
      <name>operator&gt;=</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>af357da6a5a72afa948dfa36b928e81d7</anchor>
      <arglist>(const Vector&lt; size, Int &gt; &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>BoolVector&lt; size &gt;</type>
      <name>operator&gt;</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a81d67cccc8c178c8dbbc62785ff8ce52</anchor>
      <arglist>(const Vector&lt; size, Int &gt; &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isZero</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a2cf5ab65f37c0c87f894acaa88704fc4</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isNormalized</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a90e3bf3dddebb3e57d1ebf62d4e1e394</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Int &gt;</type>
      <name>operator-</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a2384a93655f0e39fbbf54891634167c9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Int &gt;</type>
      <name>operator-</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>af2dafe1a15e8cd4588d03e6ae844aa6d</anchor>
      <arglist>(const Vector&lt; size, Int &gt; &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Int &gt; &amp;</type>
      <name>operator+=</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>ac0d2c99872bab8dfecdd3e09667c7292</anchor>
      <arglist>(const Vector&lt; size, Int &gt; &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Int &gt;</type>
      <name>operator+</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a91f951330a2e574eb22eba396785cf75</anchor>
      <arglist>(const Vector&lt; size, Int &gt; &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Int &gt; &amp;</type>
      <name>operator-=</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a2879e6a7da21fb210a32731b085e8db4</anchor>
      <arglist>(const Vector&lt; size, Int &gt; &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Int &gt; &amp;</type>
      <name>operator*=</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>acf36c1445de24bd87912f0a107e51d5b</anchor>
      <arglist>(Int number)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Int &gt; &amp;</type>
      <name>operator*=</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a212500235cc0ef744d7a0b9e1d443156</anchor>
      <arglist>(const Vector&lt; size, Int &gt; &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Int &gt;</type>
      <name>operator*</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>acb266b5c55a30d7cd871a5c07de8bba4</anchor>
      <arglist>(Int number) const</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Int &gt;</type>
      <name>operator*</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>adb264b0fa9decead346d8ad55ea27156</anchor>
      <arglist>(const Vector&lt; size, Int &gt; &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Int &gt; &amp;</type>
      <name>operator/=</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>acdea6a05fcd2c83f44107294a436c82a</anchor>
      <arglist>(Int number)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Int &gt; &amp;</type>
      <name>operator/=</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>afc091891a46419127de515a9714ed9ef</anchor>
      <arglist>(const Vector&lt; size, Int &gt; &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Int &gt;</type>
      <name>operator/</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>aac7cb85a8c6c9018536a7cc3a88c52aa</anchor>
      <arglist>(Int number) const</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Int &gt;</type>
      <name>operator/</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a453483612a7d579a160ce854d42052c6</anchor>
      <arglist>(const Vector&lt; size, Int &gt; &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>Int</type>
      <name>length</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>ab4e8d3ce060ec466ce084f01d2d88c14</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Int</type>
      <name>lengthInverted</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a04f15a7423d2a4f144afb0266844463a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Int &gt;</type>
      <name>normalized</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>aa1678ce501cc313b3432c49ed8eb033c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Int &gt;</type>
      <name>resized</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a0a48a0a0ceff711ff667453721cb6f5f</anchor>
      <arglist>(Int length) const</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Int &gt;</type>
      <name>projected</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a0ee82cf43c67f4a0bcca58b13ae39a96</anchor>
      <arglist>(const Vector&lt; size, Int &gt; &amp;line) const</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Int &gt;</type>
      <name>projectedOntoNormalized</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a91d96dda853b90e29891003ebc394ad5</anchor>
      <arglist>(const Vector&lt; size, Int &gt; &amp;line) const</arglist>
    </member>
    <member kind="function">
      <type>constexpr Vector&lt; size, Int &gt;</type>
      <name>flipped</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a2f11ab0253d3d99574af9e4e4875dc26</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Int</type>
      <name>sum</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a28add84fe498a71e46d422b9ba31bb84</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Int</type>
      <name>product</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a001c2ede68e794a2b3648004a3b712af</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Int</type>
      <name>min</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>af029f9f7810201f0bd8d9580af273bde</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Int</type>
      <name>max</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a0e5e9bb60ceb49f00569ec9a919e025a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::pair&lt; Int, Int &gt;</type>
      <name>minmax</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a958d3a01ab7b3a416d9d051b23bdee85</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Vector&lt; size, Int &gt; &amp;</type>
      <name>from</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>abe9b9bbf9d5a2fdaca278cfab504cbe0</anchor>
      <arglist>(Int *data)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const Vector&lt; size, Int &gt; &amp;</type>
      <name>from</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a3f9691a1ce7d74a1a59867673f2324e3</anchor>
      <arglist>(const Int *data)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static constexpr Vector&lt; size, Int &gt;</type>
      <name>pad</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>acfc88ca9f6c47b731a90ef0e1d8ec8c0</anchor>
      <arglist>(const Vector&lt; otherSize, Int &gt; &amp;a, Int value=Int(0))</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Int</type>
      <name>dot</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>af9737bbef2c4c895dfb6f2bdc6426d72</anchor>
      <arglist>(const Vector&lt; size, Int &gt; &amp;a, const Vector&lt; size, Int &gt; &amp;b)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Rad&lt; Int &gt;</type>
      <name>angle</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a8d15d1f369cbb4543d1bd73d7c24f8a8</anchor>
      <arglist>(const Vector&lt; size, Int &gt; &amp;normalizedA, const Vector&lt; size, Int &gt; &amp;normalizedB)</arglist>
    </member>
    <member kind="function">
      <type>Int</type>
      <name>dot</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>afcea7c945bee7d210d66d1a47d85944d</anchor>
      <arglist>(const Vector&lt; size, Int &gt; &amp;a, const Vector&lt; size, Int &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>Rad&lt; Int &gt;</type>
      <name>angle</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a754897e5423279be34bfaba81777e51c</anchor>
      <arglist>(const Vector&lt; size, Int &gt; &amp;normalizedA, const Vector&lt; size, Int &gt; &amp;normalizedB)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt; &amp;</type>
      <name>operator*=</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>aeb4ed8ac931963834097f37248a43a38</anchor>
      <arglist>(Vector&lt; size, Integral &gt; &amp;vector, FloatingPoint number)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt; &amp;</type>
      <name>operator*=</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a118fb08966b961aafa620802ab232b90</anchor>
      <arglist>(Vector&lt; size, Integral &gt; &amp;a, const Vector&lt; size, FloatingPoint &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Int &gt;</type>
      <name>operator*</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a00e2b338cabfb20cbaf475bc4a74fe5a</anchor>
      <arglist>(Int number, const Vector&lt; size, Int &gt; &amp;vector)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt;</type>
      <name>operator*</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a951d0c686b0e14fc4b2c20cdd6c01dfc</anchor>
      <arglist>(const Vector&lt; size, Integral &gt; &amp;vector, FloatingPoint number)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt;</type>
      <name>operator*</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a2dd6210e8bfbcd1306eaecb9ca999c9d</anchor>
      <arglist>(FloatingPoint number, const Vector&lt; size, Integral &gt; &amp;vector)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt;</type>
      <name>operator*</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a4ca332f0533a3e7577a44495d91b6e74</anchor>
      <arglist>(const Vector&lt; size, Integral &gt; &amp;a, const Vector&lt; size, FloatingPoint &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt;</type>
      <name>operator*</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a6e8e1bd5f68c4bdc2aa32c77acd11791</anchor>
      <arglist>(const Vector&lt; size, FloatingPoint &gt; &amp;a, const Vector&lt; size, Integral &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt; &amp;</type>
      <name>operator/=</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a8ff1ad5c99830e1f120e027119013624</anchor>
      <arglist>(Vector&lt; size, Integral &gt; &amp;vector, FloatingPoint number)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt; &amp;</type>
      <name>operator/=</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a5877523931df8f205ff225d7580088f8</anchor>
      <arglist>(Vector&lt; size, Integral &gt; &amp;a, const Vector&lt; size, FloatingPoint &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Int &gt;</type>
      <name>operator/</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>ac602863261ec1a6ff02fe1ec5bffad37</anchor>
      <arglist>(Int number, const Vector&lt; size, Int &gt; &amp;vector)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt;</type>
      <name>operator/</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a790689ac947bedb3f294ebfc9aeb686a</anchor>
      <arglist>(const Vector&lt; size, Integral &gt; &amp;vector, FloatingPoint number)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt;</type>
      <name>operator/</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a1da0ed702e57e8ec6464e474497913d8</anchor>
      <arglist>(const Vector&lt; size, Integral &gt; &amp;a, const Vector&lt; size, FloatingPoint &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt; &amp;</type>
      <name>operator%=</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>ade632882b22533924e5dcd2c8b3f44a1</anchor>
      <arglist>(Vector&lt; size, Integral &gt; &amp;a, Integral b)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt; &amp;</type>
      <name>operator%=</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a4a51f33fcbcdb59bc27313898d069769</anchor>
      <arglist>(Vector&lt; size, Integral &gt; &amp;a, const Vector&lt; size, Integral &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt;</type>
      <name>operator%</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a4d5f66e2c273e6ddd6f5d97410778980</anchor>
      <arglist>(const Vector&lt; size, Integral &gt; &amp;a, Integral b)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt;</type>
      <name>operator%</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>ae757e71a5675609a908ba245919d7b5c</anchor>
      <arglist>(const Vector&lt; size, Integral &gt; &amp;a, const Vector&lt; size, Integral &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt;</type>
      <name>operator~</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a00411ab4b5b07889daa66f136426b4ea</anchor>
      <arglist>(const Vector&lt; size, Integral &gt; &amp;vector)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt; &amp;</type>
      <name>operator&amp;=</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a3b78d1d2ce3be67ea17653af50d19619</anchor>
      <arglist>(Vector&lt; size, Integral &gt; &amp;a, const Vector&lt; size, Integral &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt;</type>
      <name>operator&amp;</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a0238714e940497dcaea6d382a0414d6a</anchor>
      <arglist>(const Vector&lt; size, Integral &gt; &amp;a, const Vector&lt; size, Integral &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt; &amp;</type>
      <name>operator|=</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a5df02285d88aba20bd36f6d4b8ac3c7c</anchor>
      <arglist>(Vector&lt; size, Integral &gt; &amp;a, const Vector&lt; size, Integral &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt;</type>
      <name>operator|</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>ac012aaff8d2971cb052a5dd9a526be2a</anchor>
      <arglist>(const Vector&lt; size, Integral &gt; &amp;a, const Vector&lt; size, Integral &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt; &amp;</type>
      <name>operator^=</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>af87d3deaa8742d561764bec080dbc191</anchor>
      <arglist>(Vector&lt; size, Integral &gt; &amp;a, const Vector&lt; size, Integral &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt;</type>
      <name>operator^</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>af0c70565adfae8fefcdc9e2f204802df</anchor>
      <arglist>(const Vector&lt; size, Integral &gt; &amp;a, const Vector&lt; size, Integral &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt; &amp;</type>
      <name>operator&lt;&lt;=</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a701d71a72018077de086cbacb7af8cde</anchor>
      <arglist>(Vector&lt; size, Integral &gt; &amp;vector, Integral shift)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a36525d8e60373fca36eee6d299daac1f</anchor>
      <arglist>(const Vector&lt; size, Integral &gt; &amp;vector, Integral shift)</arglist>
    </member>
    <member kind="function">
      <type>Corrade::Utility::Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a342462ce2d3144347242b0c1b0eb2613</anchor>
      <arglist>(Corrade::Utility::Debug &amp;debug, const Vector&lt; size, Int &gt; &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt; &amp;</type>
      <name>operator&gt;&gt;=</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>ab1a92b51f3a3ac5ee700196a370a28d0</anchor>
      <arglist>(Vector&lt; size, Integral &gt; &amp;vector, Integral shift)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt;</type>
      <name>operator&gt;&gt;</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a08e4344912fb1df2eafbe4f322c128cd</anchor>
      <arglist>(const Vector&lt; size, Integral &gt; &amp;vector, Integral shift)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Vector&lt; 2, T &gt;</name>
    <filename>classMagnum_1_1Math_1_1Vector.html</filename>
    <member kind="typedef">
      <type>T</type>
      <name>Type</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a799a265eb81bc32c08a88cedfa104879</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Size</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a5bea718d1a6ae8731ff2abe60169cc73a2743ca2e6cd2d98e8248e18a7bfc0b32</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>dot</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a27cd08ebde959f77b5f95a25b4e4c433</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Vector</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>aef609f61883287f2da4754a7d194d1c9</anchor>
      <arglist>(ZeroInitT=ZeroInit) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Vector</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>ac4607314a44afd4d55f5a8fba1c6cde6</anchor>
      <arglist>(NoInitT) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Vector</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a18ebfc260c5d7553780314ba223c450e</anchor>
      <arglist>(T first, U...next) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Vector</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>abc0b3737f4be19d7fca3c0c928d10269</anchor>
      <arglist>(T value) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Vector</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a87d5b00ae87e9ebc62fb6a1f6c89e88c</anchor>
      <arglist>(const Vector&lt; size, U &gt; &amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Vector</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>ad12afa60a22bbfad159641d28515e63d</anchor>
      <arglist>(const U &amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Vector</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a0a29fb87300604a5b09eca4d6e832450</anchor>
      <arglist>(const Vector&lt; size, T &gt; &amp;) noexcept=default</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>operator U</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a7ea21e43819d2c24a40d4bdbe4c732ec</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>T *</type>
      <name>data</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a3c8693d13c4bb5c98fda71953ea23e1b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>constexpr const T *</type>
      <name>data</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>aa499f6ed07b06982bf1881bc3df4d75f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>T &amp;</type>
      <name>operator[]</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>af1fb6b30bdaf2fb2ebeeae5fcceae660</anchor>
      <arglist>(std::size_t pos)</arglist>
    </member>
    <member kind="function">
      <type>constexpr T</type>
      <name>operator[]</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>af7a1c0969aea6861334031dd21df3aeb</anchor>
      <arglist>(std::size_t pos) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a919d88c687a64fbf439add184fd83e26</anchor>
      <arglist>(const Vector&lt; size, T &gt; &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a012b1b785d237f267f01b5eab1128795</anchor>
      <arglist>(const Vector&lt; size, T &gt; &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>BoolVector&lt; size &gt;</type>
      <name>operator&lt;</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>ade479b15513d5fe5e3e77b58255140a5</anchor>
      <arglist>(const Vector&lt; size, T &gt; &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>BoolVector&lt; size &gt;</type>
      <name>operator&lt;=</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a98eca28be48e27ce39f71780a1b08b53</anchor>
      <arglist>(const Vector&lt; size, T &gt; &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>BoolVector&lt; size &gt;</type>
      <name>operator&gt;=</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>af357da6a5a72afa948dfa36b928e81d7</anchor>
      <arglist>(const Vector&lt; size, T &gt; &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>BoolVector&lt; size &gt;</type>
      <name>operator&gt;</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a81d67cccc8c178c8dbbc62785ff8ce52</anchor>
      <arglist>(const Vector&lt; size, T &gt; &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isZero</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a2cf5ab65f37c0c87f894acaa88704fc4</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isNormalized</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a90e3bf3dddebb3e57d1ebf62d4e1e394</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, T &gt;</type>
      <name>operator-</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a2384a93655f0e39fbbf54891634167c9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, T &gt;</type>
      <name>operator-</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>af2dafe1a15e8cd4588d03e6ae844aa6d</anchor>
      <arglist>(const Vector&lt; size, T &gt; &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, T &gt; &amp;</type>
      <name>operator+=</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>ac0d2c99872bab8dfecdd3e09667c7292</anchor>
      <arglist>(const Vector&lt; size, T &gt; &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, T &gt;</type>
      <name>operator+</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a91f951330a2e574eb22eba396785cf75</anchor>
      <arglist>(const Vector&lt; size, T &gt; &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, T &gt; &amp;</type>
      <name>operator-=</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a2879e6a7da21fb210a32731b085e8db4</anchor>
      <arglist>(const Vector&lt; size, T &gt; &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, T &gt; &amp;</type>
      <name>operator*=</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>acf36c1445de24bd87912f0a107e51d5b</anchor>
      <arglist>(T number)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, T &gt; &amp;</type>
      <name>operator*=</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a212500235cc0ef744d7a0b9e1d443156</anchor>
      <arglist>(const Vector&lt; size, T &gt; &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, T &gt;</type>
      <name>operator*</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>acb266b5c55a30d7cd871a5c07de8bba4</anchor>
      <arglist>(T number) const</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, T &gt;</type>
      <name>operator*</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>adb264b0fa9decead346d8ad55ea27156</anchor>
      <arglist>(const Vector&lt; size, T &gt; &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, T &gt; &amp;</type>
      <name>operator/=</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>acdea6a05fcd2c83f44107294a436c82a</anchor>
      <arglist>(T number)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, T &gt; &amp;</type>
      <name>operator/=</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>afc091891a46419127de515a9714ed9ef</anchor>
      <arglist>(const Vector&lt; size, T &gt; &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, T &gt;</type>
      <name>operator/</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>aac7cb85a8c6c9018536a7cc3a88c52aa</anchor>
      <arglist>(T number) const</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, T &gt;</type>
      <name>operator/</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a453483612a7d579a160ce854d42052c6</anchor>
      <arglist>(const Vector&lt; size, T &gt; &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>length</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>ab4e8d3ce060ec466ce084f01d2d88c14</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>lengthInverted</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a04f15a7423d2a4f144afb0266844463a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, T &gt;</type>
      <name>normalized</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>aa1678ce501cc313b3432c49ed8eb033c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, T &gt;</type>
      <name>resized</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a0a48a0a0ceff711ff667453721cb6f5f</anchor>
      <arglist>(T length) const</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, T &gt;</type>
      <name>projected</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a0ee82cf43c67f4a0bcca58b13ae39a96</anchor>
      <arglist>(const Vector&lt; size, T &gt; &amp;line) const</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, T &gt;</type>
      <name>projectedOntoNormalized</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a91d96dda853b90e29891003ebc394ad5</anchor>
      <arglist>(const Vector&lt; size, T &gt; &amp;line) const</arglist>
    </member>
    <member kind="function">
      <type>constexpr Vector&lt; size, T &gt;</type>
      <name>flipped</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a2f11ab0253d3d99574af9e4e4875dc26</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>sum</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a28add84fe498a71e46d422b9ba31bb84</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>product</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a001c2ede68e794a2b3648004a3b712af</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>min</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>af029f9f7810201f0bd8d9580af273bde</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>max</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a0e5e9bb60ceb49f00569ec9a919e025a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::pair&lt; T, T &gt;</type>
      <name>minmax</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a958d3a01ab7b3a416d9d051b23bdee85</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Vector&lt; size, T &gt; &amp;</type>
      <name>from</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>abe9b9bbf9d5a2fdaca278cfab504cbe0</anchor>
      <arglist>(T *data)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const Vector&lt; size, T &gt; &amp;</type>
      <name>from</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a3f9691a1ce7d74a1a59867673f2324e3</anchor>
      <arglist>(const T *data)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static constexpr Vector&lt; size, T &gt;</type>
      <name>pad</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>acfc88ca9f6c47b731a90ef0e1d8ec8c0</anchor>
      <arglist>(const Vector&lt; otherSize, T &gt; &amp;a, T value=T(0))</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static T</type>
      <name>dot</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>af9737bbef2c4c895dfb6f2bdc6426d72</anchor>
      <arglist>(const Vector&lt; size, T &gt; &amp;a, const Vector&lt; size, T &gt; &amp;b)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Rad&lt; T &gt;</type>
      <name>angle</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a8d15d1f369cbb4543d1bd73d7c24f8a8</anchor>
      <arglist>(const Vector&lt; size, T &gt; &amp;normalizedA, const Vector&lt; size, T &gt; &amp;normalizedB)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>dot</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>afcea7c945bee7d210d66d1a47d85944d</anchor>
      <arglist>(const Vector&lt; size, T &gt; &amp;a, const Vector&lt; size, T &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>Rad&lt; T &gt;</type>
      <name>angle</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a754897e5423279be34bfaba81777e51c</anchor>
      <arglist>(const Vector&lt; size, T &gt; &amp;normalizedA, const Vector&lt; size, T &gt; &amp;normalizedB)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt; &amp;</type>
      <name>operator*=</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>aeb4ed8ac931963834097f37248a43a38</anchor>
      <arglist>(Vector&lt; size, Integral &gt; &amp;vector, FloatingPoint number)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt; &amp;</type>
      <name>operator*=</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a118fb08966b961aafa620802ab232b90</anchor>
      <arglist>(Vector&lt; size, Integral &gt; &amp;a, const Vector&lt; size, FloatingPoint &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, T &gt;</type>
      <name>operator*</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a00e2b338cabfb20cbaf475bc4a74fe5a</anchor>
      <arglist>(T number, const Vector&lt; size, T &gt; &amp;vector)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt;</type>
      <name>operator*</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a951d0c686b0e14fc4b2c20cdd6c01dfc</anchor>
      <arglist>(const Vector&lt; size, Integral &gt; &amp;vector, FloatingPoint number)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt;</type>
      <name>operator*</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a2dd6210e8bfbcd1306eaecb9ca999c9d</anchor>
      <arglist>(FloatingPoint number, const Vector&lt; size, Integral &gt; &amp;vector)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt;</type>
      <name>operator*</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a4ca332f0533a3e7577a44495d91b6e74</anchor>
      <arglist>(const Vector&lt; size, Integral &gt; &amp;a, const Vector&lt; size, FloatingPoint &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt;</type>
      <name>operator*</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a6e8e1bd5f68c4bdc2aa32c77acd11791</anchor>
      <arglist>(const Vector&lt; size, FloatingPoint &gt; &amp;a, const Vector&lt; size, Integral &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt; &amp;</type>
      <name>operator/=</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a8ff1ad5c99830e1f120e027119013624</anchor>
      <arglist>(Vector&lt; size, Integral &gt; &amp;vector, FloatingPoint number)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt; &amp;</type>
      <name>operator/=</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a5877523931df8f205ff225d7580088f8</anchor>
      <arglist>(Vector&lt; size, Integral &gt; &amp;a, const Vector&lt; size, FloatingPoint &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, T &gt;</type>
      <name>operator/</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>ac602863261ec1a6ff02fe1ec5bffad37</anchor>
      <arglist>(T number, const Vector&lt; size, T &gt; &amp;vector)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt;</type>
      <name>operator/</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a790689ac947bedb3f294ebfc9aeb686a</anchor>
      <arglist>(const Vector&lt; size, Integral &gt; &amp;vector, FloatingPoint number)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt;</type>
      <name>operator/</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a1da0ed702e57e8ec6464e474497913d8</anchor>
      <arglist>(const Vector&lt; size, Integral &gt; &amp;a, const Vector&lt; size, FloatingPoint &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt; &amp;</type>
      <name>operator%=</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>ade632882b22533924e5dcd2c8b3f44a1</anchor>
      <arglist>(Vector&lt; size, Integral &gt; &amp;a, Integral b)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt; &amp;</type>
      <name>operator%=</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a4a51f33fcbcdb59bc27313898d069769</anchor>
      <arglist>(Vector&lt; size, Integral &gt; &amp;a, const Vector&lt; size, Integral &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt;</type>
      <name>operator%</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a4d5f66e2c273e6ddd6f5d97410778980</anchor>
      <arglist>(const Vector&lt; size, Integral &gt; &amp;a, Integral b)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt;</type>
      <name>operator%</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>ae757e71a5675609a908ba245919d7b5c</anchor>
      <arglist>(const Vector&lt; size, Integral &gt; &amp;a, const Vector&lt; size, Integral &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt;</type>
      <name>operator~</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a00411ab4b5b07889daa66f136426b4ea</anchor>
      <arglist>(const Vector&lt; size, Integral &gt; &amp;vector)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt; &amp;</type>
      <name>operator&amp;=</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a3b78d1d2ce3be67ea17653af50d19619</anchor>
      <arglist>(Vector&lt; size, Integral &gt; &amp;a, const Vector&lt; size, Integral &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt;</type>
      <name>operator&amp;</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a0238714e940497dcaea6d382a0414d6a</anchor>
      <arglist>(const Vector&lt; size, Integral &gt; &amp;a, const Vector&lt; size, Integral &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt; &amp;</type>
      <name>operator|=</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a5df02285d88aba20bd36f6d4b8ac3c7c</anchor>
      <arglist>(Vector&lt; size, Integral &gt; &amp;a, const Vector&lt; size, Integral &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt;</type>
      <name>operator|</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>ac012aaff8d2971cb052a5dd9a526be2a</anchor>
      <arglist>(const Vector&lt; size, Integral &gt; &amp;a, const Vector&lt; size, Integral &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt; &amp;</type>
      <name>operator^=</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>af87d3deaa8742d561764bec080dbc191</anchor>
      <arglist>(Vector&lt; size, Integral &gt; &amp;a, const Vector&lt; size, Integral &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt;</type>
      <name>operator^</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>af0c70565adfae8fefcdc9e2f204802df</anchor>
      <arglist>(const Vector&lt; size, Integral &gt; &amp;a, const Vector&lt; size, Integral &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt; &amp;</type>
      <name>operator&lt;&lt;=</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a701d71a72018077de086cbacb7af8cde</anchor>
      <arglist>(Vector&lt; size, Integral &gt; &amp;vector, Integral shift)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a36525d8e60373fca36eee6d299daac1f</anchor>
      <arglist>(const Vector&lt; size, Integral &gt; &amp;vector, Integral shift)</arglist>
    </member>
    <member kind="function">
      <type>Corrade::Utility::Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a342462ce2d3144347242b0c1b0eb2613</anchor>
      <arglist>(Corrade::Utility::Debug &amp;debug, const Vector&lt; size, T &gt; &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt; &amp;</type>
      <name>operator&gt;&gt;=</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>ab1a92b51f3a3ac5ee700196a370a28d0</anchor>
      <arglist>(Vector&lt; size, Integral &gt; &amp;vector, Integral shift)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt;</type>
      <name>operator&gt;&gt;</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a08e4344912fb1df2eafbe4f322c128cd</anchor>
      <arglist>(const Vector&lt; size, Integral &gt; &amp;vector, Integral shift)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Vector&lt; 3, Float &gt;</name>
    <filename>classMagnum_1_1Math_1_1Vector.html</filename>
    <member kind="typedef">
      <type>Float</type>
      <name>Type</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a799a265eb81bc32c08a88cedfa104879</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Size</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a5bea718d1a6ae8731ff2abe60169cc73a2743ca2e6cd2d98e8248e18a7bfc0b32</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>Float</type>
      <name>dot</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a27cd08ebde959f77b5f95a25b4e4c433</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Vector</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>aef609f61883287f2da4754a7d194d1c9</anchor>
      <arglist>(ZeroInitT=ZeroInit) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Vector</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>ac4607314a44afd4d55f5a8fba1c6cde6</anchor>
      <arglist>(NoInitT) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Vector</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a18ebfc260c5d7553780314ba223c450e</anchor>
      <arglist>(Float first, U...next) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Vector</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>abc0b3737f4be19d7fca3c0c928d10269</anchor>
      <arglist>(Float value) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Vector</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a87d5b00ae87e9ebc62fb6a1f6c89e88c</anchor>
      <arglist>(const Vector&lt; size, U &gt; &amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Vector</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>ad12afa60a22bbfad159641d28515e63d</anchor>
      <arglist>(const U &amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Vector</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a0a29fb87300604a5b09eca4d6e832450</anchor>
      <arglist>(const Vector&lt; size, Float &gt; &amp;) noexcept=default</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>operator U</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a7ea21e43819d2c24a40d4bdbe4c732ec</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Float *</type>
      <name>data</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a3c8693d13c4bb5c98fda71953ea23e1b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>constexpr const Float *</type>
      <name>data</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>aa499f6ed07b06982bf1881bc3df4d75f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Float &amp;</type>
      <name>operator[]</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>af1fb6b30bdaf2fb2ebeeae5fcceae660</anchor>
      <arglist>(std::size_t pos)</arglist>
    </member>
    <member kind="function">
      <type>constexpr Float</type>
      <name>operator[]</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>af7a1c0969aea6861334031dd21df3aeb</anchor>
      <arglist>(std::size_t pos) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a919d88c687a64fbf439add184fd83e26</anchor>
      <arglist>(const Vector&lt; size, Float &gt; &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a012b1b785d237f267f01b5eab1128795</anchor>
      <arglist>(const Vector&lt; size, Float &gt; &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>BoolVector&lt; size &gt;</type>
      <name>operator&lt;</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>ade479b15513d5fe5e3e77b58255140a5</anchor>
      <arglist>(const Vector&lt; size, Float &gt; &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>BoolVector&lt; size &gt;</type>
      <name>operator&lt;=</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a98eca28be48e27ce39f71780a1b08b53</anchor>
      <arglist>(const Vector&lt; size, Float &gt; &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>BoolVector&lt; size &gt;</type>
      <name>operator&gt;=</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>af357da6a5a72afa948dfa36b928e81d7</anchor>
      <arglist>(const Vector&lt; size, Float &gt; &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>BoolVector&lt; size &gt;</type>
      <name>operator&gt;</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a81d67cccc8c178c8dbbc62785ff8ce52</anchor>
      <arglist>(const Vector&lt; size, Float &gt; &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isZero</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a2cf5ab65f37c0c87f894acaa88704fc4</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isNormalized</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a90e3bf3dddebb3e57d1ebf62d4e1e394</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Float &gt;</type>
      <name>operator-</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a2384a93655f0e39fbbf54891634167c9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Float &gt;</type>
      <name>operator-</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>af2dafe1a15e8cd4588d03e6ae844aa6d</anchor>
      <arglist>(const Vector&lt; size, Float &gt; &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Float &gt; &amp;</type>
      <name>operator+=</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>ac0d2c99872bab8dfecdd3e09667c7292</anchor>
      <arglist>(const Vector&lt; size, Float &gt; &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Float &gt;</type>
      <name>operator+</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a91f951330a2e574eb22eba396785cf75</anchor>
      <arglist>(const Vector&lt; size, Float &gt; &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Float &gt; &amp;</type>
      <name>operator-=</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a2879e6a7da21fb210a32731b085e8db4</anchor>
      <arglist>(const Vector&lt; size, Float &gt; &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Float &gt; &amp;</type>
      <name>operator*=</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>acf36c1445de24bd87912f0a107e51d5b</anchor>
      <arglist>(Float number)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Float &gt; &amp;</type>
      <name>operator*=</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a212500235cc0ef744d7a0b9e1d443156</anchor>
      <arglist>(const Vector&lt; size, Float &gt; &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Float &gt;</type>
      <name>operator*</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>acb266b5c55a30d7cd871a5c07de8bba4</anchor>
      <arglist>(Float number) const</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Float &gt;</type>
      <name>operator*</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>adb264b0fa9decead346d8ad55ea27156</anchor>
      <arglist>(const Vector&lt; size, Float &gt; &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Float &gt; &amp;</type>
      <name>operator/=</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>acdea6a05fcd2c83f44107294a436c82a</anchor>
      <arglist>(Float number)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Float &gt; &amp;</type>
      <name>operator/=</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>afc091891a46419127de515a9714ed9ef</anchor>
      <arglist>(const Vector&lt; size, Float &gt; &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Float &gt;</type>
      <name>operator/</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>aac7cb85a8c6c9018536a7cc3a88c52aa</anchor>
      <arglist>(Float number) const</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Float &gt;</type>
      <name>operator/</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a453483612a7d579a160ce854d42052c6</anchor>
      <arglist>(const Vector&lt; size, Float &gt; &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>Float</type>
      <name>length</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>ab4e8d3ce060ec466ce084f01d2d88c14</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Float</type>
      <name>lengthInverted</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a04f15a7423d2a4f144afb0266844463a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Float &gt;</type>
      <name>normalized</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>aa1678ce501cc313b3432c49ed8eb033c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Float &gt;</type>
      <name>resized</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a0a48a0a0ceff711ff667453721cb6f5f</anchor>
      <arglist>(Float length) const</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Float &gt;</type>
      <name>projected</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a0ee82cf43c67f4a0bcca58b13ae39a96</anchor>
      <arglist>(const Vector&lt; size, Float &gt; &amp;line) const</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Float &gt;</type>
      <name>projectedOntoNormalized</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a91d96dda853b90e29891003ebc394ad5</anchor>
      <arglist>(const Vector&lt; size, Float &gt; &amp;line) const</arglist>
    </member>
    <member kind="function">
      <type>constexpr Vector&lt; size, Float &gt;</type>
      <name>flipped</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a2f11ab0253d3d99574af9e4e4875dc26</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Float</type>
      <name>sum</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a28add84fe498a71e46d422b9ba31bb84</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Float</type>
      <name>product</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a001c2ede68e794a2b3648004a3b712af</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Float</type>
      <name>min</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>af029f9f7810201f0bd8d9580af273bde</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Float</type>
      <name>max</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a0e5e9bb60ceb49f00569ec9a919e025a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::pair&lt; Float, Float &gt;</type>
      <name>minmax</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a958d3a01ab7b3a416d9d051b23bdee85</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Vector&lt; size, Float &gt; &amp;</type>
      <name>from</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>abe9b9bbf9d5a2fdaca278cfab504cbe0</anchor>
      <arglist>(Float *data)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const Vector&lt; size, Float &gt; &amp;</type>
      <name>from</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a3f9691a1ce7d74a1a59867673f2324e3</anchor>
      <arglist>(const Float *data)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static constexpr Vector&lt; size, Float &gt;</type>
      <name>pad</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>acfc88ca9f6c47b731a90ef0e1d8ec8c0</anchor>
      <arglist>(const Vector&lt; otherSize, Float &gt; &amp;a, Float value=Float(0))</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Float</type>
      <name>dot</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>af9737bbef2c4c895dfb6f2bdc6426d72</anchor>
      <arglist>(const Vector&lt; size, Float &gt; &amp;a, const Vector&lt; size, Float &gt; &amp;b)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Rad&lt; Float &gt;</type>
      <name>angle</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a8d15d1f369cbb4543d1bd73d7c24f8a8</anchor>
      <arglist>(const Vector&lt; size, Float &gt; &amp;normalizedA, const Vector&lt; size, Float &gt; &amp;normalizedB)</arglist>
    </member>
    <member kind="function">
      <type>Float</type>
      <name>dot</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>afcea7c945bee7d210d66d1a47d85944d</anchor>
      <arglist>(const Vector&lt; size, Float &gt; &amp;a, const Vector&lt; size, Float &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>Rad&lt; Float &gt;</type>
      <name>angle</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a754897e5423279be34bfaba81777e51c</anchor>
      <arglist>(const Vector&lt; size, Float &gt; &amp;normalizedA, const Vector&lt; size, Float &gt; &amp;normalizedB)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt; &amp;</type>
      <name>operator*=</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>aeb4ed8ac931963834097f37248a43a38</anchor>
      <arglist>(Vector&lt; size, Integral &gt; &amp;vector, FloatingPoint number)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt; &amp;</type>
      <name>operator*=</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a118fb08966b961aafa620802ab232b90</anchor>
      <arglist>(Vector&lt; size, Integral &gt; &amp;a, const Vector&lt; size, FloatingPoint &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Float &gt;</type>
      <name>operator*</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a00e2b338cabfb20cbaf475bc4a74fe5a</anchor>
      <arglist>(Float number, const Vector&lt; size, Float &gt; &amp;vector)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt;</type>
      <name>operator*</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a951d0c686b0e14fc4b2c20cdd6c01dfc</anchor>
      <arglist>(const Vector&lt; size, Integral &gt; &amp;vector, FloatingPoint number)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt;</type>
      <name>operator*</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a2dd6210e8bfbcd1306eaecb9ca999c9d</anchor>
      <arglist>(FloatingPoint number, const Vector&lt; size, Integral &gt; &amp;vector)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt;</type>
      <name>operator*</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a4ca332f0533a3e7577a44495d91b6e74</anchor>
      <arglist>(const Vector&lt; size, Integral &gt; &amp;a, const Vector&lt; size, FloatingPoint &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt;</type>
      <name>operator*</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a6e8e1bd5f68c4bdc2aa32c77acd11791</anchor>
      <arglist>(const Vector&lt; size, FloatingPoint &gt; &amp;a, const Vector&lt; size, Integral &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt; &amp;</type>
      <name>operator/=</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a8ff1ad5c99830e1f120e027119013624</anchor>
      <arglist>(Vector&lt; size, Integral &gt; &amp;vector, FloatingPoint number)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt; &amp;</type>
      <name>operator/=</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a5877523931df8f205ff225d7580088f8</anchor>
      <arglist>(Vector&lt; size, Integral &gt; &amp;a, const Vector&lt; size, FloatingPoint &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Float &gt;</type>
      <name>operator/</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>ac602863261ec1a6ff02fe1ec5bffad37</anchor>
      <arglist>(Float number, const Vector&lt; size, Float &gt; &amp;vector)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt;</type>
      <name>operator/</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a790689ac947bedb3f294ebfc9aeb686a</anchor>
      <arglist>(const Vector&lt; size, Integral &gt; &amp;vector, FloatingPoint number)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt;</type>
      <name>operator/</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a1da0ed702e57e8ec6464e474497913d8</anchor>
      <arglist>(const Vector&lt; size, Integral &gt; &amp;a, const Vector&lt; size, FloatingPoint &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt; &amp;</type>
      <name>operator%=</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>ade632882b22533924e5dcd2c8b3f44a1</anchor>
      <arglist>(Vector&lt; size, Integral &gt; &amp;a, Integral b)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt; &amp;</type>
      <name>operator%=</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a4a51f33fcbcdb59bc27313898d069769</anchor>
      <arglist>(Vector&lt; size, Integral &gt; &amp;a, const Vector&lt; size, Integral &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt;</type>
      <name>operator%</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a4d5f66e2c273e6ddd6f5d97410778980</anchor>
      <arglist>(const Vector&lt; size, Integral &gt; &amp;a, Integral b)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt;</type>
      <name>operator%</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>ae757e71a5675609a908ba245919d7b5c</anchor>
      <arglist>(const Vector&lt; size, Integral &gt; &amp;a, const Vector&lt; size, Integral &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt;</type>
      <name>operator~</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a00411ab4b5b07889daa66f136426b4ea</anchor>
      <arglist>(const Vector&lt; size, Integral &gt; &amp;vector)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt; &amp;</type>
      <name>operator&amp;=</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a3b78d1d2ce3be67ea17653af50d19619</anchor>
      <arglist>(Vector&lt; size, Integral &gt; &amp;a, const Vector&lt; size, Integral &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt;</type>
      <name>operator&amp;</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a0238714e940497dcaea6d382a0414d6a</anchor>
      <arglist>(const Vector&lt; size, Integral &gt; &amp;a, const Vector&lt; size, Integral &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt; &amp;</type>
      <name>operator|=</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a5df02285d88aba20bd36f6d4b8ac3c7c</anchor>
      <arglist>(Vector&lt; size, Integral &gt; &amp;a, const Vector&lt; size, Integral &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt;</type>
      <name>operator|</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>ac012aaff8d2971cb052a5dd9a526be2a</anchor>
      <arglist>(const Vector&lt; size, Integral &gt; &amp;a, const Vector&lt; size, Integral &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt; &amp;</type>
      <name>operator^=</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>af87d3deaa8742d561764bec080dbc191</anchor>
      <arglist>(Vector&lt; size, Integral &gt; &amp;a, const Vector&lt; size, Integral &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt;</type>
      <name>operator^</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>af0c70565adfae8fefcdc9e2f204802df</anchor>
      <arglist>(const Vector&lt; size, Integral &gt; &amp;a, const Vector&lt; size, Integral &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt; &amp;</type>
      <name>operator&lt;&lt;=</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a701d71a72018077de086cbacb7af8cde</anchor>
      <arglist>(Vector&lt; size, Integral &gt; &amp;vector, Integral shift)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a36525d8e60373fca36eee6d299daac1f</anchor>
      <arglist>(const Vector&lt; size, Integral &gt; &amp;vector, Integral shift)</arglist>
    </member>
    <member kind="function">
      <type>Corrade::Utility::Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a342462ce2d3144347242b0c1b0eb2613</anchor>
      <arglist>(Corrade::Utility::Debug &amp;debug, const Vector&lt; size, Float &gt; &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt; &amp;</type>
      <name>operator&gt;&gt;=</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>ab1a92b51f3a3ac5ee700196a370a28d0</anchor>
      <arglist>(Vector&lt; size, Integral &gt; &amp;vector, Integral shift)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt;</type>
      <name>operator&gt;&gt;</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a08e4344912fb1df2eafbe4f322c128cd</anchor>
      <arglist>(const Vector&lt; size, Integral &gt; &amp;vector, Integral shift)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Vector&lt; 3, Int &gt;</name>
    <filename>classMagnum_1_1Math_1_1Vector.html</filename>
    <member kind="typedef">
      <type>Int</type>
      <name>Type</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a799a265eb81bc32c08a88cedfa104879</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Size</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a5bea718d1a6ae8731ff2abe60169cc73a2743ca2e6cd2d98e8248e18a7bfc0b32</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>Int</type>
      <name>dot</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a27cd08ebde959f77b5f95a25b4e4c433</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Vector</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>aef609f61883287f2da4754a7d194d1c9</anchor>
      <arglist>(ZeroInitT=ZeroInit) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Vector</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>ac4607314a44afd4d55f5a8fba1c6cde6</anchor>
      <arglist>(NoInitT) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Vector</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a18ebfc260c5d7553780314ba223c450e</anchor>
      <arglist>(Int first, U...next) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Vector</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>abc0b3737f4be19d7fca3c0c928d10269</anchor>
      <arglist>(Int value) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Vector</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a87d5b00ae87e9ebc62fb6a1f6c89e88c</anchor>
      <arglist>(const Vector&lt; size, U &gt; &amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Vector</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>ad12afa60a22bbfad159641d28515e63d</anchor>
      <arglist>(const U &amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Vector</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a0a29fb87300604a5b09eca4d6e832450</anchor>
      <arglist>(const Vector&lt; size, Int &gt; &amp;) noexcept=default</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>operator U</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a7ea21e43819d2c24a40d4bdbe4c732ec</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Int *</type>
      <name>data</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a3c8693d13c4bb5c98fda71953ea23e1b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>constexpr const Int *</type>
      <name>data</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>aa499f6ed07b06982bf1881bc3df4d75f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Int &amp;</type>
      <name>operator[]</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>af1fb6b30bdaf2fb2ebeeae5fcceae660</anchor>
      <arglist>(std::size_t pos)</arglist>
    </member>
    <member kind="function">
      <type>constexpr Int</type>
      <name>operator[]</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>af7a1c0969aea6861334031dd21df3aeb</anchor>
      <arglist>(std::size_t pos) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a919d88c687a64fbf439add184fd83e26</anchor>
      <arglist>(const Vector&lt; size, Int &gt; &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a012b1b785d237f267f01b5eab1128795</anchor>
      <arglist>(const Vector&lt; size, Int &gt; &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>BoolVector&lt; size &gt;</type>
      <name>operator&lt;</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>ade479b15513d5fe5e3e77b58255140a5</anchor>
      <arglist>(const Vector&lt; size, Int &gt; &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>BoolVector&lt; size &gt;</type>
      <name>operator&lt;=</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a98eca28be48e27ce39f71780a1b08b53</anchor>
      <arglist>(const Vector&lt; size, Int &gt; &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>BoolVector&lt; size &gt;</type>
      <name>operator&gt;=</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>af357da6a5a72afa948dfa36b928e81d7</anchor>
      <arglist>(const Vector&lt; size, Int &gt; &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>BoolVector&lt; size &gt;</type>
      <name>operator&gt;</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a81d67cccc8c178c8dbbc62785ff8ce52</anchor>
      <arglist>(const Vector&lt; size, Int &gt; &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isZero</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a2cf5ab65f37c0c87f894acaa88704fc4</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isNormalized</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a90e3bf3dddebb3e57d1ebf62d4e1e394</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Int &gt;</type>
      <name>operator-</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a2384a93655f0e39fbbf54891634167c9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Int &gt;</type>
      <name>operator-</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>af2dafe1a15e8cd4588d03e6ae844aa6d</anchor>
      <arglist>(const Vector&lt; size, Int &gt; &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Int &gt; &amp;</type>
      <name>operator+=</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>ac0d2c99872bab8dfecdd3e09667c7292</anchor>
      <arglist>(const Vector&lt; size, Int &gt; &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Int &gt;</type>
      <name>operator+</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a91f951330a2e574eb22eba396785cf75</anchor>
      <arglist>(const Vector&lt; size, Int &gt; &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Int &gt; &amp;</type>
      <name>operator-=</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a2879e6a7da21fb210a32731b085e8db4</anchor>
      <arglist>(const Vector&lt; size, Int &gt; &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Int &gt; &amp;</type>
      <name>operator*=</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>acf36c1445de24bd87912f0a107e51d5b</anchor>
      <arglist>(Int number)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Int &gt; &amp;</type>
      <name>operator*=</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a212500235cc0ef744d7a0b9e1d443156</anchor>
      <arglist>(const Vector&lt; size, Int &gt; &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Int &gt;</type>
      <name>operator*</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>acb266b5c55a30d7cd871a5c07de8bba4</anchor>
      <arglist>(Int number) const</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Int &gt;</type>
      <name>operator*</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>adb264b0fa9decead346d8ad55ea27156</anchor>
      <arglist>(const Vector&lt; size, Int &gt; &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Int &gt; &amp;</type>
      <name>operator/=</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>acdea6a05fcd2c83f44107294a436c82a</anchor>
      <arglist>(Int number)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Int &gt; &amp;</type>
      <name>operator/=</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>afc091891a46419127de515a9714ed9ef</anchor>
      <arglist>(const Vector&lt; size, Int &gt; &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Int &gt;</type>
      <name>operator/</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>aac7cb85a8c6c9018536a7cc3a88c52aa</anchor>
      <arglist>(Int number) const</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Int &gt;</type>
      <name>operator/</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a453483612a7d579a160ce854d42052c6</anchor>
      <arglist>(const Vector&lt; size, Int &gt; &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>Int</type>
      <name>length</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>ab4e8d3ce060ec466ce084f01d2d88c14</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Int</type>
      <name>lengthInverted</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a04f15a7423d2a4f144afb0266844463a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Int &gt;</type>
      <name>normalized</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>aa1678ce501cc313b3432c49ed8eb033c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Int &gt;</type>
      <name>resized</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a0a48a0a0ceff711ff667453721cb6f5f</anchor>
      <arglist>(Int length) const</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Int &gt;</type>
      <name>projected</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a0ee82cf43c67f4a0bcca58b13ae39a96</anchor>
      <arglist>(const Vector&lt; size, Int &gt; &amp;line) const</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Int &gt;</type>
      <name>projectedOntoNormalized</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a91d96dda853b90e29891003ebc394ad5</anchor>
      <arglist>(const Vector&lt; size, Int &gt; &amp;line) const</arglist>
    </member>
    <member kind="function">
      <type>constexpr Vector&lt; size, Int &gt;</type>
      <name>flipped</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a2f11ab0253d3d99574af9e4e4875dc26</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Int</type>
      <name>sum</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a28add84fe498a71e46d422b9ba31bb84</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Int</type>
      <name>product</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a001c2ede68e794a2b3648004a3b712af</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Int</type>
      <name>min</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>af029f9f7810201f0bd8d9580af273bde</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Int</type>
      <name>max</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a0e5e9bb60ceb49f00569ec9a919e025a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::pair&lt; Int, Int &gt;</type>
      <name>minmax</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a958d3a01ab7b3a416d9d051b23bdee85</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Vector&lt; size, Int &gt; &amp;</type>
      <name>from</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>abe9b9bbf9d5a2fdaca278cfab504cbe0</anchor>
      <arglist>(Int *data)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const Vector&lt; size, Int &gt; &amp;</type>
      <name>from</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a3f9691a1ce7d74a1a59867673f2324e3</anchor>
      <arglist>(const Int *data)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static constexpr Vector&lt; size, Int &gt;</type>
      <name>pad</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>acfc88ca9f6c47b731a90ef0e1d8ec8c0</anchor>
      <arglist>(const Vector&lt; otherSize, Int &gt; &amp;a, Int value=Int(0))</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Int</type>
      <name>dot</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>af9737bbef2c4c895dfb6f2bdc6426d72</anchor>
      <arglist>(const Vector&lt; size, Int &gt; &amp;a, const Vector&lt; size, Int &gt; &amp;b)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Rad&lt; Int &gt;</type>
      <name>angle</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a8d15d1f369cbb4543d1bd73d7c24f8a8</anchor>
      <arglist>(const Vector&lt; size, Int &gt; &amp;normalizedA, const Vector&lt; size, Int &gt; &amp;normalizedB)</arglist>
    </member>
    <member kind="function">
      <type>Int</type>
      <name>dot</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>afcea7c945bee7d210d66d1a47d85944d</anchor>
      <arglist>(const Vector&lt; size, Int &gt; &amp;a, const Vector&lt; size, Int &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>Rad&lt; Int &gt;</type>
      <name>angle</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a754897e5423279be34bfaba81777e51c</anchor>
      <arglist>(const Vector&lt; size, Int &gt; &amp;normalizedA, const Vector&lt; size, Int &gt; &amp;normalizedB)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt; &amp;</type>
      <name>operator*=</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>aeb4ed8ac931963834097f37248a43a38</anchor>
      <arglist>(Vector&lt; size, Integral &gt; &amp;vector, FloatingPoint number)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt; &amp;</type>
      <name>operator*=</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a118fb08966b961aafa620802ab232b90</anchor>
      <arglist>(Vector&lt; size, Integral &gt; &amp;a, const Vector&lt; size, FloatingPoint &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Int &gt;</type>
      <name>operator*</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a00e2b338cabfb20cbaf475bc4a74fe5a</anchor>
      <arglist>(Int number, const Vector&lt; size, Int &gt; &amp;vector)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt;</type>
      <name>operator*</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a951d0c686b0e14fc4b2c20cdd6c01dfc</anchor>
      <arglist>(const Vector&lt; size, Integral &gt; &amp;vector, FloatingPoint number)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt;</type>
      <name>operator*</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a2dd6210e8bfbcd1306eaecb9ca999c9d</anchor>
      <arglist>(FloatingPoint number, const Vector&lt; size, Integral &gt; &amp;vector)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt;</type>
      <name>operator*</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a4ca332f0533a3e7577a44495d91b6e74</anchor>
      <arglist>(const Vector&lt; size, Integral &gt; &amp;a, const Vector&lt; size, FloatingPoint &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt;</type>
      <name>operator*</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a6e8e1bd5f68c4bdc2aa32c77acd11791</anchor>
      <arglist>(const Vector&lt; size, FloatingPoint &gt; &amp;a, const Vector&lt; size, Integral &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt; &amp;</type>
      <name>operator/=</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a8ff1ad5c99830e1f120e027119013624</anchor>
      <arglist>(Vector&lt; size, Integral &gt; &amp;vector, FloatingPoint number)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt; &amp;</type>
      <name>operator/=</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a5877523931df8f205ff225d7580088f8</anchor>
      <arglist>(Vector&lt; size, Integral &gt; &amp;a, const Vector&lt; size, FloatingPoint &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Int &gt;</type>
      <name>operator/</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>ac602863261ec1a6ff02fe1ec5bffad37</anchor>
      <arglist>(Int number, const Vector&lt; size, Int &gt; &amp;vector)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt;</type>
      <name>operator/</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a790689ac947bedb3f294ebfc9aeb686a</anchor>
      <arglist>(const Vector&lt; size, Integral &gt; &amp;vector, FloatingPoint number)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt;</type>
      <name>operator/</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a1da0ed702e57e8ec6464e474497913d8</anchor>
      <arglist>(const Vector&lt; size, Integral &gt; &amp;a, const Vector&lt; size, FloatingPoint &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt; &amp;</type>
      <name>operator%=</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>ade632882b22533924e5dcd2c8b3f44a1</anchor>
      <arglist>(Vector&lt; size, Integral &gt; &amp;a, Integral b)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt; &amp;</type>
      <name>operator%=</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a4a51f33fcbcdb59bc27313898d069769</anchor>
      <arglist>(Vector&lt; size, Integral &gt; &amp;a, const Vector&lt; size, Integral &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt;</type>
      <name>operator%</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a4d5f66e2c273e6ddd6f5d97410778980</anchor>
      <arglist>(const Vector&lt; size, Integral &gt; &amp;a, Integral b)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt;</type>
      <name>operator%</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>ae757e71a5675609a908ba245919d7b5c</anchor>
      <arglist>(const Vector&lt; size, Integral &gt; &amp;a, const Vector&lt; size, Integral &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt;</type>
      <name>operator~</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a00411ab4b5b07889daa66f136426b4ea</anchor>
      <arglist>(const Vector&lt; size, Integral &gt; &amp;vector)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt; &amp;</type>
      <name>operator&amp;=</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a3b78d1d2ce3be67ea17653af50d19619</anchor>
      <arglist>(Vector&lt; size, Integral &gt; &amp;a, const Vector&lt; size, Integral &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt;</type>
      <name>operator&amp;</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a0238714e940497dcaea6d382a0414d6a</anchor>
      <arglist>(const Vector&lt; size, Integral &gt; &amp;a, const Vector&lt; size, Integral &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt; &amp;</type>
      <name>operator|=</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a5df02285d88aba20bd36f6d4b8ac3c7c</anchor>
      <arglist>(Vector&lt; size, Integral &gt; &amp;a, const Vector&lt; size, Integral &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt;</type>
      <name>operator|</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>ac012aaff8d2971cb052a5dd9a526be2a</anchor>
      <arglist>(const Vector&lt; size, Integral &gt; &amp;a, const Vector&lt; size, Integral &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt; &amp;</type>
      <name>operator^=</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>af87d3deaa8742d561764bec080dbc191</anchor>
      <arglist>(Vector&lt; size, Integral &gt; &amp;a, const Vector&lt; size, Integral &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt;</type>
      <name>operator^</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>af0c70565adfae8fefcdc9e2f204802df</anchor>
      <arglist>(const Vector&lt; size, Integral &gt; &amp;a, const Vector&lt; size, Integral &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt; &amp;</type>
      <name>operator&lt;&lt;=</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a701d71a72018077de086cbacb7af8cde</anchor>
      <arglist>(Vector&lt; size, Integral &gt; &amp;vector, Integral shift)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a36525d8e60373fca36eee6d299daac1f</anchor>
      <arglist>(const Vector&lt; size, Integral &gt; &amp;vector, Integral shift)</arglist>
    </member>
    <member kind="function">
      <type>Corrade::Utility::Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a342462ce2d3144347242b0c1b0eb2613</anchor>
      <arglist>(Corrade::Utility::Debug &amp;debug, const Vector&lt; size, Int &gt; &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt; &amp;</type>
      <name>operator&gt;&gt;=</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>ab1a92b51f3a3ac5ee700196a370a28d0</anchor>
      <arglist>(Vector&lt; size, Integral &gt; &amp;vector, Integral shift)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt;</type>
      <name>operator&gt;&gt;</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a08e4344912fb1df2eafbe4f322c128cd</anchor>
      <arglist>(const Vector&lt; size, Integral &gt; &amp;vector, Integral shift)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Vector&lt; 3, T &gt;</name>
    <filename>classMagnum_1_1Math_1_1Vector.html</filename>
    <member kind="typedef">
      <type>T</type>
      <name>Type</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a799a265eb81bc32c08a88cedfa104879</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Size</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a5bea718d1a6ae8731ff2abe60169cc73a2743ca2e6cd2d98e8248e18a7bfc0b32</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>dot</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a27cd08ebde959f77b5f95a25b4e4c433</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Vector</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>aef609f61883287f2da4754a7d194d1c9</anchor>
      <arglist>(ZeroInitT=ZeroInit) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Vector</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>ac4607314a44afd4d55f5a8fba1c6cde6</anchor>
      <arglist>(NoInitT) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Vector</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a18ebfc260c5d7553780314ba223c450e</anchor>
      <arglist>(T first, U...next) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Vector</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>abc0b3737f4be19d7fca3c0c928d10269</anchor>
      <arglist>(T value) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Vector</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a87d5b00ae87e9ebc62fb6a1f6c89e88c</anchor>
      <arglist>(const Vector&lt; size, U &gt; &amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Vector</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>ad12afa60a22bbfad159641d28515e63d</anchor>
      <arglist>(const U &amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Vector</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a0a29fb87300604a5b09eca4d6e832450</anchor>
      <arglist>(const Vector&lt; size, T &gt; &amp;) noexcept=default</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>operator U</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a7ea21e43819d2c24a40d4bdbe4c732ec</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>T *</type>
      <name>data</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a3c8693d13c4bb5c98fda71953ea23e1b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>constexpr const T *</type>
      <name>data</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>aa499f6ed07b06982bf1881bc3df4d75f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>T &amp;</type>
      <name>operator[]</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>af1fb6b30bdaf2fb2ebeeae5fcceae660</anchor>
      <arglist>(std::size_t pos)</arglist>
    </member>
    <member kind="function">
      <type>constexpr T</type>
      <name>operator[]</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>af7a1c0969aea6861334031dd21df3aeb</anchor>
      <arglist>(std::size_t pos) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a919d88c687a64fbf439add184fd83e26</anchor>
      <arglist>(const Vector&lt; size, T &gt; &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a012b1b785d237f267f01b5eab1128795</anchor>
      <arglist>(const Vector&lt; size, T &gt; &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>BoolVector&lt; size &gt;</type>
      <name>operator&lt;</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>ade479b15513d5fe5e3e77b58255140a5</anchor>
      <arglist>(const Vector&lt; size, T &gt; &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>BoolVector&lt; size &gt;</type>
      <name>operator&lt;=</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a98eca28be48e27ce39f71780a1b08b53</anchor>
      <arglist>(const Vector&lt; size, T &gt; &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>BoolVector&lt; size &gt;</type>
      <name>operator&gt;=</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>af357da6a5a72afa948dfa36b928e81d7</anchor>
      <arglist>(const Vector&lt; size, T &gt; &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>BoolVector&lt; size &gt;</type>
      <name>operator&gt;</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a81d67cccc8c178c8dbbc62785ff8ce52</anchor>
      <arglist>(const Vector&lt; size, T &gt; &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isZero</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a2cf5ab65f37c0c87f894acaa88704fc4</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isNormalized</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a90e3bf3dddebb3e57d1ebf62d4e1e394</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, T &gt;</type>
      <name>operator-</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a2384a93655f0e39fbbf54891634167c9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, T &gt;</type>
      <name>operator-</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>af2dafe1a15e8cd4588d03e6ae844aa6d</anchor>
      <arglist>(const Vector&lt; size, T &gt; &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, T &gt; &amp;</type>
      <name>operator+=</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>ac0d2c99872bab8dfecdd3e09667c7292</anchor>
      <arglist>(const Vector&lt; size, T &gt; &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, T &gt;</type>
      <name>operator+</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a91f951330a2e574eb22eba396785cf75</anchor>
      <arglist>(const Vector&lt; size, T &gt; &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, T &gt; &amp;</type>
      <name>operator-=</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a2879e6a7da21fb210a32731b085e8db4</anchor>
      <arglist>(const Vector&lt; size, T &gt; &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, T &gt; &amp;</type>
      <name>operator*=</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>acf36c1445de24bd87912f0a107e51d5b</anchor>
      <arglist>(T number)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, T &gt; &amp;</type>
      <name>operator*=</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a212500235cc0ef744d7a0b9e1d443156</anchor>
      <arglist>(const Vector&lt; size, T &gt; &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, T &gt;</type>
      <name>operator*</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>acb266b5c55a30d7cd871a5c07de8bba4</anchor>
      <arglist>(T number) const</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, T &gt;</type>
      <name>operator*</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>adb264b0fa9decead346d8ad55ea27156</anchor>
      <arglist>(const Vector&lt; size, T &gt; &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, T &gt; &amp;</type>
      <name>operator/=</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>acdea6a05fcd2c83f44107294a436c82a</anchor>
      <arglist>(T number)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, T &gt; &amp;</type>
      <name>operator/=</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>afc091891a46419127de515a9714ed9ef</anchor>
      <arglist>(const Vector&lt; size, T &gt; &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, T &gt;</type>
      <name>operator/</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>aac7cb85a8c6c9018536a7cc3a88c52aa</anchor>
      <arglist>(T number) const</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, T &gt;</type>
      <name>operator/</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a453483612a7d579a160ce854d42052c6</anchor>
      <arglist>(const Vector&lt; size, T &gt; &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>length</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>ab4e8d3ce060ec466ce084f01d2d88c14</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>lengthInverted</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a04f15a7423d2a4f144afb0266844463a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, T &gt;</type>
      <name>normalized</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>aa1678ce501cc313b3432c49ed8eb033c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, T &gt;</type>
      <name>resized</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a0a48a0a0ceff711ff667453721cb6f5f</anchor>
      <arglist>(T length) const</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, T &gt;</type>
      <name>projected</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a0ee82cf43c67f4a0bcca58b13ae39a96</anchor>
      <arglist>(const Vector&lt; size, T &gt; &amp;line) const</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, T &gt;</type>
      <name>projectedOntoNormalized</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a91d96dda853b90e29891003ebc394ad5</anchor>
      <arglist>(const Vector&lt; size, T &gt; &amp;line) const</arglist>
    </member>
    <member kind="function">
      <type>constexpr Vector&lt; size, T &gt;</type>
      <name>flipped</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a2f11ab0253d3d99574af9e4e4875dc26</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>sum</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a28add84fe498a71e46d422b9ba31bb84</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>product</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a001c2ede68e794a2b3648004a3b712af</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>min</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>af029f9f7810201f0bd8d9580af273bde</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>max</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a0e5e9bb60ceb49f00569ec9a919e025a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::pair&lt; T, T &gt;</type>
      <name>minmax</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a958d3a01ab7b3a416d9d051b23bdee85</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Vector&lt; size, T &gt; &amp;</type>
      <name>from</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>abe9b9bbf9d5a2fdaca278cfab504cbe0</anchor>
      <arglist>(T *data)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const Vector&lt; size, T &gt; &amp;</type>
      <name>from</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a3f9691a1ce7d74a1a59867673f2324e3</anchor>
      <arglist>(const T *data)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static constexpr Vector&lt; size, T &gt;</type>
      <name>pad</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>acfc88ca9f6c47b731a90ef0e1d8ec8c0</anchor>
      <arglist>(const Vector&lt; otherSize, T &gt; &amp;a, T value=T(0))</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static T</type>
      <name>dot</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>af9737bbef2c4c895dfb6f2bdc6426d72</anchor>
      <arglist>(const Vector&lt; size, T &gt; &amp;a, const Vector&lt; size, T &gt; &amp;b)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Rad&lt; T &gt;</type>
      <name>angle</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a8d15d1f369cbb4543d1bd73d7c24f8a8</anchor>
      <arglist>(const Vector&lt; size, T &gt; &amp;normalizedA, const Vector&lt; size, T &gt; &amp;normalizedB)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>dot</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>afcea7c945bee7d210d66d1a47d85944d</anchor>
      <arglist>(const Vector&lt; size, T &gt; &amp;a, const Vector&lt; size, T &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>Rad&lt; T &gt;</type>
      <name>angle</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a754897e5423279be34bfaba81777e51c</anchor>
      <arglist>(const Vector&lt; size, T &gt; &amp;normalizedA, const Vector&lt; size, T &gt; &amp;normalizedB)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt; &amp;</type>
      <name>operator*=</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>aeb4ed8ac931963834097f37248a43a38</anchor>
      <arglist>(Vector&lt; size, Integral &gt; &amp;vector, FloatingPoint number)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt; &amp;</type>
      <name>operator*=</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a118fb08966b961aafa620802ab232b90</anchor>
      <arglist>(Vector&lt; size, Integral &gt; &amp;a, const Vector&lt; size, FloatingPoint &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, T &gt;</type>
      <name>operator*</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a00e2b338cabfb20cbaf475bc4a74fe5a</anchor>
      <arglist>(T number, const Vector&lt; size, T &gt; &amp;vector)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt;</type>
      <name>operator*</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a951d0c686b0e14fc4b2c20cdd6c01dfc</anchor>
      <arglist>(const Vector&lt; size, Integral &gt; &amp;vector, FloatingPoint number)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt;</type>
      <name>operator*</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a2dd6210e8bfbcd1306eaecb9ca999c9d</anchor>
      <arglist>(FloatingPoint number, const Vector&lt; size, Integral &gt; &amp;vector)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt;</type>
      <name>operator*</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a4ca332f0533a3e7577a44495d91b6e74</anchor>
      <arglist>(const Vector&lt; size, Integral &gt; &amp;a, const Vector&lt; size, FloatingPoint &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt;</type>
      <name>operator*</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a6e8e1bd5f68c4bdc2aa32c77acd11791</anchor>
      <arglist>(const Vector&lt; size, FloatingPoint &gt; &amp;a, const Vector&lt; size, Integral &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt; &amp;</type>
      <name>operator/=</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a8ff1ad5c99830e1f120e027119013624</anchor>
      <arglist>(Vector&lt; size, Integral &gt; &amp;vector, FloatingPoint number)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt; &amp;</type>
      <name>operator/=</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a5877523931df8f205ff225d7580088f8</anchor>
      <arglist>(Vector&lt; size, Integral &gt; &amp;a, const Vector&lt; size, FloatingPoint &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, T &gt;</type>
      <name>operator/</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>ac602863261ec1a6ff02fe1ec5bffad37</anchor>
      <arglist>(T number, const Vector&lt; size, T &gt; &amp;vector)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt;</type>
      <name>operator/</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a790689ac947bedb3f294ebfc9aeb686a</anchor>
      <arglist>(const Vector&lt; size, Integral &gt; &amp;vector, FloatingPoint number)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt;</type>
      <name>operator/</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a1da0ed702e57e8ec6464e474497913d8</anchor>
      <arglist>(const Vector&lt; size, Integral &gt; &amp;a, const Vector&lt; size, FloatingPoint &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt; &amp;</type>
      <name>operator%=</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>ade632882b22533924e5dcd2c8b3f44a1</anchor>
      <arglist>(Vector&lt; size, Integral &gt; &amp;a, Integral b)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt; &amp;</type>
      <name>operator%=</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a4a51f33fcbcdb59bc27313898d069769</anchor>
      <arglist>(Vector&lt; size, Integral &gt; &amp;a, const Vector&lt; size, Integral &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt;</type>
      <name>operator%</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a4d5f66e2c273e6ddd6f5d97410778980</anchor>
      <arglist>(const Vector&lt; size, Integral &gt; &amp;a, Integral b)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt;</type>
      <name>operator%</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>ae757e71a5675609a908ba245919d7b5c</anchor>
      <arglist>(const Vector&lt; size, Integral &gt; &amp;a, const Vector&lt; size, Integral &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt;</type>
      <name>operator~</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a00411ab4b5b07889daa66f136426b4ea</anchor>
      <arglist>(const Vector&lt; size, Integral &gt; &amp;vector)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt; &amp;</type>
      <name>operator&amp;=</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a3b78d1d2ce3be67ea17653af50d19619</anchor>
      <arglist>(Vector&lt; size, Integral &gt; &amp;a, const Vector&lt; size, Integral &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt;</type>
      <name>operator&amp;</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a0238714e940497dcaea6d382a0414d6a</anchor>
      <arglist>(const Vector&lt; size, Integral &gt; &amp;a, const Vector&lt; size, Integral &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt; &amp;</type>
      <name>operator|=</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a5df02285d88aba20bd36f6d4b8ac3c7c</anchor>
      <arglist>(Vector&lt; size, Integral &gt; &amp;a, const Vector&lt; size, Integral &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt;</type>
      <name>operator|</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>ac012aaff8d2971cb052a5dd9a526be2a</anchor>
      <arglist>(const Vector&lt; size, Integral &gt; &amp;a, const Vector&lt; size, Integral &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt; &amp;</type>
      <name>operator^=</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>af87d3deaa8742d561764bec080dbc191</anchor>
      <arglist>(Vector&lt; size, Integral &gt; &amp;a, const Vector&lt; size, Integral &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt;</type>
      <name>operator^</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>af0c70565adfae8fefcdc9e2f204802df</anchor>
      <arglist>(const Vector&lt; size, Integral &gt; &amp;a, const Vector&lt; size, Integral &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt; &amp;</type>
      <name>operator&lt;&lt;=</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a701d71a72018077de086cbacb7af8cde</anchor>
      <arglist>(Vector&lt; size, Integral &gt; &amp;vector, Integral shift)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a36525d8e60373fca36eee6d299daac1f</anchor>
      <arglist>(const Vector&lt; size, Integral &gt; &amp;vector, Integral shift)</arglist>
    </member>
    <member kind="function">
      <type>Corrade::Utility::Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a342462ce2d3144347242b0c1b0eb2613</anchor>
      <arglist>(Corrade::Utility::Debug &amp;debug, const Vector&lt; size, T &gt; &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt; &amp;</type>
      <name>operator&gt;&gt;=</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>ab1a92b51f3a3ac5ee700196a370a28d0</anchor>
      <arglist>(Vector&lt; size, Integral &gt; &amp;vector, Integral shift)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt;</type>
      <name>operator&gt;&gt;</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a08e4344912fb1df2eafbe4f322c128cd</anchor>
      <arglist>(const Vector&lt; size, Integral &gt; &amp;vector, Integral shift)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Vector&lt; 4, Float &gt;</name>
    <filename>classMagnum_1_1Math_1_1Vector.html</filename>
    <member kind="typedef">
      <type>Float</type>
      <name>Type</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a799a265eb81bc32c08a88cedfa104879</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Size</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a5bea718d1a6ae8731ff2abe60169cc73a2743ca2e6cd2d98e8248e18a7bfc0b32</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>Float</type>
      <name>dot</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a27cd08ebde959f77b5f95a25b4e4c433</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Vector</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>aef609f61883287f2da4754a7d194d1c9</anchor>
      <arglist>(ZeroInitT=ZeroInit) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Vector</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>ac4607314a44afd4d55f5a8fba1c6cde6</anchor>
      <arglist>(NoInitT) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Vector</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a18ebfc260c5d7553780314ba223c450e</anchor>
      <arglist>(Float first, U...next) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Vector</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>abc0b3737f4be19d7fca3c0c928d10269</anchor>
      <arglist>(Float value) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Vector</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a87d5b00ae87e9ebc62fb6a1f6c89e88c</anchor>
      <arglist>(const Vector&lt; size, U &gt; &amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Vector</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>ad12afa60a22bbfad159641d28515e63d</anchor>
      <arglist>(const U &amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Vector</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a0a29fb87300604a5b09eca4d6e832450</anchor>
      <arglist>(const Vector&lt; size, Float &gt; &amp;) noexcept=default</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>operator U</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a7ea21e43819d2c24a40d4bdbe4c732ec</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Float *</type>
      <name>data</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a3c8693d13c4bb5c98fda71953ea23e1b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>constexpr const Float *</type>
      <name>data</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>aa499f6ed07b06982bf1881bc3df4d75f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Float &amp;</type>
      <name>operator[]</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>af1fb6b30bdaf2fb2ebeeae5fcceae660</anchor>
      <arglist>(std::size_t pos)</arglist>
    </member>
    <member kind="function">
      <type>constexpr Float</type>
      <name>operator[]</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>af7a1c0969aea6861334031dd21df3aeb</anchor>
      <arglist>(std::size_t pos) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a919d88c687a64fbf439add184fd83e26</anchor>
      <arglist>(const Vector&lt; size, Float &gt; &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a012b1b785d237f267f01b5eab1128795</anchor>
      <arglist>(const Vector&lt; size, Float &gt; &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>BoolVector&lt; size &gt;</type>
      <name>operator&lt;</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>ade479b15513d5fe5e3e77b58255140a5</anchor>
      <arglist>(const Vector&lt; size, Float &gt; &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>BoolVector&lt; size &gt;</type>
      <name>operator&lt;=</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a98eca28be48e27ce39f71780a1b08b53</anchor>
      <arglist>(const Vector&lt; size, Float &gt; &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>BoolVector&lt; size &gt;</type>
      <name>operator&gt;=</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>af357da6a5a72afa948dfa36b928e81d7</anchor>
      <arglist>(const Vector&lt; size, Float &gt; &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>BoolVector&lt; size &gt;</type>
      <name>operator&gt;</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a81d67cccc8c178c8dbbc62785ff8ce52</anchor>
      <arglist>(const Vector&lt; size, Float &gt; &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isZero</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a2cf5ab65f37c0c87f894acaa88704fc4</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isNormalized</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a90e3bf3dddebb3e57d1ebf62d4e1e394</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Float &gt;</type>
      <name>operator-</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a2384a93655f0e39fbbf54891634167c9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Float &gt;</type>
      <name>operator-</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>af2dafe1a15e8cd4588d03e6ae844aa6d</anchor>
      <arglist>(const Vector&lt; size, Float &gt; &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Float &gt; &amp;</type>
      <name>operator+=</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>ac0d2c99872bab8dfecdd3e09667c7292</anchor>
      <arglist>(const Vector&lt; size, Float &gt; &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Float &gt;</type>
      <name>operator+</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a91f951330a2e574eb22eba396785cf75</anchor>
      <arglist>(const Vector&lt; size, Float &gt; &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Float &gt; &amp;</type>
      <name>operator-=</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a2879e6a7da21fb210a32731b085e8db4</anchor>
      <arglist>(const Vector&lt; size, Float &gt; &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Float &gt; &amp;</type>
      <name>operator*=</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>acf36c1445de24bd87912f0a107e51d5b</anchor>
      <arglist>(Float number)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Float &gt; &amp;</type>
      <name>operator*=</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a212500235cc0ef744d7a0b9e1d443156</anchor>
      <arglist>(const Vector&lt; size, Float &gt; &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Float &gt;</type>
      <name>operator*</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>acb266b5c55a30d7cd871a5c07de8bba4</anchor>
      <arglist>(Float number) const</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Float &gt;</type>
      <name>operator*</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>adb264b0fa9decead346d8ad55ea27156</anchor>
      <arglist>(const Vector&lt; size, Float &gt; &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Float &gt; &amp;</type>
      <name>operator/=</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>acdea6a05fcd2c83f44107294a436c82a</anchor>
      <arglist>(Float number)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Float &gt; &amp;</type>
      <name>operator/=</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>afc091891a46419127de515a9714ed9ef</anchor>
      <arglist>(const Vector&lt; size, Float &gt; &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Float &gt;</type>
      <name>operator/</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>aac7cb85a8c6c9018536a7cc3a88c52aa</anchor>
      <arglist>(Float number) const</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Float &gt;</type>
      <name>operator/</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a453483612a7d579a160ce854d42052c6</anchor>
      <arglist>(const Vector&lt; size, Float &gt; &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>Float</type>
      <name>length</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>ab4e8d3ce060ec466ce084f01d2d88c14</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Float</type>
      <name>lengthInverted</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a04f15a7423d2a4f144afb0266844463a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Float &gt;</type>
      <name>normalized</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>aa1678ce501cc313b3432c49ed8eb033c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Float &gt;</type>
      <name>resized</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a0a48a0a0ceff711ff667453721cb6f5f</anchor>
      <arglist>(Float length) const</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Float &gt;</type>
      <name>projected</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a0ee82cf43c67f4a0bcca58b13ae39a96</anchor>
      <arglist>(const Vector&lt; size, Float &gt; &amp;line) const</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Float &gt;</type>
      <name>projectedOntoNormalized</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a91d96dda853b90e29891003ebc394ad5</anchor>
      <arglist>(const Vector&lt; size, Float &gt; &amp;line) const</arglist>
    </member>
    <member kind="function">
      <type>constexpr Vector&lt; size, Float &gt;</type>
      <name>flipped</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a2f11ab0253d3d99574af9e4e4875dc26</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Float</type>
      <name>sum</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a28add84fe498a71e46d422b9ba31bb84</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Float</type>
      <name>product</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a001c2ede68e794a2b3648004a3b712af</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Float</type>
      <name>min</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>af029f9f7810201f0bd8d9580af273bde</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Float</type>
      <name>max</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a0e5e9bb60ceb49f00569ec9a919e025a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::pair&lt; Float, Float &gt;</type>
      <name>minmax</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a958d3a01ab7b3a416d9d051b23bdee85</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Vector&lt; size, Float &gt; &amp;</type>
      <name>from</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>abe9b9bbf9d5a2fdaca278cfab504cbe0</anchor>
      <arglist>(Float *data)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const Vector&lt; size, Float &gt; &amp;</type>
      <name>from</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a3f9691a1ce7d74a1a59867673f2324e3</anchor>
      <arglist>(const Float *data)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static constexpr Vector&lt; size, Float &gt;</type>
      <name>pad</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>acfc88ca9f6c47b731a90ef0e1d8ec8c0</anchor>
      <arglist>(const Vector&lt; otherSize, Float &gt; &amp;a, Float value=Float(0))</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Float</type>
      <name>dot</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>af9737bbef2c4c895dfb6f2bdc6426d72</anchor>
      <arglist>(const Vector&lt; size, Float &gt; &amp;a, const Vector&lt; size, Float &gt; &amp;b)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Rad&lt; Float &gt;</type>
      <name>angle</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a8d15d1f369cbb4543d1bd73d7c24f8a8</anchor>
      <arglist>(const Vector&lt; size, Float &gt; &amp;normalizedA, const Vector&lt; size, Float &gt; &amp;normalizedB)</arglist>
    </member>
    <member kind="function">
      <type>Float</type>
      <name>dot</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>afcea7c945bee7d210d66d1a47d85944d</anchor>
      <arglist>(const Vector&lt; size, Float &gt; &amp;a, const Vector&lt; size, Float &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>Rad&lt; Float &gt;</type>
      <name>angle</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a754897e5423279be34bfaba81777e51c</anchor>
      <arglist>(const Vector&lt; size, Float &gt; &amp;normalizedA, const Vector&lt; size, Float &gt; &amp;normalizedB)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt; &amp;</type>
      <name>operator*=</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>aeb4ed8ac931963834097f37248a43a38</anchor>
      <arglist>(Vector&lt; size, Integral &gt; &amp;vector, FloatingPoint number)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt; &amp;</type>
      <name>operator*=</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a118fb08966b961aafa620802ab232b90</anchor>
      <arglist>(Vector&lt; size, Integral &gt; &amp;a, const Vector&lt; size, FloatingPoint &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Float &gt;</type>
      <name>operator*</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a00e2b338cabfb20cbaf475bc4a74fe5a</anchor>
      <arglist>(Float number, const Vector&lt; size, Float &gt; &amp;vector)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt;</type>
      <name>operator*</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a951d0c686b0e14fc4b2c20cdd6c01dfc</anchor>
      <arglist>(const Vector&lt; size, Integral &gt; &amp;vector, FloatingPoint number)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt;</type>
      <name>operator*</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a2dd6210e8bfbcd1306eaecb9ca999c9d</anchor>
      <arglist>(FloatingPoint number, const Vector&lt; size, Integral &gt; &amp;vector)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt;</type>
      <name>operator*</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a4ca332f0533a3e7577a44495d91b6e74</anchor>
      <arglist>(const Vector&lt; size, Integral &gt; &amp;a, const Vector&lt; size, FloatingPoint &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt;</type>
      <name>operator*</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a6e8e1bd5f68c4bdc2aa32c77acd11791</anchor>
      <arglist>(const Vector&lt; size, FloatingPoint &gt; &amp;a, const Vector&lt; size, Integral &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt; &amp;</type>
      <name>operator/=</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a8ff1ad5c99830e1f120e027119013624</anchor>
      <arglist>(Vector&lt; size, Integral &gt; &amp;vector, FloatingPoint number)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt; &amp;</type>
      <name>operator/=</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a5877523931df8f205ff225d7580088f8</anchor>
      <arglist>(Vector&lt; size, Integral &gt; &amp;a, const Vector&lt; size, FloatingPoint &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Float &gt;</type>
      <name>operator/</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>ac602863261ec1a6ff02fe1ec5bffad37</anchor>
      <arglist>(Float number, const Vector&lt; size, Float &gt; &amp;vector)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt;</type>
      <name>operator/</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a790689ac947bedb3f294ebfc9aeb686a</anchor>
      <arglist>(const Vector&lt; size, Integral &gt; &amp;vector, FloatingPoint number)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt;</type>
      <name>operator/</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a1da0ed702e57e8ec6464e474497913d8</anchor>
      <arglist>(const Vector&lt; size, Integral &gt; &amp;a, const Vector&lt; size, FloatingPoint &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt; &amp;</type>
      <name>operator%=</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>ade632882b22533924e5dcd2c8b3f44a1</anchor>
      <arglist>(Vector&lt; size, Integral &gt; &amp;a, Integral b)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt; &amp;</type>
      <name>operator%=</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a4a51f33fcbcdb59bc27313898d069769</anchor>
      <arglist>(Vector&lt; size, Integral &gt; &amp;a, const Vector&lt; size, Integral &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt;</type>
      <name>operator%</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a4d5f66e2c273e6ddd6f5d97410778980</anchor>
      <arglist>(const Vector&lt; size, Integral &gt; &amp;a, Integral b)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt;</type>
      <name>operator%</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>ae757e71a5675609a908ba245919d7b5c</anchor>
      <arglist>(const Vector&lt; size, Integral &gt; &amp;a, const Vector&lt; size, Integral &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt;</type>
      <name>operator~</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a00411ab4b5b07889daa66f136426b4ea</anchor>
      <arglist>(const Vector&lt; size, Integral &gt; &amp;vector)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt; &amp;</type>
      <name>operator&amp;=</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a3b78d1d2ce3be67ea17653af50d19619</anchor>
      <arglist>(Vector&lt; size, Integral &gt; &amp;a, const Vector&lt; size, Integral &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt;</type>
      <name>operator&amp;</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a0238714e940497dcaea6d382a0414d6a</anchor>
      <arglist>(const Vector&lt; size, Integral &gt; &amp;a, const Vector&lt; size, Integral &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt; &amp;</type>
      <name>operator|=</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a5df02285d88aba20bd36f6d4b8ac3c7c</anchor>
      <arglist>(Vector&lt; size, Integral &gt; &amp;a, const Vector&lt; size, Integral &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt;</type>
      <name>operator|</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>ac012aaff8d2971cb052a5dd9a526be2a</anchor>
      <arglist>(const Vector&lt; size, Integral &gt; &amp;a, const Vector&lt; size, Integral &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt; &amp;</type>
      <name>operator^=</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>af87d3deaa8742d561764bec080dbc191</anchor>
      <arglist>(Vector&lt; size, Integral &gt; &amp;a, const Vector&lt; size, Integral &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt;</type>
      <name>operator^</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>af0c70565adfae8fefcdc9e2f204802df</anchor>
      <arglist>(const Vector&lt; size, Integral &gt; &amp;a, const Vector&lt; size, Integral &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt; &amp;</type>
      <name>operator&lt;&lt;=</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a701d71a72018077de086cbacb7af8cde</anchor>
      <arglist>(Vector&lt; size, Integral &gt; &amp;vector, Integral shift)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a36525d8e60373fca36eee6d299daac1f</anchor>
      <arglist>(const Vector&lt; size, Integral &gt; &amp;vector, Integral shift)</arglist>
    </member>
    <member kind="function">
      <type>Corrade::Utility::Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a342462ce2d3144347242b0c1b0eb2613</anchor>
      <arglist>(Corrade::Utility::Debug &amp;debug, const Vector&lt; size, Float &gt; &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt; &amp;</type>
      <name>operator&gt;&gt;=</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>ab1a92b51f3a3ac5ee700196a370a28d0</anchor>
      <arglist>(Vector&lt; size, Integral &gt; &amp;vector, Integral shift)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt;</type>
      <name>operator&gt;&gt;</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a08e4344912fb1df2eafbe4f322c128cd</anchor>
      <arglist>(const Vector&lt; size, Integral &gt; &amp;vector, Integral shift)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Vector&lt; 4, T &gt;</name>
    <filename>classMagnum_1_1Math_1_1Vector.html</filename>
    <member kind="typedef">
      <type>T</type>
      <name>Type</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a799a265eb81bc32c08a88cedfa104879</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Size</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a5bea718d1a6ae8731ff2abe60169cc73a2743ca2e6cd2d98e8248e18a7bfc0b32</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>dot</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a27cd08ebde959f77b5f95a25b4e4c433</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Vector</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>aef609f61883287f2da4754a7d194d1c9</anchor>
      <arglist>(ZeroInitT=ZeroInit) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Vector</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>ac4607314a44afd4d55f5a8fba1c6cde6</anchor>
      <arglist>(NoInitT) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Vector</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a18ebfc260c5d7553780314ba223c450e</anchor>
      <arglist>(T first, U...next) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Vector</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>abc0b3737f4be19d7fca3c0c928d10269</anchor>
      <arglist>(T value) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Vector</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a87d5b00ae87e9ebc62fb6a1f6c89e88c</anchor>
      <arglist>(const Vector&lt; size, U &gt; &amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Vector</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>ad12afa60a22bbfad159641d28515e63d</anchor>
      <arglist>(const U &amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Vector</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a0a29fb87300604a5b09eca4d6e832450</anchor>
      <arglist>(const Vector&lt; size, T &gt; &amp;) noexcept=default</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>operator U</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a7ea21e43819d2c24a40d4bdbe4c732ec</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>T *</type>
      <name>data</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a3c8693d13c4bb5c98fda71953ea23e1b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>constexpr const T *</type>
      <name>data</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>aa499f6ed07b06982bf1881bc3df4d75f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>T &amp;</type>
      <name>operator[]</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>af1fb6b30bdaf2fb2ebeeae5fcceae660</anchor>
      <arglist>(std::size_t pos)</arglist>
    </member>
    <member kind="function">
      <type>constexpr T</type>
      <name>operator[]</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>af7a1c0969aea6861334031dd21df3aeb</anchor>
      <arglist>(std::size_t pos) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a919d88c687a64fbf439add184fd83e26</anchor>
      <arglist>(const Vector&lt; size, T &gt; &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a012b1b785d237f267f01b5eab1128795</anchor>
      <arglist>(const Vector&lt; size, T &gt; &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>BoolVector&lt; size &gt;</type>
      <name>operator&lt;</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>ade479b15513d5fe5e3e77b58255140a5</anchor>
      <arglist>(const Vector&lt; size, T &gt; &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>BoolVector&lt; size &gt;</type>
      <name>operator&lt;=</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a98eca28be48e27ce39f71780a1b08b53</anchor>
      <arglist>(const Vector&lt; size, T &gt; &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>BoolVector&lt; size &gt;</type>
      <name>operator&gt;=</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>af357da6a5a72afa948dfa36b928e81d7</anchor>
      <arglist>(const Vector&lt; size, T &gt; &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>BoolVector&lt; size &gt;</type>
      <name>operator&gt;</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a81d67cccc8c178c8dbbc62785ff8ce52</anchor>
      <arglist>(const Vector&lt; size, T &gt; &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isZero</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a2cf5ab65f37c0c87f894acaa88704fc4</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isNormalized</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a90e3bf3dddebb3e57d1ebf62d4e1e394</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, T &gt;</type>
      <name>operator-</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a2384a93655f0e39fbbf54891634167c9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, T &gt;</type>
      <name>operator-</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>af2dafe1a15e8cd4588d03e6ae844aa6d</anchor>
      <arglist>(const Vector&lt; size, T &gt; &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, T &gt; &amp;</type>
      <name>operator+=</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>ac0d2c99872bab8dfecdd3e09667c7292</anchor>
      <arglist>(const Vector&lt; size, T &gt; &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, T &gt;</type>
      <name>operator+</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a91f951330a2e574eb22eba396785cf75</anchor>
      <arglist>(const Vector&lt; size, T &gt; &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, T &gt; &amp;</type>
      <name>operator-=</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a2879e6a7da21fb210a32731b085e8db4</anchor>
      <arglist>(const Vector&lt; size, T &gt; &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, T &gt; &amp;</type>
      <name>operator*=</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>acf36c1445de24bd87912f0a107e51d5b</anchor>
      <arglist>(T number)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, T &gt; &amp;</type>
      <name>operator*=</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a212500235cc0ef744d7a0b9e1d443156</anchor>
      <arglist>(const Vector&lt; size, T &gt; &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, T &gt;</type>
      <name>operator*</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>acb266b5c55a30d7cd871a5c07de8bba4</anchor>
      <arglist>(T number) const</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, T &gt;</type>
      <name>operator*</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>adb264b0fa9decead346d8ad55ea27156</anchor>
      <arglist>(const Vector&lt; size, T &gt; &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, T &gt; &amp;</type>
      <name>operator/=</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>acdea6a05fcd2c83f44107294a436c82a</anchor>
      <arglist>(T number)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, T &gt; &amp;</type>
      <name>operator/=</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>afc091891a46419127de515a9714ed9ef</anchor>
      <arglist>(const Vector&lt; size, T &gt; &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, T &gt;</type>
      <name>operator/</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>aac7cb85a8c6c9018536a7cc3a88c52aa</anchor>
      <arglist>(T number) const</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, T &gt;</type>
      <name>operator/</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a453483612a7d579a160ce854d42052c6</anchor>
      <arglist>(const Vector&lt; size, T &gt; &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>length</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>ab4e8d3ce060ec466ce084f01d2d88c14</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>lengthInverted</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a04f15a7423d2a4f144afb0266844463a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, T &gt;</type>
      <name>normalized</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>aa1678ce501cc313b3432c49ed8eb033c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, T &gt;</type>
      <name>resized</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a0a48a0a0ceff711ff667453721cb6f5f</anchor>
      <arglist>(T length) const</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, T &gt;</type>
      <name>projected</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a0ee82cf43c67f4a0bcca58b13ae39a96</anchor>
      <arglist>(const Vector&lt; size, T &gt; &amp;line) const</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, T &gt;</type>
      <name>projectedOntoNormalized</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a91d96dda853b90e29891003ebc394ad5</anchor>
      <arglist>(const Vector&lt; size, T &gt; &amp;line) const</arglist>
    </member>
    <member kind="function">
      <type>constexpr Vector&lt; size, T &gt;</type>
      <name>flipped</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a2f11ab0253d3d99574af9e4e4875dc26</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>sum</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a28add84fe498a71e46d422b9ba31bb84</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>product</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a001c2ede68e794a2b3648004a3b712af</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>min</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>af029f9f7810201f0bd8d9580af273bde</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>max</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a0e5e9bb60ceb49f00569ec9a919e025a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::pair&lt; T, T &gt;</type>
      <name>minmax</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a958d3a01ab7b3a416d9d051b23bdee85</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Vector&lt; size, T &gt; &amp;</type>
      <name>from</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>abe9b9bbf9d5a2fdaca278cfab504cbe0</anchor>
      <arglist>(T *data)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const Vector&lt; size, T &gt; &amp;</type>
      <name>from</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a3f9691a1ce7d74a1a59867673f2324e3</anchor>
      <arglist>(const T *data)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static constexpr Vector&lt; size, T &gt;</type>
      <name>pad</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>acfc88ca9f6c47b731a90ef0e1d8ec8c0</anchor>
      <arglist>(const Vector&lt; otherSize, T &gt; &amp;a, T value=T(0))</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static T</type>
      <name>dot</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>af9737bbef2c4c895dfb6f2bdc6426d72</anchor>
      <arglist>(const Vector&lt; size, T &gt; &amp;a, const Vector&lt; size, T &gt; &amp;b)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Rad&lt; T &gt;</type>
      <name>angle</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a8d15d1f369cbb4543d1bd73d7c24f8a8</anchor>
      <arglist>(const Vector&lt; size, T &gt; &amp;normalizedA, const Vector&lt; size, T &gt; &amp;normalizedB)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>dot</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>afcea7c945bee7d210d66d1a47d85944d</anchor>
      <arglist>(const Vector&lt; size, T &gt; &amp;a, const Vector&lt; size, T &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>Rad&lt; T &gt;</type>
      <name>angle</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a754897e5423279be34bfaba81777e51c</anchor>
      <arglist>(const Vector&lt; size, T &gt; &amp;normalizedA, const Vector&lt; size, T &gt; &amp;normalizedB)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt; &amp;</type>
      <name>operator*=</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>aeb4ed8ac931963834097f37248a43a38</anchor>
      <arglist>(Vector&lt; size, Integral &gt; &amp;vector, FloatingPoint number)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt; &amp;</type>
      <name>operator*=</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a118fb08966b961aafa620802ab232b90</anchor>
      <arglist>(Vector&lt; size, Integral &gt; &amp;a, const Vector&lt; size, FloatingPoint &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, T &gt;</type>
      <name>operator*</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a00e2b338cabfb20cbaf475bc4a74fe5a</anchor>
      <arglist>(T number, const Vector&lt; size, T &gt; &amp;vector)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt;</type>
      <name>operator*</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a951d0c686b0e14fc4b2c20cdd6c01dfc</anchor>
      <arglist>(const Vector&lt; size, Integral &gt; &amp;vector, FloatingPoint number)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt;</type>
      <name>operator*</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a2dd6210e8bfbcd1306eaecb9ca999c9d</anchor>
      <arglist>(FloatingPoint number, const Vector&lt; size, Integral &gt; &amp;vector)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt;</type>
      <name>operator*</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a4ca332f0533a3e7577a44495d91b6e74</anchor>
      <arglist>(const Vector&lt; size, Integral &gt; &amp;a, const Vector&lt; size, FloatingPoint &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt;</type>
      <name>operator*</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a6e8e1bd5f68c4bdc2aa32c77acd11791</anchor>
      <arglist>(const Vector&lt; size, FloatingPoint &gt; &amp;a, const Vector&lt; size, Integral &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt; &amp;</type>
      <name>operator/=</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a8ff1ad5c99830e1f120e027119013624</anchor>
      <arglist>(Vector&lt; size, Integral &gt; &amp;vector, FloatingPoint number)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt; &amp;</type>
      <name>operator/=</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a5877523931df8f205ff225d7580088f8</anchor>
      <arglist>(Vector&lt; size, Integral &gt; &amp;a, const Vector&lt; size, FloatingPoint &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, T &gt;</type>
      <name>operator/</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>ac602863261ec1a6ff02fe1ec5bffad37</anchor>
      <arglist>(T number, const Vector&lt; size, T &gt; &amp;vector)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt;</type>
      <name>operator/</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a790689ac947bedb3f294ebfc9aeb686a</anchor>
      <arglist>(const Vector&lt; size, Integral &gt; &amp;vector, FloatingPoint number)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt;</type>
      <name>operator/</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a1da0ed702e57e8ec6464e474497913d8</anchor>
      <arglist>(const Vector&lt; size, Integral &gt; &amp;a, const Vector&lt; size, FloatingPoint &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt; &amp;</type>
      <name>operator%=</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>ade632882b22533924e5dcd2c8b3f44a1</anchor>
      <arglist>(Vector&lt; size, Integral &gt; &amp;a, Integral b)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt; &amp;</type>
      <name>operator%=</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a4a51f33fcbcdb59bc27313898d069769</anchor>
      <arglist>(Vector&lt; size, Integral &gt; &amp;a, const Vector&lt; size, Integral &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt;</type>
      <name>operator%</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a4d5f66e2c273e6ddd6f5d97410778980</anchor>
      <arglist>(const Vector&lt; size, Integral &gt; &amp;a, Integral b)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt;</type>
      <name>operator%</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>ae757e71a5675609a908ba245919d7b5c</anchor>
      <arglist>(const Vector&lt; size, Integral &gt; &amp;a, const Vector&lt; size, Integral &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt;</type>
      <name>operator~</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a00411ab4b5b07889daa66f136426b4ea</anchor>
      <arglist>(const Vector&lt; size, Integral &gt; &amp;vector)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt; &amp;</type>
      <name>operator&amp;=</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a3b78d1d2ce3be67ea17653af50d19619</anchor>
      <arglist>(Vector&lt; size, Integral &gt; &amp;a, const Vector&lt; size, Integral &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt;</type>
      <name>operator&amp;</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a0238714e940497dcaea6d382a0414d6a</anchor>
      <arglist>(const Vector&lt; size, Integral &gt; &amp;a, const Vector&lt; size, Integral &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt; &amp;</type>
      <name>operator|=</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a5df02285d88aba20bd36f6d4b8ac3c7c</anchor>
      <arglist>(Vector&lt; size, Integral &gt; &amp;a, const Vector&lt; size, Integral &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt;</type>
      <name>operator|</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>ac012aaff8d2971cb052a5dd9a526be2a</anchor>
      <arglist>(const Vector&lt; size, Integral &gt; &amp;a, const Vector&lt; size, Integral &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt; &amp;</type>
      <name>operator^=</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>af87d3deaa8742d561764bec080dbc191</anchor>
      <arglist>(Vector&lt; size, Integral &gt; &amp;a, const Vector&lt; size, Integral &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt;</type>
      <name>operator^</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>af0c70565adfae8fefcdc9e2f204802df</anchor>
      <arglist>(const Vector&lt; size, Integral &gt; &amp;a, const Vector&lt; size, Integral &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt; &amp;</type>
      <name>operator&lt;&lt;=</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a701d71a72018077de086cbacb7af8cde</anchor>
      <arglist>(Vector&lt; size, Integral &gt; &amp;vector, Integral shift)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a36525d8e60373fca36eee6d299daac1f</anchor>
      <arglist>(const Vector&lt; size, Integral &gt; &amp;vector, Integral shift)</arglist>
    </member>
    <member kind="function">
      <type>Corrade::Utility::Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a342462ce2d3144347242b0c1b0eb2613</anchor>
      <arglist>(Corrade::Utility::Debug &amp;debug, const Vector&lt; size, T &gt; &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt; &amp;</type>
      <name>operator&gt;&gt;=</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>ab1a92b51f3a3ac5ee700196a370a28d0</anchor>
      <arglist>(Vector&lt; size, Integral &gt; &amp;vector, Integral shift)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt;</type>
      <name>operator&gt;&gt;</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a08e4344912fb1df2eafbe4f322c128cd</anchor>
      <arglist>(const Vector&lt; size, Integral &gt; &amp;vector, Integral shift)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Vector&lt; Dimensions, std::int32_t &gt;</name>
    <filename>classMagnum_1_1Math_1_1Vector.html</filename>
    <member kind="typedef">
      <type>std::int32_t</type>
      <name>Type</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a799a265eb81bc32c08a88cedfa104879</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Size</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a5bea718d1a6ae8731ff2abe60169cc73a2743ca2e6cd2d98e8248e18a7bfc0b32</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>std::int32_t</type>
      <name>dot</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a27cd08ebde959f77b5f95a25b4e4c433</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Vector</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>aef609f61883287f2da4754a7d194d1c9</anchor>
      <arglist>(ZeroInitT=ZeroInit) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Vector</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>ac4607314a44afd4d55f5a8fba1c6cde6</anchor>
      <arglist>(NoInitT) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Vector</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a18ebfc260c5d7553780314ba223c450e</anchor>
      <arglist>(std::int32_t first, U...next) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Vector</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>abc0b3737f4be19d7fca3c0c928d10269</anchor>
      <arglist>(std::int32_t value) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Vector</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a87d5b00ae87e9ebc62fb6a1f6c89e88c</anchor>
      <arglist>(const Vector&lt; size, U &gt; &amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Vector</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>ad12afa60a22bbfad159641d28515e63d</anchor>
      <arglist>(const U &amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Vector</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a0a29fb87300604a5b09eca4d6e832450</anchor>
      <arglist>(const Vector&lt; size, std::int32_t &gt; &amp;) noexcept=default</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>operator U</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a7ea21e43819d2c24a40d4bdbe4c732ec</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::int32_t *</type>
      <name>data</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a3c8693d13c4bb5c98fda71953ea23e1b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>constexpr const std::int32_t *</type>
      <name>data</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>aa499f6ed07b06982bf1881bc3df4d75f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::int32_t &amp;</type>
      <name>operator[]</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>af1fb6b30bdaf2fb2ebeeae5fcceae660</anchor>
      <arglist>(std::size_t pos)</arglist>
    </member>
    <member kind="function">
      <type>constexpr std::int32_t</type>
      <name>operator[]</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>af7a1c0969aea6861334031dd21df3aeb</anchor>
      <arglist>(std::size_t pos) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a919d88c687a64fbf439add184fd83e26</anchor>
      <arglist>(const Vector&lt; size, std::int32_t &gt; &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a012b1b785d237f267f01b5eab1128795</anchor>
      <arglist>(const Vector&lt; size, std::int32_t &gt; &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>BoolVector&lt; size &gt;</type>
      <name>operator&lt;</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>ade479b15513d5fe5e3e77b58255140a5</anchor>
      <arglist>(const Vector&lt; size, std::int32_t &gt; &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>BoolVector&lt; size &gt;</type>
      <name>operator&lt;=</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a98eca28be48e27ce39f71780a1b08b53</anchor>
      <arglist>(const Vector&lt; size, std::int32_t &gt; &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>BoolVector&lt; size &gt;</type>
      <name>operator&gt;=</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>af357da6a5a72afa948dfa36b928e81d7</anchor>
      <arglist>(const Vector&lt; size, std::int32_t &gt; &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>BoolVector&lt; size &gt;</type>
      <name>operator&gt;</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a81d67cccc8c178c8dbbc62785ff8ce52</anchor>
      <arglist>(const Vector&lt; size, std::int32_t &gt; &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isZero</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a2cf5ab65f37c0c87f894acaa88704fc4</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isNormalized</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a90e3bf3dddebb3e57d1ebf62d4e1e394</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, std::int32_t &gt;</type>
      <name>operator-</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a2384a93655f0e39fbbf54891634167c9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, std::int32_t &gt;</type>
      <name>operator-</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>af2dafe1a15e8cd4588d03e6ae844aa6d</anchor>
      <arglist>(const Vector&lt; size, std::int32_t &gt; &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, std::int32_t &gt; &amp;</type>
      <name>operator+=</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>ac0d2c99872bab8dfecdd3e09667c7292</anchor>
      <arglist>(const Vector&lt; size, std::int32_t &gt; &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, std::int32_t &gt;</type>
      <name>operator+</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a91f951330a2e574eb22eba396785cf75</anchor>
      <arglist>(const Vector&lt; size, std::int32_t &gt; &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, std::int32_t &gt; &amp;</type>
      <name>operator-=</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a2879e6a7da21fb210a32731b085e8db4</anchor>
      <arglist>(const Vector&lt; size, std::int32_t &gt; &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, std::int32_t &gt; &amp;</type>
      <name>operator*=</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>acf36c1445de24bd87912f0a107e51d5b</anchor>
      <arglist>(std::int32_t number)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, std::int32_t &gt; &amp;</type>
      <name>operator*=</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a212500235cc0ef744d7a0b9e1d443156</anchor>
      <arglist>(const Vector&lt; size, std::int32_t &gt; &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, std::int32_t &gt;</type>
      <name>operator*</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>acb266b5c55a30d7cd871a5c07de8bba4</anchor>
      <arglist>(std::int32_t number) const</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, std::int32_t &gt;</type>
      <name>operator*</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>adb264b0fa9decead346d8ad55ea27156</anchor>
      <arglist>(const Vector&lt; size, std::int32_t &gt; &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, std::int32_t &gt; &amp;</type>
      <name>operator/=</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>acdea6a05fcd2c83f44107294a436c82a</anchor>
      <arglist>(std::int32_t number)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, std::int32_t &gt; &amp;</type>
      <name>operator/=</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>afc091891a46419127de515a9714ed9ef</anchor>
      <arglist>(const Vector&lt; size, std::int32_t &gt; &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, std::int32_t &gt;</type>
      <name>operator/</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>aac7cb85a8c6c9018536a7cc3a88c52aa</anchor>
      <arglist>(std::int32_t number) const</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, std::int32_t &gt;</type>
      <name>operator/</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a453483612a7d579a160ce854d42052c6</anchor>
      <arglist>(const Vector&lt; size, std::int32_t &gt; &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>std::int32_t</type>
      <name>length</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>ab4e8d3ce060ec466ce084f01d2d88c14</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::int32_t</type>
      <name>lengthInverted</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a04f15a7423d2a4f144afb0266844463a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, std::int32_t &gt;</type>
      <name>normalized</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>aa1678ce501cc313b3432c49ed8eb033c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, std::int32_t &gt;</type>
      <name>resized</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a0a48a0a0ceff711ff667453721cb6f5f</anchor>
      <arglist>(std::int32_t length) const</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, std::int32_t &gt;</type>
      <name>projected</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a0ee82cf43c67f4a0bcca58b13ae39a96</anchor>
      <arglist>(const Vector&lt; size, std::int32_t &gt; &amp;line) const</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, std::int32_t &gt;</type>
      <name>projectedOntoNormalized</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a91d96dda853b90e29891003ebc394ad5</anchor>
      <arglist>(const Vector&lt; size, std::int32_t &gt; &amp;line) const</arglist>
    </member>
    <member kind="function">
      <type>constexpr Vector&lt; size, std::int32_t &gt;</type>
      <name>flipped</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a2f11ab0253d3d99574af9e4e4875dc26</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::int32_t</type>
      <name>sum</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a28add84fe498a71e46d422b9ba31bb84</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::int32_t</type>
      <name>product</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a001c2ede68e794a2b3648004a3b712af</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::int32_t</type>
      <name>min</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>af029f9f7810201f0bd8d9580af273bde</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::int32_t</type>
      <name>max</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a0e5e9bb60ceb49f00569ec9a919e025a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::pair&lt; std::int32_t, std::int32_t &gt;</type>
      <name>minmax</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a958d3a01ab7b3a416d9d051b23bdee85</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Vector&lt; size, std::int32_t &gt; &amp;</type>
      <name>from</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>abe9b9bbf9d5a2fdaca278cfab504cbe0</anchor>
      <arglist>(std::int32_t *data)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const Vector&lt; size, std::int32_t &gt; &amp;</type>
      <name>from</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a3f9691a1ce7d74a1a59867673f2324e3</anchor>
      <arglist>(const std::int32_t *data)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static constexpr Vector&lt; size, std::int32_t &gt;</type>
      <name>pad</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>acfc88ca9f6c47b731a90ef0e1d8ec8c0</anchor>
      <arglist>(const Vector&lt; otherSize, std::int32_t &gt; &amp;a, std::int32_t value=std::int32_t(0))</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::int32_t</type>
      <name>dot</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>af9737bbef2c4c895dfb6f2bdc6426d72</anchor>
      <arglist>(const Vector&lt; size, std::int32_t &gt; &amp;a, const Vector&lt; size, std::int32_t &gt; &amp;b)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Rad&lt; std::int32_t &gt;</type>
      <name>angle</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a8d15d1f369cbb4543d1bd73d7c24f8a8</anchor>
      <arglist>(const Vector&lt; size, std::int32_t &gt; &amp;normalizedA, const Vector&lt; size, std::int32_t &gt; &amp;normalizedB)</arglist>
    </member>
    <member kind="function">
      <type>std::int32_t</type>
      <name>dot</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>afcea7c945bee7d210d66d1a47d85944d</anchor>
      <arglist>(const Vector&lt; size, std::int32_t &gt; &amp;a, const Vector&lt; size, std::int32_t &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>Rad&lt; std::int32_t &gt;</type>
      <name>angle</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a754897e5423279be34bfaba81777e51c</anchor>
      <arglist>(const Vector&lt; size, std::int32_t &gt; &amp;normalizedA, const Vector&lt; size, std::int32_t &gt; &amp;normalizedB)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt; &amp;</type>
      <name>operator*=</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>aeb4ed8ac931963834097f37248a43a38</anchor>
      <arglist>(Vector&lt; size, Integral &gt; &amp;vector, FloatingPoint number)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt; &amp;</type>
      <name>operator*=</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a118fb08966b961aafa620802ab232b90</anchor>
      <arglist>(Vector&lt; size, Integral &gt; &amp;a, const Vector&lt; size, FloatingPoint &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, std::int32_t &gt;</type>
      <name>operator*</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a00e2b338cabfb20cbaf475bc4a74fe5a</anchor>
      <arglist>(std::int32_t number, const Vector&lt; size, std::int32_t &gt; &amp;vector)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt;</type>
      <name>operator*</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a951d0c686b0e14fc4b2c20cdd6c01dfc</anchor>
      <arglist>(const Vector&lt; size, Integral &gt; &amp;vector, FloatingPoint number)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt;</type>
      <name>operator*</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a2dd6210e8bfbcd1306eaecb9ca999c9d</anchor>
      <arglist>(FloatingPoint number, const Vector&lt; size, Integral &gt; &amp;vector)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt;</type>
      <name>operator*</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a4ca332f0533a3e7577a44495d91b6e74</anchor>
      <arglist>(const Vector&lt; size, Integral &gt; &amp;a, const Vector&lt; size, FloatingPoint &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt;</type>
      <name>operator*</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a6e8e1bd5f68c4bdc2aa32c77acd11791</anchor>
      <arglist>(const Vector&lt; size, FloatingPoint &gt; &amp;a, const Vector&lt; size, Integral &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt; &amp;</type>
      <name>operator/=</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a8ff1ad5c99830e1f120e027119013624</anchor>
      <arglist>(Vector&lt; size, Integral &gt; &amp;vector, FloatingPoint number)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt; &amp;</type>
      <name>operator/=</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a5877523931df8f205ff225d7580088f8</anchor>
      <arglist>(Vector&lt; size, Integral &gt; &amp;a, const Vector&lt; size, FloatingPoint &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, std::int32_t &gt;</type>
      <name>operator/</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>ac602863261ec1a6ff02fe1ec5bffad37</anchor>
      <arglist>(std::int32_t number, const Vector&lt; size, std::int32_t &gt; &amp;vector)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt;</type>
      <name>operator/</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a790689ac947bedb3f294ebfc9aeb686a</anchor>
      <arglist>(const Vector&lt; size, Integral &gt; &amp;vector, FloatingPoint number)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt;</type>
      <name>operator/</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a1da0ed702e57e8ec6464e474497913d8</anchor>
      <arglist>(const Vector&lt; size, Integral &gt; &amp;a, const Vector&lt; size, FloatingPoint &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt; &amp;</type>
      <name>operator%=</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>ade632882b22533924e5dcd2c8b3f44a1</anchor>
      <arglist>(Vector&lt; size, Integral &gt; &amp;a, Integral b)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt; &amp;</type>
      <name>operator%=</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a4a51f33fcbcdb59bc27313898d069769</anchor>
      <arglist>(Vector&lt; size, Integral &gt; &amp;a, const Vector&lt; size, Integral &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt;</type>
      <name>operator%</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a4d5f66e2c273e6ddd6f5d97410778980</anchor>
      <arglist>(const Vector&lt; size, Integral &gt; &amp;a, Integral b)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt;</type>
      <name>operator%</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>ae757e71a5675609a908ba245919d7b5c</anchor>
      <arglist>(const Vector&lt; size, Integral &gt; &amp;a, const Vector&lt; size, Integral &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt;</type>
      <name>operator~</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a00411ab4b5b07889daa66f136426b4ea</anchor>
      <arglist>(const Vector&lt; size, Integral &gt; &amp;vector)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt; &amp;</type>
      <name>operator&amp;=</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a3b78d1d2ce3be67ea17653af50d19619</anchor>
      <arglist>(Vector&lt; size, Integral &gt; &amp;a, const Vector&lt; size, Integral &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt;</type>
      <name>operator&amp;</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a0238714e940497dcaea6d382a0414d6a</anchor>
      <arglist>(const Vector&lt; size, Integral &gt; &amp;a, const Vector&lt; size, Integral &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt; &amp;</type>
      <name>operator|=</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a5df02285d88aba20bd36f6d4b8ac3c7c</anchor>
      <arglist>(Vector&lt; size, Integral &gt; &amp;a, const Vector&lt; size, Integral &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt;</type>
      <name>operator|</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>ac012aaff8d2971cb052a5dd9a526be2a</anchor>
      <arglist>(const Vector&lt; size, Integral &gt; &amp;a, const Vector&lt; size, Integral &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt; &amp;</type>
      <name>operator^=</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>af87d3deaa8742d561764bec080dbc191</anchor>
      <arglist>(Vector&lt; size, Integral &gt; &amp;a, const Vector&lt; size, Integral &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt;</type>
      <name>operator^</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>af0c70565adfae8fefcdc9e2f204802df</anchor>
      <arglist>(const Vector&lt; size, Integral &gt; &amp;a, const Vector&lt; size, Integral &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt; &amp;</type>
      <name>operator&lt;&lt;=</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a701d71a72018077de086cbacb7af8cde</anchor>
      <arglist>(Vector&lt; size, Integral &gt; &amp;vector, Integral shift)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a36525d8e60373fca36eee6d299daac1f</anchor>
      <arglist>(const Vector&lt; size, Integral &gt; &amp;vector, Integral shift)</arglist>
    </member>
    <member kind="function">
      <type>Corrade::Utility::Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a342462ce2d3144347242b0c1b0eb2613</anchor>
      <arglist>(Corrade::Utility::Debug &amp;debug, const Vector&lt; size, std::int32_t &gt; &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt; &amp;</type>
      <name>operator&gt;&gt;=</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>ab1a92b51f3a3ac5ee700196a370a28d0</anchor>
      <arglist>(Vector&lt; size, Integral &gt; &amp;vector, Integral shift)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt;</type>
      <name>operator&gt;&gt;</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a08e4344912fb1df2eafbe4f322c128cd</anchor>
      <arglist>(const Vector&lt; size, Integral &gt; &amp;vector, Integral shift)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Vector&lt; dimensions, T &gt;</name>
    <filename>classMagnum_1_1Math_1_1Vector.html</filename>
    <member kind="typedef">
      <type>T</type>
      <name>Type</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a799a265eb81bc32c08a88cedfa104879</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Size</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a5bea718d1a6ae8731ff2abe60169cc73a2743ca2e6cd2d98e8248e18a7bfc0b32</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>dot</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a27cd08ebde959f77b5f95a25b4e4c433</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Vector</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>aef609f61883287f2da4754a7d194d1c9</anchor>
      <arglist>(ZeroInitT=ZeroInit) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Vector</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>ac4607314a44afd4d55f5a8fba1c6cde6</anchor>
      <arglist>(NoInitT) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Vector</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a18ebfc260c5d7553780314ba223c450e</anchor>
      <arglist>(T first, U...next) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Vector</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>abc0b3737f4be19d7fca3c0c928d10269</anchor>
      <arglist>(T value) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Vector</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a87d5b00ae87e9ebc62fb6a1f6c89e88c</anchor>
      <arglist>(const Vector&lt; size, U &gt; &amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Vector</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>ad12afa60a22bbfad159641d28515e63d</anchor>
      <arglist>(const U &amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Vector</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a0a29fb87300604a5b09eca4d6e832450</anchor>
      <arglist>(const Vector&lt; size, T &gt; &amp;) noexcept=default</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>operator U</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a7ea21e43819d2c24a40d4bdbe4c732ec</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>T *</type>
      <name>data</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a3c8693d13c4bb5c98fda71953ea23e1b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>constexpr const T *</type>
      <name>data</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>aa499f6ed07b06982bf1881bc3df4d75f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>T &amp;</type>
      <name>operator[]</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>af1fb6b30bdaf2fb2ebeeae5fcceae660</anchor>
      <arglist>(std::size_t pos)</arglist>
    </member>
    <member kind="function">
      <type>constexpr T</type>
      <name>operator[]</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>af7a1c0969aea6861334031dd21df3aeb</anchor>
      <arglist>(std::size_t pos) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a919d88c687a64fbf439add184fd83e26</anchor>
      <arglist>(const Vector&lt; size, T &gt; &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a012b1b785d237f267f01b5eab1128795</anchor>
      <arglist>(const Vector&lt; size, T &gt; &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>BoolVector&lt; size &gt;</type>
      <name>operator&lt;</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>ade479b15513d5fe5e3e77b58255140a5</anchor>
      <arglist>(const Vector&lt; size, T &gt; &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>BoolVector&lt; size &gt;</type>
      <name>operator&lt;=</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a98eca28be48e27ce39f71780a1b08b53</anchor>
      <arglist>(const Vector&lt; size, T &gt; &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>BoolVector&lt; size &gt;</type>
      <name>operator&gt;=</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>af357da6a5a72afa948dfa36b928e81d7</anchor>
      <arglist>(const Vector&lt; size, T &gt; &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>BoolVector&lt; size &gt;</type>
      <name>operator&gt;</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a81d67cccc8c178c8dbbc62785ff8ce52</anchor>
      <arglist>(const Vector&lt; size, T &gt; &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isZero</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a2cf5ab65f37c0c87f894acaa88704fc4</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isNormalized</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a90e3bf3dddebb3e57d1ebf62d4e1e394</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, T &gt;</type>
      <name>operator-</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a2384a93655f0e39fbbf54891634167c9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, T &gt;</type>
      <name>operator-</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>af2dafe1a15e8cd4588d03e6ae844aa6d</anchor>
      <arglist>(const Vector&lt; size, T &gt; &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, T &gt; &amp;</type>
      <name>operator+=</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>ac0d2c99872bab8dfecdd3e09667c7292</anchor>
      <arglist>(const Vector&lt; size, T &gt; &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, T &gt;</type>
      <name>operator+</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a91f951330a2e574eb22eba396785cf75</anchor>
      <arglist>(const Vector&lt; size, T &gt; &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, T &gt; &amp;</type>
      <name>operator-=</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a2879e6a7da21fb210a32731b085e8db4</anchor>
      <arglist>(const Vector&lt; size, T &gt; &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, T &gt; &amp;</type>
      <name>operator*=</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>acf36c1445de24bd87912f0a107e51d5b</anchor>
      <arglist>(T number)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, T &gt; &amp;</type>
      <name>operator*=</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a212500235cc0ef744d7a0b9e1d443156</anchor>
      <arglist>(const Vector&lt; size, T &gt; &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, T &gt;</type>
      <name>operator*</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>acb266b5c55a30d7cd871a5c07de8bba4</anchor>
      <arglist>(T number) const</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, T &gt;</type>
      <name>operator*</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>adb264b0fa9decead346d8ad55ea27156</anchor>
      <arglist>(const Vector&lt; size, T &gt; &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, T &gt; &amp;</type>
      <name>operator/=</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>acdea6a05fcd2c83f44107294a436c82a</anchor>
      <arglist>(T number)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, T &gt; &amp;</type>
      <name>operator/=</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>afc091891a46419127de515a9714ed9ef</anchor>
      <arglist>(const Vector&lt; size, T &gt; &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, T &gt;</type>
      <name>operator/</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>aac7cb85a8c6c9018536a7cc3a88c52aa</anchor>
      <arglist>(T number) const</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, T &gt;</type>
      <name>operator/</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a453483612a7d579a160ce854d42052c6</anchor>
      <arglist>(const Vector&lt; size, T &gt; &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>length</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>ab4e8d3ce060ec466ce084f01d2d88c14</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>lengthInverted</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a04f15a7423d2a4f144afb0266844463a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, T &gt;</type>
      <name>normalized</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>aa1678ce501cc313b3432c49ed8eb033c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, T &gt;</type>
      <name>resized</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a0a48a0a0ceff711ff667453721cb6f5f</anchor>
      <arglist>(T length) const</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, T &gt;</type>
      <name>projected</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a0ee82cf43c67f4a0bcca58b13ae39a96</anchor>
      <arglist>(const Vector&lt; size, T &gt; &amp;line) const</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, T &gt;</type>
      <name>projectedOntoNormalized</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a91d96dda853b90e29891003ebc394ad5</anchor>
      <arglist>(const Vector&lt; size, T &gt; &amp;line) const</arglist>
    </member>
    <member kind="function">
      <type>constexpr Vector&lt; size, T &gt;</type>
      <name>flipped</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a2f11ab0253d3d99574af9e4e4875dc26</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>sum</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a28add84fe498a71e46d422b9ba31bb84</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>product</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a001c2ede68e794a2b3648004a3b712af</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>min</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>af029f9f7810201f0bd8d9580af273bde</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>max</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a0e5e9bb60ceb49f00569ec9a919e025a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::pair&lt; T, T &gt;</type>
      <name>minmax</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a958d3a01ab7b3a416d9d051b23bdee85</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Vector&lt; size, T &gt; &amp;</type>
      <name>from</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>abe9b9bbf9d5a2fdaca278cfab504cbe0</anchor>
      <arglist>(T *data)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const Vector&lt; size, T &gt; &amp;</type>
      <name>from</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a3f9691a1ce7d74a1a59867673f2324e3</anchor>
      <arglist>(const T *data)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static constexpr Vector&lt; size, T &gt;</type>
      <name>pad</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>acfc88ca9f6c47b731a90ef0e1d8ec8c0</anchor>
      <arglist>(const Vector&lt; otherSize, T &gt; &amp;a, T value=T(0))</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static T</type>
      <name>dot</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>af9737bbef2c4c895dfb6f2bdc6426d72</anchor>
      <arglist>(const Vector&lt; size, T &gt; &amp;a, const Vector&lt; size, T &gt; &amp;b)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Rad&lt; T &gt;</type>
      <name>angle</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a8d15d1f369cbb4543d1bd73d7c24f8a8</anchor>
      <arglist>(const Vector&lt; size, T &gt; &amp;normalizedA, const Vector&lt; size, T &gt; &amp;normalizedB)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>dot</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>afcea7c945bee7d210d66d1a47d85944d</anchor>
      <arglist>(const Vector&lt; size, T &gt; &amp;a, const Vector&lt; size, T &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>Rad&lt; T &gt;</type>
      <name>angle</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a754897e5423279be34bfaba81777e51c</anchor>
      <arglist>(const Vector&lt; size, T &gt; &amp;normalizedA, const Vector&lt; size, T &gt; &amp;normalizedB)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt; &amp;</type>
      <name>operator*=</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>aeb4ed8ac931963834097f37248a43a38</anchor>
      <arglist>(Vector&lt; size, Integral &gt; &amp;vector, FloatingPoint number)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt; &amp;</type>
      <name>operator*=</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a118fb08966b961aafa620802ab232b90</anchor>
      <arglist>(Vector&lt; size, Integral &gt; &amp;a, const Vector&lt; size, FloatingPoint &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, T &gt;</type>
      <name>operator*</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a00e2b338cabfb20cbaf475bc4a74fe5a</anchor>
      <arglist>(T number, const Vector&lt; size, T &gt; &amp;vector)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt;</type>
      <name>operator*</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a951d0c686b0e14fc4b2c20cdd6c01dfc</anchor>
      <arglist>(const Vector&lt; size, Integral &gt; &amp;vector, FloatingPoint number)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt;</type>
      <name>operator*</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a2dd6210e8bfbcd1306eaecb9ca999c9d</anchor>
      <arglist>(FloatingPoint number, const Vector&lt; size, Integral &gt; &amp;vector)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt;</type>
      <name>operator*</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a4ca332f0533a3e7577a44495d91b6e74</anchor>
      <arglist>(const Vector&lt; size, Integral &gt; &amp;a, const Vector&lt; size, FloatingPoint &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt;</type>
      <name>operator*</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a6e8e1bd5f68c4bdc2aa32c77acd11791</anchor>
      <arglist>(const Vector&lt; size, FloatingPoint &gt; &amp;a, const Vector&lt; size, Integral &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt; &amp;</type>
      <name>operator/=</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a8ff1ad5c99830e1f120e027119013624</anchor>
      <arglist>(Vector&lt; size, Integral &gt; &amp;vector, FloatingPoint number)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt; &amp;</type>
      <name>operator/=</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a5877523931df8f205ff225d7580088f8</anchor>
      <arglist>(Vector&lt; size, Integral &gt; &amp;a, const Vector&lt; size, FloatingPoint &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, T &gt;</type>
      <name>operator/</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>ac602863261ec1a6ff02fe1ec5bffad37</anchor>
      <arglist>(T number, const Vector&lt; size, T &gt; &amp;vector)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt;</type>
      <name>operator/</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a790689ac947bedb3f294ebfc9aeb686a</anchor>
      <arglist>(const Vector&lt; size, Integral &gt; &amp;vector, FloatingPoint number)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt;</type>
      <name>operator/</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a1da0ed702e57e8ec6464e474497913d8</anchor>
      <arglist>(const Vector&lt; size, Integral &gt; &amp;a, const Vector&lt; size, FloatingPoint &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt; &amp;</type>
      <name>operator%=</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>ade632882b22533924e5dcd2c8b3f44a1</anchor>
      <arglist>(Vector&lt; size, Integral &gt; &amp;a, Integral b)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt; &amp;</type>
      <name>operator%=</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a4a51f33fcbcdb59bc27313898d069769</anchor>
      <arglist>(Vector&lt; size, Integral &gt; &amp;a, const Vector&lt; size, Integral &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt;</type>
      <name>operator%</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a4d5f66e2c273e6ddd6f5d97410778980</anchor>
      <arglist>(const Vector&lt; size, Integral &gt; &amp;a, Integral b)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt;</type>
      <name>operator%</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>ae757e71a5675609a908ba245919d7b5c</anchor>
      <arglist>(const Vector&lt; size, Integral &gt; &amp;a, const Vector&lt; size, Integral &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt;</type>
      <name>operator~</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a00411ab4b5b07889daa66f136426b4ea</anchor>
      <arglist>(const Vector&lt; size, Integral &gt; &amp;vector)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt; &amp;</type>
      <name>operator&amp;=</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a3b78d1d2ce3be67ea17653af50d19619</anchor>
      <arglist>(Vector&lt; size, Integral &gt; &amp;a, const Vector&lt; size, Integral &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt;</type>
      <name>operator&amp;</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a0238714e940497dcaea6d382a0414d6a</anchor>
      <arglist>(const Vector&lt; size, Integral &gt; &amp;a, const Vector&lt; size, Integral &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt; &amp;</type>
      <name>operator|=</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a5df02285d88aba20bd36f6d4b8ac3c7c</anchor>
      <arglist>(Vector&lt; size, Integral &gt; &amp;a, const Vector&lt; size, Integral &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt;</type>
      <name>operator|</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>ac012aaff8d2971cb052a5dd9a526be2a</anchor>
      <arglist>(const Vector&lt; size, Integral &gt; &amp;a, const Vector&lt; size, Integral &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt; &amp;</type>
      <name>operator^=</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>af87d3deaa8742d561764bec080dbc191</anchor>
      <arglist>(Vector&lt; size, Integral &gt; &amp;a, const Vector&lt; size, Integral &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt;</type>
      <name>operator^</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>af0c70565adfae8fefcdc9e2f204802df</anchor>
      <arglist>(const Vector&lt; size, Integral &gt; &amp;a, const Vector&lt; size, Integral &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt; &amp;</type>
      <name>operator&lt;&lt;=</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a701d71a72018077de086cbacb7af8cde</anchor>
      <arglist>(Vector&lt; size, Integral &gt; &amp;vector, Integral shift)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a36525d8e60373fca36eee6d299daac1f</anchor>
      <arglist>(const Vector&lt; size, Integral &gt; &amp;vector, Integral shift)</arglist>
    </member>
    <member kind="function">
      <type>Corrade::Utility::Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a342462ce2d3144347242b0c1b0eb2613</anchor>
      <arglist>(Corrade::Utility::Debug &amp;debug, const Vector&lt; size, T &gt; &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt; &amp;</type>
      <name>operator&gt;&gt;=</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>ab1a92b51f3a3ac5ee700196a370a28d0</anchor>
      <arglist>(Vector&lt; size, Integral &gt; &amp;vector, Integral shift)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt;</type>
      <name>operator&gt;&gt;</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a08e4344912fb1df2eafbe4f322c128cd</anchor>
      <arglist>(const Vector&lt; size, Integral &gt; &amp;vector, Integral shift)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Vector&lt; rows, T &gt;</name>
    <filename>classMagnum_1_1Math_1_1Vector.html</filename>
    <member kind="typedef">
      <type>T</type>
      <name>Type</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a799a265eb81bc32c08a88cedfa104879</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Size</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a5bea718d1a6ae8731ff2abe60169cc73a2743ca2e6cd2d98e8248e18a7bfc0b32</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>dot</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a27cd08ebde959f77b5f95a25b4e4c433</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Vector</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>aef609f61883287f2da4754a7d194d1c9</anchor>
      <arglist>(ZeroInitT=ZeroInit) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Vector</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>ac4607314a44afd4d55f5a8fba1c6cde6</anchor>
      <arglist>(NoInitT) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Vector</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a18ebfc260c5d7553780314ba223c450e</anchor>
      <arglist>(T first, U...next) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Vector</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>abc0b3737f4be19d7fca3c0c928d10269</anchor>
      <arglist>(T value) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Vector</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a87d5b00ae87e9ebc62fb6a1f6c89e88c</anchor>
      <arglist>(const Vector&lt; size, U &gt; &amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Vector</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>ad12afa60a22bbfad159641d28515e63d</anchor>
      <arglist>(const U &amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Vector</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a0a29fb87300604a5b09eca4d6e832450</anchor>
      <arglist>(const Vector&lt; size, T &gt; &amp;) noexcept=default</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>operator U</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a7ea21e43819d2c24a40d4bdbe4c732ec</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>T *</type>
      <name>data</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a3c8693d13c4bb5c98fda71953ea23e1b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>constexpr const T *</type>
      <name>data</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>aa499f6ed07b06982bf1881bc3df4d75f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>T &amp;</type>
      <name>operator[]</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>af1fb6b30bdaf2fb2ebeeae5fcceae660</anchor>
      <arglist>(std::size_t pos)</arglist>
    </member>
    <member kind="function">
      <type>constexpr T</type>
      <name>operator[]</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>af7a1c0969aea6861334031dd21df3aeb</anchor>
      <arglist>(std::size_t pos) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a919d88c687a64fbf439add184fd83e26</anchor>
      <arglist>(const Vector&lt; size, T &gt; &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a012b1b785d237f267f01b5eab1128795</anchor>
      <arglist>(const Vector&lt; size, T &gt; &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>BoolVector&lt; size &gt;</type>
      <name>operator&lt;</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>ade479b15513d5fe5e3e77b58255140a5</anchor>
      <arglist>(const Vector&lt; size, T &gt; &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>BoolVector&lt; size &gt;</type>
      <name>operator&lt;=</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a98eca28be48e27ce39f71780a1b08b53</anchor>
      <arglist>(const Vector&lt; size, T &gt; &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>BoolVector&lt; size &gt;</type>
      <name>operator&gt;=</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>af357da6a5a72afa948dfa36b928e81d7</anchor>
      <arglist>(const Vector&lt; size, T &gt; &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>BoolVector&lt; size &gt;</type>
      <name>operator&gt;</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a81d67cccc8c178c8dbbc62785ff8ce52</anchor>
      <arglist>(const Vector&lt; size, T &gt; &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isZero</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a2cf5ab65f37c0c87f894acaa88704fc4</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isNormalized</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a90e3bf3dddebb3e57d1ebf62d4e1e394</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, T &gt;</type>
      <name>operator-</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a2384a93655f0e39fbbf54891634167c9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, T &gt;</type>
      <name>operator-</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>af2dafe1a15e8cd4588d03e6ae844aa6d</anchor>
      <arglist>(const Vector&lt; size, T &gt; &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, T &gt; &amp;</type>
      <name>operator+=</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>ac0d2c99872bab8dfecdd3e09667c7292</anchor>
      <arglist>(const Vector&lt; size, T &gt; &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, T &gt;</type>
      <name>operator+</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a91f951330a2e574eb22eba396785cf75</anchor>
      <arglist>(const Vector&lt; size, T &gt; &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, T &gt; &amp;</type>
      <name>operator-=</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a2879e6a7da21fb210a32731b085e8db4</anchor>
      <arglist>(const Vector&lt; size, T &gt; &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, T &gt; &amp;</type>
      <name>operator*=</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>acf36c1445de24bd87912f0a107e51d5b</anchor>
      <arglist>(T number)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, T &gt; &amp;</type>
      <name>operator*=</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a212500235cc0ef744d7a0b9e1d443156</anchor>
      <arglist>(const Vector&lt; size, T &gt; &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, T &gt;</type>
      <name>operator*</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>acb266b5c55a30d7cd871a5c07de8bba4</anchor>
      <arglist>(T number) const</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, T &gt;</type>
      <name>operator*</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>adb264b0fa9decead346d8ad55ea27156</anchor>
      <arglist>(const Vector&lt; size, T &gt; &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, T &gt; &amp;</type>
      <name>operator/=</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>acdea6a05fcd2c83f44107294a436c82a</anchor>
      <arglist>(T number)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, T &gt; &amp;</type>
      <name>operator/=</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>afc091891a46419127de515a9714ed9ef</anchor>
      <arglist>(const Vector&lt; size, T &gt; &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, T &gt;</type>
      <name>operator/</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>aac7cb85a8c6c9018536a7cc3a88c52aa</anchor>
      <arglist>(T number) const</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, T &gt;</type>
      <name>operator/</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a453483612a7d579a160ce854d42052c6</anchor>
      <arglist>(const Vector&lt; size, T &gt; &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>length</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>ab4e8d3ce060ec466ce084f01d2d88c14</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>lengthInverted</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a04f15a7423d2a4f144afb0266844463a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, T &gt;</type>
      <name>normalized</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>aa1678ce501cc313b3432c49ed8eb033c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, T &gt;</type>
      <name>resized</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a0a48a0a0ceff711ff667453721cb6f5f</anchor>
      <arglist>(T length) const</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, T &gt;</type>
      <name>projected</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a0ee82cf43c67f4a0bcca58b13ae39a96</anchor>
      <arglist>(const Vector&lt; size, T &gt; &amp;line) const</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, T &gt;</type>
      <name>projectedOntoNormalized</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a91d96dda853b90e29891003ebc394ad5</anchor>
      <arglist>(const Vector&lt; size, T &gt; &amp;line) const</arglist>
    </member>
    <member kind="function">
      <type>constexpr Vector&lt; size, T &gt;</type>
      <name>flipped</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a2f11ab0253d3d99574af9e4e4875dc26</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>sum</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a28add84fe498a71e46d422b9ba31bb84</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>product</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a001c2ede68e794a2b3648004a3b712af</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>min</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>af029f9f7810201f0bd8d9580af273bde</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>max</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a0e5e9bb60ceb49f00569ec9a919e025a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::pair&lt; T, T &gt;</type>
      <name>minmax</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a958d3a01ab7b3a416d9d051b23bdee85</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Vector&lt; size, T &gt; &amp;</type>
      <name>from</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>abe9b9bbf9d5a2fdaca278cfab504cbe0</anchor>
      <arglist>(T *data)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const Vector&lt; size, T &gt; &amp;</type>
      <name>from</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a3f9691a1ce7d74a1a59867673f2324e3</anchor>
      <arglist>(const T *data)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static constexpr Vector&lt; size, T &gt;</type>
      <name>pad</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>acfc88ca9f6c47b731a90ef0e1d8ec8c0</anchor>
      <arglist>(const Vector&lt; otherSize, T &gt; &amp;a, T value=T(0))</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static T</type>
      <name>dot</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>af9737bbef2c4c895dfb6f2bdc6426d72</anchor>
      <arglist>(const Vector&lt; size, T &gt; &amp;a, const Vector&lt; size, T &gt; &amp;b)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Rad&lt; T &gt;</type>
      <name>angle</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a8d15d1f369cbb4543d1bd73d7c24f8a8</anchor>
      <arglist>(const Vector&lt; size, T &gt; &amp;normalizedA, const Vector&lt; size, T &gt; &amp;normalizedB)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>dot</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>afcea7c945bee7d210d66d1a47d85944d</anchor>
      <arglist>(const Vector&lt; size, T &gt; &amp;a, const Vector&lt; size, T &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>Rad&lt; T &gt;</type>
      <name>angle</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a754897e5423279be34bfaba81777e51c</anchor>
      <arglist>(const Vector&lt; size, T &gt; &amp;normalizedA, const Vector&lt; size, T &gt; &amp;normalizedB)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt; &amp;</type>
      <name>operator*=</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>aeb4ed8ac931963834097f37248a43a38</anchor>
      <arglist>(Vector&lt; size, Integral &gt; &amp;vector, FloatingPoint number)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt; &amp;</type>
      <name>operator*=</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a118fb08966b961aafa620802ab232b90</anchor>
      <arglist>(Vector&lt; size, Integral &gt; &amp;a, const Vector&lt; size, FloatingPoint &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, T &gt;</type>
      <name>operator*</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a00e2b338cabfb20cbaf475bc4a74fe5a</anchor>
      <arglist>(T number, const Vector&lt; size, T &gt; &amp;vector)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt;</type>
      <name>operator*</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a951d0c686b0e14fc4b2c20cdd6c01dfc</anchor>
      <arglist>(const Vector&lt; size, Integral &gt; &amp;vector, FloatingPoint number)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt;</type>
      <name>operator*</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a2dd6210e8bfbcd1306eaecb9ca999c9d</anchor>
      <arglist>(FloatingPoint number, const Vector&lt; size, Integral &gt; &amp;vector)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt;</type>
      <name>operator*</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a4ca332f0533a3e7577a44495d91b6e74</anchor>
      <arglist>(const Vector&lt; size, Integral &gt; &amp;a, const Vector&lt; size, FloatingPoint &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt;</type>
      <name>operator*</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a6e8e1bd5f68c4bdc2aa32c77acd11791</anchor>
      <arglist>(const Vector&lt; size, FloatingPoint &gt; &amp;a, const Vector&lt; size, Integral &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt; &amp;</type>
      <name>operator/=</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a8ff1ad5c99830e1f120e027119013624</anchor>
      <arglist>(Vector&lt; size, Integral &gt; &amp;vector, FloatingPoint number)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt; &amp;</type>
      <name>operator/=</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a5877523931df8f205ff225d7580088f8</anchor>
      <arglist>(Vector&lt; size, Integral &gt; &amp;a, const Vector&lt; size, FloatingPoint &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, T &gt;</type>
      <name>operator/</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>ac602863261ec1a6ff02fe1ec5bffad37</anchor>
      <arglist>(T number, const Vector&lt; size, T &gt; &amp;vector)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt;</type>
      <name>operator/</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a790689ac947bedb3f294ebfc9aeb686a</anchor>
      <arglist>(const Vector&lt; size, Integral &gt; &amp;vector, FloatingPoint number)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt;</type>
      <name>operator/</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a1da0ed702e57e8ec6464e474497913d8</anchor>
      <arglist>(const Vector&lt; size, Integral &gt; &amp;a, const Vector&lt; size, FloatingPoint &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt; &amp;</type>
      <name>operator%=</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>ade632882b22533924e5dcd2c8b3f44a1</anchor>
      <arglist>(Vector&lt; size, Integral &gt; &amp;a, Integral b)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt; &amp;</type>
      <name>operator%=</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a4a51f33fcbcdb59bc27313898d069769</anchor>
      <arglist>(Vector&lt; size, Integral &gt; &amp;a, const Vector&lt; size, Integral &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt;</type>
      <name>operator%</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a4d5f66e2c273e6ddd6f5d97410778980</anchor>
      <arglist>(const Vector&lt; size, Integral &gt; &amp;a, Integral b)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt;</type>
      <name>operator%</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>ae757e71a5675609a908ba245919d7b5c</anchor>
      <arglist>(const Vector&lt; size, Integral &gt; &amp;a, const Vector&lt; size, Integral &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt;</type>
      <name>operator~</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a00411ab4b5b07889daa66f136426b4ea</anchor>
      <arglist>(const Vector&lt; size, Integral &gt; &amp;vector)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt; &amp;</type>
      <name>operator&amp;=</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a3b78d1d2ce3be67ea17653af50d19619</anchor>
      <arglist>(Vector&lt; size, Integral &gt; &amp;a, const Vector&lt; size, Integral &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt;</type>
      <name>operator&amp;</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a0238714e940497dcaea6d382a0414d6a</anchor>
      <arglist>(const Vector&lt; size, Integral &gt; &amp;a, const Vector&lt; size, Integral &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt; &amp;</type>
      <name>operator|=</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a5df02285d88aba20bd36f6d4b8ac3c7c</anchor>
      <arglist>(Vector&lt; size, Integral &gt; &amp;a, const Vector&lt; size, Integral &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt;</type>
      <name>operator|</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>ac012aaff8d2971cb052a5dd9a526be2a</anchor>
      <arglist>(const Vector&lt; size, Integral &gt; &amp;a, const Vector&lt; size, Integral &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt; &amp;</type>
      <name>operator^=</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>af87d3deaa8742d561764bec080dbc191</anchor>
      <arglist>(Vector&lt; size, Integral &gt; &amp;a, const Vector&lt; size, Integral &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt;</type>
      <name>operator^</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>af0c70565adfae8fefcdc9e2f204802df</anchor>
      <arglist>(const Vector&lt; size, Integral &gt; &amp;a, const Vector&lt; size, Integral &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt; &amp;</type>
      <name>operator&lt;&lt;=</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a701d71a72018077de086cbacb7af8cde</anchor>
      <arglist>(Vector&lt; size, Integral &gt; &amp;vector, Integral shift)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a36525d8e60373fca36eee6d299daac1f</anchor>
      <arglist>(const Vector&lt; size, Integral &gt; &amp;vector, Integral shift)</arglist>
    </member>
    <member kind="function">
      <type>Corrade::Utility::Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a342462ce2d3144347242b0c1b0eb2613</anchor>
      <arglist>(Corrade::Utility::Debug &amp;debug, const Vector&lt; size, T &gt; &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt; &amp;</type>
      <name>operator&gt;&gt;=</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>ab1a92b51f3a3ac5ee700196a370a28d0</anchor>
      <arglist>(Vector&lt; size, Integral &gt; &amp;vector, Integral shift)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Integral &gt;</type>
      <name>operator&gt;&gt;</name>
      <anchorfile>classMagnum_1_1Math_1_1Vector.html</anchorfile>
      <anchor>a08e4344912fb1df2eafbe4f322c128cd</anchor>
      <arglist>(const Vector&lt; size, Integral &gt; &amp;vector, Integral shift)</arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>Magnum</name>
    <filename>namespaceMagnum.html</filename>
    <namespace>Magnum::Audio</namespace>
    <namespace>Magnum::BulletIntegration</namespace>
    <namespace>Magnum::DebugTools</namespace>
    <namespace>Magnum::Extensions</namespace>
    <namespace>Magnum::Math</namespace>
    <namespace>Magnum::MeshTools</namespace>
    <namespace>Magnum::OpenDdl</namespace>
    <namespace>Magnum::OvrIntegration</namespace>
    <namespace>Magnum::Platform</namespace>
    <namespace>Magnum::Primitives</namespace>
    <namespace>Magnum::SceneGraph</namespace>
    <namespace>Magnum::Shaders</namespace>
    <namespace>Magnum::Shapes</namespace>
    <namespace>Magnum::Text</namespace>
    <namespace>Magnum::TextureTools</namespace>
    <namespace>Magnum::Trade</namespace>
    <namespace>Magnum::Ui</namespace>
    <class kind="class">Magnum::AbstractFramebuffer</class>
    <class kind="class">Magnum::AbstractObject</class>
    <class kind="class">Magnum::AbstractQuery</class>
    <class kind="class">Magnum::AbstractResourceLoader</class>
    <class kind="class">Magnum::AbstractShaderProgram</class>
    <class kind="class">Magnum::AbstractTexture</class>
    <class kind="class">Magnum::Array</class>
    <class kind="class">Magnum::Array1D</class>
    <class kind="class">Magnum::Array2D</class>
    <class kind="class">Magnum::Array3D</class>
    <class kind="class">Magnum::Attribute</class>
    <class kind="class">Magnum::Buffer</class>
    <class kind="class">Magnum::BufferImage</class>
    <class kind="class">Magnum::BufferTexture</class>
    <class kind="class">Magnum::CompressedBufferImage</class>
    <class kind="class">Magnum::CompressedImage</class>
    <class kind="class">Magnum::CompressedImageView</class>
    <class kind="class">Magnum::CompressedPixelStorage</class>
    <class kind="class">Magnum::Context</class>
    <class kind="class">Magnum::CubeMapTexture</class>
    <class kind="class">Magnum::CubeMapTextureArray</class>
    <class kind="class">Magnum::DebugGroup</class>
    <class kind="class">Magnum::DebugMessage</class>
    <class kind="class">Magnum::DebugOutput</class>
    <class kind="class">Magnum::DefaultFramebuffer</class>
    <class kind="struct">Magnum::DimensionTraits</class>
    <class kind="class">Magnum::DynamicAttribute</class>
    <class kind="class">Magnum::Extension</class>
    <class kind="class">Magnum::Framebuffer</class>
    <class kind="class">Magnum::Image</class>
    <class kind="class">Magnum::ImageView</class>
    <class kind="class">Magnum::Mesh</class>
    <class kind="class">Magnum::MeshView</class>
    <class kind="class">Magnum::MultisampleTexture</class>
    <class kind="struct">Magnum::NoCreateT</class>
    <class kind="class">Magnum::OpenGLTester</class>
    <class kind="class">Magnum::PixelStorage</class>
    <class kind="class">Magnum::PrimitiveQuery</class>
    <class kind="class">Magnum::RectangleTexture</class>
    <class kind="class">Magnum::Renderbuffer</class>
    <class kind="class">Magnum::Renderer</class>
    <class kind="class">Magnum::Resource</class>
    <class kind="class">Magnum::ResourceKey</class>
    <class kind="class">Magnum::ResourceManager</class>
    <class kind="class">Magnum::SampleQuery</class>
    <class kind="class">Magnum::Sampler</class>
    <class kind="class">Magnum::Shader</class>
    <class kind="class">Magnum::Texture</class>
    <class kind="class">Magnum::TextureArray</class>
    <class kind="class">Magnum::Timeline</class>
    <class kind="class">Magnum::TimeQuery</class>
    <class kind="class">Magnum::TransformFeedback</class>
    <member kind="typedef">
      <type>Containers::EnumSet&lt; FramebufferClear &gt;</type>
      <name>FramebufferClearMask</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>adec77bef39cea56d13818225a640d2b2</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Containers::EnumSet&lt; FramebufferBlit &gt;</type>
      <name>FramebufferBlitMask</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a96d7e99841ebcc0986b467d70277fae9</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Containers::EnumSet&lt; ObjectFlag &gt;</type>
      <name>ObjectFlags</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a49f6742013bcea38a11ef1c7805d6bfe</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>BufferImage&lt; 1 &gt;</type>
      <name>BufferImage1D</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a64389d999241901f7d5388da97eff898</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>BufferImage&lt; 2 &gt;</type>
      <name>BufferImage2D</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a9c2b8ee2d4feeb7020a0bd4ae967c20c</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>BufferImage&lt; 3 &gt;</type>
      <name>BufferImage3D</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>aa4a82c29052812758b2580a7376a458d</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>CompressedBufferImage&lt; 1 &gt;</type>
      <name>CompressedBufferImage1D</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>adb7992a4252dbfe4aceeafc71fd5c96a</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>CompressedBufferImage&lt; 2 &gt;</type>
      <name>CompressedBufferImage2D</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>accbbf3c490d90179d9cbde25a98cedc5</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>CompressedBufferImage&lt; 3 &gt;</type>
      <name>CompressedBufferImage3D</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a2b372b13e85aae44d04166e79975c836</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::Color3&lt; T &gt;</type>
      <name>BasicColor3</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a64f58d323718a49ca6cd58ccbfcf6a4e</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::Color4&lt; T &gt;</type>
      <name>BasicColor4</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a7d6a3f1120122300d9e6ad81e29136e2</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>PixelFormat</type>
      <name>ColorFormat</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a95e18e6d2271577f091b368109c8103a</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>PixelType</type>
      <name>ColorType</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a7839428a8ba5920a68da32ad33d74b0e</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>CompressedPixelFormat</type>
      <name>CompressedColorFormat</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a74efc9793a9f7d3de27c508a1c9c4e9b</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>typename DimensionTraits&lt; dimensions, T &gt;::VectorType</type>
      <name>VectorTypeFor</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a022aba204e515fbaa051f9ec7274b20c</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>typename DimensionTraits&lt; dimensions, T &gt;::RangeType</type>
      <name>RangeTypeFor</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a3a90a71567e8cb1174697e8607d7f854</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>typename DimensionTraits&lt; dimensions, T &gt;::MatrixType</type>
      <name>MatrixTypeFor</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a66bd8e5ed82475aaa74ae683a28875d5</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Image&lt; 1 &gt;</type>
      <name>Image1D</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>ae1b8a158cc31e09cbe1fba24fec2fa9a</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Image&lt; 2 &gt;</type>
      <name>Image2D</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a99b46de11af429ac8c1af52f59602cee</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Image&lt; 3 &gt;</type>
      <name>Image3D</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a2388ee336623bf115b28b756a445931b</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>CompressedImage&lt; 1 &gt;</type>
      <name>CompressedImage1D</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>ae48c7bfe2c52754baf1d435592b79702</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>CompressedImage&lt; 2 &gt;</type>
      <name>CompressedImage2D</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>af2d28d2e31d7e620320c124c1e636207</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>CompressedImage&lt; 3 &gt;</type>
      <name>CompressedImage3D</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a0dddd7f6782f6c0047f712e4d50f938d</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>ImageView&lt; dimensions &gt;</type>
      <name>ImageReference</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a6ea32a8ad5e2ad148efa998850a57238</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>ImageView1D</type>
      <name>ImageReference1D</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a4d3f54574dccd2acfd2641281536459f</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>ImageView2D</type>
      <name>ImageReference2D</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>aea26cc140d2086ac5568a13e3985e1f2</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>ImageView3D</type>
      <name>ImageReference3D</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>ab2d0fda70f4df9050b81d40353491e45</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>ImageView&lt; 1 &gt;</type>
      <name>ImageView1D</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a52c690705313e0dfde62d0f5315953be</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>ImageView&lt; 2 &gt;</type>
      <name>ImageView2D</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a4e378fbaa61814138523f9ee49e2c2c0</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>ImageView&lt; 3 &gt;</type>
      <name>ImageView3D</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a4f151ab2ce87b457b9dd503c3aa162c1</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>CompressedImageView&lt; 1 &gt;</type>
      <name>CompressedImageView1D</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a17f67f03d9d178db86121ea1385d3e33</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>CompressedImageView&lt; 2 &gt;</type>
      <name>CompressedImageView2D</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a7f75b72713e3d1f671354cbd0c261b7e</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>CompressedImageView&lt; 3 &gt;</type>
      <name>CompressedImageView3D</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>abb65097cc08025b36cae174ad55a7bff</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>MultisampleTexture&lt; 2 &gt;</type>
      <name>MultisampleTexture2D</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a1cc12580b9d3489e8062d1027c6a3e09</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>MultisampleTexture&lt; 3 &gt;</type>
      <name>MultisampleTexture2DArray</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>ad1d2e57dbd2801667ba112f82a9d03d5</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Texture&lt; 1 &gt;</type>
      <name>Texture1D</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a8643254636648c1fb2b257be46a1feff</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Texture&lt; 2 &gt;</type>
      <name>Texture2D</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a3bcd8943395834a6dda0b1208090e79e</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Texture&lt; 3 &gt;</type>
      <name>Texture3D</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>ac5ed6a84a4e83f97a89cec55411764c3</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>TextureArray&lt; 1 &gt;</type>
      <name>Texture1DArray</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a2d5ee2b3ae709cbe6c8fa3dcba7ad4b1</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>TextureArray&lt; 2 &gt;</type>
      <name>Texture2DArray</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a0f63b4868fddc2708eb98e2350463f3a</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::uint8_t</type>
      <name>UnsignedByte</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a07cf9231dbda5f296cc205ab7ecb770f</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::int8_t</type>
      <name>Byte</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>ab3326c49ec1ed9b0bb5e292c1ad81f82</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::uint16_t</type>
      <name>UnsignedShort</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a909e88e5e85c567e854bedac5ef40abf</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::int16_t</type>
      <name>Short</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a8a61fb6a9a4bb99d17c5501a668927f2</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::uint32_t</type>
      <name>UnsignedInt</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a8d47f9ac6d7ced811b3d355990a3732b</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::int32_t</type>
      <name>Int</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>aee42530d46e85ad0d60312c3526f4c50</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::uint64_t</type>
      <name>UnsignedLong</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a864ee326698465e20b52c19fd7044ac0</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::int64_t</type>
      <name>Long</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>aadaf2d260758705587a825d8c8907a7d</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>float</type>
      <name>Float</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a232af7e6fd9b88195fbc59fcec2155cb</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::Half</type>
      <name>Half</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>ae9ad232db78b650420d4a56d3d67f0e6</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::Vector2&lt; Float &gt;</type>
      <name>Vector2</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a867c5cc7c779e5f990bcfb4457eb81e8</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::Vector3&lt; Float &gt;</type>
      <name>Vector3</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a6949fa86a0af6ed632c90d4223baeb59</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::Vector4&lt; Float &gt;</type>
      <name>Vector4</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a3f4cac6ff006e4e32682ebb2b117d7bc</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::Vector2&lt; UnsignedInt &gt;</type>
      <name>Vector2ui</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a4506781bc0ae351534004ec20d64cf2d</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::Vector3&lt; UnsignedInt &gt;</type>
      <name>Vector3ui</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a26df486c6774622c92b881350d4876a7</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::Vector4&lt; UnsignedInt &gt;</type>
      <name>Vector4ui</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>aeabe8282965e92504504ce4eae543187</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::Vector2&lt; Int &gt;</type>
      <name>Vector2i</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>ae3ac51b4e18ff95be7dd874c1cc861f7</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::Vector3&lt; Int &gt;</type>
      <name>Vector3i</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a053340a86ab63e587ab3773ff1265784</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::Vector4&lt; Int &gt;</type>
      <name>Vector4i</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a9e0f4dfa754bf25f9a9f39f84ae8f396</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::Color3&lt; Float &gt;</type>
      <name>Color3</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a99bf0ab337b9ed6ff6ccfd8ea147a900</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::Color4&lt; Float &gt;</type>
      <name>Color4</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a5cb8f674ed695b93b434b44bd7c96805</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::Color3&lt; UnsignedByte &gt;</type>
      <name>Color3ub</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>afde3a07a49799b474c74f186f01cbc25</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::Color4&lt; UnsignedByte &gt;</type>
      <name>Color4ub</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a1444bc0c8960f51e682cc718331c3c5d</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::Matrix3&lt; Float &gt;</type>
      <name>Matrix3</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a7abac7ed657a50f2964d6b2c4a1f7677</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::Matrix4&lt; Float &gt;</type>
      <name>Matrix4</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a28cfaaad41fdc6b258092278ba4569d5</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::Matrix2x2&lt; Float &gt;</type>
      <name>Matrix2x2</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>ae1523b3078a9f2b0f6dd83daded9e970</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::Matrix3x3&lt; Float &gt;</type>
      <name>Matrix3x3</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a7ee135be46a327f352d01287579e2acf</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::Matrix4x4&lt; Float &gt;</type>
      <name>Matrix4x4</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a1beb3e75007fb50638fe5b25d513a688</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::Matrix2x3&lt; Float &gt;</type>
      <name>Matrix2x3</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>ab3dced70ba66525d9bbb6b44e6227188</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::Matrix3x2&lt; Float &gt;</type>
      <name>Matrix3x2</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a689baccbb9256e282d2d68e3486dcc80</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::Matrix2x4&lt; Float &gt;</type>
      <name>Matrix2x4</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a7533874fc2ef4af1118a1727d56ec7e1</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::Matrix4x2&lt; Float &gt;</type>
      <name>Matrix4x2</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a4b275037a57059729521813d5eff5afc</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::Matrix3x4&lt; Float &gt;</type>
      <name>Matrix3x4</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a007726fb14fe464a51d3f53970216df6</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::Matrix4x3&lt; Float &gt;</type>
      <name>Matrix4x3</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a15f5e8da966dbdb9ec0c47e6de9ccf3a</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::QuadraticBezier2D&lt; Float &gt;</type>
      <name>QuadraticBezier2D</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>aa076ea30523705e63fd29aa9a44a7924</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::QuadraticBezier3D&lt; Float &gt;</type>
      <name>QuadraticBezier3D</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>aab522cde6ba1d070df7ea26749f2faf0</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::CubicBezier2D&lt; Float &gt;</type>
      <name>CubicBezier2D</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a1deead2c643a2b9b053540b9c70202bd</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::CubicBezier3D&lt; Float &gt;</type>
      <name>CubicBezier3D</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a1153a483856bb774602a3df94c7d53b1</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::Complex&lt; Float &gt;</type>
      <name>Complex</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>af8f959fbcda212df03f4db0c0b4d8e38</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::DualComplex&lt; Float &gt;</type>
      <name>DualComplex</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a301eadaf85af10586dd8fee8a5c7f268</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::Quaternion&lt; Float &gt;</type>
      <name>Quaternion</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a2e3f956058db79a46099bd104b08eeb9</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::DualQuaternion&lt; Float &gt;</type>
      <name>DualQuaternion</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>ad64bf8f226da3f14dc0e88e2b5a6c251</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::Constants&lt; Float &gt;</type>
      <name>Constants</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a6c070a7b75b28d88915aa17af9b78c21</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::Deg&lt; Float &gt;</type>
      <name>Deg</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a35aafd6ffb9da9a9e7b3805141ecbbb3</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::Rad&lt; Float &gt;</type>
      <name>Rad</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a0471754d0b583682b2dd2cf4d99077af</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::Range1D&lt; Float &gt;</type>
      <name>Range1D</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>ad4ec1efaa47da1a4b7815950683fb225</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::Range2D&lt; Float &gt;</type>
      <name>Range2D</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a08b469227b1a8989c2c151d3a8899642</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::Range3D&lt; Float &gt;</type>
      <name>Range3D</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a7fbce9c90d2709f47e0d5f094f183208</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::Range1D&lt; Int &gt;</type>
      <name>Range1Di</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a78544ddd221d110240d3da598b3450c4</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::Range2D&lt; Int &gt;</type>
      <name>Range2Di</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>aca08a3fe2d57fd40fce6d3d577b43e86</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::Range3D&lt; Int &gt;</type>
      <name>Range3Di</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a055e641c454b6bfacd44c309c2c7aeb3</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::Frustum&lt; Float &gt;</type>
      <name>Frustum</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>aadbcb06e48ab10daaa2f6272b731194c</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>double</type>
      <name>Double</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a5f4cc6ae4658e5eee79148cf4738f789</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::Vector2&lt; Double &gt;</type>
      <name>Vector2d</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>aaff377299fc19849bfed2a64fa80ff7b</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::Vector3&lt; Double &gt;</type>
      <name>Vector3d</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a12999896f6eeea0c53b82f97886f32c9</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::Vector4&lt; Double &gt;</type>
      <name>Vector4d</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a7767801c66c95405c9c1ae3108f676d5</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::Matrix3&lt; Double &gt;</type>
      <name>Matrix3d</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>ad1a28945c4fe29ad91e5da1244c5669e</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::Matrix4&lt; Double &gt;</type>
      <name>Matrix4d</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>addbaa6dd74e1967ef70a15e7bfaaabb2</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::Matrix2x2&lt; Double &gt;</type>
      <name>Matrix2x2d</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>ac8b90a55a3ff885b42009b9f46cbc054</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::Matrix3x3&lt; Double &gt;</type>
      <name>Matrix3x3d</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a44a1a23ecbda7c6343c052535481f16e</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::Matrix4x4&lt; Double &gt;</type>
      <name>Matrix4x4d</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>aae9dc931fa1c545f2990891779fb665d</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::Matrix2x3&lt; Double &gt;</type>
      <name>Matrix2x3d</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>ae72831cf88f37efaf38129138d02a2b2</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::Matrix3x2&lt; Double &gt;</type>
      <name>Matrix3x2d</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a4e89a28c7b25d548658560d5651c8d36</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::Matrix2x4&lt; Double &gt;</type>
      <name>Matrix2x4d</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a4a2863ef1337008849345c9b8720dc59</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::Matrix4x2&lt; Double &gt;</type>
      <name>Matrix4x2d</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a502dadb2e648b9cb785124d8e57613ab</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::Matrix3x4&lt; Double &gt;</type>
      <name>Matrix3x4d</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a3a80fad794621611bf170e5bb818135d</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::Matrix4x3&lt; Double &gt;</type>
      <name>Matrix4x3d</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a55e335c75732e3a13b400a3a8837d16a</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::QuadraticBezier2D&lt; Float &gt;</type>
      <name>QuadraticBezier2Dd</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a28635f12b30809607b32ba90282735a3</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::QuadraticBezier3D&lt; Float &gt;</type>
      <name>QuadraticBezier3Dd</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a7a1745348e3df1b36f543a9fb143520f</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::CubicBezier2D&lt; Float &gt;</type>
      <name>CubicBezier2Dd</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a5b4862b5ded9c45b0eaa23c143147e5c</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::CubicBezier3D&lt; Float &gt;</type>
      <name>CubicBezier3Dd</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a85efadd97b72b331eee0912da21a433b</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::Complex&lt; Double &gt;</type>
      <name>Complexd</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a39c00aecf9014a896daa67ce80f588c2</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::DualComplex&lt; Double &gt;</type>
      <name>DualComplexd</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>af5caf88b9b32ea8f5839e1033b75f8fb</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::Quaternion&lt; Double &gt;</type>
      <name>Quaterniond</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a98a0b80388b8500611f9ac50ee5090d2</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::DualQuaternion&lt; Double &gt;</type>
      <name>DualQuaterniond</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>ab3389caa75ddcc24e1c17b1e47928451</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::Constants&lt; Double &gt;</type>
      <name>Constantsd</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a4b861df9ed0195727ce15b9499318c20</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::Deg&lt; Double &gt;</type>
      <name>Degd</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>abb6b2ed24bc5511b4d98fa6cdc446c02</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::Rad&lt; Double &gt;</type>
      <name>Radd</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a576be96b2eb268a0c84b7d8fbb5edf23</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::Range1D&lt; Double &gt;</type>
      <name>Range1Dd</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>ad0ade5e31406fc3dd7b85fb634c4a865</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::Range2D&lt; Double &gt;</type>
      <name>Range2Dd</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>ac7dcda0b7320b7377e0bdabe6a2d4649</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::Range3D&lt; Double &gt;</type>
      <name>Range3Dd</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>af69768f0c458043b7a6a030340456e6a</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::Frustum&lt; Double &gt;</type>
      <name>Frustumd</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>aaa52550cff11cf462303a5268fd42089</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>FramebufferClear</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a9e26aff3faf7d8598bbd18dfbe5c90fe</anchor>
      <arglist></arglist>
      <enumvalue file="namespaceMagnum.html" anchor="a9e26aff3faf7d8598bbd18dfbe5c90feacb5feb1b7314637725a2e73bdc9f7295">Color</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a9e26aff3faf7d8598bbd18dfbe5c90fea675056ad1441b6375b2c5abd48c27ef1">Depth</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a9e26aff3faf7d8598bbd18dfbe5c90fead821e7ccd4d4c25a491ba1a9ea248895">Stencil</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>FramebufferBlit</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a3c488fc8703d335a9a96a316309aa72f</anchor>
      <arglist></arglist>
      <enumvalue file="namespaceMagnum.html" anchor="a3c488fc8703d335a9a96a316309aa72facb5feb1b7314637725a2e73bdc9f7295">Color</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a3c488fc8703d335a9a96a316309aa72fa675056ad1441b6375b2c5abd48c27ef1">Depth</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a3c488fc8703d335a9a96a316309aa72fad821e7ccd4d4c25a491ba1a9ea248895">Stencil</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>FramebufferBlitFilter</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>ad80aa06d64bc93b22c7fe23e95255118</anchor>
      <arglist></arglist>
      <enumvalue file="namespaceMagnum.html" anchor="ad80aa06d64bc93b22c7fe23e95255118a60494f02d440f316319dd0fad40ad007">Nearest</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="ad80aa06d64bc93b22c7fe23e95255118a32a843da6ea40ab3b17a3421ccdf671b">Linear</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>FramebufferTarget</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>ab6e6a5b180b456b22f5b9938113480a7</anchor>
      <arglist></arglist>
      <enumvalue file="namespaceMagnum.html" anchor="ab6e6a5b180b456b22f5b9938113480a7a7a1a5f3e79fdc91edf2f5ead9d66abb4">Read</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="ab6e6a5b180b456b22f5b9938113480a7a2d03c2d5a7ec65ef4619e0582c272ec2">Draw</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="ab6e6a5b180b456b22f5b9938113480a7adde78892c6911d1303ccc0607d5aa499">ReadDraw</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>ObjectFlag</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a7f62172cd5963a14eb7d88fa3cf15778</anchor>
      <arglist></arglist>
      <enumvalue file="namespaceMagnum.html" anchor="a7f62172cd5963a14eb7d88fa3cf15778a0eceeb45861f9585dd7a97a3e36f85c6">Created</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a7f62172cd5963a14eb7d88fa3cf15778a50dd1297fc0f8a96753257b224b1e5b8">DeleteOnDestruction</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>BufferUsage</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>aad6da9d5c3bd3e353f3e99a7aa293e8d</anchor>
      <arglist></arglist>
      <enumvalue file="namespaceMagnum.html" anchor="aad6da9d5c3bd3e353f3e99a7aa293e8dab831b12d8d415645f1f00e37e0426ca2">StreamDraw</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="aad6da9d5c3bd3e353f3e99a7aa293e8da10953b8796ab666281dc734e99aa5180">StreamRead</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="aad6da9d5c3bd3e353f3e99a7aa293e8da72d80d051f94e8aa1e3dc1ebfb6cc8cc">StreamCopy</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="aad6da9d5c3bd3e353f3e99a7aa293e8dac3ed2ba606af12869974bdab26334e6c">StaticDraw</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="aad6da9d5c3bd3e353f3e99a7aa293e8da3b35249bb273aea8b56c05f2c914a38a">StaticRead</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="aad6da9d5c3bd3e353f3e99a7aa293e8dac5a66e746248ebb7fe5f99443172fca7">StaticCopy</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="aad6da9d5c3bd3e353f3e99a7aa293e8da07988dce2d161630856fb73bc06682c0">DynamicDraw</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="aad6da9d5c3bd3e353f3e99a7aa293e8da2ca7cf82bf5d2f11738ae1a371d5ae32">DynamicRead</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="aad6da9d5c3bd3e353f3e99a7aa293e8dac572ac15b4bcbc9e975b79480e253c14">DynamicCopy</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>BufferTextureFormat</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>afaa2d98dfce5d92a7fed6a4e71138ad1</anchor>
      <arglist></arglist>
      <enumvalue file="namespaceMagnum.html" anchor="afaa2d98dfce5d92a7fed6a4e71138ad1acfff813d86d447fa2a9c858650ebbb90">R8</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="afaa2d98dfce5d92a7fed6a4e71138ad1a0367a93b9e3e7aa2fbe9802d80298e46">RG8</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="afaa2d98dfce5d92a7fed6a4e71138ad1ab4b279046a02077466fa26cabb00c642">RGBA8</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="afaa2d98dfce5d92a7fed6a4e71138ad1a9a486e1a3c543c7c58e1cc8086dc4239">R16</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="afaa2d98dfce5d92a7fed6a4e71138ad1a2b66caa416f0a28686ade3fc30ab223a">RG16</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="afaa2d98dfce5d92a7fed6a4e71138ad1a50989efe15b375dce8ba3a5714fe2543">RGBA16</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="afaa2d98dfce5d92a7fed6a4e71138ad1a477722a31a67b4a8f4bdb09e796e343b">R8UI</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="afaa2d98dfce5d92a7fed6a4e71138ad1a65264dd5d010ab021cbec10f07f97ed5">RG8UI</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="afaa2d98dfce5d92a7fed6a4e71138ad1aeb843f86a572765b9be8a71bd9563bea">RGBA8UI</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="afaa2d98dfce5d92a7fed6a4e71138ad1a1ab8b9cd2509e2ccf930739d6d29ff35">R8I</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="afaa2d98dfce5d92a7fed6a4e71138ad1af16a55975b8a8daa365e5b3cb116a001">RG8I</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="afaa2d98dfce5d92a7fed6a4e71138ad1ab99d001604e415e4ea7f107daaffd6dd">RGBA8I</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="afaa2d98dfce5d92a7fed6a4e71138ad1ac13d06830e39e268be15adfae07d9eb0">R16UI</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="afaa2d98dfce5d92a7fed6a4e71138ad1a4475a780df31a86ece088a8aac082b12">RG16UI</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="afaa2d98dfce5d92a7fed6a4e71138ad1ae418a751a46186248578aecf3f30a26c">RGBA16UI</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="afaa2d98dfce5d92a7fed6a4e71138ad1a3bf53b9d9aca5ddf22161b4c9d362f3f">R16I</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="afaa2d98dfce5d92a7fed6a4e71138ad1af0c6bc16df3d36b62adc241a797148de">RG16I</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="afaa2d98dfce5d92a7fed6a4e71138ad1a3d8d82a913260a439bf38ed05d6d2f46">RGBA16I</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="afaa2d98dfce5d92a7fed6a4e71138ad1a2c102dbf18ef5770d3beb5385661c1c2">R32UI</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="afaa2d98dfce5d92a7fed6a4e71138ad1ac16ead63f9b07b5c97635edac05412cd">RG32UI</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="afaa2d98dfce5d92a7fed6a4e71138ad1ae240d3e394b6a7cfa467efe512e96bb4">RGB32UI</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="afaa2d98dfce5d92a7fed6a4e71138ad1ac050956335d883e2f6ed07cc6b0c90d8">RGBA32UI</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="afaa2d98dfce5d92a7fed6a4e71138ad1a88996871eb63291d92c2f9d83219648a">R32I</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="afaa2d98dfce5d92a7fed6a4e71138ad1a56014c7d6ebfadbff4d0d4d3c20a0243">RG32I</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="afaa2d98dfce5d92a7fed6a4e71138ad1a8305c7f5432d31774cceb858c966b22e">RGB32I</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="afaa2d98dfce5d92a7fed6a4e71138ad1a9f87275b4130dd118085dd75ee6a7ac1">RGBA32I</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="afaa2d98dfce5d92a7fed6a4e71138ad1a8dfbaada0d68227f5c299c2aa637df68">R16F</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="afaa2d98dfce5d92a7fed6a4e71138ad1ad28539b874a2bc4c5d40f49b375af474">RG16F</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="afaa2d98dfce5d92a7fed6a4e71138ad1aa29d843695056f9c171a9eb702d6910a">RGBA16F</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="afaa2d98dfce5d92a7fed6a4e71138ad1aca70b53fb0610461a2327973614a76ce">R32F</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="afaa2d98dfce5d92a7fed6a4e71138ad1ab968b93cd3c34fc9583050ce7e267394">RG32F</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="afaa2d98dfce5d92a7fed6a4e71138ad1ad8936cc7055546f79128b9dbfb8c8bbb">RGB32F</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="afaa2d98dfce5d92a7fed6a4e71138ad1a703a7a81e586669c930e3dcaf3e8c428">RGBA32F</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>CubeMapCoordinate</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a6e3143b79f2fdb0865096c2c940b5590</anchor>
      <arglist></arglist>
      <enumvalue file="namespaceMagnum.html" anchor="a6e3143b79f2fdb0865096c2c940b5590a9f082d04c481aab268b9f614d2ffd129">PositiveX</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a6e3143b79f2fdb0865096c2c940b5590a963a8a64a09d54efc81b136ca6be21b2">NegativeX</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a6e3143b79f2fdb0865096c2c940b5590ac53c385ced96bd629c0f45a902aceba3">PositiveY</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a6e3143b79f2fdb0865096c2c940b5590ae4d5f02ceecd15caf66e9f0b2393c86b">NegativeY</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a6e3143b79f2fdb0865096c2c940b5590a1921c16ffdafaf04e378ca1b6774c0ce">PositiveZ</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a6e3143b79f2fdb0865096c2c940b5590ada76df034cd139bd515761c8bb8e3090">NegativeZ</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>ImageAccess</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a2655a4d120e8e4b0b49f4f6da1d7a28e</anchor>
      <arglist></arglist>
      <enumvalue file="namespaceMagnum.html" anchor="a2655a4d120e8e4b0b49f4f6da1d7a28ea131fb182a881796e7606ed6da27f1197">ReadOnly</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a2655a4d120e8e4b0b49f4f6da1d7a28ea53dfe5089ae9e65887cb0215cb0098f5">WriteOnly</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a2655a4d120e8e4b0b49f4f6da1d7a28ea70a2a84088d405a2e3f1e3accaa16723">ReadWrite</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>ImageFormat</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>ad7077172558844b4537b6b5bebb3acf1</anchor>
      <arglist></arglist>
      <enumvalue file="namespaceMagnum.html" anchor="ad7077172558844b4537b6b5bebb3acf1acfff813d86d447fa2a9c858650ebbb90">R8</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="ad7077172558844b4537b6b5bebb3acf1a0367a93b9e3e7aa2fbe9802d80298e46">RG8</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="ad7077172558844b4537b6b5bebb3acf1ab4b279046a02077466fa26cabb00c642">RGBA8</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="ad7077172558844b4537b6b5bebb3acf1ae24128a61e28847e5cae93e146f3c396">R8Snorm</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="ad7077172558844b4537b6b5bebb3acf1a0c1bc4554d3ca92e8ed03fde8fb668fc">RG8Snorm</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="ad7077172558844b4537b6b5bebb3acf1a77b2290184a281692c88cea55f7e4709">RGBA8Snorm</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="ad7077172558844b4537b6b5bebb3acf1a9a486e1a3c543c7c58e1cc8086dc4239">R16</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="ad7077172558844b4537b6b5bebb3acf1a2b66caa416f0a28686ade3fc30ab223a">RG16</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="ad7077172558844b4537b6b5bebb3acf1a50989efe15b375dce8ba3a5714fe2543">RGBA16</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="ad7077172558844b4537b6b5bebb3acf1a3be85f3a039758c6edb91c91b7af98d2">R16Snorm</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="ad7077172558844b4537b6b5bebb3acf1a7e7693eb3b20e62d8af832c2fe116559">RG16Snorm</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="ad7077172558844b4537b6b5bebb3acf1a825f61116ed1837ab9125c3e1921d860">RGBA16Snorm</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="ad7077172558844b4537b6b5bebb3acf1a477722a31a67b4a8f4bdb09e796e343b">R8UI</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="ad7077172558844b4537b6b5bebb3acf1a65264dd5d010ab021cbec10f07f97ed5">RG8UI</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="ad7077172558844b4537b6b5bebb3acf1aeb843f86a572765b9be8a71bd9563bea">RGBA8UI</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="ad7077172558844b4537b6b5bebb3acf1a1ab8b9cd2509e2ccf930739d6d29ff35">R8I</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="ad7077172558844b4537b6b5bebb3acf1af16a55975b8a8daa365e5b3cb116a001">RG8I</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="ad7077172558844b4537b6b5bebb3acf1ab99d001604e415e4ea7f107daaffd6dd">RGBA8I</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="ad7077172558844b4537b6b5bebb3acf1ac13d06830e39e268be15adfae07d9eb0">R16UI</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="ad7077172558844b4537b6b5bebb3acf1a4475a780df31a86ece088a8aac082b12">RG16UI</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="ad7077172558844b4537b6b5bebb3acf1ae418a751a46186248578aecf3f30a26c">RGBA16UI</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="ad7077172558844b4537b6b5bebb3acf1a3bf53b9d9aca5ddf22161b4c9d362f3f">R16I</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="ad7077172558844b4537b6b5bebb3acf1af0c6bc16df3d36b62adc241a797148de">RG16I</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="ad7077172558844b4537b6b5bebb3acf1a3d8d82a913260a439bf38ed05d6d2f46">RGBA16I</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="ad7077172558844b4537b6b5bebb3acf1a2c102dbf18ef5770d3beb5385661c1c2">R32UI</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="ad7077172558844b4537b6b5bebb3acf1ac16ead63f9b07b5c97635edac05412cd">RG32UI</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="ad7077172558844b4537b6b5bebb3acf1ac050956335d883e2f6ed07cc6b0c90d8">RGBA32UI</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="ad7077172558844b4537b6b5bebb3acf1a88996871eb63291d92c2f9d83219648a">R32I</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="ad7077172558844b4537b6b5bebb3acf1a56014c7d6ebfadbff4d0d4d3c20a0243">RG32I</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="ad7077172558844b4537b6b5bebb3acf1a9f87275b4130dd118085dd75ee6a7ac1">RGBA32I</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="ad7077172558844b4537b6b5bebb3acf1a8dfbaada0d68227f5c299c2aa637df68">R16F</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="ad7077172558844b4537b6b5bebb3acf1ad28539b874a2bc4c5d40f49b375af474">RG16F</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="ad7077172558844b4537b6b5bebb3acf1aa29d843695056f9c171a9eb702d6910a">RGBA16F</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="ad7077172558844b4537b6b5bebb3acf1aca70b53fb0610461a2327973614a76ce">R32F</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="ad7077172558844b4537b6b5bebb3acf1ab968b93cd3c34fc9583050ce7e267394">RG32F</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="ad7077172558844b4537b6b5bebb3acf1a703a7a81e586669c930e3dcaf3e8c428">RGBA32F</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="ad7077172558844b4537b6b5bebb3acf1ac749b8eee74e3b7b60f8774178537dea">R11FG11FB10F</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="ad7077172558844b4537b6b5bebb3acf1a4cad8c5058101f0f527e306958b6641b">RGB10A2</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="ad7077172558844b4537b6b5bebb3acf1a1d8555f4846b8791e329e36dcd5239dc">RGB10A2UI</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>MeshPrimitive</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a7af94041be77647bb639fa9fd94cd338</anchor>
      <arglist></arglist>
      <enumvalue file="namespaceMagnum.html" anchor="a7af94041be77647bb639fa9fd94cd338a75dd5f1160a3f02b6fae89c54361a1b3">Points</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a7af94041be77647bb639fa9fd94cd338ae7f9e73b8edd21f420a63b3ace5768a2">LineStrip</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a7af94041be77647bb639fa9fd94cd338a2ba065d2b3004087cc8f111bf56f134b">LineLoop</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a7af94041be77647bb639fa9fd94cd338aa0b0293a2db49f5f93c15a62e095c819">Lines</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a7af94041be77647bb639fa9fd94cd338a826457761e4d352b8f54d7d47b80dbaa">LineStripAdjacency</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a7af94041be77647bb639fa9fd94cd338a72ba2961719d09dc64d6088bb7b6e13a">LinesAdjacency</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a7af94041be77647bb639fa9fd94cd338a1da0b9ead8b051940a89214bae22831c">TriangleStrip</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a7af94041be77647bb639fa9fd94cd338a18d58fde618e4a30e2dfdc122e693047">TriangleFan</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a7af94041be77647bb639fa9fd94cd338a7ca66fdfaad3eb33fc65d7490178f856">Triangles</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a7af94041be77647bb639fa9fd94cd338a6b682fd6550f90f75722e4a7d38f3949">TriangleStripAdjacency</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a7af94041be77647bb639fa9fd94cd338a17eff3f9b5c0afdaacaeaf79238e36d5">TrianglesAdjacency</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a7af94041be77647bb639fa9fd94cd338ac4d283323af70979073f5cb6145f3a4b">Patches</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>MultisampleTextureSampleLocations</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>adb0ce1665649673250190e627ab8a6a5</anchor>
      <arglist></arglist>
      <enumvalue file="namespaceMagnum.html" anchor="adb0ce1665649673250190e627ab8a6a5ae4964d078936084e4df8afce581a2c7f">NotFixed</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="adb0ce1665649673250190e627ab8a6a5a4457d440870ad6d42bab9082d9bf9b61">Fixed</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>PixelFormat</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a19bc9ab632085a01f8a77119476dea9b</anchor>
      <arglist></arglist>
      <enumvalue file="namespaceMagnum.html" anchor="a19bc9ab632085a01f8a77119476dea9baee38e4d5dd68c4e440825018d549cb47">Red</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a19bc9ab632085a01f8a77119476dea9bad382816a3cbeed082c9e216e7392eed1">Green</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a19bc9ab632085a01f8a77119476dea9ba9594eec95be70e7b1710f730fdda33d9">Blue</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a19bc9ab632085a01f8a77119476dea9ba280f73691109aeaa235ffddd2d154d9b">Luminance</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a19bc9ab632085a01f8a77119476dea9babac953e88f6d79514b0b6fc42eb6f3b7">RG</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a19bc9ab632085a01f8a77119476dea9ba780701651d86fd20708e81e7ad48c078">LuminanceAlpha</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a19bc9ab632085a01f8a77119476dea9ba889574aebacda6bfd3e534e2b49b8028">RGB</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a19bc9ab632085a01f8a77119476dea9baea3495a278957dc58165e48a8945469f">RGBA</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a19bc9ab632085a01f8a77119476dea9ba2ad5640ebdec72fc79531d1778c6c2dc">BGR</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a19bc9ab632085a01f8a77119476dea9ba5a1fe3c61c9e2fd6dbbc823589f6e697">BGRA</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a19bc9ab632085a01f8a77119476dea9ba1f3f09bca5728eb7af4ea263ae84b9f1">SRGB</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a19bc9ab632085a01f8a77119476dea9ba5dfd728b3bee2ad053d22203c3e8f2b8">SRGBAlpha</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a19bc9ab632085a01f8a77119476dea9ba3774ed2915a508b6652a18b368a82a40">RedInteger</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a19bc9ab632085a01f8a77119476dea9ba108f898baf120f2b888ce842b430ad41">GreenInteger</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a19bc9ab632085a01f8a77119476dea9ba02f2197d037a51e8791768a670ea5ca9">BlueInteger</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a19bc9ab632085a01f8a77119476dea9bac614904b10b846a993192fd483fd0f8d">RGInteger</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a19bc9ab632085a01f8a77119476dea9ba893f9d29983ee73833f207885e688927">RGBInteger</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a19bc9ab632085a01f8a77119476dea9ba5beae36e40eb87168d14300e4b38a966">RGBAInteger</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a19bc9ab632085a01f8a77119476dea9bafc927856045b7f1d1bf641aeb660aa5f">BGRInteger</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a19bc9ab632085a01f8a77119476dea9ba29874b26b860b0ddc3f3b447fc96849f">BGRAInteger</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a19bc9ab632085a01f8a77119476dea9ba19c8f1ee3a700e77e87053eee47f6bc8">DepthComponent</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a19bc9ab632085a01f8a77119476dea9bac07ade4f9906db3ee8e4e7053dac1dee">StencilIndex</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a19bc9ab632085a01f8a77119476dea9ba2fa8076285272883c91e14402975a441">DepthStencil</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>PixelType</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a42cb1183f2da81e12553a28a196001e7</anchor>
      <arglist></arglist>
      <enumvalue file="namespaceMagnum.html" anchor="a42cb1183f2da81e12553a28a196001e7a8f0fb883eb5a52838534191513e365a2">UnsignedByte</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a42cb1183f2da81e12553a28a196001e7aa245c3230debe5c956484ecc6fa93877">Byte</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a42cb1183f2da81e12553a28a196001e7aeb51124277f3ec904a9af74d5de34e7b">UnsignedShort</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a42cb1183f2da81e12553a28a196001e7a30bb747c98bccdd11b3f89e644c4d0ad">Short</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a42cb1183f2da81e12553a28a196001e7ac93cff91b6b9a57fa32bbe1863150070">UnsignedInt</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a42cb1183f2da81e12553a28a196001e7a1686a6c336b71b36d77354cea19a8b52">Int</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a42cb1183f2da81e12553a28a196001e7ad35523d81610cee8b87cdac1853ad51f">HalfFloat</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a42cb1183f2da81e12553a28a196001e7a22ae0e2b89e5e3d477f988cc36d3272b">Float</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a42cb1183f2da81e12553a28a196001e7a131ebe9fa09dd81ada14f4d5ef22a5b2">UnsignedByte332</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a42cb1183f2da81e12553a28a196001e7aaf08cd4bda32cbbc17aa1f038787b49b">UnsignedByte233Rev</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a42cb1183f2da81e12553a28a196001e7a9d948d3fd54e7a0e9b0a7160d30e60bd">UnsignedShort565</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a42cb1183f2da81e12553a28a196001e7ad6ec07a536b4ddfa016eb3401cf15ea7">UnsignedShort565Rev</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a42cb1183f2da81e12553a28a196001e7a0ebf3ad4b14b5318b24eccbcb77ef881">UnsignedShort4444</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a42cb1183f2da81e12553a28a196001e7a49338e95b8a984e8ff863ba90cb6f25a">UnsignedShort4444Rev</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a42cb1183f2da81e12553a28a196001e7ad48678934f71e808d76d168449e41533">UnsignedShort5551</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a42cb1183f2da81e12553a28a196001e7a7529deae08b78021635e47e49463a94b">UnsignedShort1555Rev</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a42cb1183f2da81e12553a28a196001e7add65f4f231b5604c5866304f361d0b54">UnsignedInt8888</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a42cb1183f2da81e12553a28a196001e7a6fc9cc90f443b7408146a06802257ab0">UnsignedInt8888Rev</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a42cb1183f2da81e12553a28a196001e7a92660ebc482fda288d7b5c8a13995d55">UnsignedInt1010102</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a42cb1183f2da81e12553a28a196001e7af181e9b017ba4f6226f947aef3d86755">UnsignedInt2101010Rev</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a42cb1183f2da81e12553a28a196001e7ae90d4986e1e586a607c7a9bc906f0b34">UnsignedInt10F11F11FRev</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a42cb1183f2da81e12553a28a196001e7a15d9f69c3205d33007ca888cbf438f45">UnsignedInt5999Rev</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a42cb1183f2da81e12553a28a196001e7a97788b3aa5f586ee2e387dd091a80bb1">UnsignedInt248</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a42cb1183f2da81e12553a28a196001e7a492e9449323f9bf94ab4465e823a7b64">Float32UnsignedInt248Rev</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>CompressedPixelFormat</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a1b8f00e655665d01d53ab342b722db3c</anchor>
      <arglist></arglist>
      <enumvalue file="namespaceMagnum.html" anchor="a1b8f00e655665d01d53ab342b722db3caee38e4d5dd68c4e440825018d549cb47">Red</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a1b8f00e655665d01d53ab342b722db3cabac953e88f6d79514b0b6fc42eb6f3b7">RG</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a1b8f00e655665d01d53ab342b722db3ca889574aebacda6bfd3e534e2b49b8028">RGB</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a1b8f00e655665d01d53ab342b722db3caea3495a278957dc58165e48a8945469f">RGBA</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a1b8f00e655665d01d53ab342b722db3caa3bed52b596f3b91bee25aa10394d27f">RedRgtc1</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a1b8f00e655665d01d53ab342b722db3ca62a8382f8aa2f858c49e427277a50872">RGRgtc2</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a1b8f00e655665d01d53ab342b722db3ca75771c41918045589327f8283c8e352b">SignedRedRgtc1</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a1b8f00e655665d01d53ab342b722db3ca8fd2f045102ec87ada6ce64504fba872">SignedRGRgtc2</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a1b8f00e655665d01d53ab342b722db3cab7916cd38ad43474594d62f109fbf184">RGBBptcUnsignedFloat</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a1b8f00e655665d01d53ab342b722db3cac7dd302cf140a18d635bbc80e1d5e783">RGBBptcSignedFloat</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a1b8f00e655665d01d53ab342b722db3ca7dd6aed4d4b349a913acdf49d5152e6f">RGBABptcUnorm</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a1b8f00e655665d01d53ab342b722db3cae7dbe7b43bd444b07f3cb60d3bd85413">SRGBAlphaBptcUnorm</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a1b8f00e655665d01d53ab342b722db3ca2b383b452d4df4e2a7b7c749d5809f9f">RGB8Etc2</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a1b8f00e655665d01d53ab342b722db3ca8eab3b04a17e67eed15dc5ac8315dc08">SRGB8Etc2</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a1b8f00e655665d01d53ab342b722db3ca355cb5853c206ddfcf3fd3d27b91a9b1">RGB8PunchthroughAlpha1Etc2</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a1b8f00e655665d01d53ab342b722db3cace1e71dfb30dc15b2e56605daf8d0ce7">SRGB8PunchthroughAlpha1Etc2</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a1b8f00e655665d01d53ab342b722db3ca98348631c6532dca147ed76111c3ca13">RGBA8Etc2Eac</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a1b8f00e655665d01d53ab342b722db3ca0725b0958585442fa72335c352a4f31b">SRGB8Alpha8Etc2Eac</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a1b8f00e655665d01d53ab342b722db3ca1adfe9f5f9890951fdd91d9ed0f6d782">R11Eac</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a1b8f00e655665d01d53ab342b722db3cac30713a6d506c10c43c7bcaa69fcbac5">SignedR11Eac</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a1b8f00e655665d01d53ab342b722db3ca45ebf94b3877605e10852bcc28f4fcaa">RG11Eac</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a1b8f00e655665d01d53ab342b722db3cae7fb874dcd270f657787a2df8ca76fdf">SignedRG11Eac</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a1b8f00e655665d01d53ab342b722db3ca202cb4f41f66d0b27bfc6f968f5d4e64">RGBS3tcDxt1</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a1b8f00e655665d01d53ab342b722db3ca5651aff1d9255d714952c05ddc992f47">RGBAS3tcDxt1</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a1b8f00e655665d01d53ab342b722db3cab1b608a98cb05d81c057fb369922718d">RGBAS3tcDxt3</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a1b8f00e655665d01d53ab342b722db3ca2a3b16cfc97107c276f6d8e5d1f1f311">RGBAS3tcDxt5</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a1b8f00e655665d01d53ab342b722db3ca4d54b5762d22b6cccbde8ecd2fadcf45">RGBAAstc4x4</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a1b8f00e655665d01d53ab342b722db3caca48b83bf02a4c74f477b92c766ee7b0">SRGB8Alpha8Astc4x4</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a1b8f00e655665d01d53ab342b722db3caa2b69ce26a065fc75905a70d03829757">RGBAAstc5x4</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a1b8f00e655665d01d53ab342b722db3ca9b3927d698dd5349e8eb9f68e9c6c6a1">SRGB8Alpha8Astc5x4</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a1b8f00e655665d01d53ab342b722db3ca8867cb489f247c08bcfc0a5b42726414">RGBAAstc5x5</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a1b8f00e655665d01d53ab342b722db3ca1860eb6d1eb2911ba7f5e6afd715b1b2">SRGB8Alpha8Astc5x5</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a1b8f00e655665d01d53ab342b722db3cac905ed9f991dc301e8a713b9edc420bc">RGBAAstc6x5</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a1b8f00e655665d01d53ab342b722db3ca77632c655108204cc7496ce98fe192d8">SRGB8Alpha8Astc6x5</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a1b8f00e655665d01d53ab342b722db3ca6622396055bf65a5993a6cb9cf66265f">RGBAAstc6x6</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a1b8f00e655665d01d53ab342b722db3ca960bc98e3d2ceacfad471d1db50ffc76">SRGB8Alpha8Astc6x6</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a1b8f00e655665d01d53ab342b722db3caf7f012ccc372ef62e682256dbd93aefb">RGBAAstc8x5</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a1b8f00e655665d01d53ab342b722db3ca1d8b727d6330b5cd196d7197cbc2c626">SRGB8Alpha8Astc8x5</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a1b8f00e655665d01d53ab342b722db3caae5be3648e3d9ceb03d30b49251c0629">RGBAAstc8x6</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a1b8f00e655665d01d53ab342b722db3cafc2666906090246eefb829972ead8280">SRGB8Alpha8Astc8x6</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a1b8f00e655665d01d53ab342b722db3ca43204df6edcc8d05b25e7efb58934f46">RGBAAstc8x8</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a1b8f00e655665d01d53ab342b722db3caaef0fa49535ce0cfac9dc45cbf22dc6f">SRGB8Alpha8Astc8x8</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a1b8f00e655665d01d53ab342b722db3ca6d0c85423c4abf4c177c93447a4b7777">RGBAAstc10x5</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a1b8f00e655665d01d53ab342b722db3ca0f413861153fe70fc44eb26acf2eaa99">SRGB8Alpha8Astc10x5</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a1b8f00e655665d01d53ab342b722db3cad034ed7edf6c7208a351589ed2e5f17a">RGBAAstc10x6</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a1b8f00e655665d01d53ab342b722db3ca98ce333cbad0ca0b10b47673ba3c9610">SRGB8Alpha8Astc10x6</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a1b8f00e655665d01d53ab342b722db3ca5d145bbb1f4d7494d1ef3c2a554a2691">RGBAAstc10x8</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a1b8f00e655665d01d53ab342b722db3cacb5ca548816c10b8e9328ffdfe4c584a">SRGB8Alpha8Astc10x8</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a1b8f00e655665d01d53ab342b722db3ca01f17158c3d1005268197fdd4990749d">RGBAAstc10x10</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a1b8f00e655665d01d53ab342b722db3ca7db9b87a93dfa09f1bd47035f34028ce">SRGB8Alpha8Astc10x10</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a1b8f00e655665d01d53ab342b722db3ca939449aabd0a436676eb40d18dc2cd10">RGBAAstc12x10</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a1b8f00e655665d01d53ab342b722db3ca7b95d2f5ff8e629c4799a667d7b21fc9">SRGB8Alpha8Astc12x10</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a1b8f00e655665d01d53ab342b722db3ca202b3c29a027a3edfd8df16f1bc65544">RGBAAstc12x12</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a1b8f00e655665d01d53ab342b722db3ca2635212e4b84e4b77fd26175e564d013">SRGB8Alpha8Astc12x12</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>RenderbufferFormat</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a8251455f053dfb72bc68e427219a7990</anchor>
      <arglist></arglist>
      <enumvalue file="namespaceMagnum.html" anchor="a8251455f053dfb72bc68e427219a7990aee38e4d5dd68c4e440825018d549cb47">Red</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a8251455f053dfb72bc68e427219a7990acfff813d86d447fa2a9c858650ebbb90">R8</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a8251455f053dfb72bc68e427219a7990abac953e88f6d79514b0b6fc42eb6f3b7">RG</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a8251455f053dfb72bc68e427219a7990a0367a93b9e3e7aa2fbe9802d80298e46">RG8</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a8251455f053dfb72bc68e427219a7990aea3495a278957dc58165e48a8945469f">RGBA</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a8251455f053dfb72bc68e427219a7990ab4b279046a02077466fa26cabb00c642">RGBA8</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a8251455f053dfb72bc68e427219a7990a9a486e1a3c543c7c58e1cc8086dc4239">R16</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a8251455f053dfb72bc68e427219a7990a2b66caa416f0a28686ade3fc30ab223a">RG16</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a8251455f053dfb72bc68e427219a7990a1cd42e2af35bdfb43d791f8cecdce4a4">RGB16</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a8251455f053dfb72bc68e427219a7990a50989efe15b375dce8ba3a5714fe2543">RGBA16</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a8251455f053dfb72bc68e427219a7990a477722a31a67b4a8f4bdb09e796e343b">R8UI</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a8251455f053dfb72bc68e427219a7990a65264dd5d010ab021cbec10f07f97ed5">RG8UI</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a8251455f053dfb72bc68e427219a7990aeb843f86a572765b9be8a71bd9563bea">RGBA8UI</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a8251455f053dfb72bc68e427219a7990a1ab8b9cd2509e2ccf930739d6d29ff35">R8I</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a8251455f053dfb72bc68e427219a7990af16a55975b8a8daa365e5b3cb116a001">RG8I</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a8251455f053dfb72bc68e427219a7990ab99d001604e415e4ea7f107daaffd6dd">RGBA8I</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a8251455f053dfb72bc68e427219a7990ac13d06830e39e268be15adfae07d9eb0">R16UI</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a8251455f053dfb72bc68e427219a7990a4475a780df31a86ece088a8aac082b12">RG16UI</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a8251455f053dfb72bc68e427219a7990ae418a751a46186248578aecf3f30a26c">RGBA16UI</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a8251455f053dfb72bc68e427219a7990a3bf53b9d9aca5ddf22161b4c9d362f3f">R16I</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a8251455f053dfb72bc68e427219a7990af0c6bc16df3d36b62adc241a797148de">RG16I</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a8251455f053dfb72bc68e427219a7990a3d8d82a913260a439bf38ed05d6d2f46">RGBA16I</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a8251455f053dfb72bc68e427219a7990a2c102dbf18ef5770d3beb5385661c1c2">R32UI</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a8251455f053dfb72bc68e427219a7990ac16ead63f9b07b5c97635edac05412cd">RG32UI</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a8251455f053dfb72bc68e427219a7990ac050956335d883e2f6ed07cc6b0c90d8">RGBA32UI</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a8251455f053dfb72bc68e427219a7990a88996871eb63291d92c2f9d83219648a">R32I</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a8251455f053dfb72bc68e427219a7990a56014c7d6ebfadbff4d0d4d3c20a0243">RG32I</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a8251455f053dfb72bc68e427219a7990a9f87275b4130dd118085dd75ee6a7ac1">RGBA32I</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a8251455f053dfb72bc68e427219a7990a8dfbaada0d68227f5c299c2aa637df68">R16F</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a8251455f053dfb72bc68e427219a7990ad28539b874a2bc4c5d40f49b375af474">RG16F</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a8251455f053dfb72bc68e427219a7990aa29d843695056f9c171a9eb702d6910a">RGBA16F</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a8251455f053dfb72bc68e427219a7990aca70b53fb0610461a2327973614a76ce">R32F</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a8251455f053dfb72bc68e427219a7990ab968b93cd3c34fc9583050ce7e267394">RG32F</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a8251455f053dfb72bc68e427219a7990a703a7a81e586669c930e3dcaf3e8c428">RGBA32F</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a8251455f053dfb72bc68e427219a7990a4cad8c5058101f0f527e306958b6641b">RGB10A2</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a8251455f053dfb72bc68e427219a7990a1d8555f4846b8791e329e36dcd5239dc">RGB10A2UI</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a8251455f053dfb72bc68e427219a7990a145a041c8e2080c43fa129fb5b17d8be">RGB5A1</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a8251455f053dfb72bc68e427219a7990ad0194ebb93fd86b15f194ef73f81a01f">RGBA4</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a8251455f053dfb72bc68e427219a7990ac749b8eee74e3b7b60f8774178537dea">R11FG11FB10F</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a8251455f053dfb72bc68e427219a7990a3b73e4d15701467ed72f157ffaff680a">RGB565</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a8251455f053dfb72bc68e427219a7990ad639700e92ceb4aaafdf02ebdb3e15a4">SRGB8Alpha8</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a8251455f053dfb72bc68e427219a7990a19c8f1ee3a700e77e87053eee47f6bc8">DepthComponent</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a8251455f053dfb72bc68e427219a7990ab5743b6194329afdf89a6a32bbcc4124">DepthComponent16</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a8251455f053dfb72bc68e427219a7990aedf2b17fc7b220c3b855af306c9f409d">DepthComponent24</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a8251455f053dfb72bc68e427219a7990a1f519142b59a9d4382c6aa004acd7dd2">DepthComponent32</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a8251455f053dfb72bc68e427219a7990a9e1081f1bca10bb12b11b81c23ccbdb2">DepthComponent32F</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a8251455f053dfb72bc68e427219a7990ac07ade4f9906db3ee8e4e7053dac1dee">StencilIndex</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a8251455f053dfb72bc68e427219a7990a560908539b7d178d0b9110e5f6fa2c88">StencilIndex1</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a8251455f053dfb72bc68e427219a7990a399d15fb10ce87fceba1c826ee904fba">StencilIndex4</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a8251455f053dfb72bc68e427219a7990a08af7fbfd260214add2e402d8427f0a8">StencilIndex8</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a8251455f053dfb72bc68e427219a7990a728c7335f0b2e511de1ccb95f67ad78f">StencilIndex16</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a8251455f053dfb72bc68e427219a7990a2fa8076285272883c91e14402975a441">DepthStencil</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a8251455f053dfb72bc68e427219a7990a78181d4f5d4b30baefed6c0da0de894f">Depth24Stencil8</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a8251455f053dfb72bc68e427219a7990abe0ddae1e70dc4233b16fc053a60e2fe">Depth32FStencil8</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>ResourceState</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a63e2340ca72c0086308a26c86b3268df</anchor>
      <arglist></arglist>
      <enumvalue file="namespaceMagnum.html" anchor="a63e2340ca72c0086308a26c86b3268dfa5111e24c1ecc6266ce0de4b4dc42033b">NotLoaded</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a63e2340ca72c0086308a26c86b3268dfa98029ed1c91fd6f14761ede80f916190">NotLoadedFallback</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a63e2340ca72c0086308a26c86b3268dfa16bfbf9c462762cf1cba4134ec53c504">Loading</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a63e2340ca72c0086308a26c86b3268dfa9d6fb043e63f3ff15df0d888f364b433">LoadingFallback</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a63e2340ca72c0086308a26c86b3268dfa38c300f4fc9ce8a77aad4a30de05cad8">NotFound</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a63e2340ca72c0086308a26c86b3268dfa58aa9ef9ce68a0381bf3acacd95b27d9">NotFoundFallback</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a63e2340ca72c0086308a26c86b3268dfad924522d30d6615e9f71e91504364a9d">Mutable</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a63e2340ca72c0086308a26c86b3268dfabeae421a14a34f831c113f61323d1ab3">Final</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>ResourceDataState</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a3dfce2e738ef695a502966dcfaa2d615</anchor>
      <arglist></arglist>
      <enumvalue file="namespaceMagnum.html" anchor="a3dfce2e738ef695a502966dcfaa2d615a16bfbf9c462762cf1cba4134ec53c504">Loading</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a3dfce2e738ef695a502966dcfaa2d615a38c300f4fc9ce8a77aad4a30de05cad8">NotFound</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a3dfce2e738ef695a502966dcfaa2d615ad924522d30d6615e9f71e91504364a9d">Mutable</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a3dfce2e738ef695a502966dcfaa2d615abeae421a14a34f831c113f61323d1ab3">Final</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>ResourcePolicy</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>aabe552f4e54e32a9706638e6423af077</anchor>
      <arglist></arglist>
      <enumvalue file="namespaceMagnum.html" anchor="aabe552f4e54e32a9706638e6423af077abad08a863dfd6ade28fd8ef69b15005a">Resident</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="aabe552f4e54e32a9706638e6423af077ae1ba155a9f2e8c3be94020eef32a0301">Manual</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="aabe552f4e54e32a9706638e6423af077a3dbff95bbc40eaab0fb54197ff7f56c6">ReferenceCounted</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>TextureFormat</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a0d31e9826f048e5fdacae2a2c655d564</anchor>
      <arglist></arglist>
      <enumvalue file="namespaceMagnum.html" anchor="a0d31e9826f048e5fdacae2a2c655d564aee38e4d5dd68c4e440825018d549cb47">Red</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a0d31e9826f048e5fdacae2a2c655d564acfff813d86d447fa2a9c858650ebbb90">R8</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a0d31e9826f048e5fdacae2a2c655d564abac953e88f6d79514b0b6fc42eb6f3b7">RG</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a0d31e9826f048e5fdacae2a2c655d564a0367a93b9e3e7aa2fbe9802d80298e46">RG8</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a0d31e9826f048e5fdacae2a2c655d564a889574aebacda6bfd3e534e2b49b8028">RGB</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a0d31e9826f048e5fdacae2a2c655d564a165c6379d01617e12de274a3952efa63">RGB8</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a0d31e9826f048e5fdacae2a2c655d564aea3495a278957dc58165e48a8945469f">RGBA</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a0d31e9826f048e5fdacae2a2c655d564ab4b279046a02077466fa26cabb00c642">RGBA8</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a0d31e9826f048e5fdacae2a2c655d564ae24128a61e28847e5cae93e146f3c396">R8Snorm</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a0d31e9826f048e5fdacae2a2c655d564a0c1bc4554d3ca92e8ed03fde8fb668fc">RG8Snorm</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a0d31e9826f048e5fdacae2a2c655d564a0ed70c0ecaf24c9abe9b121dd6fbc7be">RGB8Snorm</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a0d31e9826f048e5fdacae2a2c655d564a77b2290184a281692c88cea55f7e4709">RGBA8Snorm</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a0d31e9826f048e5fdacae2a2c655d564a9a486e1a3c543c7c58e1cc8086dc4239">R16</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a0d31e9826f048e5fdacae2a2c655d564a2b66caa416f0a28686ade3fc30ab223a">RG16</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a0d31e9826f048e5fdacae2a2c655d564a1cd42e2af35bdfb43d791f8cecdce4a4">RGB16</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a0d31e9826f048e5fdacae2a2c655d564a50989efe15b375dce8ba3a5714fe2543">RGBA16</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a0d31e9826f048e5fdacae2a2c655d564a3be85f3a039758c6edb91c91b7af98d2">R16Snorm</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a0d31e9826f048e5fdacae2a2c655d564a7e7693eb3b20e62d8af832c2fe116559">RG16Snorm</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a0d31e9826f048e5fdacae2a2c655d564a31fe77f7173ed54fdc96a4f752083205">RGB16Snorm</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a0d31e9826f048e5fdacae2a2c655d564a825f61116ed1837ab9125c3e1921d860">RGBA16Snorm</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a0d31e9826f048e5fdacae2a2c655d564a477722a31a67b4a8f4bdb09e796e343b">R8UI</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a0d31e9826f048e5fdacae2a2c655d564a65264dd5d010ab021cbec10f07f97ed5">RG8UI</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a0d31e9826f048e5fdacae2a2c655d564afc5e2f0963f0ce3529e8aee36d827bbd">RGB8UI</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a0d31e9826f048e5fdacae2a2c655d564aeb843f86a572765b9be8a71bd9563bea">RGBA8UI</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a0d31e9826f048e5fdacae2a2c655d564a1ab8b9cd2509e2ccf930739d6d29ff35">R8I</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a0d31e9826f048e5fdacae2a2c655d564af16a55975b8a8daa365e5b3cb116a001">RG8I</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a0d31e9826f048e5fdacae2a2c655d564a57a36f0c89bfa81cdd9a69e2ad2df08b">RGB8I</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a0d31e9826f048e5fdacae2a2c655d564ab99d001604e415e4ea7f107daaffd6dd">RGBA8I</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a0d31e9826f048e5fdacae2a2c655d564ac13d06830e39e268be15adfae07d9eb0">R16UI</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a0d31e9826f048e5fdacae2a2c655d564a4475a780df31a86ece088a8aac082b12">RG16UI</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a0d31e9826f048e5fdacae2a2c655d564adfb1f628557b0014586b94400f06777b">RGB16UI</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a0d31e9826f048e5fdacae2a2c655d564ae418a751a46186248578aecf3f30a26c">RGBA16UI</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a0d31e9826f048e5fdacae2a2c655d564a3bf53b9d9aca5ddf22161b4c9d362f3f">R16I</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a0d31e9826f048e5fdacae2a2c655d564af0c6bc16df3d36b62adc241a797148de">RG16I</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a0d31e9826f048e5fdacae2a2c655d564aff7632ef49d4bbe6b35050ac957a04c8">RGB16I</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a0d31e9826f048e5fdacae2a2c655d564a3d8d82a913260a439bf38ed05d6d2f46">RGBA16I</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a0d31e9826f048e5fdacae2a2c655d564a2c102dbf18ef5770d3beb5385661c1c2">R32UI</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a0d31e9826f048e5fdacae2a2c655d564ac16ead63f9b07b5c97635edac05412cd">RG32UI</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a0d31e9826f048e5fdacae2a2c655d564ae240d3e394b6a7cfa467efe512e96bb4">RGB32UI</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a0d31e9826f048e5fdacae2a2c655d564ac050956335d883e2f6ed07cc6b0c90d8">RGBA32UI</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a0d31e9826f048e5fdacae2a2c655d564a88996871eb63291d92c2f9d83219648a">R32I</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a0d31e9826f048e5fdacae2a2c655d564a56014c7d6ebfadbff4d0d4d3c20a0243">RG32I</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a0d31e9826f048e5fdacae2a2c655d564a8305c7f5432d31774cceb858c966b22e">RGB32I</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a0d31e9826f048e5fdacae2a2c655d564a9f87275b4130dd118085dd75ee6a7ac1">RGBA32I</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a0d31e9826f048e5fdacae2a2c655d564a8dfbaada0d68227f5c299c2aa637df68">R16F</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a0d31e9826f048e5fdacae2a2c655d564ad28539b874a2bc4c5d40f49b375af474">RG16F</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a0d31e9826f048e5fdacae2a2c655d564a25cd126670bd567a899c64c4e6e8ca7d">RGB16F</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a0d31e9826f048e5fdacae2a2c655d564aa29d843695056f9c171a9eb702d6910a">RGBA16F</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a0d31e9826f048e5fdacae2a2c655d564aca70b53fb0610461a2327973614a76ce">R32F</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a0d31e9826f048e5fdacae2a2c655d564ab968b93cd3c34fc9583050ce7e267394">RG32F</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a0d31e9826f048e5fdacae2a2c655d564ad8936cc7055546f79128b9dbfb8c8bbb">RGB32F</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a0d31e9826f048e5fdacae2a2c655d564a703a7a81e586669c930e3dcaf3e8c428">RGBA32F</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a0d31e9826f048e5fdacae2a2c655d564a280f73691109aeaa235ffddd2d154d9b">Luminance</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a0d31e9826f048e5fdacae2a2c655d564a780701651d86fd20708e81e7ad48c078">LuminanceAlpha</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a0d31e9826f048e5fdacae2a2c655d564a95e4ca1fe4603b39d7e7a4686446d9be">R3B3G2</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a0d31e9826f048e5fdacae2a2c655d564a988777bd9406d465bdf7d81a36b26749">RGB4</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a0d31e9826f048e5fdacae2a2c655d564a51e72bb0b91ea20485e3ad7657b9a60e">RGB5</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a0d31e9826f048e5fdacae2a2c655d564a3b73e4d15701467ed72f157ffaff680a">RGB565</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a0d31e9826f048e5fdacae2a2c655d564aa3ac59ae1fad21561752e23c2bebc6b8">RGB10</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a0d31e9826f048e5fdacae2a2c655d564ac65abdcc9466868b293bfb11179fedc5">RGB12</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a0d31e9826f048e5fdacae2a2c655d564ac749b8eee74e3b7b60f8774178537dea">R11FG11FB10F</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a0d31e9826f048e5fdacae2a2c655d564a02f40147ece0d4ef4c1ec76a56e22224">RGB9E5</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a0d31e9826f048e5fdacae2a2c655d564a1f3f09bca5728eb7af4ea263ae84b9f1">SRGB</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a0d31e9826f048e5fdacae2a2c655d564ab71c01d7fab5970416ff1c79c675dc15">SRGB8</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a0d31e9826f048e5fdacae2a2c655d564a6d3435115853ddb0d9c1711d182ad6ac">RGBA2</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a0d31e9826f048e5fdacae2a2c655d564ad0194ebb93fd86b15f194ef73f81a01f">RGBA4</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a0d31e9826f048e5fdacae2a2c655d564a145a041c8e2080c43fa129fb5b17d8be">RGB5A1</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a0d31e9826f048e5fdacae2a2c655d564a4cad8c5058101f0f527e306958b6641b">RGB10A2</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a0d31e9826f048e5fdacae2a2c655d564a1d8555f4846b8791e329e36dcd5239dc">RGB10A2UI</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a0d31e9826f048e5fdacae2a2c655d564afb9e3f60db71f694d22e9013646d38f5">RGBA12</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a0d31e9826f048e5fdacae2a2c655d564a5dfd728b3bee2ad053d22203c3e8f2b8">SRGBAlpha</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a0d31e9826f048e5fdacae2a2c655d564ad639700e92ceb4aaafdf02ebdb3e15a4">SRGB8Alpha8</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a0d31e9826f048e5fdacae2a2c655d564a625185c9ec2ed5f455d19f1ca6a00773">CompressedRed</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a0d31e9826f048e5fdacae2a2c655d564a772bc5e58449cef708b6156078f3f5d8">CompressedRG</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a0d31e9826f048e5fdacae2a2c655d564ad0031186aeaf9a67a1eeb17f56dce93b">CompressedRGB</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a0d31e9826f048e5fdacae2a2c655d564aa1adbdbb4c32dcd365caa018b1f4c2ab">CompressedRGBA</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a0d31e9826f048e5fdacae2a2c655d564aae5c87496dd401b101d970d2be2d675d">CompressedRedRgtc1</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a0d31e9826f048e5fdacae2a2c655d564aa00895171c7061e57b500fee14a937a8">CompressedRGRgtc2</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a0d31e9826f048e5fdacae2a2c655d564a1c0cc46455d26a44fb5bbfcc773e6caa">CompressedSignedRedRgtc1</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a0d31e9826f048e5fdacae2a2c655d564a7d767450de41e4ad6f8a95fb4515e161">CompressedSignedRGRgtc2</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a0d31e9826f048e5fdacae2a2c655d564a863402c422be61e85e34a2e554b0a63c">CompressedRGBBptcUnsignedFloat</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a0d31e9826f048e5fdacae2a2c655d564ab0ecb340d273932cde6de1fb444f3cb3">CompressedRGBBptcSignedFloat</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a0d31e9826f048e5fdacae2a2c655d564aa245d27842b07f4ae9516d04fde441d1">CompressedRGBABptcUnorm</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a0d31e9826f048e5fdacae2a2c655d564a366916eda1a3218ad315dde357e5204a">CompressedSRGBAlphaBptcUnorm</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a0d31e9826f048e5fdacae2a2c655d564a14250c0d7728ef90e996ae03bf7489fa">CompressedRGB8Etc2</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a0d31e9826f048e5fdacae2a2c655d564a95d73b2acfa5cd90584226c70269f2e8">CompressedSRGB8Etc2</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a0d31e9826f048e5fdacae2a2c655d564ade54b50cd1b16008d3a617f80a34e2eb">CompressedRGB8PunchthroughAlpha1Etc2</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a0d31e9826f048e5fdacae2a2c655d564a6c4a43ca22963e72ff03d842afe8a0a2">CompressedSRGB8PunchthroughAlpha1Etc2</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a0d31e9826f048e5fdacae2a2c655d564a922c03efed4659f37f28437176325647">CompressedRGBA8Etc2Eac</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a0d31e9826f048e5fdacae2a2c655d564a742b4f2e5cd4402729b02ec23a1025f9">CompressedSRGB8Alpha8Etc2Eac</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a0d31e9826f048e5fdacae2a2c655d564adb569da6b6f5e127591d8730ea79cb80">CompressedR11Eac</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a0d31e9826f048e5fdacae2a2c655d564a6806ab0fb22fda8987dc1c44a10c36ad">CompressedSignedR11Eac</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a0d31e9826f048e5fdacae2a2c655d564a45184ba1be0c480b35013d48e23474e6">CompressedRG11Eac</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a0d31e9826f048e5fdacae2a2c655d564a5243d34520a11c285cb37e5a5cffd122">CompressedSignedRG11Eac</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a0d31e9826f048e5fdacae2a2c655d564a85f12a3af9a3a4a4c39e15bc125705e2">CompressedRGBS3tcDxt1</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a0d31e9826f048e5fdacae2a2c655d564a05dd6df6676af88937f4dacc52fd7f6d">CompressedRGBAS3tcDxt1</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a0d31e9826f048e5fdacae2a2c655d564a414690e758599d93ae1083830f33b187">CompressedRGBAS3tcDxt3</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a0d31e9826f048e5fdacae2a2c655d564a3701300f3409e2b208ab0786ccf8a782">CompressedRGBAS3tcDxt5</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a0d31e9826f048e5fdacae2a2c655d564aa1ce82ea6c38485be618682112e539df">CompressedRGBAAstc4x4</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a0d31e9826f048e5fdacae2a2c655d564a28c4d91f38360c0d861795f0ef838681">CompressedSRGB8Alpha8Astc4x4</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a0d31e9826f048e5fdacae2a2c655d564ab0c113c2534fc0708128e5f7176dd70a">CompressedRGBAAstc5x4</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a0d31e9826f048e5fdacae2a2c655d564a51613f53b2a8518f5c88fea1162db2b2">CompressedSRGB8Alpha8Astc5x4</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a0d31e9826f048e5fdacae2a2c655d564ad69c5b046d1173bee3e3f037f0751e89">CompressedRGBAAstc5x5</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a0d31e9826f048e5fdacae2a2c655d564aa763331ac876a25410af5ca632b6db7d">CompressedSRGB8Alpha8Astc5x5</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a0d31e9826f048e5fdacae2a2c655d564ab2684ddc399d9e8dc07bcfaa0852546a">CompressedRGBAAstc6x5</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a0d31e9826f048e5fdacae2a2c655d564a18060e31caa5f53be3dd9d524ece7dfb">CompressedSRGB8Alpha8Astc6x5</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a0d31e9826f048e5fdacae2a2c655d564a84f136529809b4b46a0735c95cd1dcc1">CompressedRGBAAstc6x6</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a0d31e9826f048e5fdacae2a2c655d564a3635c9d4ed5d3e7c2911aacc8e3ba08f">CompressedSRGB8Alpha8Astc6x6</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a0d31e9826f048e5fdacae2a2c655d564a41e0cbb1620e2f5f0a37785cfae3b152">CompressedRGBAAstc8x5</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a0d31e9826f048e5fdacae2a2c655d564a64c722ef1f0d0a1e09ecedaa7b939067">CompressedSRGB8Alpha8Astc8x5</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a0d31e9826f048e5fdacae2a2c655d564ac2c952a6cdd1c104e808fa5ce5f5d43e">CompressedRGBAAstc8x6</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a0d31e9826f048e5fdacae2a2c655d564a350a4a5331d25e3ee726b841381ed9f8">CompressedSRGB8Alpha8Astc8x6</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a0d31e9826f048e5fdacae2a2c655d564ade4424b334ae908d6259c6c8137793c8">CompressedRGBAAstc8x8</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a0d31e9826f048e5fdacae2a2c655d564ab555414f12cc6348809920b4ae02ac2d">CompressedSRGB8Alpha8Astc8x8</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a0d31e9826f048e5fdacae2a2c655d564a1bd7a9fc8fbe546d83daa0c1b41cc9c4">CompressedRGBAAstc10x5</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a0d31e9826f048e5fdacae2a2c655d564a3710b3e0d2eceb116d22c776f4841020">CompressedSRGB8Alpha8Astc10x5</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a0d31e9826f048e5fdacae2a2c655d564ac0052d00bbb4992139980926903db7df">CompressedRGBAAstc10x6</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a0d31e9826f048e5fdacae2a2c655d564a9e81ac0b2ce7a2295475d2e60c80907a">CompressedSRGB8Alpha8Astc10x6</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a0d31e9826f048e5fdacae2a2c655d564abc1f2059e849224ea01d85db0048b4b8">CompressedRGBAAstc10x8</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a0d31e9826f048e5fdacae2a2c655d564aa7d98a3596e139da1d5e7ed2f9a2d3cf">CompressedSRGB8Alpha8Astc10x8</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a0d31e9826f048e5fdacae2a2c655d564a355d96c9193731337720859439453df9">CompressedRGBAAstc10x10</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a0d31e9826f048e5fdacae2a2c655d564ae8127849086ce85af225624ef25f19b4">CompressedSRGB8Alpha8Astc10x10</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a0d31e9826f048e5fdacae2a2c655d564a66524e68a55780a6f3457f20e8e6ace8">CompressedRGBAAstc12x10</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a0d31e9826f048e5fdacae2a2c655d564aad9de1fda6e81b47fe595f0377eaf688">CompressedSRGB8Alpha8Astc12x10</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a0d31e9826f048e5fdacae2a2c655d564adde421f8ef9da00a961c291fa112d226">CompressedRGBAAstc12x12</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a0d31e9826f048e5fdacae2a2c655d564a076dbe24a47429ccef59ae197475c50a">CompressedSRGB8Alpha8Astc12x12</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a0d31e9826f048e5fdacae2a2c655d564a19c8f1ee3a700e77e87053eee47f6bc8">DepthComponent</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a0d31e9826f048e5fdacae2a2c655d564ab5743b6194329afdf89a6a32bbcc4124">DepthComponent16</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a0d31e9826f048e5fdacae2a2c655d564aedf2b17fc7b220c3b855af306c9f409d">DepthComponent24</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a0d31e9826f048e5fdacae2a2c655d564a1f519142b59a9d4382c6aa004acd7dd2">DepthComponent32</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a0d31e9826f048e5fdacae2a2c655d564a9e1081f1bca10bb12b11b81c23ccbdb2">DepthComponent32F</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a0d31e9826f048e5fdacae2a2c655d564a08af7fbfd260214add2e402d8427f0a8">StencilIndex8</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a0d31e9826f048e5fdacae2a2c655d564a2fa8076285272883c91e14402975a441">DepthStencil</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a0d31e9826f048e5fdacae2a2c655d564a78181d4f5d4b30baefed6c0da0de894f">Depth24Stencil8</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="a0d31e9826f048e5fdacae2a2c655d564abe0ddae1e70dc4233b16fc053a60e2fe">Depth32FStencil8</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>Version</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>aa110d058c14fad83dd23b1986aa9f5f1</anchor>
      <arglist></arglist>
      <enumvalue file="namespaceMagnum.html" anchor="aa110d058c14fad83dd23b1986aa9f5f1a6adf97f83acf6453d4a6a4b1070f3754">None</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="aa110d058c14fad83dd23b1986aa9f5f1a6f87fc2156f6b7da4cafba3714fb3c09">GL210</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="aa110d058c14fad83dd23b1986aa9f5f1ae32fe21dd789983eb99064a11c84c00a">GL300</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="aa110d058c14fad83dd23b1986aa9f5f1a0631a35644b3a4a74bec3151f6c9b031">GL310</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="aa110d058c14fad83dd23b1986aa9f5f1a2cd64d0051d11e3c1442d67813886d86">GL320</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="aa110d058c14fad83dd23b1986aa9f5f1ad957a7f239a0bf7df56130c678f6396c">GL330</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="aa110d058c14fad83dd23b1986aa9f5f1a369c4ba0fc139d909ee94a5cc4ddb531">GL400</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="aa110d058c14fad83dd23b1986aa9f5f1ab81b89342b5f32260e52b2105382a298">GL410</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="aa110d058c14fad83dd23b1986aa9f5f1a30a393172e9cfa2c36ba8c6036692fad">GL420</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="aa110d058c14fad83dd23b1986aa9f5f1aa895d16b1ad08894fb826ac79f710f3c">GL430</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="aa110d058c14fad83dd23b1986aa9f5f1ac616f63c50e83d49ca399eb7a5252ca4">GL440</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="aa110d058c14fad83dd23b1986aa9f5f1a232d8bc0d273cd67fa1d295fc3c8a944">GL450</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="aa110d058c14fad83dd23b1986aa9f5f1a2d3e1e712d28ed030790b46222941235">GLES200</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="aa110d058c14fad83dd23b1986aa9f5f1a94d9b97253a36a124f91d9e70153e989">GLES300</enumvalue>
      <enumvalue file="namespaceMagnum.html" anchor="aa110d058c14fad83dd23b1986aa9f5f1aeee309b0c4a4eddcdaed74228d9443c2">GLES310</enumvalue>
    </member>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a2c022de6a506d510afb76bef6f382f10</anchor>
      <arglist>(Debug &amp;debug, const Array&lt; dimensions, T &gt; &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a0006f1ddb183ade30e6696eae4d9e41e</anchor>
      <arglist>(Debug &amp;debug, const Array1D&lt; T &gt; &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a0fd13dadee773ce45ed6ab0a7cfe1630</anchor>
      <arglist>(Debug &amp;debug, const Array2D&lt; T &gt; &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>ac95c370506ed1052ae50af8d3ab81fd1</anchor>
      <arglist>(Debug &amp;debug, const Array3D&lt; T &gt; &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a0eb7a0597aa54dac06f74058f7591913</anchor>
      <arglist>(Debug &amp;debug, Attribute&lt; T &gt;::Components)</arglist>
    </member>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a74a95cad0d549a952ac6a097e5c92b0b</anchor>
      <arglist>(Debug &amp;debug, Attribute&lt; T &gt;::DataType)</arglist>
    </member>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a9024465ba0e0014d55008545bee2493d</anchor>
      <arglist>(Debug &amp;debug, Buffer::TargetHint value)</arglist>
    </member>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a41d8e7d6b7a2d9d12dcca72630d3a23a</anchor>
      <arglist>(Debug &amp;debug, Buffer::Target value)</arglist>
    </member>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a0d4db4d0216dee7835c81b44f0e0a4e0</anchor>
      <arglist>(Debug &amp;debug, Context::Flag value)</arglist>
    </member>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>ad2a1b71ac5740761d3d5f922c0578ddf</anchor>
      <arglist>(Debug &amp;debug, Context::Flags value)</arglist>
    </member>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a9333b5940a6dfc9e3432f8231ded74bc</anchor>
      <arglist>(Debug &amp;debug, Context::DetectedDriver value)</arglist>
    </member>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>ad75f14aae1be07e6094458ae5eab06a7</anchor>
      <arglist>(Debug &amp;debug, Context::DetectedDrivers value)</arglist>
    </member>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a8ebfbeb18914398a29b94bb905a2d27d</anchor>
      <arglist>(Debug &amp;debug, DebugOutput::Source value)</arglist>
    </member>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a46414fbbd0eb0fa569512e82d9ee9e22</anchor>
      <arglist>(Debug &amp;debug, DebugOutput::Type value)</arglist>
    </member>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a89d1fd21bfaa208055a8c0c9520776e2</anchor>
      <arglist>(Debug &amp;debug, DebugOutput::Severity value)</arglist>
    </member>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a757e23b71bfbb06869da1eba3b7d45da</anchor>
      <arglist>(Debug &amp;debug, DebugMessage::Source value)</arglist>
    </member>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>ab1f7b8a72a9a538560f8f0606ca1f4a8</anchor>
      <arglist>(Debug &amp;debug, DebugMessage::Type value)</arglist>
    </member>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>ac94d5fde25c824e3f7cafb1c0ff7cb13</anchor>
      <arglist>(Debug &amp;debug, DebugGroup::Source value)</arglist>
    </member>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a67c85d774decf9566ce34f0861b88198</anchor>
      <arglist>(Debug &amp;debug, DefaultFramebuffer::Status value)</arglist>
    </member>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a969df0ccdd40303d80c983c3eda61ef8</anchor>
      <arglist>(Debug &amp;debug, Framebuffer::Status value)</arglist>
    </member>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a58c54ddbe369385b333026e6a47c9d8f</anchor>
      <arglist>(Debug &amp;debug, MeshPrimitive value)</arglist>
    </member>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a57501c2212f201d21f32303c9bfad36f</anchor>
      <arglist>(Debug &amp;debug, Mesh::IndexType value)</arglist>
    </member>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>ae2509f72eca955fc87ec575528155148</anchor>
      <arglist>(Debug &amp;debug, PixelFormat value)</arglist>
    </member>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a517acaf6f0b9aa2ce8d87f756c85de15</anchor>
      <arglist>(Debug &amp;debug, PixelType value)</arglist>
    </member>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a0c50432f4e10cb29a6cce20876fbb13a</anchor>
      <arglist>(Debug &amp;debug, CompressedPixelFormat value)</arglist>
    </member>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>af5ed7655c31326a82464a3856ce8adaa</anchor>
      <arglist>(Debug &amp;debug, Renderer::Error value)</arglist>
    </member>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a4b42fb5b1eb68a0a42794f44ef20faf5</anchor>
      <arglist>(Debug &amp;debug, Renderer::ResetNotificationStrategy value)</arglist>
    </member>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a41f92605fac305549dc1f4bdb6957fa7</anchor>
      <arglist>(Debug &amp;debug, Renderer::GraphicsResetStatus value)</arglist>
    </member>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a9758329b50e17519e09b1fad67363cf7</anchor>
      <arglist>(Debug &amp;debug, ResourceState value)</arglist>
    </member>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>af79e3aa47905863e951ac3a2ea29e229</anchor>
      <arglist>(Debug &amp;debug, const ResourceKey &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a5bca7b2fd3e0d6816c5652267f8079c1</anchor>
      <arglist>(Debug &amp;debug, Sampler::Filter value)</arglist>
    </member>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>ae5c6fc0d71ff3d74d3f4b90dbfef1d88</anchor>
      <arglist>(Debug &amp;debug, Sampler::Mipmap value)</arglist>
    </member>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>ace21573458a560752b4fb03849511f6b</anchor>
      <arglist>(Debug &amp;debug, Sampler::Wrapping value)</arglist>
    </member>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>ae45b4c75690c3eafb4c65c1874ef78ec</anchor>
      <arglist>(Debug &amp;debug, Sampler::CompareMode value)</arglist>
    </member>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a0e03d2522cbe925f70e0187d0658a9e6</anchor>
      <arglist>(Debug &amp;debug, Sampler::CompareFunction value)</arglist>
    </member>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a657ebfc7cc47efce2d5c377b1f9ec362</anchor>
      <arglist>(Debug &amp;debug, Sampler::DepthStencilMode value)</arglist>
    </member>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a7ade40fd2de1c917757f97dbd6c5ab11</anchor>
      <arglist>(Debug &amp;debug, Shader::Type value)</arglist>
    </member>
    <member kind="function">
      <type>constexpr Version</type>
      <name>version</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a95f280589df516031693cb2d11d52c06</anchor>
      <arglist>(Int major, Int minor)</arglist>
    </member>
    <member kind="function">
      <type>std::pair&lt; Int, Int &gt;</type>
      <name>version</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a89df9b2d0140798498ddc59410e4e00e</anchor>
      <arglist>(Version version)</arglist>
    </member>
    <member kind="function">
      <type>constexpr bool</type>
      <name>isVersionES</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>aaab44a279254190c51a48982998b7e03</anchor>
      <arglist>(Version version)</arglist>
    </member>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>adb0ac5462046fffd543c86ce6d595463</anchor>
      <arglist>(Debug &amp;debug, Version value)</arglist>
    </member>
    <member kind="variable">
      <type>DefaultFramebuffer</type>
      <name>defaultFramebuffer</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>af2335a0032886bac99856723271a3796</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>constexpr NoCreateT</type>
      <name>NoCreate</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>ae03d3fce3586ce1ff1e881f795bcd4a3</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::uint8_t</type>
      <name>UnsignedByte</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a07cf9231dbda5f296cc205ab7ecb770f</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::int8_t</type>
      <name>Byte</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>ab3326c49ec1ed9b0bb5e292c1ad81f82</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::uint16_t</type>
      <name>UnsignedShort</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a909e88e5e85c567e854bedac5ef40abf</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::int16_t</type>
      <name>Short</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a8a61fb6a9a4bb99d17c5501a668927f2</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::uint32_t</type>
      <name>UnsignedInt</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a8d47f9ac6d7ced811b3d355990a3732b</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::int32_t</type>
      <name>Int</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>aee42530d46e85ad0d60312c3526f4c50</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::uint64_t</type>
      <name>UnsignedLong</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a864ee326698465e20b52c19fd7044ac0</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::int64_t</type>
      <name>Long</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>aadaf2d260758705587a825d8c8907a7d</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>float</type>
      <name>Float</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a232af7e6fd9b88195fbc59fcec2155cb</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::Half</type>
      <name>Half</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>ae9ad232db78b650420d4a56d3d67f0e6</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::Vector2&lt; Float &gt;</type>
      <name>Vector2</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a867c5cc7c779e5f990bcfb4457eb81e8</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::Vector3&lt; Float &gt;</type>
      <name>Vector3</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a6949fa86a0af6ed632c90d4223baeb59</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::Vector4&lt; Float &gt;</type>
      <name>Vector4</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a3f4cac6ff006e4e32682ebb2b117d7bc</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::Vector2&lt; UnsignedInt &gt;</type>
      <name>Vector2ui</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a4506781bc0ae351534004ec20d64cf2d</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::Vector3&lt; UnsignedInt &gt;</type>
      <name>Vector3ui</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a26df486c6774622c92b881350d4876a7</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::Vector4&lt; UnsignedInt &gt;</type>
      <name>Vector4ui</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>aeabe8282965e92504504ce4eae543187</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::Vector2&lt; Int &gt;</type>
      <name>Vector2i</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>ae3ac51b4e18ff95be7dd874c1cc861f7</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::Vector3&lt; Int &gt;</type>
      <name>Vector3i</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a053340a86ab63e587ab3773ff1265784</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::Vector4&lt; Int &gt;</type>
      <name>Vector4i</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a9e0f4dfa754bf25f9a9f39f84ae8f396</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::Color3&lt; Float &gt;</type>
      <name>Color3</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a99bf0ab337b9ed6ff6ccfd8ea147a900</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::Color4&lt; Float &gt;</type>
      <name>Color4</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a5cb8f674ed695b93b434b44bd7c96805</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::Color3&lt; UnsignedByte &gt;</type>
      <name>Color3ub</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>afde3a07a49799b474c74f186f01cbc25</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::Color4&lt; UnsignedByte &gt;</type>
      <name>Color4ub</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a1444bc0c8960f51e682cc718331c3c5d</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::Matrix3&lt; Float &gt;</type>
      <name>Matrix3</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a7abac7ed657a50f2964d6b2c4a1f7677</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::Matrix4&lt; Float &gt;</type>
      <name>Matrix4</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a28cfaaad41fdc6b258092278ba4569d5</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::Matrix2x2&lt; Float &gt;</type>
      <name>Matrix2x2</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>ae1523b3078a9f2b0f6dd83daded9e970</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::Matrix3x3&lt; Float &gt;</type>
      <name>Matrix3x3</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a7ee135be46a327f352d01287579e2acf</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::Matrix4x4&lt; Float &gt;</type>
      <name>Matrix4x4</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a1beb3e75007fb50638fe5b25d513a688</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::Matrix2x3&lt; Float &gt;</type>
      <name>Matrix2x3</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>ab3dced70ba66525d9bbb6b44e6227188</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::Matrix3x2&lt; Float &gt;</type>
      <name>Matrix3x2</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a689baccbb9256e282d2d68e3486dcc80</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::Matrix2x4&lt; Float &gt;</type>
      <name>Matrix2x4</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a7533874fc2ef4af1118a1727d56ec7e1</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::Matrix4x2&lt; Float &gt;</type>
      <name>Matrix4x2</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a4b275037a57059729521813d5eff5afc</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::Matrix3x4&lt; Float &gt;</type>
      <name>Matrix3x4</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a007726fb14fe464a51d3f53970216df6</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::Matrix4x3&lt; Float &gt;</type>
      <name>Matrix4x3</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a15f5e8da966dbdb9ec0c47e6de9ccf3a</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::QuadraticBezier2D&lt; Float &gt;</type>
      <name>QuadraticBezier2D</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>aa076ea30523705e63fd29aa9a44a7924</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::QuadraticBezier3D&lt; Float &gt;</type>
      <name>QuadraticBezier3D</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>aab522cde6ba1d070df7ea26749f2faf0</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::CubicBezier2D&lt; Float &gt;</type>
      <name>CubicBezier2D</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a1deead2c643a2b9b053540b9c70202bd</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::CubicBezier3D&lt; Float &gt;</type>
      <name>CubicBezier3D</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a1153a483856bb774602a3df94c7d53b1</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::Complex&lt; Float &gt;</type>
      <name>Complex</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>af8f959fbcda212df03f4db0c0b4d8e38</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::DualComplex&lt; Float &gt;</type>
      <name>DualComplex</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a301eadaf85af10586dd8fee8a5c7f268</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::Quaternion&lt; Float &gt;</type>
      <name>Quaternion</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a2e3f956058db79a46099bd104b08eeb9</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::DualQuaternion&lt; Float &gt;</type>
      <name>DualQuaternion</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>ad64bf8f226da3f14dc0e88e2b5a6c251</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::Constants&lt; Float &gt;</type>
      <name>Constants</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a6c070a7b75b28d88915aa17af9b78c21</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::Deg&lt; Float &gt;</type>
      <name>Deg</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a35aafd6ffb9da9a9e7b3805141ecbbb3</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::Rad&lt; Float &gt;</type>
      <name>Rad</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a0471754d0b583682b2dd2cf4d99077af</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::Range1D&lt; Float &gt;</type>
      <name>Range1D</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>ad4ec1efaa47da1a4b7815950683fb225</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::Range2D&lt; Float &gt;</type>
      <name>Range2D</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a08b469227b1a8989c2c151d3a8899642</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::Range3D&lt; Float &gt;</type>
      <name>Range3D</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a7fbce9c90d2709f47e0d5f094f183208</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::Range1D&lt; Int &gt;</type>
      <name>Range1Di</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a78544ddd221d110240d3da598b3450c4</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::Range2D&lt; Int &gt;</type>
      <name>Range2Di</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>aca08a3fe2d57fd40fce6d3d577b43e86</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::Range3D&lt; Int &gt;</type>
      <name>Range3Di</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a055e641c454b6bfacd44c309c2c7aeb3</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::Frustum&lt; Float &gt;</type>
      <name>Frustum</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>aadbcb06e48ab10daaa2f6272b731194c</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>double</type>
      <name>Double</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a5f4cc6ae4658e5eee79148cf4738f789</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::Vector2&lt; Double &gt;</type>
      <name>Vector2d</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>aaff377299fc19849bfed2a64fa80ff7b</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::Vector3&lt; Double &gt;</type>
      <name>Vector3d</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a12999896f6eeea0c53b82f97886f32c9</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::Vector4&lt; Double &gt;</type>
      <name>Vector4d</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a7767801c66c95405c9c1ae3108f676d5</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::Matrix3&lt; Double &gt;</type>
      <name>Matrix3d</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>ad1a28945c4fe29ad91e5da1244c5669e</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::Matrix4&lt; Double &gt;</type>
      <name>Matrix4d</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>addbaa6dd74e1967ef70a15e7bfaaabb2</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::Matrix2x2&lt; Double &gt;</type>
      <name>Matrix2x2d</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>ac8b90a55a3ff885b42009b9f46cbc054</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::Matrix3x3&lt; Double &gt;</type>
      <name>Matrix3x3d</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a44a1a23ecbda7c6343c052535481f16e</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::Matrix4x4&lt; Double &gt;</type>
      <name>Matrix4x4d</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>aae9dc931fa1c545f2990891779fb665d</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::Matrix2x3&lt; Double &gt;</type>
      <name>Matrix2x3d</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>ae72831cf88f37efaf38129138d02a2b2</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::Matrix3x2&lt; Double &gt;</type>
      <name>Matrix3x2d</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a4e89a28c7b25d548658560d5651c8d36</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::Matrix2x4&lt; Double &gt;</type>
      <name>Matrix2x4d</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a4a2863ef1337008849345c9b8720dc59</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::Matrix4x2&lt; Double &gt;</type>
      <name>Matrix4x2d</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a502dadb2e648b9cb785124d8e57613ab</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::Matrix3x4&lt; Double &gt;</type>
      <name>Matrix3x4d</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a3a80fad794621611bf170e5bb818135d</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::Matrix4x3&lt; Double &gt;</type>
      <name>Matrix4x3d</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a55e335c75732e3a13b400a3a8837d16a</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::QuadraticBezier2D&lt; Float &gt;</type>
      <name>QuadraticBezier2Dd</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a28635f12b30809607b32ba90282735a3</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::QuadraticBezier3D&lt; Float &gt;</type>
      <name>QuadraticBezier3Dd</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a7a1745348e3df1b36f543a9fb143520f</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::CubicBezier2D&lt; Float &gt;</type>
      <name>CubicBezier2Dd</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a5b4862b5ded9c45b0eaa23c143147e5c</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::CubicBezier3D&lt; Float &gt;</type>
      <name>CubicBezier3Dd</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a85efadd97b72b331eee0912da21a433b</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::Complex&lt; Double &gt;</type>
      <name>Complexd</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a39c00aecf9014a896daa67ce80f588c2</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::DualComplex&lt; Double &gt;</type>
      <name>DualComplexd</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>af5caf88b9b32ea8f5839e1033b75f8fb</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::Quaternion&lt; Double &gt;</type>
      <name>Quaterniond</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a98a0b80388b8500611f9ac50ee5090d2</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::DualQuaternion&lt; Double &gt;</type>
      <name>DualQuaterniond</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>ab3389caa75ddcc24e1c17b1e47928451</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::Constants&lt; Double &gt;</type>
      <name>Constantsd</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a4b861df9ed0195727ce15b9499318c20</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::Deg&lt; Double &gt;</type>
      <name>Degd</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>abb6b2ed24bc5511b4d98fa6cdc446c02</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::Rad&lt; Double &gt;</type>
      <name>Radd</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>a576be96b2eb268a0c84b7d8fbb5edf23</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::Range1D&lt; Double &gt;</type>
      <name>Range1Dd</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>ad0ade5e31406fc3dd7b85fb634c4a865</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::Range2D&lt; Double &gt;</type>
      <name>Range2Dd</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>ac7dcda0b7320b7377e0bdabe6a2d4649</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::Range3D&lt; Double &gt;</type>
      <name>Range3Dd</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>af69768f0c458043b7a6a030340456e6a</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Math::Frustum&lt; Double &gt;</type>
      <name>Frustumd</name>
      <anchorfile>namespaceMagnum.html</anchorfile>
      <anchor>aaa52550cff11cf462303a5268fd42089</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>Magnum::Audio</name>
    <filename>namespaceMagnum_1_1Audio.html</filename>
    <namespace>Magnum::Audio::Extensions</namespace>
    <class kind="class">Magnum::Audio::AbstractImporter</class>
    <class kind="class">Magnum::Audio::AnyImporter</class>
    <class kind="class">Magnum::Audio::Buffer</class>
    <class kind="class">Magnum::Audio::Context</class>
    <class kind="class">Magnum::Audio::DrFlacImporter</class>
    <class kind="class">Magnum::Audio::DrWavImporter</class>
    <class kind="class">Magnum::Audio::Extension</class>
    <class kind="class">Magnum::Audio::Listener</class>
    <class kind="class">Magnum::Audio::Playable</class>
    <class kind="class">Magnum::Audio::PlayableGroup</class>
    <class kind="class">Magnum::Audio::Renderer</class>
    <class kind="struct">Magnum::Audio::RiffChunk</class>
    <class kind="class">Magnum::Audio::Source</class>
    <class kind="class">Magnum::Audio::StbVorbisImporter</class>
    <class kind="struct">Magnum::Audio::WavFormatChunk</class>
    <class kind="struct">Magnum::Audio::WavHeaderChunk</class>
    <class kind="class">Magnum::Audio::WavImporter</class>
    <member kind="typedef">
      <type>Playable&lt; 2 &gt;</type>
      <name>Playable2D</name>
      <anchorfile>namespaceMagnum_1_1Audio.html</anchorfile>
      <anchor>aea04a9f80a7ff221bd57b5cd1a376646</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Playable&lt; 3 &gt;</type>
      <name>Playable3D</name>
      <anchorfile>namespaceMagnum_1_1Audio.html</anchorfile>
      <anchor>ab957c446069f80c9b8e75d1b83d177d9</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>PlayableGroup&lt; 2 &gt;</type>
      <name>PlayableGroup2D</name>
      <anchorfile>namespaceMagnum_1_1Audio.html</anchorfile>
      <anchor>aba0415d6d8f769317d7df70ba290c592</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>PlayableGroup&lt; 3 &gt;</type>
      <name>PlayableGroup3D</name>
      <anchorfile>namespaceMagnum_1_1Audio.html</anchorfile>
      <anchor>a0577d53d828ce83a748328d046bad331</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Listener&lt; 2 &gt;</type>
      <name>Listener2D</name>
      <anchorfile>namespaceMagnum_1_1Audio.html</anchorfile>
      <anchor>a9349a3afa6bc17cf2c1d3827b7d3f51f</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Listener&lt; 3 &gt;</type>
      <name>Listener3D</name>
      <anchorfile>namespaceMagnum_1_1Audio.html</anchorfile>
      <anchor>aeec8317e1c2929ffa7e179140b1760cd</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>WavAudioFormat</name>
      <anchorfile>namespaceMagnum_1_1Audio.html</anchorfile>
      <anchor>a4815cf29b938deb1289a7b3da48d9a32</anchor>
      <arglist></arglist>
      <enumvalue file="namespaceMagnum_1_1Audio.html" anchor="a4815cf29b938deb1289a7b3da48d9a32a88183b946cc5f0e8c96b2e66e1c74a7e">Unknown</enumvalue>
      <enumvalue file="namespaceMagnum_1_1Audio.html" anchor="a4815cf29b938deb1289a7b3da48d9a32a52461f094ac3952b9f67ec9562fd69d3">Pcm</enumvalue>
      <enumvalue file="namespaceMagnum_1_1Audio.html" anchor="a4815cf29b938deb1289a7b3da48d9a32a10ffce258b606414a30069a7385035a5">AdPcm</enumvalue>
      <enumvalue file="namespaceMagnum_1_1Audio.html" anchor="a4815cf29b938deb1289a7b3da48d9a32a9dcf79cfa6b3d22821e3992bcbf96354">IeeeFloat</enumvalue>
      <enumvalue file="namespaceMagnum_1_1Audio.html" anchor="a4815cf29b938deb1289a7b3da48d9a32aabd77aee2c10d743732ccff67c190069">ALaw</enumvalue>
      <enumvalue file="namespaceMagnum_1_1Audio.html" anchor="a4815cf29b938deb1289a7b3da48d9a32a2c93ec3305b0f0862cf45521ee021dcc">MuLaw</enumvalue>
      <enumvalue file="namespaceMagnum_1_1Audio.html" anchor="a4815cf29b938deb1289a7b3da48d9a32acb9e3624404af6e2ec52e3a39d5358a7">Extensible</enumvalue>
    </member>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceMagnum_1_1Audio.html</anchorfile>
      <anchor>ab1e69c3dc00f873de9e13def3472dce4</anchor>
      <arglist>(Debug &amp;debug, Buffer::Format value)</arglist>
    </member>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceMagnum_1_1Audio.html</anchorfile>
      <anchor>aaaa4894d3c9ef0fd261da648c8850155</anchor>
      <arglist>(Debug &amp;debug, Context::HrtfStatus value)</arglist>
    </member>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceMagnum_1_1Audio.html</anchorfile>
      <anchor>af5ed7655c31326a82464a3856ce8adaa</anchor>
      <arglist>(Debug &amp;debug, Renderer::Error value)</arglist>
    </member>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceMagnum_1_1Audio.html</anchorfile>
      <anchor>ad9b6a4047aa891ba272662f35fd78414</anchor>
      <arglist>(Debug &amp;debug, Renderer::DistanceModel value)</arglist>
    </member>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceMagnum_1_1Audio.html</anchorfile>
      <anchor>a0a8de3ea9665f8333aabda2b530b9d7d</anchor>
      <arglist>(Debug &amp;debug, Source::State value)</arglist>
    </member>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceMagnum_1_1Audio.html</anchorfile>
      <anchor>a6dbcdc8c1c4e6d46220e4475b66d3bdb</anchor>
      <arglist>(Debug &amp;debug, WavAudioFormat value)</arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>Magnum::Audio::Extensions</name>
    <filename>namespaceMagnum_1_1Audio_1_1Extensions.html</filename>
  </compound>
  <compound kind="namespace">
    <name>Magnum::BulletIntegration</name>
    <filename>namespaceMagnum_1_1BulletIntegration.html</filename>
    <class kind="class">Magnum::BulletIntegration::DebugDraw</class>
    <class kind="class">Magnum::BulletIntegration::MotionState</class>
    <member kind="function">
      <type>Shapes::AbstractShape3D *</type>
      <name>convertShape</name>
      <anchorfile>namespaceMagnum_1_1BulletIntegration.html</anchorfile>
      <anchor>a126bfaf12459eb1a25ef13559de89510</anchor>
      <arglist>(SceneGraph::AbstractBasicObject3D&lt; btScalar &gt; &amp;object, const btCollisionShape &amp;shape, Shapes::ShapeGroup3D *shapes=nullptr)</arglist>
    </member>
    <member kind="function">
      <type>Shapes::Shape&lt; Shapes::Box3D &gt; *</type>
      <name>convertShape</name>
      <anchorfile>namespaceMagnum_1_1BulletIntegration.html</anchorfile>
      <anchor>af76460d8f14aa7dc64e78ca327f8d7a5</anchor>
      <arglist>(SceneGraph::AbstractBasicObject3D&lt; btScalar &gt; &amp;object, const btBoxShape &amp;box, Shapes::ShapeGroup3D *shapes=nullptr)</arglist>
    </member>
    <member kind="function">
      <type>Shapes::Shape&lt; Shapes::Sphere3D &gt; *</type>
      <name>convertShape</name>
      <anchorfile>namespaceMagnum_1_1BulletIntegration.html</anchorfile>
      <anchor>ab23e9ad42c1adb4f0c565163a442ce66</anchor>
      <arglist>(SceneGraph::AbstractBasicObject3D&lt; btScalar &gt; &amp;object, const btSphereShape &amp;sphere, Shapes::ShapeGroup3D *shapes=nullptr)</arglist>
    </member>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceMagnum_1_1BulletIntegration.html</anchorfile>
      <anchor>aa37ff90bc9f6e2756fe1a2854d114f43</anchor>
      <arglist>(Debug &amp;debug, DebugDraw::DebugMode value)</arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>Magnum::DebugTools</name>
    <filename>namespaceMagnum_1_1DebugTools.html</filename>
    <class kind="class">Magnum::DebugTools::CompareImage</class>
    <class kind="class">Magnum::DebugTools::ForceRenderer</class>
    <class kind="class">Magnum::DebugTools::ForceRendererOptions</class>
    <class kind="class">Magnum::DebugTools::ObjectRenderer</class>
    <class kind="class">Magnum::DebugTools::ObjectRendererOptions</class>
    <class kind="class">Magnum::DebugTools::Profiler</class>
    <class kind="class">Magnum::DebugTools::ResourceManager</class>
    <class kind="class">Magnum::DebugTools::ShapeRenderer</class>
    <class kind="class">Magnum::DebugTools::ShapeRendererOptions</class>
    <member kind="typedef">
      <type>ForceRenderer&lt; 2 &gt;</type>
      <name>ForceRenderer2D</name>
      <anchorfile>namespaceMagnum_1_1DebugTools.html</anchorfile>
      <anchor>ab424a866e4229e281823e583db39ad4c</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>ForceRenderer&lt; 3 &gt;</type>
      <name>ForceRenderer3D</name>
      <anchorfile>namespaceMagnum_1_1DebugTools.html</anchorfile>
      <anchor>a2071f737c8f9bf87b840e6c12609c281</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>ObjectRenderer&lt; 2 &gt;</type>
      <name>ObjectRenderer2D</name>
      <anchorfile>namespaceMagnum_1_1DebugTools.html</anchorfile>
      <anchor>a15125d3c82e81b2ce5f8b30cf05b331d</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>ObjectRenderer&lt; 3 &gt;</type>
      <name>ObjectRenderer3D</name>
      <anchorfile>namespaceMagnum_1_1DebugTools.html</anchorfile>
      <anchor>a784fac03e2e3837cd90f088564eadc3c</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>ShapeRenderer&lt; 2 &gt;</type>
      <name>ShapeRenderer2D</name>
      <anchorfile>namespaceMagnum_1_1DebugTools.html</anchorfile>
      <anchor>ab0b120fd9a7cd20ab8692227d00d0dd4</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>ShapeRenderer&lt; 3 &gt;</type>
      <name>ShapeRenderer3D</name>
      <anchorfile>namespaceMagnum_1_1DebugTools.html</anchorfile>
      <anchor>a41482458e69f86bf0e21c3ea541df7d8</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>Containers::Array&lt; T &gt;</type>
      <name>bufferSubData</name>
      <anchorfile>namespaceMagnum_1_1DebugTools.html</anchorfile>
      <anchor>a89dba3f796030e917bc98b377790e247</anchor>
      <arglist>(Buffer &amp;buffer, GLintptr offset, GLsizeiptr size)</arglist>
    </member>
    <member kind="function">
      <type>Containers::Array&lt; T &gt;</type>
      <name>bufferData</name>
      <anchorfile>namespaceMagnum_1_1DebugTools.html</anchorfile>
      <anchor>a811ee8d2f20eddef70e4b926564f8cba</anchor>
      <arglist>(Buffer &amp;buffer)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>textureSubImage</name>
      <anchorfile>namespaceMagnum_1_1DebugTools.html</anchorfile>
      <anchor>af68fbf2db8eba95b372ccd6d13969588</anchor>
      <arglist>(Texture2D &amp;texture, Int level, const Range2Di &amp;range, Image2D &amp;image)</arglist>
    </member>
    <member kind="function">
      <type>Image2D</type>
      <name>textureSubImage</name>
      <anchorfile>namespaceMagnum_1_1DebugTools.html</anchorfile>
      <anchor>ac2ac2e5b55487eb4059f71e7187c3fa9</anchor>
      <arglist>(Texture2D &amp;texture, Int level, const Range2Di &amp;range, Image2D &amp;&amp;image)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>textureSubImage</name>
      <anchorfile>namespaceMagnum_1_1DebugTools.html</anchorfile>
      <anchor>a93c26ce85beda2ab84f16d405b64e1e4</anchor>
      <arglist>(Texture2D &amp;texture, Int level, const Range2Di &amp;range, BufferImage2D &amp;image, BufferUsage usage)</arglist>
    </member>
    <member kind="function">
      <type>BufferImage2D</type>
      <name>textureSubImage</name>
      <anchorfile>namespaceMagnum_1_1DebugTools.html</anchorfile>
      <anchor>a976366b87265d61b6953f4e1ed068492</anchor>
      <arglist>(Texture2D &amp;texture, Int level, const Range2Di &amp;range, BufferImage2D &amp;&amp;image, BufferUsage usage)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>textureSubImage</name>
      <anchorfile>namespaceMagnum_1_1DebugTools.html</anchorfile>
      <anchor>a1675724ae9211bca4daf9fb672937a39</anchor>
      <arglist>(CubeMapTexture &amp;texture, CubeMapCoordinate coordinate, Int level, const Range2Di &amp;range, Image2D &amp;image)</arglist>
    </member>
    <member kind="function">
      <type>Image2D</type>
      <name>textureSubImage</name>
      <anchorfile>namespaceMagnum_1_1DebugTools.html</anchorfile>
      <anchor>a04c253390589d6cbea708308fc202bcc</anchor>
      <arglist>(CubeMapTexture &amp;texture, CubeMapCoordinate coordinate, Int level, const Range2Di &amp;range, Image2D &amp;&amp;image)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>textureSubImage</name>
      <anchorfile>namespaceMagnum_1_1DebugTools.html</anchorfile>
      <anchor>aa99c8216504843d232ee035f44dee17a</anchor>
      <arglist>(CubeMapTexture &amp;texture, CubeMapCoordinate coordinate, Int level, const Range2Di &amp;range, BufferImage2D &amp;image, BufferUsage usage)</arglist>
    </member>
    <member kind="function">
      <type>BufferImage2D</type>
      <name>textureSubImage</name>
      <anchorfile>namespaceMagnum_1_1DebugTools.html</anchorfile>
      <anchor>ad395035b14dca808916ee3199bc2a23c</anchor>
      <arglist>(CubeMapTexture &amp;texture, CubeMapCoordinate coordinate, Int level, const Range2Di &amp;range, BufferImage2D &amp;&amp;image, BufferUsage usage)</arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>Magnum::Extensions</name>
    <filename>namespaceMagnum_1_1Extensions.html</filename>
  </compound>
  <compound kind="namespace">
    <name>Magnum::Math</name>
    <filename>namespaceMagnum_1_1Math.html</filename>
    <namespace>Magnum::Math::Algorithms</namespace>
    <namespace>Magnum::Math::Geometry</namespace>
    <namespace>Magnum::Math::Literals</namespace>
    <class kind="class">Magnum::Math::Bezier</class>
    <class kind="class">Magnum::Math::BoolVector</class>
    <class kind="class">Magnum::Math::Color3</class>
    <class kind="class">Magnum::Math::Color4</class>
    <class kind="class">Magnum::Math::Complex</class>
    <class kind="struct">Magnum::Math::Constants</class>
    <class kind="class">Magnum::Math::Deg</class>
    <class kind="class">Magnum::Math::Dual</class>
    <class kind="class">Magnum::Math::DualComplex</class>
    <class kind="class">Magnum::Math::DualQuaternion</class>
    <class kind="class">Magnum::Math::Frustum</class>
    <class kind="class">Magnum::Math::Half</class>
    <class kind="struct">Magnum::Math::IdentityInitT</class>
    <class kind="class">Magnum::Math::Matrix</class>
    <class kind="class">Magnum::Math::Matrix3</class>
    <class kind="class">Magnum::Math::Matrix4</class>
    <class kind="class">Magnum::Math::Quaternion</class>
    <class kind="class">Magnum::Math::Rad</class>
    <class kind="class">Magnum::Math::Range</class>
    <class kind="class">Magnum::Math::Range2D</class>
    <class kind="class">Magnum::Math::Range3D</class>
    <class kind="class">Magnum::Math::RectangularMatrix</class>
    <class kind="struct">Magnum::Math::TypeTraits</class>
    <class kind="class">Magnum::Math::Unit</class>
    <class kind="class">Magnum::Math::Vector</class>
    <class kind="class">Magnum::Math::Vector2</class>
    <class kind="class">Magnum::Math::Vector3</class>
    <class kind="class">Magnum::Math::Vector4</class>
    <class kind="struct">Magnum::Math::ZeroInitT</class>
    <member kind="typedef">
      <type>Bezier&lt; 2, dimensions, T &gt;</type>
      <name>QuadraticBezier</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>a213eaf7e01a257c1eacf8a7184c2e5fc</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>QuadraticBezier&lt; 2, T &gt;</type>
      <name>QuadraticBezier2D</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>a52bbd5f3028c1607e6663f17f67a5d1f</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>QuadraticBezier&lt; 3, T &gt;</type>
      <name>QuadraticBezier3D</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>a9493d9a9d8df8d9723dcb4d844718726</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Bezier&lt; 3, dimensions, T &gt;</type>
      <name>CubicBezier</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>acfbcdbd3e79169d81307b31e575601aa</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>CubicBezier&lt; 2, T &gt;</type>
      <name>CubicBezier2D</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>ac11e0f5820b7c4dc9649e35106bdc49a</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>CubicBezier&lt; 3, T &gt;</type>
      <name>CubicBezier3D</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>addfd48e7102847b301863dedcc75a2e3</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Matrix&lt; 2, T &gt;</type>
      <name>Matrix2x2</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>a652b81c9ddc63931b8965c5a88e8131f</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Matrix&lt; 3, T &gt;</type>
      <name>Matrix3x3</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>ac89eeb9dc2fad9807f0795ef9b292190</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Matrix&lt; 4, T &gt;</type>
      <name>Matrix4x4</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>a6cfef6a416e4d1166adfc1f19cb45ed7</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Range&lt; 1, T &gt;</type>
      <name>Range1D</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>ab8759a26a030f045b5217d93618e5300</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>RectangularMatrix&lt; 2, 3, T &gt;</type>
      <name>Matrix2x3</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>aeafdba32770167422563607a6d7a7763</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>RectangularMatrix&lt; 3, 2, T &gt;</type>
      <name>Matrix3x2</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>a6784a052ccad6a6f0b66121c6c2f270e</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>RectangularMatrix&lt; 2, 4, T &gt;</type>
      <name>Matrix2x4</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>a72b6951e0e464e5547906e6824f83fc8</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>RectangularMatrix&lt; 4, 2, T &gt;</type>
      <name>Matrix4x2</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>a84e3b41c8281378227a9250c2fc2abf9</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>RectangularMatrix&lt; 3, 4, T &gt;</type>
      <name>Matrix3x4</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>ab25028109475da01892b1e7b3e13a18b</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>RectangularMatrix&lt; 4, 3, T &gt;</type>
      <name>Matrix4x3</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>aebcc2ac26446bd06cc6e7e4bb1d57464</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Corrade::Containers::NoInitT</type>
      <name>NoInitT</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>ae3fc2129ed8e84f3ed1cea8bd4a902ab</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>Corrade::Utility::Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>a577c8c280a0b3753ef06a23b5b496a3a</anchor>
      <arglist>(Corrade::Utility::Debug &amp;debug, const Unit&lt; Rad, T &gt; &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>Corrade::Utility::Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>ac757572f15467c51569563ea991a2549</anchor>
      <arglist>(Corrade::Utility::Debug &amp;debug, const Unit&lt; Deg, T &gt; &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>Corrade::Utility::Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>ab1001276d3083c0d6d035c9e343c1c3c</anchor>
      <arglist>(Corrade::Utility::Debug &amp;debug, const Bezier&lt; order, dimensions, T &gt; &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>Corrade::Utility::Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>a05ecfedf1ed791f07d32b7d45d978432</anchor>
      <arglist>(Corrade::Utility::Debug &amp;debug, const BoolVector&lt; size &gt; &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>Corrade::Utility::Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>afae5b383b9623a3b56c4fae43a16b9ca</anchor>
      <arglist>(Corrade::Utility::Debug &amp;debug, const Color3&lt; UnsignedByte &gt; &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>Corrade::Utility::Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>a338890901a6aa2d1e80e689f9b2532a4</anchor>
      <arglist>(Corrade::Utility::Debug &amp;debug, const Color4&lt; UnsignedByte &gt; &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>Vector3&lt; T &gt;</type>
      <name>xyYToXyz</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>a4fc7e7145d373b085fe34b3492b12b88</anchor>
      <arglist>(const Vector3&lt; T &gt; &amp;xyY)</arglist>
    </member>
    <member kind="function">
      <type>Vector3&lt; T &gt;</type>
      <name>xyzToXyY</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>a95bff66ce9604939340d44686f857aa6</anchor>
      <arglist>(const Vector3&lt; T &gt; &amp;xyz)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>dot</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>ae3d695a1794978f2aded487bc9e6e312</anchor>
      <arglist>(const Complex&lt; T &gt; &amp;a, const Complex&lt; T &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>Rad&lt; T &gt;</type>
      <name>angle</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>ab0d977c1e3f6a66dcdedcd261b758210</anchor>
      <arglist>(const Complex&lt; T &gt; &amp;normalizedA, const Complex&lt; T &gt; &amp;normalizedB)</arglist>
    </member>
    <member kind="function">
      <type>Corrade::Utility::Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>a673cbf89633bedbae0a30457b9bfaceb</anchor>
      <arglist>(Corrade::Utility::Debug &amp;debug, const Complex&lt; T &gt; &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>Corrade::Utility::Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>a566f5ca101d2a3793843141980b2545e</anchor>
      <arglist>(Corrade::Utility::Debug &amp;debug, const Dual&lt; T &gt; &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>Dual&lt; T &gt;</type>
      <name>sqrt</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>a9f399ec60dc87478fcdbe6091e0b6783</anchor>
      <arglist>(const Dual&lt; T &gt; &amp;dual)</arglist>
    </member>
    <member kind="function">
      <type>std::pair&lt; Dual&lt; T &gt;, Dual&lt; T &gt; &gt;</type>
      <name>sincos</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>adf84b1bff280ad75079c8774ca25cbec</anchor>
      <arglist>(const Dual&lt; Rad&lt; T &gt;&gt; &amp;angle)</arglist>
    </member>
    <member kind="function">
      <type>Corrade::Utility::Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>a59b3488a700c0d5fcaed8ce7d7e5b1fc</anchor>
      <arglist>(Corrade::Utility::Debug &amp;debug, const DualComplex&lt; T &gt; &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>DualQuaternion&lt; T &gt;</type>
      <name>sclerp</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>a16a9790aad4406e49517818bd3fa632b</anchor>
      <arglist>(const DualQuaternion&lt; T &gt; &amp;normalizedA, const DualQuaternion&lt; T &gt; &amp;normalizedB, const T t)</arglist>
    </member>
    <member kind="function">
      <type>Corrade::Utility::Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>a827f6a5c6237137238f27a82aa9d1f4d</anchor>
      <arglist>(Corrade::Utility::Debug &amp;debug, const DualQuaternion&lt; T &gt; &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>Corrade::Utility::Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>aad6fdc9ca9b5bd751970733503de84ee</anchor>
      <arglist>(Corrade::Utility::Debug &amp;debug, const Frustum&lt; T &gt; &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>UnsignedInt</type>
      <name>log</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>a0506f088194eafea3e7a4100f2c4ed2d</anchor>
      <arglist>(UnsignedInt base, UnsignedInt number)</arglist>
    </member>
    <member kind="function">
      <type>UnsignedInt</type>
      <name>log2</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>a0f41b7b73d96020cc88c28b09a229ab5</anchor>
      <arglist>(UnsignedInt number)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>log</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>a94c4d12ee57e7129651a9d9cd43c7c66</anchor>
      <arglist>(T number)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>exp</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>a54553867ca47a3e9ffada201a4c35ca3</anchor>
      <arglist>(T exponent)</arglist>
    </member>
    <member kind="function">
      <type>std::pair&lt; Integral, Integral &gt;</type>
      <name>div</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>ac26736b3814a1affa940a7ebd90d2c0c</anchor>
      <arglist>(Integral x, Integral y)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>sin</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>a6558da1eb5042764fae1640dcf99d0a8</anchor>
      <arglist>(Rad&lt; T &gt; angle)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>cos</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>a786b7203dac52e7b7a23965cac9ef127</anchor>
      <arglist>(Rad&lt; T &gt; angle)</arglist>
    </member>
    <member kind="function">
      <type>std::pair&lt; T, T &gt;</type>
      <name>sincos</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>aad0e3cf434e90f80d18860f775efe427</anchor>
      <arglist>(Rad&lt; T &gt; angle)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>tan</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>a5b75699b28dffa85a5d2c59b769c78b9</anchor>
      <arglist>(Rad&lt; T &gt; angle)</arglist>
    </member>
    <member kind="function">
      <type>Rad&lt; T &gt;</type>
      <name>asin</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>a5a0d14b2cdd605132c3fa408763e615a</anchor>
      <arglist>(T value)</arglist>
    </member>
    <member kind="function">
      <type>Rad&lt; T &gt;</type>
      <name>acos</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>a3b14d10e75ca21d34df11d7be0f6b616</anchor>
      <arglist>(T value)</arglist>
    </member>
    <member kind="function">
      <type>Rad&lt; T &gt;</type>
      <name>atan</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>a916c22b19c5c7bf191ec697eecab60b6</anchor>
      <arglist>(T value)</arglist>
    </member>
    <member kind="function">
      <type>Corrade::Utility::Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>a158798027e4c105796ba27c51b857848</anchor>
      <arglist>(Corrade::Utility::Debug &amp;debug, Half value)</arglist>
    </member>
    <member kind="function">
      <type>Float</type>
      <name>unpackHalf</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>a42d97dba419c59474cd88f1770cf95a8</anchor>
      <arglist>(UnsignedShort value)</arglist>
    </member>
    <member kind="function">
      <type>UnsignedShort</type>
      <name>packHalf</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>a9655ce490778c81064c358754ea93aad</anchor>
      <arglist>(Float value)</arglist>
    </member>
    <member kind="function">
      <type>FloatingPoint</type>
      <name>unpack</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>ab69ab3369a85ccf59c87486b0e5a3dd9</anchor>
      <arglist>(const Integral &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>FloatingPoint</type>
      <name>unpack</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>a711947054a07023a401b47bda5b0d16b</anchor>
      <arglist>(const Integral &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>FloatingPoint</type>
      <name>normalize</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>a767c5cede6c4e244234055ed897fec84</anchor>
      <arglist>(const Integral &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>Integral</type>
      <name>pack</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>af491eb512c26e9d8ba0ab9646d5bb436</anchor>
      <arglist>(const FloatingPoint &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>Integral</type>
      <name>pack</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>ad41fc73d795a8f589b0502ef9f6a4a46</anchor>
      <arglist>(FloatingPoint value)</arglist>
    </member>
    <member kind="function">
      <type>Integral</type>
      <name>denormalize</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>a57105d9b014111a928efb3de6359c841</anchor>
      <arglist>(const FloatingPoint &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, UnsignedShort &gt;</type>
      <name>packHalf</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>a9d2180063001e747188e2fd83d3a38bb</anchor>
      <arglist>(const Vector&lt; size, Float &gt; &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, Float &gt;</type>
      <name>unpackHalf</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>a689b3e216755b7c12ea3ca482cb414f3</anchor>
      <arglist>(const Vector&lt; size, UnsignedShort &gt; &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>dot</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>a24a478c9463275d440061899c3630a32</anchor>
      <arglist>(const Quaternion&lt; T &gt; &amp;a, const Quaternion&lt; T &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>Rad&lt; T &gt;</type>
      <name>angle</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>a77252a59dcbaf44761edc9213f0e5927</anchor>
      <arglist>(const Quaternion&lt; T &gt; &amp;normalizedA, const Quaternion&lt; T &gt; &amp;normalizedB)</arglist>
    </member>
    <member kind="function">
      <type>Quaternion&lt; T &gt;</type>
      <name>lerp</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>a702539c58371af1c8635c2bc60e3e0a5</anchor>
      <arglist>(const Quaternion&lt; T &gt; &amp;normalizedA, const Quaternion&lt; T &gt; &amp;normalizedB, T t)</arglist>
    </member>
    <member kind="function">
      <type>Quaternion&lt; T &gt;</type>
      <name>slerp</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>aa52d32b2fcb66f28a4330fb39fa50589</anchor>
      <arglist>(const Quaternion&lt; T &gt; &amp;normalizedA, const Quaternion&lt; T &gt; &amp;normalizedB, T t)</arglist>
    </member>
    <member kind="function">
      <type>Corrade::Utility::Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>a03f030af72160303a9934d7a9af40f37</anchor>
      <arglist>(Corrade::Utility::Debug &amp;debug, const Quaternion&lt; T &gt; &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>Range&lt; dimensions, T &gt;</type>
      <name>join</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>ab1a605df6c5b25fe493c1ee83e2ae6d6</anchor>
      <arglist>(const Range&lt; dimensions, T &gt; &amp;a, const Range&lt; dimensions, T &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>Corrade::Utility::Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>a1f3385fec96840d6f57368596e7b8fe5</anchor>
      <arglist>(Corrade::Utility::Debug &amp;debug, const Range&lt; dimensions, T &gt; &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>Corrade::Utility::Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>a2b4c9a90c6ef57998d88efe24b223a07</anchor>
      <arglist>(Corrade::Utility::Debug &amp;debug, const Magnum::Math::RectangularMatrix&lt; cols, rows, T &gt; &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>constexpr Implementation::TypeForSize&lt; sizeof...(components), T &gt;::Type</type>
      <name>swizzle</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>a0bfabe9a216b20e44f34d6258ae02756</anchor>
      <arglist>(const T &amp;vector)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>dot</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>afcea7c945bee7d210d66d1a47d85944d</anchor>
      <arglist>(const Vector&lt; size, T &gt; &amp;a, const Vector&lt; size, T &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>Rad&lt; T &gt;</type>
      <name>angle</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>a754897e5423279be34bfaba81777e51c</anchor>
      <arglist>(const Vector&lt; size, T &gt; &amp;normalizedA, const Vector&lt; size, T &gt; &amp;normalizedB)</arglist>
    </member>
    <member kind="function">
      <type>Corrade::Utility::Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>a342462ce2d3144347242b0c1b0eb2613</anchor>
      <arglist>(Corrade::Utility::Debug &amp;debug, const Vector&lt; size, T &gt; &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>cross</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>a2058d3c2541d8b3556c861ef79c592d0</anchor>
      <arglist>(const Vector2&lt; T &gt; &amp;a, const Vector2&lt; T &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>Vector3&lt; T &gt;</type>
      <name>cross</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>ad90024e1b2ca900d572042ccd0baba64</anchor>
      <arglist>(const Vector3&lt; T &gt; &amp;a, const Vector3&lt; T &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>constexpr T</type>
      <name>pow</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>a9083d7f09f7846b593aff7afd01d0122</anchor>
      <arglist>(T base)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>pow</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>a3f13a84c7a1c265727ec7c0c93908cf9</anchor>
      <arglist>(T base, T exponent)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>min</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>ae22ef0cb2a5a5e4c5e626a3df670be21</anchor>
      <arglist>(T value, T min)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, T &gt;</type>
      <name>min</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>a4bee14bf25158b6be1dc4afd70971fb8</anchor>
      <arglist>(const Vector&lt; size, T &gt; &amp;value, T min)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>min</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>a2d23039b9bd85f9c16274321ddf55d1d</anchor>
      <arglist>(Corrade::Containers::ArrayView&lt; const T &gt; range)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>min</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>ae9a92854975b2f250004249044e1bfcf</anchor>
      <arglist>(std::initializer_list&lt; T &gt; list)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>max</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>a1065191724e603162437b335db0c490d</anchor>
      <arglist>(T value, T max)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, T &gt;</type>
      <name>max</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>ad8719e1853a5c449106e63c776c9d72f</anchor>
      <arglist>(const Vector&lt; size, T &gt; &amp;value, T max)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>max</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>a6cab078020edfc1f5487665d4926ba2d</anchor>
      <arglist>(Corrade::Containers::ArrayView&lt; const T &gt; range)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>max</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>a37e8a2e2b6ce6a039cc6d41c1bc6ded1</anchor>
      <arglist>(std::initializer_list&lt; T &gt; list)</arglist>
    </member>
    <member kind="function">
      <type>std::pair&lt; T, T &gt;</type>
      <name>minmax</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>a160f3c051c7fee9a17f036ddd5fea320</anchor>
      <arglist>(const T &amp;a, const T &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>std::pair&lt; T, T &gt;</type>
      <name>minmax</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>afffc709fd33b5319addb8b0fec9e1254</anchor>
      <arglist>(Corrade::Containers::ArrayView&lt; const T &gt; range)</arglist>
    </member>
    <member kind="function">
      <type>std::pair&lt; T, T &gt;</type>
      <name>minmax</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>a31ca6cb241a516d8b652b0d39cb5909e</anchor>
      <arglist>(std::initializer_list&lt; T &gt; list)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>clamp</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>abdc5e18cf264ab1478e39d600a2ce273</anchor>
      <arglist>(const T &amp;value, const T &amp;min, const T &amp;max)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, T &gt;</type>
      <name>clamp</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>ad4a8b2ed74b85d7eead141ebd9b68ce7</anchor>
      <arglist>(const Vector&lt; size, T &gt; &amp;value, T min, T max)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>sign</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>a74cff9e1222e0f6a88d0240f8c06990e</anchor>
      <arglist>(const T scalar)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>abs</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>a0f12073f927ee1a1175ff2d2fccc56da</anchor>
      <arglist>(const T &amp;a)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>floor</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>a60949e5ab9a59d5106607e1f66d8678b</anchor>
      <arglist>(const T &amp;a)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>round</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>ad404b93c89d70a0263b37df4426dbfb4</anchor>
      <arglist>(const T &amp;a)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>ceil</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>a2c3aa8dc6e63e1412740b608cd82bfd4</anchor>
      <arglist>(const T &amp;a)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>sqrt</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>ad39349427c831b6ba7696a74ff05b97e</anchor>
      <arglist>(const T &amp;a)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>sqrtInverted</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>a347648f7f2faea0a7182f0d62ca6c2ed</anchor>
      <arglist>(const T &amp;a)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>lerp</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>a8d0cf4b89dfd92edf6cff3954adf7cf7</anchor>
      <arglist>(const T &amp;a, const T &amp;b, U t)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, T &gt;</type>
      <name>lerp</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>a442e12f313c209eb67dbfcbef05e2b5c</anchor>
      <arglist>(const Vector&lt; size, T &gt; &amp;a, const Vector&lt; size, T &gt; &amp;b, const BoolVector&lt; size &gt; &amp;t)</arglist>
    </member>
    <member kind="function">
      <type>BoolVector&lt; size &gt;</type>
      <name>lerp</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>a757985d96fb36e841322a3317c851304</anchor>
      <arglist>(const BoolVector&lt; size &gt; &amp;a, const BoolVector&lt; size &gt; &amp;b, const BoolVector&lt; size &gt; &amp;t)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>lerpInverted</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>a8f151ca0349b31e91882117ee43764dd</anchor>
      <arglist>(const T &amp;a, const T &amp;b, const T &amp;lerp)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>fma</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>a9a133d200079708110f9f8ae0c93a950</anchor>
      <arglist>(const T &amp;a, const T &amp;b, const T &amp;c)</arglist>
    </member>
    <member kind="variable">
      <type>constexpr NoInitT</type>
      <name>NoInit</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>a09af7a367aa780ca2c682546085cafe2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>constexpr ZeroInitT</type>
      <name>ZeroInit</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>a1a3ef1a05ea090ef83dc89eed44ba8a6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>constexpr IdentityInitT</type>
      <name>IdentityInit</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>ab915b0885bc50909b7cb7838266715c0</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>constexpr T</type>
      <name>pow</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>a9083d7f09f7846b593aff7afd01d0122</anchor>
      <arglist>(T base)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>pow</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>a3f13a84c7a1c265727ec7c0c93908cf9</anchor>
      <arglist>(T base, T exponent)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>min</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>ae22ef0cb2a5a5e4c5e626a3df670be21</anchor>
      <arglist>(T value, T min)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, T &gt;</type>
      <name>min</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>a4bee14bf25158b6be1dc4afd70971fb8</anchor>
      <arglist>(const Vector&lt; size, T &gt; &amp;value, T min)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>min</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>a2d23039b9bd85f9c16274321ddf55d1d</anchor>
      <arglist>(Corrade::Containers::ArrayView&lt; const T &gt; range)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>min</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>ae9a92854975b2f250004249044e1bfcf</anchor>
      <arglist>(std::initializer_list&lt; T &gt; list)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>max</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>a1065191724e603162437b335db0c490d</anchor>
      <arglist>(T value, T max)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, T &gt;</type>
      <name>max</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>ad8719e1853a5c449106e63c776c9d72f</anchor>
      <arglist>(const Vector&lt; size, T &gt; &amp;value, T max)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>max</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>a6cab078020edfc1f5487665d4926ba2d</anchor>
      <arglist>(Corrade::Containers::ArrayView&lt; const T &gt; range)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>max</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>a37e8a2e2b6ce6a039cc6d41c1bc6ded1</anchor>
      <arglist>(std::initializer_list&lt; T &gt; list)</arglist>
    </member>
    <member kind="function">
      <type>std::pair&lt; T, T &gt;</type>
      <name>minmax</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>a160f3c051c7fee9a17f036ddd5fea320</anchor>
      <arglist>(const T &amp;a, const T &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>std::pair&lt; T, T &gt;</type>
      <name>minmax</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>afffc709fd33b5319addb8b0fec9e1254</anchor>
      <arglist>(Corrade::Containers::ArrayView&lt; const T &gt; range)</arglist>
    </member>
    <member kind="function">
      <type>std::pair&lt; T, T &gt;</type>
      <name>minmax</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>a31ca6cb241a516d8b652b0d39cb5909e</anchor>
      <arglist>(std::initializer_list&lt; T &gt; list)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>clamp</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>abdc5e18cf264ab1478e39d600a2ce273</anchor>
      <arglist>(const T &amp;value, const T &amp;min, const T &amp;max)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, T &gt;</type>
      <name>clamp</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>ad4a8b2ed74b85d7eead141ebd9b68ce7</anchor>
      <arglist>(const Vector&lt; size, T &gt; &amp;value, T min, T max)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>sign</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>a74cff9e1222e0f6a88d0240f8c06990e</anchor>
      <arglist>(const T scalar)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>abs</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>a0f12073f927ee1a1175ff2d2fccc56da</anchor>
      <arglist>(const T &amp;a)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>floor</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>a60949e5ab9a59d5106607e1f66d8678b</anchor>
      <arglist>(const T &amp;a)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>round</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>ad404b93c89d70a0263b37df4426dbfb4</anchor>
      <arglist>(const T &amp;a)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>ceil</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>a2c3aa8dc6e63e1412740b608cd82bfd4</anchor>
      <arglist>(const T &amp;a)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>sqrt</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>ad39349427c831b6ba7696a74ff05b97e</anchor>
      <arglist>(const T &amp;a)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>sqrtInverted</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>a347648f7f2faea0a7182f0d62ca6c2ed</anchor>
      <arglist>(const T &amp;a)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>lerp</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>a8d0cf4b89dfd92edf6cff3954adf7cf7</anchor>
      <arglist>(const T &amp;a, const T &amp;b, U t)</arglist>
    </member>
    <member kind="function">
      <type>Vector&lt; size, T &gt;</type>
      <name>lerp</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>a442e12f313c209eb67dbfcbef05e2b5c</anchor>
      <arglist>(const Vector&lt; size, T &gt; &amp;a, const Vector&lt; size, T &gt; &amp;b, const BoolVector&lt; size &gt; &amp;t)</arglist>
    </member>
    <member kind="function">
      <type>BoolVector&lt; size &gt;</type>
      <name>lerp</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>a757985d96fb36e841322a3317c851304</anchor>
      <arglist>(const BoolVector&lt; size &gt; &amp;a, const BoolVector&lt; size &gt; &amp;b, const BoolVector&lt; size &gt; &amp;t)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>lerpInverted</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>a8f151ca0349b31e91882117ee43764dd</anchor>
      <arglist>(const T &amp;a, const T &amp;b, const T &amp;lerp)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>fma</name>
      <anchorfile>namespaceMagnum_1_1Math.html</anchorfile>
      <anchor>a9a133d200079708110f9f8ae0c93a950</anchor>
      <arglist>(const T &amp;a, const T &amp;b, const T &amp;c)</arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>Magnum::Math::Algorithms</name>
    <filename>namespaceMagnum_1_1Math_1_1Algorithms.html</filename>
    <member kind="function">
      <type>bool</type>
      <name>gaussJordanInPlaceTransposed</name>
      <anchorfile>namespaceMagnum_1_1Math_1_1Algorithms.html</anchorfile>
      <anchor>afd51c7cc16e65c7e76054f3894c968c1</anchor>
      <arglist>(RectangularMatrix&lt; size, size, T &gt; &amp;a, RectangularMatrix&lt; size, rows, T &gt; &amp;t)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>gaussJordanInPlace</name>
      <anchorfile>namespaceMagnum_1_1Math_1_1Algorithms.html</anchorfile>
      <anchor>a34eea735d7911e9ac472ed98cd7b9128</anchor>
      <arglist>(RectangularMatrix&lt; size, size, T &gt; &amp;a, RectangularMatrix&lt; cols, size, T &gt; &amp;t)</arglist>
    </member>
    <member kind="function">
      <type>Matrix&lt; size, T &gt;</type>
      <name>gaussJordanInverted</name>
      <anchorfile>namespaceMagnum_1_1Math_1_1Algorithms.html</anchorfile>
      <anchor>a8ec84b7776d70334669c6f11ad8253a1</anchor>
      <arglist>(Matrix&lt; size, T &gt; matrix)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>gramSchmidtOrthogonalizeInPlace</name>
      <anchorfile>namespaceMagnum_1_1Math_1_1Algorithms.html</anchorfile>
      <anchor>a18d7248a3ee6e2a4edc1c850724ce488</anchor>
      <arglist>(RectangularMatrix&lt; cols, rows, T &gt; &amp;matrix)</arglist>
    </member>
    <member kind="function">
      <type>RectangularMatrix&lt; cols, rows, T &gt;</type>
      <name>gramSchmidtOrthogonalize</name>
      <anchorfile>namespaceMagnum_1_1Math_1_1Algorithms.html</anchorfile>
      <anchor>a65923466ad3890a5ef400f84940362d6</anchor>
      <arglist>(RectangularMatrix&lt; cols, rows, T &gt; matrix)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>gramSchmidtOrthonormalizeInPlace</name>
      <anchorfile>namespaceMagnum_1_1Math_1_1Algorithms.html</anchorfile>
      <anchor>a097b3bec336a94a7d12443e2ea517105</anchor>
      <arglist>(RectangularMatrix&lt; cols, rows, T &gt; &amp;matrix)</arglist>
    </member>
    <member kind="function">
      <type>RectangularMatrix&lt; cols, rows, T &gt;</type>
      <name>gramSchmidtOrthonormalize</name>
      <anchorfile>namespaceMagnum_1_1Math_1_1Algorithms.html</anchorfile>
      <anchor>a9acdde07b5c85594592c8032244e585b</anchor>
      <arglist>(RectangularMatrix&lt; cols, rows, T &gt; matrix)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>kahanSum</name>
      <anchorfile>namespaceMagnum_1_1Math_1_1Algorithms.html</anchorfile>
      <anchor>aa4696c9d956d5c6bb1833a29533be545</anchor>
      <arglist>(Iterator begin, Iterator end, T sum=T(0), T *compensation=nullptr)</arglist>
    </member>
    <member kind="function">
      <type>std::pair&lt; Matrix&lt; size, T &gt;, Matrix&lt; size, T &gt; &gt;</type>
      <name>qr</name>
      <anchorfile>namespaceMagnum_1_1Math_1_1Algorithms.html</anchorfile>
      <anchor>afa6848a3c35575e119f8b05a67822b43</anchor>
      <arglist>(const Matrix&lt; size, T &gt; &amp;matrix)</arglist>
    </member>
    <member kind="function">
      <type>std::tuple&lt; RectangularMatrix&lt; cols, rows, T &gt;, Vector&lt; cols, T &gt;, Matrix&lt; cols, T &gt; &gt;</type>
      <name>svd</name>
      <anchorfile>namespaceMagnum_1_1Math_1_1Algorithms.html</anchorfile>
      <anchor>abe54bd778b9c6fdb93ccc6b3ef82c0e3</anchor>
      <arglist>(RectangularMatrix&lt; cols, rows, T &gt; m)</arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>Magnum::Math::Geometry</name>
    <filename>namespaceMagnum_1_1Math_1_1Geometry.html</filename>
    <namespace>Magnum::Math::Geometry::Distance</namespace>
    <namespace>Magnum::Math::Geometry::Intersection</namespace>
  </compound>
  <compound kind="namespace">
    <name>Magnum::Math::Geometry::Distance</name>
    <filename>namespaceMagnum_1_1Math_1_1Geometry_1_1Distance.html</filename>
    <member kind="function">
      <type>T</type>
      <name>linePointSquared</name>
      <anchorfile>namespaceMagnum_1_1Math_1_1Geometry_1_1Distance.html</anchorfile>
      <anchor>ac33ebb71e4666f173823ebd439d4adfb</anchor>
      <arglist>(const Vector2&lt; T &gt; &amp;a, const Vector2&lt; T &gt; &amp;b, const Vector2&lt; T &gt; &amp;point)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>linePoint</name>
      <anchorfile>namespaceMagnum_1_1Math_1_1Geometry_1_1Distance.html</anchorfile>
      <anchor>a291224fca49a4d15806529e3e50d5eac</anchor>
      <arglist>(const Vector2&lt; T &gt; &amp;a, const Vector2&lt; T &gt; &amp;b, const Vector2&lt; T &gt; &amp;point)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>linePointSquared</name>
      <anchorfile>namespaceMagnum_1_1Math_1_1Geometry_1_1Distance.html</anchorfile>
      <anchor>a0050edf5b044dab7ffe51dd6faa6e01c</anchor>
      <arglist>(const Vector3&lt; T &gt; &amp;a, const Vector3&lt; T &gt; &amp;b, const Vector3&lt; T &gt; &amp;point)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>linePoint</name>
      <anchorfile>namespaceMagnum_1_1Math_1_1Geometry_1_1Distance.html</anchorfile>
      <anchor>a623565c0848d9889e6fce5e737f630c1</anchor>
      <arglist>(const Vector3&lt; T &gt; &amp;a, const Vector3&lt; T &gt; &amp;b, const Vector3&lt; T &gt; &amp;point)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>lineSegmentPointSquared</name>
      <anchorfile>namespaceMagnum_1_1Math_1_1Geometry_1_1Distance.html</anchorfile>
      <anchor>a96f5691b3830d0e07f8ec5733b2a6abf</anchor>
      <arglist>(const Vector2&lt; T &gt; &amp;a, const Vector2&lt; T &gt; &amp;b, const Vector2&lt; T &gt; &amp;point)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>lineSegmentPoint</name>
      <anchorfile>namespaceMagnum_1_1Math_1_1Geometry_1_1Distance.html</anchorfile>
      <anchor>a872fd7983a565eb1cb0b8258e1a12b50</anchor>
      <arglist>(const Vector2&lt; T &gt; &amp;a, const Vector2&lt; T &gt; &amp;b, const Vector2&lt; T &gt; &amp;point)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>lineSegmentPointSquared</name>
      <anchorfile>namespaceMagnum_1_1Math_1_1Geometry_1_1Distance.html</anchorfile>
      <anchor>adf13632b622b81cf2439e9bad953f832</anchor>
      <arglist>(const Vector3&lt; T &gt; &amp;a, const Vector3&lt; T &gt; &amp;b, const Vector3&lt; T &gt; &amp;point)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>lineSegmentPoint</name>
      <anchorfile>namespaceMagnum_1_1Math_1_1Geometry_1_1Distance.html</anchorfile>
      <anchor>a17c3fcb501900e9e035066b7bd4cad76</anchor>
      <arglist>(const Vector3&lt; T &gt; &amp;a, const Vector3&lt; T &gt; &amp;b, const Vector3&lt; T &gt; &amp;point)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>pointPlaneScaled</name>
      <anchorfile>namespaceMagnum_1_1Math_1_1Geometry_1_1Distance.html</anchorfile>
      <anchor>a68e706f79aa088970a87622b5f028d24</anchor>
      <arglist>(const Vector3&lt; T &gt; &amp;point, const Vector4&lt; T &gt; &amp;plane)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>pointPlane</name>
      <anchorfile>namespaceMagnum_1_1Math_1_1Geometry_1_1Distance.html</anchorfile>
      <anchor>a0d202b2ca5de7f3ecdd784c2cca8f98b</anchor>
      <arglist>(const Vector3&lt; T &gt; &amp;point, const Vector4&lt; T &gt; &amp;plane)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>pointPlaneNormalized</name>
      <anchorfile>namespaceMagnum_1_1Math_1_1Geometry_1_1Distance.html</anchorfile>
      <anchor>a1bb096c90b1f49dc1d997b7a042c0e57</anchor>
      <arglist>(const Vector3&lt; T &gt; &amp;point, const Vector4&lt; T &gt; &amp;plane)</arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>Magnum::Math::Geometry::Intersection</name>
    <filename>namespaceMagnum_1_1Math_1_1Geometry_1_1Intersection.html</filename>
    <member kind="function">
      <type>std::pair&lt; T, T &gt;</type>
      <name>lineSegmentLineSegment</name>
      <anchorfile>namespaceMagnum_1_1Math_1_1Geometry_1_1Intersection.html</anchorfile>
      <anchor>a9a70996eaa59f516e03a96ac9d2819f9</anchor>
      <arglist>(const Vector2&lt; T &gt; &amp;p, const Vector2&lt; T &gt; &amp;r, const Vector2&lt; T &gt; &amp;q, const Vector2&lt; T &gt; &amp;s)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>lineSegmentLine</name>
      <anchorfile>namespaceMagnum_1_1Math_1_1Geometry_1_1Intersection.html</anchorfile>
      <anchor>ace33bfa9669405ec56c962e326f7f801</anchor>
      <arglist>(const Vector2&lt; T &gt; &amp;p, const Vector2&lt; T &gt; &amp;r, const Vector2&lt; T &gt; &amp;q, const Vector2&lt; T &gt; &amp;s)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>planeLine</name>
      <anchorfile>namespaceMagnum_1_1Math_1_1Geometry_1_1Intersection.html</anchorfile>
      <anchor>ab066645bcadd013be325d879e12f66e6</anchor>
      <arglist>(const Vector3&lt; T &gt; &amp;planePosition, const Vector3&lt; T &gt; &amp;planeNormal, const Vector3&lt; T &gt; &amp;p, const Vector3&lt; T &gt; &amp;r)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>pointFrustum</name>
      <anchorfile>namespaceMagnum_1_1Math_1_1Geometry_1_1Intersection.html</anchorfile>
      <anchor>a5d15498a45ce78618e6af612c3007abe</anchor>
      <arglist>(const Vector3&lt; T &gt; &amp;point, const Frustum&lt; T &gt; &amp;frustum)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>boxFrustum</name>
      <anchorfile>namespaceMagnum_1_1Math_1_1Geometry_1_1Intersection.html</anchorfile>
      <anchor>a6402923659fb366fee8adf726ac4bbb6</anchor>
      <arglist>(const Range3D&lt; T &gt; &amp;box, const Frustum&lt; T &gt; &amp;frustum)</arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>Magnum::Math::Literals</name>
    <filename>namespaceMagnum_1_1Math_1_1Literals.html</filename>
    <member kind="function">
      <type>constexpr Deg&lt; Double &gt;</type>
      <name>operator&quot;&quot;_deg</name>
      <anchorfile>namespaceMagnum_1_1Math_1_1Literals.html</anchorfile>
      <anchor>ad0f0411d4a58db406d968733715f782d</anchor>
      <arglist>(long double value)</arglist>
    </member>
    <member kind="function">
      <type>constexpr Deg&lt; Float &gt;</type>
      <name>operator&quot;&quot;_degf</name>
      <anchorfile>namespaceMagnum_1_1Math_1_1Literals.html</anchorfile>
      <anchor>ac3f64414df5978006e55682877e92736</anchor>
      <arglist>(long double value)</arglist>
    </member>
    <member kind="function">
      <type>constexpr Rad&lt; Double &gt;</type>
      <name>operator&quot;&quot;_rad</name>
      <anchorfile>namespaceMagnum_1_1Math_1_1Literals.html</anchorfile>
      <anchor>aa2e5542942a14d84870d860ec13056e2</anchor>
      <arglist>(long double value)</arglist>
    </member>
    <member kind="function">
      <type>constexpr Rad&lt; Float &gt;</type>
      <name>operator&quot;&quot;_radf</name>
      <anchorfile>namespaceMagnum_1_1Math_1_1Literals.html</anchorfile>
      <anchor>ab0143c89ebaa92da73ed5ba17426129b</anchor>
      <arglist>(long double value)</arglist>
    </member>
    <member kind="function">
      <type>constexpr Color3&lt; UnsignedByte &gt;</type>
      <name>operator&quot;&quot;_rgb</name>
      <anchorfile>namespaceMagnum_1_1Math_1_1Literals.html</anchorfile>
      <anchor>a4f0eadc3e56cafb0555955462d517a34</anchor>
      <arglist>(unsigned long long value)</arglist>
    </member>
    <member kind="function">
      <type>constexpr Vector3&lt; UnsignedByte &gt;</type>
      <name>operator&quot;&quot;_srgb</name>
      <anchorfile>namespaceMagnum_1_1Math_1_1Literals.html</anchorfile>
      <anchor>a9052c59f7064fa0cfbebc072fc2b9ea0</anchor>
      <arglist>(unsigned long long value)</arglist>
    </member>
    <member kind="function">
      <type>constexpr Color4&lt; UnsignedByte &gt;</type>
      <name>operator&quot;&quot;_rgba</name>
      <anchorfile>namespaceMagnum_1_1Math_1_1Literals.html</anchorfile>
      <anchor>af1fd45fb22c7abab7789420803854ce8</anchor>
      <arglist>(unsigned long long value)</arglist>
    </member>
    <member kind="function">
      <type>constexpr Vector4&lt; UnsignedByte &gt;</type>
      <name>operator&quot;&quot;_srgba</name>
      <anchorfile>namespaceMagnum_1_1Math_1_1Literals.html</anchorfile>
      <anchor>a06c6b73f0ff0dc013473d471c291a004</anchor>
      <arglist>(unsigned long long value)</arglist>
    </member>
    <member kind="function">
      <type>Color3&lt; Float &gt;</type>
      <name>operator&quot;&quot;_rgbf</name>
      <anchorfile>namespaceMagnum_1_1Math_1_1Literals.html</anchorfile>
      <anchor>ad7f076b5e49b4994187962381ec8ab25</anchor>
      <arglist>(unsigned long long value)</arglist>
    </member>
    <member kind="function">
      <type>Color3&lt; Float &gt;</type>
      <name>operator&quot;&quot;_srgbf</name>
      <anchorfile>namespaceMagnum_1_1Math_1_1Literals.html</anchorfile>
      <anchor>a32d61d07f3015fa8e918913ff59b1d6a</anchor>
      <arglist>(unsigned long long value)</arglist>
    </member>
    <member kind="function">
      <type>Color4&lt; Float &gt;</type>
      <name>operator&quot;&quot;_rgbaf</name>
      <anchorfile>namespaceMagnum_1_1Math_1_1Literals.html</anchorfile>
      <anchor>a2d8cc91f17b65523b10d3cb3b3f959e7</anchor>
      <arglist>(unsigned long long value)</arglist>
    </member>
    <member kind="function">
      <type>Color4&lt; Float &gt;</type>
      <name>operator&quot;&quot;_srgbaf</name>
      <anchorfile>namespaceMagnum_1_1Math_1_1Literals.html</anchorfile>
      <anchor>ae2004bd1cd605e290e19b8566da65934</anchor>
      <arglist>(unsigned long long value)</arglist>
    </member>
    <member kind="function">
      <type>Half</type>
      <name>operator&quot;&quot;_h</name>
      <anchorfile>namespaceMagnum_1_1Math_1_1Literals.html</anchorfile>
      <anchor>a3f29fbcf0c140ce4248c2ac8fa331767</anchor>
      <arglist>(long double value)</arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>Magnum::MeshTools</name>
    <filename>namespaceMagnum_1_1MeshTools.html</filename>
    <member kind="function">
      <type>std::pair&lt; std::vector&lt; UnsignedInt &gt;, std::vector&lt; UnsignedInt &gt; &gt;</type>
      <name>combineIndexArrays</name>
      <anchorfile>namespaceMagnum_1_1MeshTools.html</anchorfile>
      <anchor>a17a53a7980104181355a5bc1b5fc89fb</anchor>
      <arglist>(const std::vector&lt; UnsignedInt &gt; &amp;interleavedArrays, UnsignedInt stride)</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; UnsignedInt &gt;</type>
      <name>combineIndexArrays</name>
      <anchorfile>namespaceMagnum_1_1MeshTools.html</anchorfile>
      <anchor>a90e75eba0b7e4e9edb105db481e7992c</anchor>
      <arglist>(const std::vector&lt; std::reference_wrapper&lt; std::vector&lt; UnsignedInt &gt;&gt;&gt; &amp;arrays)</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; UnsignedInt &gt;</type>
      <name>combineIndexArrays</name>
      <anchorfile>namespaceMagnum_1_1MeshTools.html</anchorfile>
      <anchor>a1d768efd6cf17739c960ef5114d61492</anchor>
      <arglist>(std::initializer_list&lt; std::reference_wrapper&lt; std::vector&lt; UnsignedInt &gt;&gt;&gt; arrays)</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; UnsignedInt &gt;</type>
      <name>combineIndexedArrays</name>
      <anchorfile>namespaceMagnum_1_1MeshTools.html</anchorfile>
      <anchor>a425eb14ea8166f1648bd0aef57010231</anchor>
      <arglist>(const std::pair&lt; const std::vector&lt; UnsignedInt &gt; &amp;, std::vector&lt; T &gt; &amp; &gt; &amp;...indexedArrays)</arglist>
    </member>
    <member kind="function">
      <type>std::tuple&lt; Mesh, std::unique_ptr&lt; Buffer &gt;, std::unique_ptr&lt; Buffer &gt; &gt;</type>
      <name>compile</name>
      <anchorfile>namespaceMagnum_1_1MeshTools.html</anchorfile>
      <anchor>ab8f80ea4500e06c4ee390c071e07a5aa</anchor>
      <arglist>(const Trade::MeshData2D &amp;meshData, BufferUsage usage)</arglist>
    </member>
    <member kind="function">
      <type>std::tuple&lt; Mesh, std::unique_ptr&lt; Buffer &gt;, std::unique_ptr&lt; Buffer &gt; &gt;</type>
      <name>compile</name>
      <anchorfile>namespaceMagnum_1_1MeshTools.html</anchorfile>
      <anchor>a3ee040d8c3eabc7f9e4f3b0a892e4f08</anchor>
      <arglist>(const Trade::MeshData3D &amp;meshData, BufferUsage usage)</arglist>
    </member>
    <member kind="function">
      <type>std::tuple&lt; Containers::Array&lt; char &gt;, Mesh::IndexType, UnsignedInt, UnsignedInt &gt;</type>
      <name>compressIndices</name>
      <anchorfile>namespaceMagnum_1_1MeshTools.html</anchorfile>
      <anchor>a8d2355cf7b5fb740170bbe48f292b3d1</anchor>
      <arglist>(const std::vector&lt; UnsignedInt &gt; &amp;indices)</arglist>
    </member>
    <member kind="function">
      <type>Containers::Array&lt; T &gt;</type>
      <name>compressIndicesAs</name>
      <anchorfile>namespaceMagnum_1_1MeshTools.html</anchorfile>
      <anchor>abd142dbefa361afda5152d3008d3aaa0</anchor>
      <arglist>(const std::vector&lt; UnsignedInt &gt; &amp;indices)</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; T &gt;</type>
      <name>duplicate</name>
      <anchorfile>namespaceMagnum_1_1MeshTools.html</anchorfile>
      <anchor>a52e95bc7fa1a8b895d6b7095659086e2</anchor>
      <arglist>(const std::vector&lt; UnsignedInt &gt; &amp;indices, const std::vector&lt; T &gt; &amp;data)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>flipFaceWinding</name>
      <anchorfile>namespaceMagnum_1_1MeshTools.html</anchorfile>
      <anchor>a42784996b61886a56da58a0361f7909a</anchor>
      <arglist>(std::vector&lt; UnsignedInt &gt; &amp;indices)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>flipNormals</name>
      <anchorfile>namespaceMagnum_1_1MeshTools.html</anchorfile>
      <anchor>ab2904cb96723d76bea8a6d7aa36cc81d</anchor>
      <arglist>(std::vector&lt; Vector3 &gt; &amp;normals)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>flipNormals</name>
      <anchorfile>namespaceMagnum_1_1MeshTools.html</anchorfile>
      <anchor>af4417b043b3de224d43edf1748f880fc</anchor>
      <arglist>(std::vector&lt; UnsignedInt &gt; &amp;indices, std::vector&lt; Vector3 &gt; &amp;normals)</arglist>
    </member>
    <member kind="function">
      <type>std::pair&lt; std::unique_ptr&lt; Buffer &gt;, Mesh &gt;</type>
      <name>fullScreenTriangle</name>
      <anchorfile>namespaceMagnum_1_1MeshTools.html</anchorfile>
      <anchor>af8233efe7125b1570de27733878e3939</anchor>
      <arglist>(Version version)</arglist>
    </member>
    <member kind="function">
      <type>std::pair&lt; std::unique_ptr&lt; Buffer &gt;, Mesh &gt;</type>
      <name>fullScreenTriangle</name>
      <anchorfile>namespaceMagnum_1_1MeshTools.html</anchorfile>
      <anchor>a1d8c735026d1cd2583565b95e881646a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::tuple&lt; std::vector&lt; UnsignedInt &gt;, std::vector&lt; Vector3 &gt; &gt;</type>
      <name>generateFlatNormals</name>
      <anchorfile>namespaceMagnum_1_1MeshTools.html</anchorfile>
      <anchor>aa00eaeae99bb3c0c3712d37235866c96</anchor>
      <arglist>(const std::vector&lt; UnsignedInt &gt; &amp;indices, const std::vector&lt; Vector3 &gt; &amp;positions)</arglist>
    </member>
    <member kind="function">
      <type>Containers::Array&lt; char &gt;</type>
      <name>interleave</name>
      <anchorfile>namespaceMagnum_1_1MeshTools.html</anchorfile>
      <anchor>a358bb624451eb90c0c3fa3e8bf5ffffe</anchor>
      <arglist>(const T &amp;first, const U &amp;...next)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>interleaveInto</name>
      <anchorfile>namespaceMagnum_1_1MeshTools.html</anchorfile>
      <anchor>a5de1c23f776e6923a61c8ba09fce6960</anchor>
      <arglist>(Containers::ArrayView&lt; char &gt; buffer, const T &amp;first, const U &amp;...next)</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; UnsignedInt &gt;</type>
      <name>removeDuplicates</name>
      <anchorfile>namespaceMagnum_1_1MeshTools.html</anchorfile>
      <anchor>a002865c3510bb6d2c12dca5b5fda7fa9</anchor>
      <arglist>(std::vector&lt; Vector &gt; &amp;data, typename Vector::Type epsilon=Math::TypeTraits&lt; typename Vector::Type &gt;::epsilon())</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>subdivide</name>
      <anchorfile>namespaceMagnum_1_1MeshTools.html</anchorfile>
      <anchor>a365f7548fa611240bd2afc613c55c051</anchor>
      <arglist>(std::vector&lt; UnsignedInt &gt; &amp;indices, std::vector&lt; Vertex &gt; &amp;vertices, Interpolator interpolator)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>tipsify</name>
      <anchorfile>namespaceMagnum_1_1MeshTools.html</anchorfile>
      <anchor>adda6a399901fd1bae7e3cd9d04179d37</anchor>
      <arglist>(std::vector&lt; UnsignedInt &gt; &amp;indices, UnsignedInt vertexCount, std::size_t cacheSize)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>transformVectorsInPlace</name>
      <anchorfile>namespaceMagnum_1_1MeshTools.html</anchorfile>
      <anchor>a608f59c896865a34b280e70b5e47ff04</anchor>
      <arglist>(const Math::Quaternion&lt; T &gt; &amp;normalizedQuaternion, U &amp;vectors)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>transformVectorsInPlace</name>
      <anchorfile>namespaceMagnum_1_1MeshTools.html</anchorfile>
      <anchor>a911f36841acac6ce2d13432cf2020286</anchor>
      <arglist>(const Math::Complex&lt; T &gt; &amp;complex, U &amp;vectors)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>transformVectorsInPlace</name>
      <anchorfile>namespaceMagnum_1_1MeshTools.html</anchorfile>
      <anchor>a4d7e07550ea88eb4e4b006a04a6d6670</anchor>
      <arglist>(const Math::Matrix3&lt; T &gt; &amp;matrix, U &amp;vectors)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>transformVectorsInPlace</name>
      <anchorfile>namespaceMagnum_1_1MeshTools.html</anchorfile>
      <anchor>a2d4bc525e4156de1df689eee44252ad3</anchor>
      <arglist>(const Math::Matrix4&lt; T &gt; &amp;matrix, U &amp;vectors)</arglist>
    </member>
    <member kind="function">
      <type>U</type>
      <name>transformVectors</name>
      <anchorfile>namespaceMagnum_1_1MeshTools.html</anchorfile>
      <anchor>add947f248aa8d07112060cc99ec31f42</anchor>
      <arglist>(const T &amp;transformation, U vectors)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>transformPointsInPlace</name>
      <anchorfile>namespaceMagnum_1_1MeshTools.html</anchorfile>
      <anchor>a8d746fd1952ce5402421ec652c8906ef</anchor>
      <arglist>(const Math::DualQuaternion&lt; T &gt; &amp;normalizedDualQuaternion, U &amp;points)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>transformPointsInPlace</name>
      <anchorfile>namespaceMagnum_1_1MeshTools.html</anchorfile>
      <anchor>ab401e4f628c575263ed997d01eb1ea8f</anchor>
      <arglist>(const Math::DualComplex&lt; T &gt; &amp;dualComplex, U &amp;points)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>transformPointsInPlace</name>
      <anchorfile>namespaceMagnum_1_1MeshTools.html</anchorfile>
      <anchor>a5fe0ab4c29ddd744feca85ee3c4e8bf0</anchor>
      <arglist>(const Math::Matrix3&lt; T &gt; &amp;matrix, U &amp;points)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>transformPointsInPlace</name>
      <anchorfile>namespaceMagnum_1_1MeshTools.html</anchorfile>
      <anchor>a740f09c1e6a3e8455541df16bf31556c</anchor>
      <arglist>(const Math::Matrix4&lt; T &gt; &amp;matrix, U &amp;points)</arglist>
    </member>
    <member kind="function">
      <type>U</type>
      <name>transformPoints</name>
      <anchorfile>namespaceMagnum_1_1MeshTools.html</anchorfile>
      <anchor>a6a35b6df2232d8cbf17f612b52244851</anchor>
      <arglist>(const T &amp;transformation, U vectors)</arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>Magnum::OpenDdl</name>
    <filename>namespaceMagnum_1_1OpenDdl.html</filename>
    <namespace>Magnum::OpenDdl::Validation</namespace>
    <class kind="struct">Magnum::OpenDdl::CharacterLiteral</class>
    <class kind="class">Magnum::OpenDdl::Document</class>
    <class kind="class">Magnum::OpenDdl::Property</class>
    <class kind="class">Magnum::OpenDdl::Structure</class>
    <member kind="enumeration">
      <type></type>
      <name>Type</name>
      <anchorfile>namespaceMagnum_1_1OpenDdl.html</anchorfile>
      <anchor>a4009db4d647b9aca8556805c331b9ce2</anchor>
      <arglist></arglist>
      <enumvalue file="namespaceMagnum_1_1OpenDdl.html" anchor="a4009db4d647b9aca8556805c331b9ce2ac26f15e86e3de4c398a8273272aba034">Bool</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OpenDdl.html" anchor="a4009db4d647b9aca8556805c331b9ce2a8f0fb883eb5a52838534191513e365a2">UnsignedByte</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OpenDdl.html" anchor="a4009db4d647b9aca8556805c331b9ce2aa245c3230debe5c956484ecc6fa93877">Byte</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OpenDdl.html" anchor="a4009db4d647b9aca8556805c331b9ce2aeb51124277f3ec904a9af74d5de34e7b">UnsignedShort</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OpenDdl.html" anchor="a4009db4d647b9aca8556805c331b9ce2a30bb747c98bccdd11b3f89e644c4d0ad">Short</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OpenDdl.html" anchor="a4009db4d647b9aca8556805c331b9ce2ac93cff91b6b9a57fa32bbe1863150070">UnsignedInt</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OpenDdl.html" anchor="a4009db4d647b9aca8556805c331b9ce2a1686a6c336b71b36d77354cea19a8b52">Int</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OpenDdl.html" anchor="a4009db4d647b9aca8556805c331b9ce2a0c72cf9e88a9782dbad0fde761ae9352">UnsignedLong</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OpenDdl.html" anchor="a4009db4d647b9aca8556805c331b9ce2a8394f0347c184cf156ac5924dccb773b">Long</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OpenDdl.html" anchor="a4009db4d647b9aca8556805c331b9ce2a22ae0e2b89e5e3d477f988cc36d3272b">Float</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OpenDdl.html" anchor="a4009db4d647b9aca8556805c331b9ce2ad909d38d705ce75386dd86e611a82f5b">Double</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OpenDdl.html" anchor="a4009db4d647b9aca8556805c331b9ce2a27118326006d3829667a400ad23d5d98">String</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OpenDdl.html" anchor="a4009db4d647b9aca8556805c331b9ce2a63d5049791d9d79d86e9a108b0a999ca">Reference</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OpenDdl.html" anchor="a4009db4d647b9aca8556805c331b9ce2aa1fa27779242b4902f7ae3bdd5c6d508">Type</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OpenDdl.html" anchor="a4009db4d647b9aca8556805c331b9ce2a90589c47f06eb971d548591f23c285af">Custom</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>PropertyType</name>
      <anchorfile>namespaceMagnum_1_1OpenDdl.html</anchorfile>
      <anchor>a82efc07fb689b4b8a8520a15cb1e0a24</anchor>
      <arglist></arglist>
      <enumvalue file="namespaceMagnum_1_1OpenDdl.html" anchor="a82efc07fb689b4b8a8520a15cb1e0a24ac26f15e86e3de4c398a8273272aba034">Bool</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OpenDdl.html" anchor="a82efc07fb689b4b8a8520a15cb1e0a24a8f0fb883eb5a52838534191513e365a2">UnsignedByte</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OpenDdl.html" anchor="a82efc07fb689b4b8a8520a15cb1e0a24aa245c3230debe5c956484ecc6fa93877">Byte</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OpenDdl.html" anchor="a82efc07fb689b4b8a8520a15cb1e0a24aeb51124277f3ec904a9af74d5de34e7b">UnsignedShort</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OpenDdl.html" anchor="a82efc07fb689b4b8a8520a15cb1e0a24a30bb747c98bccdd11b3f89e644c4d0ad">Short</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OpenDdl.html" anchor="a82efc07fb689b4b8a8520a15cb1e0a24ac93cff91b6b9a57fa32bbe1863150070">UnsignedInt</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OpenDdl.html" anchor="a82efc07fb689b4b8a8520a15cb1e0a24a1686a6c336b71b36d77354cea19a8b52">Int</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OpenDdl.html" anchor="a82efc07fb689b4b8a8520a15cb1e0a24a0c72cf9e88a9782dbad0fde761ae9352">UnsignedLong</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OpenDdl.html" anchor="a82efc07fb689b4b8a8520a15cb1e0a24a8394f0347c184cf156ac5924dccb773b">Long</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OpenDdl.html" anchor="a82efc07fb689b4b8a8520a15cb1e0a24a22ae0e2b89e5e3d477f988cc36d3272b">Float</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OpenDdl.html" anchor="a82efc07fb689b4b8a8520a15cb1e0a24ad909d38d705ce75386dd86e611a82f5b">Double</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OpenDdl.html" anchor="a82efc07fb689b4b8a8520a15cb1e0a24a27118326006d3829667a400ad23d5d98">String</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OpenDdl.html" anchor="a82efc07fb689b4b8a8520a15cb1e0a24a63d5049791d9d79d86e9a108b0a999ca">Reference</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OpenDdl.html" anchor="a82efc07fb689b4b8a8520a15cb1e0a24aa1fa27779242b4902f7ae3bdd5c6d508">Type</enumvalue>
    </member>
    <member kind="enumvalue">
      <name>UnknownIdentifier</name>
      <anchorfile>namespaceMagnum_1_1OpenDdl.html</anchorfile>
      <anchor>a5d048a49f115edc4c82612e62eb89caba04e754b073ff12e4cd5c65c74b0f73c4</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceMagnum_1_1OpenDdl.html</anchorfile>
      <anchor>a0889969b8815dd0139622559b09b78a3</anchor>
      <arglist>(Debug &amp;debug, Type value)</arglist>
    </member>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceMagnum_1_1OpenDdl.html</anchorfile>
      <anchor>a3b1df866907b4e20bb899e8dc803bc9b</anchor>
      <arglist>(Debug &amp;debug, PropertyType value)</arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>Magnum::OpenDdl::Validation</name>
    <filename>namespaceMagnum_1_1OpenDdl_1_1Validation.html</filename>
    <class kind="class">Magnum::OpenDdl::Validation::Property</class>
    <class kind="struct">Magnum::OpenDdl::Validation::RequiredPropertyType</class>
    <class kind="class">Magnum::OpenDdl::Validation::Structure</class>
    <member kind="typedef">
      <type>std::initializer_list&lt; std::pair&lt; Int, std::pair&lt; Int, Int &gt; &gt; &gt;</type>
      <name>Structures</name>
      <anchorfile>namespaceMagnum_1_1OpenDdl_1_1Validation.html</anchorfile>
      <anchor>a1e6b6eba2d16c215adbbef9c2562b7be</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::initializer_list&lt; Property &gt;</type>
      <name>Properties</name>
      <anchorfile>namespaceMagnum_1_1OpenDdl_1_1Validation.html</anchorfile>
      <anchor>aaf1e085b806e79ad4689bcc45a8813ce</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::initializer_list&lt; Type &gt;</type>
      <name>Primitives</name>
      <anchorfile>namespaceMagnum_1_1OpenDdl_1_1Validation.html</anchorfile>
      <anchor>a7f9bfa8a467d3956e1ba3128c0285503</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>constexpr RequiredPropertyType</type>
      <name>RequiredProperty</name>
      <anchorfile>namespaceMagnum_1_1OpenDdl_1_1Validation.html</anchorfile>
      <anchor>ae85ee16ee3a7b8c1e3b9dcdd26f24c56</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>constexpr RequiredPropertyType</type>
      <name>OptionalProperty</name>
      <anchorfile>namespaceMagnum_1_1OpenDdl_1_1Validation.html</anchorfile>
      <anchor>a7c926c8ec7eec3eec79dd687eab2e03f</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>Magnum::OvrIntegration</name>
    <filename>namespaceMagnum_1_1OvrIntegration.html</filename>
    <class kind="struct">Magnum::OvrIntegration::Buttons</class>
    <class kind="class">Magnum::OvrIntegration::Compositor</class>
    <class kind="class">Magnum::OvrIntegration::Context</class>
    <class kind="struct">Magnum::OvrIntegration::Error</class>
    <class kind="class">Magnum::OvrIntegration::HeadLockableLayer</class>
    <class kind="class">Magnum::OvrIntegration::InputState</class>
    <class kind="class">Magnum::OvrIntegration::Layer</class>
    <class kind="class">Magnum::OvrIntegration::LayerEyeFov</class>
    <class kind="class">Magnum::OvrIntegration::LayerQuad</class>
    <class kind="class">Magnum::OvrIntegration::PoseState</class>
    <class kind="class">Magnum::OvrIntegration::Session</class>
    <class kind="class">Magnum::OvrIntegration::TextureSwapChain</class>
    <class kind="struct">Magnum::OvrIntegration::Touches</class>
    <member kind="typedef">
      <type>Containers::EnumSet&lt; DetectResult &gt;</type>
      <name>DetectResults</name>
      <anchorfile>namespaceMagnum_1_1OvrIntegration.html</anchorfile>
      <anchor>a4fe10611df2e827d955a22c45a88028c</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Containers::EnumSet&lt; TrackerFlag &gt;</type>
      <name>TrackerFlags</name>
      <anchorfile>namespaceMagnum_1_1OvrIntegration.html</anchorfile>
      <anchor>a96d457b1afd55fc8dbf7c4c5c8914108</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Containers::EnumSet&lt; StatusFlag &gt;</type>
      <name>StatusFlags</name>
      <anchorfile>namespaceMagnum_1_1OvrIntegration.html</anchorfile>
      <anchor>a3ecc95a048c433bfe45edab8ac88d15b</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Corrade::Containers::EnumSet&lt; SessionStatusFlag &gt;</type>
      <name>SessionStatusFlags</name>
      <anchorfile>namespaceMagnum_1_1OvrIntegration.html</anchorfile>
      <anchor>a98bef84792091fda50bf4128a950af69</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>LayerType</name>
      <anchorfile>namespaceMagnum_1_1OvrIntegration.html</anchorfile>
      <anchor>a77b0ed14328c2faa7b2519b746c4ce90</anchor>
      <arglist></arglist>
      <enumvalue file="namespaceMagnum_1_1OvrIntegration.html" anchor="a77b0ed14328c2faa7b2519b746c4ce90a10cad50ddd2638ffc443bc4bb874f95e">EyeFov</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OvrIntegration.html" anchor="a77b0ed14328c2faa7b2519b746c4ce90ae9017664588010860a92ceb5f8fcb824">Quad</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OvrIntegration.html" anchor="a77b0ed14328c2faa7b2519b746c4ce90ad0845b10e8e64b028afc0b1fb22ffca4">EyeMatrix</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>DetectResult</name>
      <anchorfile>namespaceMagnum_1_1OvrIntegration.html</anchorfile>
      <anchor>abe437794a1624b8ecdcdb909d72ee895</anchor>
      <arglist></arglist>
      <enumvalue file="namespaceMagnum_1_1OvrIntegration.html" anchor="abe437794a1624b8ecdcdb909d72ee895a7970e3e8bdee1773a50915479ffbabb7">ServiceRunning</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OvrIntegration.html" anchor="abe437794a1624b8ecdcdb909d72ee895a66b7262d619bd3873bac68927465f0c5">HmdConnected</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>HmdType</name>
      <anchorfile>namespaceMagnum_1_1OvrIntegration.html</anchorfile>
      <anchor>ab8c9a8c7cce6ad0ef7ce2e1befecc41c</anchor>
      <arglist></arglist>
      <enumvalue file="namespaceMagnum_1_1OvrIntegration.html" anchor="ab8c9a8c7cce6ad0ef7ce2e1befecc41ca6adf97f83acf6453d4a6a4b1070f3754">None</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OvrIntegration.html" anchor="ab8c9a8c7cce6ad0ef7ce2e1befecc41ca47f84b7951ed9537b0a70c4e0047de81">DK1</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OvrIntegration.html" anchor="ab8c9a8c7cce6ad0ef7ce2e1befecc41ca66994daf724ae63030fbcc30d3655bef">DKHD</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OvrIntegration.html" anchor="ab8c9a8c7cce6ad0ef7ce2e1befecc41ca284bad9c648d4b9dbdf4baa703acb02d">DK2</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OvrIntegration.html" anchor="ab8c9a8c7cce6ad0ef7ce2e1befecc41ca834cb54b61bbed9d4296c995e4c5d8b2">CB</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OvrIntegration.html" anchor="ab8c9a8c7cce6ad0ef7ce2e1befecc41ca6311ae17c1ee52b36e68aaf4ad066387">Other</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OvrIntegration.html" anchor="ab8c9a8c7cce6ad0ef7ce2e1befecc41ca3bedec542f1401c2da728a90cc6fa1b2">E3_2015</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OvrIntegration.html" anchor="ab8c9a8c7cce6ad0ef7ce2e1befecc41ca28dd683b878e138a2c30a2cb3094306a">ES06</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OvrIntegration.html" anchor="ab8c9a8c7cce6ad0ef7ce2e1befecc41cab67df66fbe1fbfdd5becd15bbc4a8585">ES09</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OvrIntegration.html" anchor="ab8c9a8c7cce6ad0ef7ce2e1befecc41caf58b754169ac9c2928472f57f73e1610">ES11</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OvrIntegration.html" anchor="ab8c9a8c7cce6ad0ef7ce2e1befecc41ca5cd3d32886412288e18a345898146b8d">CV1</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>TrackingOrigin</name>
      <anchorfile>namespaceMagnum_1_1OvrIntegration.html</anchorfile>
      <anchor>a6d5277b84d2b8c94d19de5cbeaa45fc7</anchor>
      <arglist></arglist>
      <enumvalue file="namespaceMagnum_1_1OvrIntegration.html" anchor="a6d5277b84d2b8c94d19de5cbeaa45fc7a16d89336a4617fb6b87763d4b56139b7">EyeLevel</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OvrIntegration.html" anchor="a6d5277b84d2b8c94d19de5cbeaa45fc7acbd6ea814849130b29ce44bc70114c4b">FloorLevel</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>TrackerFlag</name>
      <anchorfile>namespaceMagnum_1_1OvrIntegration.html</anchorfile>
      <anchor>a0abd84c8f718932b3c2268e0e02310e7</anchor>
      <arglist></arglist>
      <enumvalue file="namespaceMagnum_1_1OvrIntegration.html" anchor="a0abd84c8f718932b3c2268e0e02310e7a2ec0d16e4ca169baedb9b2d50ec5c6d7">Connected</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OvrIntegration.html" anchor="a0abd84c8f718932b3c2268e0e02310e7a03b7e73d85589978f9c3a063b8246508">PoseTracked</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>Button</name>
      <anchorfile>namespaceMagnum_1_1OvrIntegration.html</anchorfile>
      <anchor>a077525510ed427920eff7ae75ec5123f</anchor>
      <arglist></arglist>
      <enumvalue file="namespaceMagnum_1_1OvrIntegration.html" anchor="a077525510ed427920eff7ae75ec5123fa7fc56270e7a70fa81a5935b72eacbe29">A</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OvrIntegration.html" anchor="a077525510ed427920eff7ae75ec5123fa9d5ed678fe57bcca610140957afab571">B</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OvrIntegration.html" anchor="a077525510ed427920eff7ae75ec5123fa02129bb861061d1a052c592e2dc6b383">X</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OvrIntegration.html" anchor="a077525510ed427920eff7ae75ec5123fa57cec4137b614c87cb4e24a3d003a3e0">Y</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OvrIntegration.html" anchor="a077525510ed427920eff7ae75ec5123fa787cce7d516ae441abe97ffff79b08c8">RThumb</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OvrIntegration.html" anchor="a077525510ed427920eff7ae75ec5123fa41a810fe24d1ea211a55337eaaa1e3d2">RShoulder</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OvrIntegration.html" anchor="a077525510ed427920eff7ae75ec5123faa459ba7fb2f974adf6eba980f35f8d14">LThumb</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OvrIntegration.html" anchor="a077525510ed427920eff7ae75ec5123fafe788e67252c3049b894226c0c6ca5aa">LShoulder</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OvrIntegration.html" anchor="a077525510ed427920eff7ae75ec5123fa258f49887ef8d14ac268c92b02503aaa">Up</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OvrIntegration.html" anchor="a077525510ed427920eff7ae75ec5123fa08a38277b0309070706f6652eeae9a53">Down</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OvrIntegration.html" anchor="a077525510ed427920eff7ae75ec5123fa945d5e233cf7d6240f6b783b36a374ff">Left</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OvrIntegration.html" anchor="a077525510ed427920eff7ae75ec5123fa92b09c7c48c520c3c55e497875da437c">Right</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OvrIntegration.html" anchor="a077525510ed427920eff7ae75ec5123faf1851d5600eae616ee802a31ac74701b">Enter</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OvrIntegration.html" anchor="a077525510ed427920eff7ae75ec5123fa0557fa923dcee4d0f86b1409f5c2167f">Back</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OvrIntegration.html" anchor="a077525510ed427920eff7ae75ec5123fa685dec8174e7e1bbc0e7566fc30c72f0">VolUp</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OvrIntegration.html" anchor="a077525510ed427920eff7ae75ec5123fa573c1456126efb9d131daea39f0c30ff">VolDown</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OvrIntegration.html" anchor="a077525510ed427920eff7ae75ec5123fa8cf04a9734132302f96da8e113e80ce5">Home</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>Touch</name>
      <anchorfile>namespaceMagnum_1_1OvrIntegration.html</anchorfile>
      <anchor>a5a7392511ba112942f2528ff415ffeac</anchor>
      <arglist></arglist>
      <enumvalue file="namespaceMagnum_1_1OvrIntegration.html" anchor="a5a7392511ba112942f2528ff415ffeaca7fc56270e7a70fa81a5935b72eacbe29">A</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OvrIntegration.html" anchor="a5a7392511ba112942f2528ff415ffeaca9d5ed678fe57bcca610140957afab571">B</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OvrIntegration.html" anchor="a5a7392511ba112942f2528ff415ffeaca02129bb861061d1a052c592e2dc6b383">X</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OvrIntegration.html" anchor="a5a7392511ba112942f2528ff415ffeaca57cec4137b614c87cb4e24a3d003a3e0">Y</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OvrIntegration.html" anchor="a5a7392511ba112942f2528ff415ffeaca787cce7d516ae441abe97ffff79b08c8">RThumb</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OvrIntegration.html" anchor="a5a7392511ba112942f2528ff415ffeacaa459ba7fb2f974adf6eba980f35f8d14">LThumb</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OvrIntegration.html" anchor="a5a7392511ba112942f2528ff415ffeaca0501589371e70c45f36658f9bb4b7843">RIndexTrigger</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OvrIntegration.html" anchor="a5a7392511ba112942f2528ff415ffeaca539fc444c6c42c09fec1c86daa96b8a2">LIndexTrigger</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OvrIntegration.html" anchor="a5a7392511ba112942f2528ff415ffeacacfe67b27ee94b2453d80c20089a65d9e">RIndexPointing</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OvrIntegration.html" anchor="a5a7392511ba112942f2528ff415ffeacad68850271da7c45858aa8df755601922">RThumbUp</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OvrIntegration.html" anchor="a5a7392511ba112942f2528ff415ffeaca522257548de440cb48251ce74a036633">LIndexPointing</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OvrIntegration.html" anchor="a5a7392511ba112942f2528ff415ffeaca3bbcb71d84685fa1383e07d91a3cf011">LThumbUp</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>ControllerType</name>
      <anchorfile>namespaceMagnum_1_1OvrIntegration.html</anchorfile>
      <anchor>aad674320383d77fc5e7a9f028ea56843</anchor>
      <arglist></arglist>
      <enumvalue file="namespaceMagnum_1_1OvrIntegration.html" anchor="aad674320383d77fc5e7a9f028ea56843a6adf97f83acf6453d4a6a4b1070f3754">None</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OvrIntegration.html" anchor="aad674320383d77fc5e7a9f028ea56843a253c104ad721758c8c0654a6878f47ff">LTouch</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OvrIntegration.html" anchor="aad674320383d77fc5e7a9f028ea56843a02f85d6ee062327d58a289335f56fca1">RTouch</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OvrIntegration.html" anchor="aad674320383d77fc5e7a9f028ea56843af0f31c9700c6b10d8a20dc487b2ae6a8">Touch</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OvrIntegration.html" anchor="aad674320383d77fc5e7a9f028ea56843af8508f576cd3f742dfc268258dcdf0dd">Remote</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OvrIntegration.html" anchor="aad674320383d77fc5e7a9f028ea56843ad7a5c7a13c0838c399a34112f46676b6">XBox</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OvrIntegration.html" anchor="aad674320383d77fc5e7a9f028ea56843a4d3d769b812b6faa6b76e1a8abaece2d">Active</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>StatusFlag</name>
      <anchorfile>namespaceMagnum_1_1OvrIntegration.html</anchorfile>
      <anchor>a018508181e5fd5575105208b3c9f5a65</anchor>
      <arglist></arglist>
      <enumvalue file="namespaceMagnum_1_1OvrIntegration.html" anchor="a018508181e5fd5575105208b3c9f5a65a6a8886de54f4886e42898ef3b017442b">OrientationTracked</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OvrIntegration.html" anchor="a018508181e5fd5575105208b3c9f5a65ab7ddf1ada4f53b9481038b4bf8c6cc56">PositionTracked</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>SessionStatusFlag</name>
      <anchorfile>namespaceMagnum_1_1OvrIntegration.html</anchorfile>
      <anchor>a05fe9e5cf2c3f76cad37febcfda1569f</anchor>
      <arglist></arglist>
      <enumvalue file="namespaceMagnum_1_1OvrIntegration.html" anchor="a05fe9e5cf2c3f76cad37febcfda1569fa149c5e61355c8de0943d094e18471195">IsVisible</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OvrIntegration.html" anchor="a05fe9e5cf2c3f76cad37febcfda1569fa173e3971d0e0a2e4de01a20ce02864a2">HmdPresent</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OvrIntegration.html" anchor="a05fe9e5cf2c3f76cad37febcfda1569fa7007260d2109c1b8a5614f339d6de495">HmdMounted</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OvrIntegration.html" anchor="a05fe9e5cf2c3f76cad37febcfda1569fa89dad51f4ce3c9e37a4581346d338a8a">DisplayLost</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OvrIntegration.html" anchor="a05fe9e5cf2c3f76cad37febcfda1569fae991b8c66aad662cea8ca5bdeb073dee">ShouldQuit</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OvrIntegration.html" anchor="a05fe9e5cf2c3f76cad37febcfda1569fa706fe46f20c4f4f109d18310acd81c72">ShouldRecenter</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>PerformanceHudMode</name>
      <anchorfile>namespaceMagnum_1_1OvrIntegration.html</anchorfile>
      <anchor>a13dbe6c3cff28c02def2998200ae32ba</anchor>
      <arglist></arglist>
      <enumvalue file="namespaceMagnum_1_1OvrIntegration.html" anchor="a13dbe6c3cff28c02def2998200ae32baad15305d7a4e34e02489c74a5ef542f36">Off</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OvrIntegration.html" anchor="a13dbe6c3cff28c02def2998200ae32baaa753651df182d2d54712d863b9af4f0d">PerfSummary</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OvrIntegration.html" anchor="a13dbe6c3cff28c02def2998200ae32baa03eb527e4457d835779020ea5b946e4e">LatencyTiming</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OvrIntegration.html" anchor="a13dbe6c3cff28c02def2998200ae32baafa4e966fc32d9ddcd5084b98cbb26f4f">AppRenderTiming</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OvrIntegration.html" anchor="a13dbe6c3cff28c02def2998200ae32baa376814a1f428866975b538385cc67810">CompRenderTiming</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OvrIntegration.html" anchor="a13dbe6c3cff28c02def2998200ae32baa9db78fd43c596601aa891c5c656a078d">VersionInfo</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>DebugHudStereoMode</name>
      <anchorfile>namespaceMagnum_1_1OvrIntegration.html</anchorfile>
      <anchor>a981bf665fe55ea30d79c251cb8dd3dae</anchor>
      <arglist></arglist>
      <enumvalue file="namespaceMagnum_1_1OvrIntegration.html" anchor="a981bf665fe55ea30d79c251cb8dd3daead15305d7a4e34e02489c74a5ef542f36">Off</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OvrIntegration.html" anchor="a981bf665fe55ea30d79c251cb8dd3daeae9017664588010860a92ceb5f8fcb824">Quad</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OvrIntegration.html" anchor="a981bf665fe55ea30d79c251cb8dd3daeace19873f7b7fd296a0c3b514c6562d37">QuadWithCrosshair</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OvrIntegration.html" anchor="a981bf665fe55ea30d79c251cb8dd3daeaab6e7a65e73a0fc5d343d78c616d7e6d">CrosshairAtInfinity</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>LayerHudMode</name>
      <anchorfile>namespaceMagnum_1_1OvrIntegration.html</anchorfile>
      <anchor>a7457b8480db6553349312d38e10ee2d3</anchor>
      <arglist></arglist>
      <enumvalue file="namespaceMagnum_1_1OvrIntegration.html" anchor="a7457b8480db6553349312d38e10ee2d3ad15305d7a4e34e02489c74a5ef542f36">Off</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OvrIntegration.html" anchor="a7457b8480db6553349312d38e10ee2d3a4059b0251f66a18cb56f544728796875">Info</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>ErrorType</name>
      <anchorfile>namespaceMagnum_1_1OvrIntegration.html</anchorfile>
      <anchor>adabeb393adcab6691d7250753ef6582c</anchor>
      <arglist></arglist>
      <enumvalue file="namespaceMagnum_1_1OvrIntegration.html" anchor="adabeb393adcab6691d7250753ef6582cadfa6c4e376d67452db5b14bb40d4d9a0">MemoryAllocationFailure</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OvrIntegration.html" anchor="adabeb393adcab6691d7250753ef6582ca082b94968d127d17abb24a69da6cda56">InvalidSession</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OvrIntegration.html" anchor="adabeb393adcab6691d7250753ef6582cac85a251cc457840f1e032f1b733e9398">Timeout</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OvrIntegration.html" anchor="adabeb393adcab6691d7250753ef6582ca9646ad3a1c3e708b4fa8b4b4270fbab6">NotInitialized</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OvrIntegration.html" anchor="adabeb393adcab6691d7250753ef6582ca627251310d3384b591e4138be21145d5">InvalidParameter</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OvrIntegration.html" anchor="adabeb393adcab6691d7250753ef6582ca112197d9297e3f816e50aa133dc6dd5e">ServiceError</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OvrIntegration.html" anchor="adabeb393adcab6691d7250753ef6582caff59267aa541879a068a88355d62f058">NoHmd</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OvrIntegration.html" anchor="adabeb393adcab6691d7250753ef6582cab4080bdf74febf04d578ff105cce9d3f">Unsupported</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OvrIntegration.html" anchor="adabeb393adcab6691d7250753ef6582ca758b1a8856a2f8715b9c898ae0a57c14">DeviceUnavailable</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OvrIntegration.html" anchor="adabeb393adcab6691d7250753ef6582ca49c2d0b56e40fadbdc0c2a9fd4315524">InvalidHeadsetOrientation</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OvrIntegration.html" anchor="adabeb393adcab6691d7250753ef6582ca7eb9535c8784e5d2aa3a652471c1a7b4">ClientSkippedDestroy</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OvrIntegration.html" anchor="adabeb393adcab6691d7250753ef6582cae813f5801e9ff3e49091c0aafe8965a9">ClientSkippedShutdown</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OvrIntegration.html" anchor="adabeb393adcab6691d7250753ef6582cad509009f13c4de2c1177bc2d363b73e8">AudioDeviceNotFound</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OvrIntegration.html" anchor="adabeb393adcab6691d7250753ef6582cafc426c134912a0008fc9c7a48263c5df">AudioComError</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OvrIntegration.html" anchor="adabeb393adcab6691d7250753ef6582ca223e06f5cb15fc701ea1e686f7934f4f">Initialize</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OvrIntegration.html" anchor="adabeb393adcab6691d7250753ef6582ca7133af63cf13b9725dff98d146b3ccff">LibLoad</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OvrIntegration.html" anchor="adabeb393adcab6691d7250753ef6582ca4491810b1469ebfe9ed1c40221d2c4d8">LibVersion</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OvrIntegration.html" anchor="adabeb393adcab6691d7250753ef6582caece78a70b624b88f562799ec52ddb02d">ServiceConnection</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OvrIntegration.html" anchor="adabeb393adcab6691d7250753ef6582ca43ea2ee41bedd266ad7da264884ca5c5">ServiceVersion</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OvrIntegration.html" anchor="adabeb393adcab6691d7250753ef6582ca4a9681314bd727c21cb6ed804911e6d7">IncompatibleOs</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OvrIntegration.html" anchor="adabeb393adcab6691d7250753ef6582ca7ae7a1fe2dc931469a6534b9262d6fc4">DisplayInit</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OvrIntegration.html" anchor="adabeb393adcab6691d7250753ef6582ca79ba98cd5eb4e6dae3995d81fd0e6ad4">ServerStart</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OvrIntegration.html" anchor="adabeb393adcab6691d7250753ef6582caf10363860dd5bc034f3078e1c30541b7">Reinitialization</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OvrIntegration.html" anchor="adabeb393adcab6691d7250753ef6582ca9cc6505cca9015da503dfdd9bb62b7d0">MismatchedAdapters</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OvrIntegration.html" anchor="adabeb393adcab6691d7250753ef6582caad61a17a5106a6821235602778309b84">LeakingResources</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OvrIntegration.html" anchor="adabeb393adcab6691d7250753ef6582ca5fa6776d2b97bf9fc75a006d96516129">ClientVersion</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OvrIntegration.html" anchor="adabeb393adcab6691d7250753ef6582ca2680972d5946d0faa51f71d1a7ec8646">OutOfDateOs</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OvrIntegration.html" anchor="adabeb393adcab6691d7250753ef6582caf21d6d4d86c3d104e5ee7b120b1f90af">OutOfDateGfxDriver</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OvrIntegration.html" anchor="adabeb393adcab6691d7250753ef6582cac022b6a8e903db3815747953baa21b19">IncompatibleGpu</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OvrIntegration.html" anchor="adabeb393adcab6691d7250753ef6582ca03ebe1b3b069f637eb93f06c30916350">NoValidVrDisplaySystem</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OvrIntegration.html" anchor="adabeb393adcab6691d7250753ef6582caec30c235d0eb792797af1aa1d11759a7">Obsolete</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OvrIntegration.html" anchor="adabeb393adcab6691d7250753ef6582caf9717c4a65ac4604bbf0a6e2288b3d87">DisabledOrDefaultAdapter</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OvrIntegration.html" anchor="adabeb393adcab6691d7250753ef6582cad516cecd05c0c1d9f6196a02d925617a">HybridGraphicsNotSupported</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OvrIntegration.html" anchor="adabeb393adcab6691d7250753ef6582ca486fac754172c31f16df1fbadf62e4e8">DisplayManagerInit</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OvrIntegration.html" anchor="adabeb393adcab6691d7250753ef6582cac5a395ab4d788f57bd18171ccc9f78fa">TrackerDriverInit</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OvrIntegration.html" anchor="adabeb393adcab6691d7250753ef6582ca89dad51f4ce3c9e37a4581346d338a8a">DisplayLost</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OvrIntegration.html" anchor="adabeb393adcab6691d7250753ef6582ca01ac2fb3024f7f373266fa56ecb33ded">TextureSwapChainFull</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OvrIntegration.html" anchor="adabeb393adcab6691d7250753ef6582ca21927b16639259e410f2054322ad64b8">TextureSwapChainInvalid</enumvalue>
      <enumvalue file="namespaceMagnum_1_1OvrIntegration.html" anchor="adabeb393adcab6691d7250753ef6582ca15452a9b0f2356c3dabe720a67728b3d">RuntimeException</enumvalue>
    </member>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceMagnum_1_1OvrIntegration.html</anchorfile>
      <anchor>aac03f9b2a91ebbda095acce83b4a4f32</anchor>
      <arglist>(Debug &amp;debug, DetectResult value)</arglist>
    </member>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceMagnum_1_1OvrIntegration.html</anchorfile>
      <anchor>a4a10d88a62e4d474e820e1aea0f069c5</anchor>
      <arglist>(Debug &amp;debug, HmdType value)</arglist>
    </member>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceMagnum_1_1OvrIntegration.html</anchorfile>
      <anchor>aad9eb7c25050cc589dd7839ba68cd8b8</anchor>
      <arglist>(Debug &amp;debug, TrackingOrigin value)</arglist>
    </member>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceMagnum_1_1OvrIntegration.html</anchorfile>
      <anchor>af590305adfc6bdc7c96e6e80a65ddb43</anchor>
      <arglist>(Debug &amp;debug, TrackerFlag value)</arglist>
    </member>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceMagnum_1_1OvrIntegration.html</anchorfile>
      <anchor>ae6e92af37ce60f20df7e7f91968efa27</anchor>
      <arglist>(Debug &amp;debug, Button value)</arglist>
    </member>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceMagnum_1_1OvrIntegration.html</anchorfile>
      <anchor>a67cda2f111927cd1e9165953d0e14359</anchor>
      <arglist>(Debug &amp;debug, Touch value)</arglist>
    </member>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceMagnum_1_1OvrIntegration.html</anchorfile>
      <anchor>a565af34924402b9f08c965b363f33f7c</anchor>
      <arglist>(Debug &amp;debug, ControllerType value)</arglist>
    </member>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceMagnum_1_1OvrIntegration.html</anchorfile>
      <anchor>af02b621587a4811d5180e4cb4f1614fa</anchor>
      <arglist>(Debug &amp;debug, StatusFlag value)</arglist>
    </member>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceMagnum_1_1OvrIntegration.html</anchorfile>
      <anchor>a87cb3e499853d4455b1c0bf96c50e812</anchor>
      <arglist>(Debug &amp;debug, SessionStatusFlag value)</arglist>
    </member>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceMagnum_1_1OvrIntegration.html</anchorfile>
      <anchor>a194427e41c0919b2aaa1ba4e6e98665a</anchor>
      <arglist>(Debug &amp;debug, PerformanceHudMode value)</arglist>
    </member>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceMagnum_1_1OvrIntegration.html</anchorfile>
      <anchor>ae6d78ab231653215a4e595a46af077da</anchor>
      <arglist>(Debug &amp;debug, DebugHudStereoMode value)</arglist>
    </member>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceMagnum_1_1OvrIntegration.html</anchorfile>
      <anchor>a83b6866212d8f11499717ccdbedc37eb</anchor>
      <arglist>(Debug &amp;debug, LayerHudMode value)</arglist>
    </member>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceMagnum_1_1OvrIntegration.html</anchorfile>
      <anchor>a61cd76fb1687e7e03b67d8b6da39cf54</anchor>
      <arglist>(Debug &amp;debug, ErrorType value)</arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>Magnum::Platform</name>
    <filename>namespaceMagnum_1_1Platform.html</filename>
    <class kind="class">Magnum::Platform::AbstractXApplication</class>
    <class kind="class">Magnum::Platform::AndroidApplication</class>
    <class kind="class">Magnum::Platform::BasicScreen</class>
    <class kind="class">Magnum::Platform::BasicScreenedApplication</class>
    <class kind="class">Magnum::Platform::Context</class>
    <class kind="class">Magnum::Platform::GlfwApplication</class>
    <class kind="class">Magnum::Platform::GlutApplication</class>
    <class kind="class">Magnum::Platform::GlxApplication</class>
    <class kind="class">Magnum::Platform::Sdl2Application</class>
    <class kind="class">Magnum::Platform::WindowlessCglApplication</class>
    <class kind="class">Magnum::Platform::WindowlessCglContext</class>
    <class kind="class">Magnum::Platform::WindowlessEglApplication</class>
    <class kind="class">Magnum::Platform::WindowlessEglContext</class>
    <class kind="class">Magnum::Platform::WindowlessGlxApplication</class>
    <class kind="class">Magnum::Platform::WindowlessGlxContext</class>
    <class kind="class">Magnum::Platform::WindowlessIosApplication</class>
    <class kind="class">Magnum::Platform::WindowlessIosContext</class>
    <class kind="class">Magnum::Platform::WindowlessWglApplication</class>
    <class kind="class">Magnum::Platform::WindowlessWglContext</class>
    <class kind="class">Magnum::Platform::WindowlessWindowsEglApplication</class>
    <class kind="class">Magnum::Platform::WindowlessWindowsEglContext</class>
    <class kind="class">Magnum::Platform::XEglApplication</class>
  </compound>
  <compound kind="namespace">
    <name>Magnum::Primitives</name>
    <filename>namespaceMagnum_1_1Primitives.html</filename>
    <class kind="class">Magnum::Primitives::Capsule2D</class>
    <class kind="class">Magnum::Primitives::Capsule3D</class>
    <class kind="class">Magnum::Primitives::Circle</class>
    <class kind="class">Magnum::Primitives::Crosshair2D</class>
    <class kind="class">Magnum::Primitives::Crosshair3D</class>
    <class kind="class">Magnum::Primitives::Cube</class>
    <class kind="class">Magnum::Primitives::Cylinder</class>
    <class kind="class">Magnum::Primitives::Icosphere</class>
    <class kind="class">Magnum::Primitives::Line2D</class>
    <class kind="class">Magnum::Primitives::Line3D</class>
    <class kind="class">Magnum::Primitives::Plane</class>
    <class kind="class">Magnum::Primitives::Square</class>
    <class kind="class">Magnum::Primitives::UVSphere</class>
    <member kind="function">
      <type>Trade::MeshData2D</type>
      <name>axis2D</name>
      <anchorfile>namespaceMagnum_1_1Primitives.html</anchorfile>
      <anchor>ade115b7b48cb6379a7dcb2072d45c77d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Trade::MeshData3D</type>
      <name>axis3D</name>
      <anchorfile>namespaceMagnum_1_1Primitives.html</anchorfile>
      <anchor>ae6841afe470778bf0b2cf6af400141a2</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>Magnum::SceneGraph</name>
    <filename>namespaceMagnum_1_1SceneGraph.html</filename>
    <class kind="class">Magnum::SceneGraph::AbstractBasicTranslationRotation2D</class>
    <class kind="class">Magnum::SceneGraph::AbstractBasicTranslationRotation3D</class>
    <class kind="class">Magnum::SceneGraph::AbstractBasicTranslationRotationScaling2D</class>
    <class kind="class">Magnum::SceneGraph::AbstractBasicTranslationRotationScaling3D</class>
    <class kind="class">Magnum::SceneGraph::AbstractFeature</class>
    <class kind="class">Magnum::SceneGraph::AbstractFeatureGroup</class>
    <class kind="class">Magnum::SceneGraph::AbstractGroupedFeature</class>
    <class kind="class">Magnum::SceneGraph::AbstractObject</class>
    <class kind="class">Magnum::SceneGraph::AbstractTransformation</class>
    <class kind="class">Magnum::SceneGraph::AbstractTranslation</class>
    <class kind="class">Magnum::SceneGraph::Animable</class>
    <class kind="class">Magnum::SceneGraph::AnimableGroup</class>
    <class kind="class">Magnum::SceneGraph::BasicDualComplexTransformation</class>
    <class kind="class">Magnum::SceneGraph::BasicDualQuaternionTransformation</class>
    <class kind="class">Magnum::SceneGraph::BasicMatrixTransformation2D</class>
    <class kind="class">Magnum::SceneGraph::BasicMatrixTransformation3D</class>
    <class kind="class">Magnum::SceneGraph::BasicRigidMatrixTransformation2D</class>
    <class kind="class">Magnum::SceneGraph::BasicRigidMatrixTransformation3D</class>
    <class kind="class">Magnum::SceneGraph::Camera</class>
    <class kind="class">Magnum::SceneGraph::Drawable</class>
    <class kind="class">Magnum::SceneGraph::FeatureGroup</class>
    <class kind="class">Magnum::SceneGraph::Object</class>
    <class kind="class">Magnum::SceneGraph::Scene</class>
    <class kind="class">Magnum::SceneGraph::TranslationTransformation</class>
    <member kind="typedef">
      <type>Camera&lt; dimensions, T &gt;</type>
      <name>AbstractCamera</name>
      <anchorfile>namespaceMagnum_1_1SceneGraph.html</anchorfile>
      <anchor>a638c8a0da07c865f043c372f9bf5eea8</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>BasicCamera2D&lt; T &gt;</type>
      <name>AbstractBasicCamera2D</name>
      <anchorfile>namespaceMagnum_1_1SceneGraph.html</anchorfile>
      <anchor>a071469f209596142ec5d79ff8848669a</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Camera2D</type>
      <name>AbstractCamera2D</name>
      <anchorfile>namespaceMagnum_1_1SceneGraph.html</anchorfile>
      <anchor>a882e1113034938dcbd6eb08268183cd8</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>BasicCamera3D&lt; T &gt;</type>
      <name>AbstractBasicCamera3D</name>
      <anchorfile>namespaceMagnum_1_1SceneGraph.html</anchorfile>
      <anchor>a37820e7de739b0036a055588bb375a0e</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Camera3D</type>
      <name>AbstractCamera3D</name>
      <anchorfile>namespaceMagnum_1_1SceneGraph.html</anchorfile>
      <anchor>abba385b530e740748fc0afc81d784339</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Containers::EnumSet&lt; CachedTransformation &gt;</type>
      <name>CachedTransformations</name>
      <anchorfile>namespaceMagnum_1_1SceneGraph.html</anchorfile>
      <anchor>af9e8bdf2e2bab5a58cfc05e274225393</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>AbstractFeature&lt; 2, T &gt;</type>
      <name>AbstractBasicFeature2D</name>
      <anchorfile>namespaceMagnum_1_1SceneGraph.html</anchorfile>
      <anchor>a6efac1307c51ae050f83653c2bf29e06</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>AbstractBasicFeature2D&lt; Float &gt;</type>
      <name>AbstractFeature2D</name>
      <anchorfile>namespaceMagnum_1_1SceneGraph.html</anchorfile>
      <anchor>a80fc83e5625dfc7a52d778b5a20b7062</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>AbstractFeature&lt; 3, T &gt;</type>
      <name>AbstractBasicFeature3D</name>
      <anchorfile>namespaceMagnum_1_1SceneGraph.html</anchorfile>
      <anchor>a7add6ebdd4b5aecd49d9edd9d49486b8</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>AbstractBasicFeature3D&lt; Float &gt;</type>
      <name>AbstractFeature3D</name>
      <anchorfile>namespaceMagnum_1_1SceneGraph.html</anchorfile>
      <anchor>aed6f17d57d2ade33c8f93c725dadd724</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>AbstractGroupedFeature&lt; 2, Derived, T &gt;</type>
      <name>AbstractBasicGroupedFeature2D</name>
      <anchorfile>namespaceMagnum_1_1SceneGraph.html</anchorfile>
      <anchor>ab7691a7938394382e821286ef7fa9ab9</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>AbstractBasicGroupedFeature2D&lt; Derived, Float &gt;</type>
      <name>AbstractGroupedFeature2D</name>
      <anchorfile>namespaceMagnum_1_1SceneGraph.html</anchorfile>
      <anchor>a5ec5d07043e93ec9fe40dbc8f0cbfc74</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>AbstractGroupedFeature&lt; 3, Derived, T &gt;</type>
      <name>AbstractBasicGroupedFeature3D</name>
      <anchorfile>namespaceMagnum_1_1SceneGraph.html</anchorfile>
      <anchor>a1b1dd3ce224e183c55ec13cb8643adb2</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>AbstractBasicGroupedFeature3D&lt; Derived, Float &gt;</type>
      <name>AbstractGroupedFeature3D</name>
      <anchorfile>namespaceMagnum_1_1SceneGraph.html</anchorfile>
      <anchor>ac93c4664dee5dc5d5d2661b34cd5533f</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>AbstractObject&lt; 2, T &gt;</type>
      <name>AbstractBasicObject2D</name>
      <anchorfile>namespaceMagnum_1_1SceneGraph.html</anchorfile>
      <anchor>a9ba6f965849b32eec2a4bf716f57c0f6</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>AbstractBasicObject2D&lt; Float &gt;</type>
      <name>AbstractObject2D</name>
      <anchorfile>namespaceMagnum_1_1SceneGraph.html</anchorfile>
      <anchor>a4dc2f3b5d4fa5de326d57fd394bc02f8</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>AbstractObject&lt; 3, T &gt;</type>
      <name>AbstractBasicObject3D</name>
      <anchorfile>namespaceMagnum_1_1SceneGraph.html</anchorfile>
      <anchor>afcd46917ca137989e38c5f756a1d020b</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>AbstractBasicObject3D&lt; Float &gt;</type>
      <name>AbstractObject3D</name>
      <anchorfile>namespaceMagnum_1_1SceneGraph.html</anchorfile>
      <anchor>aebce906e64701c696f6ee3b2b01ae348</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>AbstractTransformation&lt; 2, T &gt;</type>
      <name>AbstractBasicTransformation2D</name>
      <anchorfile>namespaceMagnum_1_1SceneGraph.html</anchorfile>
      <anchor>a65b3d0e7b1a414d7ac410513ef4798ee</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>AbstractBasicTransformation2D&lt; Float &gt;</type>
      <name>AbstractTransformation2D</name>
      <anchorfile>namespaceMagnum_1_1SceneGraph.html</anchorfile>
      <anchor>a1800f21d9f91b1e58cbe5308de5b092e</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>AbstractTransformation&lt; 3, T &gt;</type>
      <name>AbstractBasicTransformation3D</name>
      <anchorfile>namespaceMagnum_1_1SceneGraph.html</anchorfile>
      <anchor>ad5d334b1e544a9f8f1f5cdb3b7dbcc00</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>AbstractBasicTransformation3D&lt; Float &gt;</type>
      <name>AbstractTransformation3D</name>
      <anchorfile>namespaceMagnum_1_1SceneGraph.html</anchorfile>
      <anchor>a0701dfa4ff4ba88521d526036e86a04b</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>AbstractTranslation&lt; 2, T, TranslationType &gt;</type>
      <name>AbstractBasicTranslation2D</name>
      <anchorfile>namespaceMagnum_1_1SceneGraph.html</anchorfile>
      <anchor>afa2b93c31678db7e215fe91a996a9399</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>AbstractBasicTranslation2D&lt; Float &gt;</type>
      <name>AbstractTranslation2D</name>
      <anchorfile>namespaceMagnum_1_1SceneGraph.html</anchorfile>
      <anchor>a1ecd42490b0d1037158feea72e9377f9</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>AbstractTranslation&lt; 3, T, TranslationType &gt;</type>
      <name>AbstractBasicTranslation3D</name>
      <anchorfile>namespaceMagnum_1_1SceneGraph.html</anchorfile>
      <anchor>abf1c3f934c602108fe07d8ee2639ba70</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>AbstractBasicTranslation3D&lt; Float &gt;</type>
      <name>AbstractTranslation3D</name>
      <anchorfile>namespaceMagnum_1_1SceneGraph.html</anchorfile>
      <anchor>af6747f94f4a4dc7bd37cc73f28d31a83</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>AbstractBasicTranslationRotation2D&lt; Float &gt;</type>
      <name>AbstractTranslationRotation2D</name>
      <anchorfile>namespaceMagnum_1_1SceneGraph.html</anchorfile>
      <anchor>a6598fdbed8b32af6f4b2381694cc507f</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>AbstractBasicTranslationRotation3D&lt; Float &gt;</type>
      <name>AbstractTranslationRotation3D</name>
      <anchorfile>namespaceMagnum_1_1SceneGraph.html</anchorfile>
      <anchor>a8b9e42c74f3ebd9a6ce994d5c8c3128c</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>AbstractBasicTranslationRotationScaling2D&lt; Float &gt;</type>
      <name>AbstractTranslationRotationScaling2D</name>
      <anchorfile>namespaceMagnum_1_1SceneGraph.html</anchorfile>
      <anchor>a8f9ce60d44dde9dee80e1a70b6a4e3f6</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>AbstractBasicTranslationRotationScaling3D&lt; Float &gt;</type>
      <name>AbstractTranslationRotationScaling3D</name>
      <anchorfile>namespaceMagnum_1_1SceneGraph.html</anchorfile>
      <anchor>aa6ba8ecac0bb59927cd34182c0fd8968</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Animable&lt; 2, T &gt;</type>
      <name>BasicAnimable2D</name>
      <anchorfile>namespaceMagnum_1_1SceneGraph.html</anchorfile>
      <anchor>af507ef77ec969a61d24f416fac00ec41</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>BasicAnimable2D&lt; Float &gt;</type>
      <name>Animable2D</name>
      <anchorfile>namespaceMagnum_1_1SceneGraph.html</anchorfile>
      <anchor>aee309216aa9fd6b5e622e17f53db835a</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Animable&lt; 3, T &gt;</type>
      <name>BasicAnimable3D</name>
      <anchorfile>namespaceMagnum_1_1SceneGraph.html</anchorfile>
      <anchor>a0d2fdb55f25032894b12f19cc48566c0</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>BasicAnimable3D&lt; Float &gt;</type>
      <name>Animable3D</name>
      <anchorfile>namespaceMagnum_1_1SceneGraph.html</anchorfile>
      <anchor>aa0f108ba69b680383c4352a65405453f</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>AnimableGroup&lt; 2, T &gt;</type>
      <name>BasicAnimableGroup2D</name>
      <anchorfile>namespaceMagnum_1_1SceneGraph.html</anchorfile>
      <anchor>aa2109eabf251858d7cb0b4520420ecf8</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>BasicAnimableGroup2D&lt; Float &gt;</type>
      <name>AnimableGroup2D</name>
      <anchorfile>namespaceMagnum_1_1SceneGraph.html</anchorfile>
      <anchor>a711874b097520d09e5c281122b03edcf</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>AnimableGroup&lt; 3, T &gt;</type>
      <name>BasicAnimableGroup3D</name>
      <anchorfile>namespaceMagnum_1_1SceneGraph.html</anchorfile>
      <anchor>abc62975ccc8fbb63942d506501a43a8b</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>BasicAnimableGroup3D&lt; Float &gt;</type>
      <name>AnimableGroup3D</name>
      <anchorfile>namespaceMagnum_1_1SceneGraph.html</anchorfile>
      <anchor>a89361d9c4cb88eb0bfdfbcaad04146b0</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Camera&lt; 2, T &gt;</type>
      <name>BasicCamera2D</name>
      <anchorfile>namespaceMagnum_1_1SceneGraph.html</anchorfile>
      <anchor>a66914ceee1ef23ea459cedc8ab32ab01</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>BasicCamera2D&lt; Float &gt;</type>
      <name>Camera2D</name>
      <anchorfile>namespaceMagnum_1_1SceneGraph.html</anchorfile>
      <anchor>ad67b34a37740d83f11e40497efebb550</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Camera&lt; 3, T &gt;</type>
      <name>BasicCamera3D</name>
      <anchorfile>namespaceMagnum_1_1SceneGraph.html</anchorfile>
      <anchor>a1549f0fb851b0017f5cea510529215ce</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>BasicCamera3D&lt; Float &gt;</type>
      <name>Camera3D</name>
      <anchorfile>namespaceMagnum_1_1SceneGraph.html</anchorfile>
      <anchor>ac55e4b88d38c97efac6adff0d0d619e8</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Drawable&lt; 2, T &gt;</type>
      <name>BasicDrawable2D</name>
      <anchorfile>namespaceMagnum_1_1SceneGraph.html</anchorfile>
      <anchor>afd9e085ba01b246e3483e632ce3db6e0</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>BasicDrawable2D&lt; Float &gt;</type>
      <name>Drawable2D</name>
      <anchorfile>namespaceMagnum_1_1SceneGraph.html</anchorfile>
      <anchor>ae43f3318da2b84a600394fb0bc5c562e</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Drawable&lt; 3, T &gt;</type>
      <name>BasicDrawable3D</name>
      <anchorfile>namespaceMagnum_1_1SceneGraph.html</anchorfile>
      <anchor>ae102f6a45fd81072b42ae43a4ddc441d</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>BasicDrawable3D&lt; Float &gt;</type>
      <name>Drawable3D</name>
      <anchorfile>namespaceMagnum_1_1SceneGraph.html</anchorfile>
      <anchor>ab09a7cdf66c68b65728d2781312e6a63</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>FeatureGroup&lt; dimensions, Drawable&lt; dimensions, T &gt;, T &gt;</type>
      <name>DrawableGroup</name>
      <anchorfile>namespaceMagnum_1_1SceneGraph.html</anchorfile>
      <anchor>aab4b9fe25aa18fcb51f5b4d254784da8</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>DrawableGroup&lt; 2, T &gt;</type>
      <name>BasicDrawableGroup2D</name>
      <anchorfile>namespaceMagnum_1_1SceneGraph.html</anchorfile>
      <anchor>a3a864e18201ce23953ab813f8b251e10</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>BasicDrawableGroup2D&lt; Float &gt;</type>
      <name>DrawableGroup2D</name>
      <anchorfile>namespaceMagnum_1_1SceneGraph.html</anchorfile>
      <anchor>a1bc520b13eb6055504cb2d8ee805cb2c</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>DrawableGroup&lt; 3, T &gt;</type>
      <name>BasicDrawableGroup3D</name>
      <anchorfile>namespaceMagnum_1_1SceneGraph.html</anchorfile>
      <anchor>af290740590e7d443cc28552ca6ac1ffa</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>BasicDrawableGroup3D&lt; Float &gt;</type>
      <name>DrawableGroup3D</name>
      <anchorfile>namespaceMagnum_1_1SceneGraph.html</anchorfile>
      <anchor>a578886bc73264432278d65147faddee3</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>BasicDualComplexTransformation&lt; Float &gt;</type>
      <name>DualComplexTransformation</name>
      <anchorfile>namespaceMagnum_1_1SceneGraph.html</anchorfile>
      <anchor>ac9f4aaec12a825842009426a76092659</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>BasicDualQuaternionTransformation&lt; Float &gt;</type>
      <name>DualQuaternionTransformation</name>
      <anchorfile>namespaceMagnum_1_1SceneGraph.html</anchorfile>
      <anchor>ace6339f6ce9e8983c8d02c7219419f3d</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>FeatureGroup&lt; 2, Feature, T &gt;</type>
      <name>BasicFeatureGroup2D</name>
      <anchorfile>namespaceMagnum_1_1SceneGraph.html</anchorfile>
      <anchor>addfbae050115f381b9e80540547c579b</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>BasicFeatureGroup2D&lt; Feature, Float &gt;</type>
      <name>FeatureGroup2D</name>
      <anchorfile>namespaceMagnum_1_1SceneGraph.html</anchorfile>
      <anchor>aaac5484c4293df2de98534d4cf5d6faa</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>FeatureGroup&lt; 3, Feature, T &gt;</type>
      <name>BasicFeatureGroup3D</name>
      <anchorfile>namespaceMagnum_1_1SceneGraph.html</anchorfile>
      <anchor>a0664ea4967264026b00a3a5fe1af06c8</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>BasicFeatureGroup3D&lt; Feature, Float &gt;</type>
      <name>FeatureGroup3D</name>
      <anchorfile>namespaceMagnum_1_1SceneGraph.html</anchorfile>
      <anchor>a799a96fb4d84e3e6bd549a54e7b60816</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>BasicMatrixTransformation2D&lt; Float &gt;</type>
      <name>MatrixTransformation2D</name>
      <anchorfile>namespaceMagnum_1_1SceneGraph.html</anchorfile>
      <anchor>af0e9bde86c8d6acfa18111bb38eb9bda</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>BasicMatrixTransformation3D&lt; Float &gt;</type>
      <name>MatrixTransformation3D</name>
      <anchorfile>namespaceMagnum_1_1SceneGraph.html</anchorfile>
      <anchor>ae72540433b3a42ea312c5ec5c70abc6c</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>BasicRigidMatrixTransformation2D&lt; Float &gt;</type>
      <name>RigidMatrixTransformation2D</name>
      <anchorfile>namespaceMagnum_1_1SceneGraph.html</anchorfile>
      <anchor>afea6d7bb24ebadabee2446a2ef48cdc3</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>BasicRigidMatrixTransformation3D&lt; Float &gt;</type>
      <name>RigidMatrixTransformation3D</name>
      <anchorfile>namespaceMagnum_1_1SceneGraph.html</anchorfile>
      <anchor>a3d123239f654f6cfe87cd3012f1686dc</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>TranslationTransformation&lt; 2, T, TranslationType &gt;</type>
      <name>BasicTranslationTransformation2D</name>
      <anchorfile>namespaceMagnum_1_1SceneGraph.html</anchorfile>
      <anchor>a768dfc3a71f8ce15d89126b17dbbcd4e</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>BasicTranslationTransformation2D&lt; Float &gt;</type>
      <name>TranslationTransformation2D</name>
      <anchorfile>namespaceMagnum_1_1SceneGraph.html</anchorfile>
      <anchor>a36feaa72147fd92f3d53923d95c2d69c</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>TranslationTransformation&lt; 3, T, TranslationType &gt;</type>
      <name>BasicTranslationTransformation3D</name>
      <anchorfile>namespaceMagnum_1_1SceneGraph.html</anchorfile>
      <anchor>a1f4a55c7b170b3f3245dbbbc1b136bee</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>BasicTranslationTransformation3D&lt; Float &gt;</type>
      <name>TranslationTransformation3D</name>
      <anchorfile>namespaceMagnum_1_1SceneGraph.html</anchorfile>
      <anchor>a8f23c88e7ff2cb5a2dd3d19f3e6790a2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>CachedTransformation</name>
      <anchorfile>namespaceMagnum_1_1SceneGraph.html</anchorfile>
      <anchor>a86cf8735be255da54d15f5c6eff54078</anchor>
      <arglist></arglist>
      <enumvalue file="namespaceMagnum_1_1SceneGraph.html" anchor="a86cf8735be255da54d15f5c6eff54078ab51ca26c6c89cfc9bec338f7a0d3e0c8">Absolute</enumvalue>
      <enumvalue file="namespaceMagnum_1_1SceneGraph.html" anchor="a86cf8735be255da54d15f5c6eff54078ad0cf2589edf19b963da1550d2a26009b">InvertedAbsolute</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>TransformationType</name>
      <anchorfile>namespaceMagnum_1_1SceneGraph.html</anchorfile>
      <anchor>a7998dbf90728d0324d9e755c144e6ba2</anchor>
      <arglist></arglist>
      <enumvalue file="namespaceMagnum_1_1SceneGraph.html" anchor="a7998dbf90728d0324d9e755c144e6ba2a4cc6684df7b4a92b1dec6fce3264fac8">Global</enumvalue>
      <enumvalue file="namespaceMagnum_1_1SceneGraph.html" anchor="a7998dbf90728d0324d9e755c144e6ba2a509820290d57f333403f490dde7316f4">Local</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>AnimationState</name>
      <anchorfile>namespaceMagnum_1_1SceneGraph.html</anchorfile>
      <anchor>a94815106daa99f9642ee24afd40982e2</anchor>
      <arglist></arglist>
      <enumvalue file="namespaceMagnum_1_1SceneGraph.html" anchor="a94815106daa99f9642ee24afd40982e2ac23e2b09ebe6bf4cb5e2a9abe85c0be2">Stopped</enumvalue>
      <enumvalue file="namespaceMagnum_1_1SceneGraph.html" anchor="a94815106daa99f9642ee24afd40982e2ae99180abf47a8b3a856e0bcb2656990a">Paused</enumvalue>
      <enumvalue file="namespaceMagnum_1_1SceneGraph.html" anchor="a94815106daa99f9642ee24afd40982e2a5bda814c4aedb126839228f1a3d92f09">Running</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>AspectRatioPolicy</name>
      <anchorfile>namespaceMagnum_1_1SceneGraph.html</anchorfile>
      <anchor>ae75dff003c61f0268e0b108ea26db6a9</anchor>
      <arglist></arglist>
      <enumvalue file="namespaceMagnum_1_1SceneGraph.html" anchor="ae75dff003c61f0268e0b108ea26db6a9a98c2e7bea0117de839fdbbcfdedc9060">NotPreserved</enumvalue>
      <enumvalue file="namespaceMagnum_1_1SceneGraph.html" anchor="ae75dff003c61f0268e0b108ea26db6a9a3bc026b815790a05493fa56fc4b8d8bd">Extend</enumvalue>
      <enumvalue file="namespaceMagnum_1_1SceneGraph.html" anchor="ae75dff003c61f0268e0b108ea26db6a9a6adac929b615be2e0d213eb9d1ad15ba">Clip</enumvalue>
    </member>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceMagnum_1_1SceneGraph.html</anchorfile>
      <anchor>ab2553f73b3bea3c12ede8a39943e476b</anchor>
      <arglist>(Debug &amp;debug, AnimationState value)</arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>Magnum::Shaders</name>
    <filename>namespaceMagnum_1_1Shaders.html</filename>
    <class kind="class">Magnum::Shaders::AbstractVector</class>
    <class kind="class">Magnum::Shaders::DistanceFieldVector</class>
    <class kind="class">Magnum::Shaders::Flat</class>
    <class kind="struct">Magnum::Shaders::Generic</class>
    <class kind="class">Magnum::Shaders::MeshVisualizer</class>
    <class kind="class">Magnum::Shaders::Phong</class>
    <class kind="class">Magnum::Shaders::Vector</class>
    <class kind="class">Magnum::Shaders::VertexColor</class>
    <member kind="typedef">
      <type>AbstractVector&lt; 2 &gt;</type>
      <name>AbstractVector2D</name>
      <anchorfile>namespaceMagnum_1_1Shaders.html</anchorfile>
      <anchor>a055a4b60fca99365039c226e3e7de622</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>AbstractVector&lt; 3 &gt;</type>
      <name>AbstractVector3D</name>
      <anchorfile>namespaceMagnum_1_1Shaders.html</anchorfile>
      <anchor>aa9e326f4cddc22d9724249d2c8634cfd</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>DistanceFieldVector&lt; 2 &gt;</type>
      <name>DistanceFieldVector2D</name>
      <anchorfile>namespaceMagnum_1_1Shaders.html</anchorfile>
      <anchor>a82d25087393b5cc2cdb0af02b930ffb7</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>DistanceFieldVector&lt; 3 &gt;</type>
      <name>DistanceFieldVector3D</name>
      <anchorfile>namespaceMagnum_1_1Shaders.html</anchorfile>
      <anchor>a516b8c2f61f5e9e610aedf7328e95cb7</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Flat&lt; 2 &gt;</type>
      <name>Flat2D</name>
      <anchorfile>namespaceMagnum_1_1Shaders.html</anchorfile>
      <anchor>ac2923bd6a72e0b094f2bf07131932169</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Flat&lt; 3 &gt;</type>
      <name>Flat3D</name>
      <anchorfile>namespaceMagnum_1_1Shaders.html</anchorfile>
      <anchor>aa6668d0744cbc4ef218d1df107aca861</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Generic&lt; 2 &gt;</type>
      <name>Generic2D</name>
      <anchorfile>namespaceMagnum_1_1Shaders.html</anchorfile>
      <anchor>a11fcc97e4ebd48ee9038fefecccdf45c</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Generic&lt; 3 &gt;</type>
      <name>Generic3D</name>
      <anchorfile>namespaceMagnum_1_1Shaders.html</anchorfile>
      <anchor>adb3c39d719d87a10a28481df319797a8</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Vector&lt; 2 &gt;</type>
      <name>Vector2D</name>
      <anchorfile>namespaceMagnum_1_1Shaders.html</anchorfile>
      <anchor>a9da9270650198bf41711864da95433e3</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Vector&lt; 3 &gt;</type>
      <name>Vector3D</name>
      <anchorfile>namespaceMagnum_1_1Shaders.html</anchorfile>
      <anchor>ad52ea30fd146f95b5b98a8100f945776</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>VertexColor&lt; 2 &gt;</type>
      <name>VertexColor2D</name>
      <anchorfile>namespaceMagnum_1_1Shaders.html</anchorfile>
      <anchor>a2433f1de6a4cba48f5c7f2b8a6586b96</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>VertexColor&lt; 3 &gt;</type>
      <name>VertexColor3D</name>
      <anchorfile>namespaceMagnum_1_1Shaders.html</anchorfile>
      <anchor>a476d46cfe6e4a6287f3006f81922a858</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>Magnum::Shapes</name>
    <filename>namespaceMagnum_1_1Shapes.html</filename>
    <class kind="class">Magnum::Shapes::AbstractShape</class>
    <class kind="class">Magnum::Shapes::AxisAlignedBox</class>
    <class kind="class">Magnum::Shapes::Box</class>
    <class kind="class">Magnum::Shapes::Capsule</class>
    <class kind="class">Magnum::Shapes::Collision</class>
    <class kind="class">Magnum::Shapes::Composition</class>
    <class kind="class">Magnum::Shapes::Cylinder</class>
    <class kind="class">Magnum::Shapes::InvertedSphere</class>
    <class kind="class">Magnum::Shapes::Line</class>
    <class kind="class">Magnum::Shapes::LineSegment</class>
    <class kind="class">Magnum::Shapes::Plane</class>
    <class kind="class">Magnum::Shapes::Point</class>
    <class kind="class">Magnum::Shapes::Shape</class>
    <class kind="class">Magnum::Shapes::ShapeGroup</class>
    <class kind="class">Magnum::Shapes::Sphere</class>
    <member kind="typedef">
      <type>AbstractShape&lt; 2 &gt;</type>
      <name>AbstractShape2D</name>
      <anchorfile>namespaceMagnum_1_1Shapes.html</anchorfile>
      <anchor>a4e9bd6031c70fccf84a9661aaccb9c2a</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>AbstractShape&lt; 3 &gt;</type>
      <name>AbstractShape3D</name>
      <anchorfile>namespaceMagnum_1_1Shapes.html</anchorfile>
      <anchor>a589b851550fda74ad7592f9082b26faf</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>AxisAlignedBox&lt; 2 &gt;</type>
      <name>AxisAlignedBox2D</name>
      <anchorfile>namespaceMagnum_1_1Shapes.html</anchorfile>
      <anchor>af671fda1e375e094c0a1b50ff53827e3</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>AxisAlignedBox&lt; 3 &gt;</type>
      <name>AxisAlignedBox3D</name>
      <anchorfile>namespaceMagnum_1_1Shapes.html</anchorfile>
      <anchor>a6611bb4233c9ec6413a27dcb3e9a9edb</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Box&lt; 2 &gt;</type>
      <name>Box2D</name>
      <anchorfile>namespaceMagnum_1_1Shapes.html</anchorfile>
      <anchor>a7065289e32f576d8a0e95e928ba11ab7</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Box&lt; 3 &gt;</type>
      <name>Box3D</name>
      <anchorfile>namespaceMagnum_1_1Shapes.html</anchorfile>
      <anchor>ac2cbcad614385662ad4beb489103322c</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Capsule&lt; 2 &gt;</type>
      <name>Capsule2D</name>
      <anchorfile>namespaceMagnum_1_1Shapes.html</anchorfile>
      <anchor>a49c72e6f71ae4286014afd8959554f8f</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Capsule&lt; 3 &gt;</type>
      <name>Capsule3D</name>
      <anchorfile>namespaceMagnum_1_1Shapes.html</anchorfile>
      <anchor>a8907faf93164878a8b75181845a72599</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Collision&lt; 2 &gt;</type>
      <name>Collision2D</name>
      <anchorfile>namespaceMagnum_1_1Shapes.html</anchorfile>
      <anchor>ab42be56c2cbaa9fb9d853e1925cfc942</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Collision&lt; 3 &gt;</type>
      <name>Collision3D</name>
      <anchorfile>namespaceMagnum_1_1Shapes.html</anchorfile>
      <anchor>aad83dc8f52a9c5505a631895ccc783a7</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Composition&lt; 2 &gt;</type>
      <name>Composition2D</name>
      <anchorfile>namespaceMagnum_1_1Shapes.html</anchorfile>
      <anchor>aab6bffea5f17a4c03028ba6df318978f</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Composition&lt; 3 &gt;</type>
      <name>Composition3D</name>
      <anchorfile>namespaceMagnum_1_1Shapes.html</anchorfile>
      <anchor>afbbc5e4d464900be422ef093f835174f</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Cylinder&lt; 2 &gt;</type>
      <name>Cylinder2D</name>
      <anchorfile>namespaceMagnum_1_1Shapes.html</anchorfile>
      <anchor>a69e19df0c90bda9b3a8b94060d09b9e4</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Cylinder&lt; 3 &gt;</type>
      <name>Cylinder3D</name>
      <anchorfile>namespaceMagnum_1_1Shapes.html</anchorfile>
      <anchor>ae610d08005a9a849c13674cb039c0e6d</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Line&lt; 2 &gt;</type>
      <name>Line2D</name>
      <anchorfile>namespaceMagnum_1_1Shapes.html</anchorfile>
      <anchor>a95d1765b3254cb2ff8a8a947c7e5bd12</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Line&lt; 3 &gt;</type>
      <name>Line3D</name>
      <anchorfile>namespaceMagnum_1_1Shapes.html</anchorfile>
      <anchor>addab11a15ce16cba2e73cdc924d50ed1</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>LineSegment&lt; 2 &gt;</type>
      <name>LineSegment2D</name>
      <anchorfile>namespaceMagnum_1_1Shapes.html</anchorfile>
      <anchor>a73a4ce53fdcd2df8d86e3ebcd7290155</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>LineSegment&lt; 3 &gt;</type>
      <name>LineSegment3D</name>
      <anchorfile>namespaceMagnum_1_1Shapes.html</anchorfile>
      <anchor>a1db64426401b7bf7cf8953324625fd79</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Point&lt; 2 &gt;</type>
      <name>Point2D</name>
      <anchorfile>namespaceMagnum_1_1Shapes.html</anchorfile>
      <anchor>a0f6c4e41cbb0354048a669cd8e08d93c</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Point&lt; 3 &gt;</type>
      <name>Point3D</name>
      <anchorfile>namespaceMagnum_1_1Shapes.html</anchorfile>
      <anchor>a5f04d8003aaee50f746fdcfada20c2d5</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>ShapeGroup&lt; 2 &gt;</type>
      <name>ShapeGroup2D</name>
      <anchorfile>namespaceMagnum_1_1Shapes.html</anchorfile>
      <anchor>abf008c2731d6a6746882143df020136b</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>ShapeGroup&lt; 3 &gt;</type>
      <name>ShapeGroup3D</name>
      <anchorfile>namespaceMagnum_1_1Shapes.html</anchorfile>
      <anchor>ab1ff04fca24ca9c36a1ee80b80fc0489</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Sphere&lt; 2 &gt;</type>
      <name>Sphere2D</name>
      <anchorfile>namespaceMagnum_1_1Shapes.html</anchorfile>
      <anchor>a08c1fd6379b146defeb4d94568596c06</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Sphere&lt; 3 &gt;</type>
      <name>Sphere3D</name>
      <anchorfile>namespaceMagnum_1_1Shapes.html</anchorfile>
      <anchor>a21ba78b6c1e081d95f2a294f0731ee64</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>InvertedSphere&lt; 2 &gt;</type>
      <name>InvertedSphere2D</name>
      <anchorfile>namespaceMagnum_1_1Shapes.html</anchorfile>
      <anchor>a626326e606fd477e0d17423c241a5424</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>InvertedSphere&lt; 3 &gt;</type>
      <name>InvertedSphere3D</name>
      <anchorfile>namespaceMagnum_1_1Shapes.html</anchorfile>
      <anchor>a6ed406193adc0e3cea8d58aaea086bd4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>CompositionOperation</name>
      <anchorfile>namespaceMagnum_1_1Shapes.html</anchorfile>
      <anchor>ad8f610d090659171824e09764135758a</anchor>
      <arglist></arglist>
      <enumvalue file="namespaceMagnum_1_1Shapes.html" anchor="ad8f610d090659171824e09764135758aaa74c05d080620f087c4e523977230666">Not</enumvalue>
      <enumvalue file="namespaceMagnum_1_1Shapes.html" anchor="ad8f610d090659171824e09764135758aac33315685a0cba3ce53be378b3c7874b">And</enumvalue>
      <enumvalue file="namespaceMagnum_1_1Shapes.html" anchor="ad8f610d090659171824e09764135758aa3a2d5fe857d8f9541136a124c2edec6c">Or</enumvalue>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator%</name>
      <anchorfile>namespaceMagnum_1_1Shapes.html</anchorfile>
      <anchor>aa36acc3128bae09e1d48650ea0cdf860</anchor>
      <arglist>(const Point&lt; dimensions &gt; &amp;a, const AxisAlignedBox&lt; dimensions &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator%</name>
      <anchorfile>namespaceMagnum_1_1Shapes.html</anchorfile>
      <anchor>afe98277240394e274783626ac4420be1</anchor>
      <arglist>(const Point&lt; dimensions &gt; &amp;a, const Capsule&lt; dimensions &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator%</name>
      <anchorfile>namespaceMagnum_1_1Shapes.html</anchorfile>
      <anchor>a839afd5e87c4726add6835ee314e16d0</anchor>
      <arglist>(const Sphere&lt; dimensions &gt; &amp;a, const Capsule&lt; dimensions &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceMagnum_1_1Shapes.html</anchorfile>
      <anchor>aa9ee062abdca1154e74d91f50647abab</anchor>
      <arglist>(Debug &amp;debug, typename Composition&lt; dimensions &gt;::Type value)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator%</name>
      <anchorfile>namespaceMagnum_1_1Shapes.html</anchorfile>
      <anchor>a175327c41a1cf77afe589e9f75942a72</anchor>
      <arglist>(const Point&lt; dimensions &gt; &amp;a, const Cylinder&lt; dimensions &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator%</name>
      <anchorfile>namespaceMagnum_1_1Shapes.html</anchorfile>
      <anchor>a6a0f05766a099f0af8852618d356f970</anchor>
      <arglist>(const Sphere&lt; dimensions &gt; &amp;a, const Cylinder&lt; dimensions &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator%</name>
      <anchorfile>namespaceMagnum_1_1Shapes.html</anchorfile>
      <anchor>a736526a5aefa690b865f94d7c245915d</anchor>
      <arglist>(const Line3D &amp;a, const Plane &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator%</name>
      <anchorfile>namespaceMagnum_1_1Shapes.html</anchorfile>
      <anchor>a0d75eb4350f0ba0ea4c338c3dccbedf7</anchor>
      <arglist>(const LineSegment3D &amp;a, const Plane &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator%</name>
      <anchorfile>namespaceMagnum_1_1Shapes.html</anchorfile>
      <anchor>a8b92f87abd7091bb18db7d2a588bd554</anchor>
      <arglist>(const Point&lt; dimensions &gt; &amp;a, const Sphere&lt; dimensions &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator%</name>
      <anchorfile>namespaceMagnum_1_1Shapes.html</anchorfile>
      <anchor>a661f9284aa5c40e8252ac116f7eea984</anchor>
      <arglist>(const Point&lt; dimensions &gt; &amp;a, const InvertedSphere&lt; dimensions &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>Collision&lt; dimensions &gt;</type>
      <name>operator/</name>
      <anchorfile>namespaceMagnum_1_1Shapes.html</anchorfile>
      <anchor>ae83451d613cff0466b2781b751864d3f</anchor>
      <arglist>(const Point&lt; dimensions &gt; &amp;a, const Sphere&lt; dimensions &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>Collision&lt; dimensions &gt;</type>
      <name>operator/</name>
      <anchorfile>namespaceMagnum_1_1Shapes.html</anchorfile>
      <anchor>add309ac34f5949efeb8a3cc4a8c21b84</anchor>
      <arglist>(const Point&lt; dimensions &gt; &amp;a, const InvertedSphere&lt; dimensions &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator%</name>
      <anchorfile>namespaceMagnum_1_1Shapes.html</anchorfile>
      <anchor>adbea395f5e0ca3c22cdac2afbb7e7735</anchor>
      <arglist>(const Line&lt; dimensions &gt; &amp;a, const Sphere&lt; dimensions &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator%</name>
      <anchorfile>namespaceMagnum_1_1Shapes.html</anchorfile>
      <anchor>aadd405df874fc45add6de71c650de5a4</anchor>
      <arglist>(const LineSegment&lt; dimensions &gt; &amp;a, const Sphere&lt; dimensions &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator%</name>
      <anchorfile>namespaceMagnum_1_1Shapes.html</anchorfile>
      <anchor>ac7f0f50e112678da6e80ba5c5eef3e51</anchor>
      <arglist>(const Sphere&lt; dimensions &gt; &amp;a, const InvertedSphere&lt; dimensions &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>Collision&lt; dimensions &gt;</type>
      <name>operator/</name>
      <anchorfile>namespaceMagnum_1_1Shapes.html</anchorfile>
      <anchor>ae54fc2987b79b7716f336df639814933</anchor>
      <arglist>(const Sphere&lt; dimensions &gt; &amp;a, const InvertedSphere&lt; dimensions &gt; &amp;b)</arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>Magnum::Text</name>
    <filename>namespaceMagnum_1_1Text.html</filename>
    <class kind="class">Magnum::Text::AbstractFont</class>
    <class kind="class">Magnum::Text::AbstractFontConverter</class>
    <class kind="class">Magnum::Text::AbstractLayouter</class>
    <class kind="class">Magnum::Text::AbstractRenderer</class>
    <class kind="class">Magnum::Text::DistanceFieldGlyphCache</class>
    <class kind="class">Magnum::Text::FreeTypeFont</class>
    <class kind="class">Magnum::Text::GlyphCache</class>
    <class kind="class">Magnum::Text::HarfBuzzFont</class>
    <class kind="class">Magnum::Text::MagnumFont</class>
    <class kind="class">Magnum::Text::MagnumFontConverter</class>
    <class kind="class">Magnum::Text::Renderer</class>
    <class kind="class">Magnum::Text::StbTrueTypeFont</class>
    <member kind="typedef">
      <type>Renderer&lt; 2 &gt;</type>
      <name>Renderer2D</name>
      <anchorfile>namespaceMagnum_1_1Text.html</anchorfile>
      <anchor>a2410d31063c8db63437a8cc44ff84e8b</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Renderer&lt; 3 &gt;</type>
      <name>Renderer3D</name>
      <anchorfile>namespaceMagnum_1_1Text.html</anchorfile>
      <anchor>a4b69f1bb3ee0486ceed6c41cfebfcb81</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>Alignment</name>
      <anchorfile>namespaceMagnum_1_1Text.html</anchorfile>
      <anchor>afe5ab4c9617fdc70eefe5b871e5ee81b</anchor>
      <arglist></arglist>
      <enumvalue file="namespaceMagnum_1_1Text.html" anchor="afe5ab4c9617fdc70eefe5b871e5ee81ba648fc4cad5ac4a6e2741b3983bbf942c">LineLeft</enumvalue>
      <enumvalue file="namespaceMagnum_1_1Text.html" anchor="afe5ab4c9617fdc70eefe5b871e5ee81bae184e1933ff72b6ac41649f71eb9fcac">LineCenter</enumvalue>
      <enumvalue file="namespaceMagnum_1_1Text.html" anchor="afe5ab4c9617fdc70eefe5b871e5ee81ba71d87665cdb4e7a2ac51d1a80f591939">LineRight</enumvalue>
      <enumvalue file="namespaceMagnum_1_1Text.html" anchor="afe5ab4c9617fdc70eefe5b871e5ee81ba1d536cb49605c6a39292c33cfc5e872a">MiddleLeft</enumvalue>
      <enumvalue file="namespaceMagnum_1_1Text.html" anchor="afe5ab4c9617fdc70eefe5b871e5ee81ba2096d77a6ee8ef295acbdc276773dd81">MiddleCenter</enumvalue>
      <enumvalue file="namespaceMagnum_1_1Text.html" anchor="afe5ab4c9617fdc70eefe5b871e5ee81ba3b9c2b3657981eb77a10390aa0e8c156">MiddleRight</enumvalue>
      <enumvalue file="namespaceMagnum_1_1Text.html" anchor="afe5ab4c9617fdc70eefe5b871e5ee81bab32beb056fbfe36afbabc6c88c81ab36">TopLeft</enumvalue>
      <enumvalue file="namespaceMagnum_1_1Text.html" anchor="afe5ab4c9617fdc70eefe5b871e5ee81ba91b8ede24b7f93a98ae4dcaade15d468">TopCenter</enumvalue>
      <enumvalue file="namespaceMagnum_1_1Text.html" anchor="afe5ab4c9617fdc70eefe5b871e5ee81ba1d85a557894c340c318493f33bfa8efb">TopRight</enumvalue>
      <enumvalue file="namespaceMagnum_1_1Text.html" anchor="afe5ab4c9617fdc70eefe5b871e5ee81ba77e7c1e9341efec9ff6b0fc8e5c8deda">LineCenterIntegral</enumvalue>
      <enumvalue file="namespaceMagnum_1_1Text.html" anchor="afe5ab4c9617fdc70eefe5b871e5ee81baef3f989c5b8b37ec01e0d588d00db0f3">MiddleLeftIntegral</enumvalue>
      <enumvalue file="namespaceMagnum_1_1Text.html" anchor="afe5ab4c9617fdc70eefe5b871e5ee81bafc989b7f4c3942a8d586054d11e9bf29">MiddleCenterIntegral</enumvalue>
      <enumvalue file="namespaceMagnum_1_1Text.html" anchor="afe5ab4c9617fdc70eefe5b871e5ee81baf4e3acd109cd0c34ceed8ed3e6b73846">MiddleRightIntegral</enumvalue>
    </member>
  </compound>
  <compound kind="namespace">
    <name>Magnum::TextureTools</name>
    <filename>namespaceMagnum_1_1TextureTools.html</filename>
    <member kind="function">
      <type>std::vector&lt; Range2Di &gt;</type>
      <name>atlas</name>
      <anchorfile>namespaceMagnum_1_1TextureTools.html</anchorfile>
      <anchor>af76cb9fcfc002d17f8ef57825015ba0e</anchor>
      <arglist>(const Vector2i &amp;atlasSize, const std::vector&lt; Vector2i &gt; &amp;sizes, const Vector2i &amp;padding=Vector2i())</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>distanceField</name>
      <anchorfile>namespaceMagnum_1_1TextureTools.html</anchorfile>
      <anchor>a91c52a5c8cd23540f80e8b153f51caeb</anchor>
      <arglist>(Texture2D &amp;input, Texture2D &amp;output, const Range2Di &amp;rectangle, Int radius, const Vector2i &amp;imageSize=Vector2i())</arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>Magnum::Trade</name>
    <filename>namespaceMagnum_1_1Trade.html</filename>
    <namespace>Magnum::Trade::OpenGex</namespace>
    <class kind="class">Magnum::Trade::AbstractImageConverter</class>
    <class kind="class">Magnum::Trade::AbstractImporter</class>
    <class kind="class">Magnum::Trade::AbstractMaterialData</class>
    <class kind="class">Magnum::Trade::AnyImageConverter</class>
    <class kind="class">Magnum::Trade::AnyImageImporter</class>
    <class kind="class">Magnum::Trade::AnySceneImporter</class>
    <class kind="class">Magnum::Trade::AssimpImporter</class>
    <class kind="class">Magnum::Trade::CameraData</class>
    <class kind="class">Magnum::Trade::ColladaImporter</class>
    <class kind="class">Magnum::Trade::DdsImporter</class>
    <class kind="class">Magnum::Trade::DevIlImageImporter</class>
    <class kind="class">Magnum::Trade::ImageData</class>
    <class kind="class">Magnum::Trade::JpegImporter</class>
    <class kind="class">Magnum::Trade::LightData</class>
    <class kind="class">Magnum::Trade::MeshData2D</class>
    <class kind="class">Magnum::Trade::MeshData3D</class>
    <class kind="class">Magnum::Trade::MeshObjectData2D</class>
    <class kind="class">Magnum::Trade::MeshObjectData3D</class>
    <class kind="class">Magnum::Trade::MiniExrImageConverter</class>
    <class kind="class">Magnum::Trade::ObjectData2D</class>
    <class kind="class">Magnum::Trade::ObjectData3D</class>
    <class kind="class">Magnum::Trade::ObjImporter</class>
    <class kind="class">Magnum::Trade::OpenGexImporter</class>
    <class kind="class">Magnum::Trade::PhongMaterialData</class>
    <class kind="class">Magnum::Trade::PngImageConverter</class>
    <class kind="class">Magnum::Trade::PngImporter</class>
    <class kind="class">Magnum::Trade::SceneData</class>
    <class kind="class">Magnum::Trade::StanfordImporter</class>
    <class kind="class">Magnum::Trade::StbImageConverter</class>
    <class kind="class">Magnum::Trade::StbImageImporter</class>
    <class kind="class">Magnum::Trade::TextureData</class>
    <class kind="struct">Magnum::Trade::TgaHeader</class>
    <class kind="class">Magnum::Trade::TgaImageConverter</class>
    <class kind="class">Magnum::Trade::TgaImporter</class>
    <member kind="typedef">
      <type>ImageData&lt; 1 &gt;</type>
      <name>ImageData1D</name>
      <anchorfile>namespaceMagnum_1_1Trade.html</anchorfile>
      <anchor>a000f4964aae4b1a8f17a0f22709c6b12</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>ImageData&lt; 2 &gt;</type>
      <name>ImageData2D</name>
      <anchorfile>namespaceMagnum_1_1Trade.html</anchorfile>
      <anchor>a45555303e00cf9d64cf942326bc6cbf6</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>ImageData&lt; 3 &gt;</type>
      <name>ImageData3D</name>
      <anchorfile>namespaceMagnum_1_1Trade.html</anchorfile>
      <anchor>a1b42de4e1c79ca544279bc36da5739d1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>MaterialType</name>
      <anchorfile>namespaceMagnum_1_1Trade.html</anchorfile>
      <anchor>a9e426ccb00311a951abde7d18ace1b7e</anchor>
      <arglist></arglist>
      <enumvalue file="namespaceMagnum_1_1Trade.html" anchor="a9e426ccb00311a951abde7d18ace1b7ea568fb6d547b4449c90057f8d4f76a838">Phong</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>ObjectInstanceType2D</name>
      <anchorfile>namespaceMagnum_1_1Trade.html</anchorfile>
      <anchor>aa708f15a256073a2edc089736614fb55</anchor>
      <arglist></arglist>
      <enumvalue file="namespaceMagnum_1_1Trade.html" anchor="aa708f15a256073a2edc089736614fb55a967d35e40f3f95b1f538bd248640bf3b">Camera</enumvalue>
      <enumvalue file="namespaceMagnum_1_1Trade.html" anchor="aa708f15a256073a2edc089736614fb55a710fdb6adb881b408116ef95335e1961">Mesh</enumvalue>
      <enumvalue file="namespaceMagnum_1_1Trade.html" anchor="aa708f15a256073a2edc089736614fb55ace2c8aed9c2fa0cfbed56cbda4d8bf07">Empty</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>ObjectInstanceType3D</name>
      <anchorfile>namespaceMagnum_1_1Trade.html</anchorfile>
      <anchor>a69823207d6668a086926bcdc5d1f4085</anchor>
      <arglist></arglist>
      <enumvalue file="namespaceMagnum_1_1Trade.html" anchor="a69823207d6668a086926bcdc5d1f4085a967d35e40f3f95b1f538bd248640bf3b">Camera</enumvalue>
      <enumvalue file="namespaceMagnum_1_1Trade.html" anchor="a69823207d6668a086926bcdc5d1f4085a9914a0ce04a7b7b6a8e39bec55064b82">Light</enumvalue>
      <enumvalue file="namespaceMagnum_1_1Trade.html" anchor="a69823207d6668a086926bcdc5d1f4085a710fdb6adb881b408116ef95335e1961">Mesh</enumvalue>
      <enumvalue file="namespaceMagnum_1_1Trade.html" anchor="a69823207d6668a086926bcdc5d1f4085ace2c8aed9c2fa0cfbed56cbda4d8bf07">Empty</enumvalue>
    </member>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceMagnum_1_1Trade.html</anchorfile>
      <anchor>aa496c4bdc948dbfd58efa04b130f0f52</anchor>
      <arglist>(Debug &amp;debug, MaterialType value)</arglist>
    </member>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceMagnum_1_1Trade.html</anchorfile>
      <anchor>a5d80f322fdf875dc5083443fad96e23c</anchor>
      <arglist>(Debug &amp;debug, LightData::Type value)</arglist>
    </member>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceMagnum_1_1Trade.html</anchorfile>
      <anchor>ae19c01b4e1bd6788833d78b25099ac94</anchor>
      <arglist>(Debug &amp;debug, ObjectInstanceType2D value)</arglist>
    </member>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceMagnum_1_1Trade.html</anchorfile>
      <anchor>ab281f59369e4880eeea1a482fd5eefa6</anchor>
      <arglist>(Debug &amp;debug, ObjectInstanceType3D value)</arglist>
    </member>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceMagnum_1_1Trade.html</anchorfile>
      <anchor>a5fb39c5f1a765358446a9ef3caa31682</anchor>
      <arglist>(Debug &amp;debug, TextureData::Type value)</arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>Magnum::Trade::OpenGex</name>
    <filename>namespaceMagnum_1_1Trade_1_1OpenGex.html</filename>
    <member kind="enumvalue">
      <name>Animation</name>
      <anchorfile>namespaceMagnum_1_1Trade_1_1OpenGex.html</anchorfile>
      <anchor>ac921a2ae190f4337dade6642d5b295afaf6304a6d8f2b01e13c2c03605012974f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Atten</name>
      <anchorfile>namespaceMagnum_1_1Trade_1_1OpenGex.html</anchorfile>
      <anchor>ac921a2ae190f4337dade6642d5b295afa3315a33f9cb5091a3b345490b505ad98</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BoneCountArray</name>
      <anchorfile>namespaceMagnum_1_1Trade_1_1OpenGex.html</anchorfile>
      <anchor>ac921a2ae190f4337dade6642d5b295afa5e03287e50a9f6c52a96e9640a421c39</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BoneIndexArray</name>
      <anchorfile>namespaceMagnum_1_1Trade_1_1OpenGex.html</anchorfile>
      <anchor>ac921a2ae190f4337dade6642d5b295afa714317d24ba7565cdf496364d16a9685</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BoneNode</name>
      <anchorfile>namespaceMagnum_1_1Trade_1_1OpenGex.html</anchorfile>
      <anchor>ac921a2ae190f4337dade6642d5b295afa7befe320b8fca7e7dcdec2b0f9d499e4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BoneRefArray</name>
      <anchorfile>namespaceMagnum_1_1Trade_1_1OpenGex.html</anchorfile>
      <anchor>ac921a2ae190f4337dade6642d5b295afa6812f44800f182c8e94f5491cac105c6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BoneWeightArray</name>
      <anchorfile>namespaceMagnum_1_1Trade_1_1OpenGex.html</anchorfile>
      <anchor>ac921a2ae190f4337dade6642d5b295afa56ee38e9394b75f64e62e6ced8742b54</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CameraNode</name>
      <anchorfile>namespaceMagnum_1_1Trade_1_1OpenGex.html</anchorfile>
      <anchor>ac921a2ae190f4337dade6642d5b295afa79f93a7971247339463c3443d84cc6ed</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CameraObject</name>
      <anchorfile>namespaceMagnum_1_1Trade_1_1OpenGex.html</anchorfile>
      <anchor>ac921a2ae190f4337dade6642d5b295afa9d30b4eba79b224629783fff2d715542</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Clip</name>
      <anchorfile>namespaceMagnum_1_1Trade_1_1OpenGex.html</anchorfile>
      <anchor>ac921a2ae190f4337dade6642d5b295afa5e5ba5fbc4f9f16da02dbc66e58e275a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Color</name>
      <anchorfile>namespaceMagnum_1_1Trade_1_1OpenGex.html</anchorfile>
      <anchor>ac921a2ae190f4337dade6642d5b295afaa305118a547fad84e384a955e9f0a1b1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Extension</name>
      <anchorfile>namespaceMagnum_1_1Trade_1_1OpenGex.html</anchorfile>
      <anchor>ac921a2ae190f4337dade6642d5b295afa449c75f33e58cc2eb597c310cfeb5fac</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>GeometryNode</name>
      <anchorfile>namespaceMagnum_1_1Trade_1_1OpenGex.html</anchorfile>
      <anchor>ac921a2ae190f4337dade6642d5b295afaa8b521e7303f947b6399cd3cd89add8d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>GeometryObject</name>
      <anchorfile>namespaceMagnum_1_1Trade_1_1OpenGex.html</anchorfile>
      <anchor>ac921a2ae190f4337dade6642d5b295afab9c0282c868cfceb40b18595ec09229e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>IndexArray</name>
      <anchorfile>namespaceMagnum_1_1Trade_1_1OpenGex.html</anchorfile>
      <anchor>ac921a2ae190f4337dade6642d5b295afa6f887a76d1a7c1feec058b6246e83416</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Key</name>
      <anchorfile>namespaceMagnum_1_1Trade_1_1OpenGex.html</anchorfile>
      <anchor>ac921a2ae190f4337dade6642d5b295afa6dad8335d3b0813d55a4c60ef049ffc8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>LightNode</name>
      <anchorfile>namespaceMagnum_1_1Trade_1_1OpenGex.html</anchorfile>
      <anchor>ac921a2ae190f4337dade6642d5b295afac8d133985294c96dff732ffbbee59552</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>LightObject</name>
      <anchorfile>namespaceMagnum_1_1Trade_1_1OpenGex.html</anchorfile>
      <anchor>ac921a2ae190f4337dade6642d5b295afa5de337af814f611451f4beeefdcc9da3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Material</name>
      <anchorfile>namespaceMagnum_1_1Trade_1_1OpenGex.html</anchorfile>
      <anchor>ac921a2ae190f4337dade6642d5b295afa2982962fd9e99b00b4359b514aee881a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MaterialRef</name>
      <anchorfile>namespaceMagnum_1_1Trade_1_1OpenGex.html</anchorfile>
      <anchor>ac921a2ae190f4337dade6642d5b295afaf39c57ecb85b2f39f559f692771ac749</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Mesh</name>
      <anchorfile>namespaceMagnum_1_1Trade_1_1OpenGex.html</anchorfile>
      <anchor>ac921a2ae190f4337dade6642d5b295afa6d661040b1fb0e10b974fe00b7bf3f8c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Metric</name>
      <anchorfile>namespaceMagnum_1_1Trade_1_1OpenGex.html</anchorfile>
      <anchor>ac921a2ae190f4337dade6642d5b295afa72fedae492949f109c5a671714ea11e6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Morph</name>
      <anchorfile>namespaceMagnum_1_1Trade_1_1OpenGex.html</anchorfile>
      <anchor>ac921a2ae190f4337dade6642d5b295afa8226a1c8b12b430b159901155419f1b8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MorphWeight</name>
      <anchorfile>namespaceMagnum_1_1Trade_1_1OpenGex.html</anchorfile>
      <anchor>ac921a2ae190f4337dade6642d5b295afa9fc57ac008463f0658dd45d2da01c799</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Name</name>
      <anchorfile>namespaceMagnum_1_1Trade_1_1OpenGex.html</anchorfile>
      <anchor>ac921a2ae190f4337dade6642d5b295afa9fb68c4b6dde8bbfa5a0338529adc39a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Node</name>
      <anchorfile>namespaceMagnum_1_1Trade_1_1OpenGex.html</anchorfile>
      <anchor>ac921a2ae190f4337dade6642d5b295afadf1cf043fcf03377aa66d637fa39452b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ObjectRef</name>
      <anchorfile>namespaceMagnum_1_1Trade_1_1OpenGex.html</anchorfile>
      <anchor>ac921a2ae190f4337dade6642d5b295afa49193eba0a0ec0e3b7896fa9aeed31ff</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Param</name>
      <anchorfile>namespaceMagnum_1_1Trade_1_1OpenGex.html</anchorfile>
      <anchor>ac921a2ae190f4337dade6642d5b295afafa110c5e2ac4a8bc1fa05c1f44690fda</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Rotation</name>
      <anchorfile>namespaceMagnum_1_1Trade_1_1OpenGex.html</anchorfile>
      <anchor>ac921a2ae190f4337dade6642d5b295afafea1cb9c8299c7ec22c61165fc21c689</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Scale</name>
      <anchorfile>namespaceMagnum_1_1Trade_1_1OpenGex.html</anchorfile>
      <anchor>ac921a2ae190f4337dade6642d5b295afa55d05b90c547fdab267e7b295fee5b87</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Skeleton</name>
      <anchorfile>namespaceMagnum_1_1Trade_1_1OpenGex.html</anchorfile>
      <anchor>ac921a2ae190f4337dade6642d5b295afaf6d3ca18ff250a79bc6baba3dc217b0b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Skin</name>
      <anchorfile>namespaceMagnum_1_1Trade_1_1OpenGex.html</anchorfile>
      <anchor>ac921a2ae190f4337dade6642d5b295afa7e6348fd496b7cf7023295dc02d08063</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Texture</name>
      <anchorfile>namespaceMagnum_1_1Trade_1_1OpenGex.html</anchorfile>
      <anchor>ac921a2ae190f4337dade6642d5b295afa3d7bd43b2ed5863a1ba7e13e929b34f0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Time</name>
      <anchorfile>namespaceMagnum_1_1Trade_1_1OpenGex.html</anchorfile>
      <anchor>ac921a2ae190f4337dade6642d5b295afa25494f92a1dc0c0fb91402b35a7fa813</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Track</name>
      <anchorfile>namespaceMagnum_1_1Trade_1_1OpenGex.html</anchorfile>
      <anchor>ac921a2ae190f4337dade6642d5b295afa794e6449746fc499f0a1e63cd1a02962</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Transform</name>
      <anchorfile>namespaceMagnum_1_1Trade_1_1OpenGex.html</anchorfile>
      <anchor>ac921a2ae190f4337dade6642d5b295afae734064831130b08157f87eb2fec5c31</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Translation</name>
      <anchorfile>namespaceMagnum_1_1Trade_1_1OpenGex.html</anchorfile>
      <anchor>ac921a2ae190f4337dade6642d5b295afa914fd569607f44f239d3f603a4d13ea9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Value</name>
      <anchorfile>namespaceMagnum_1_1Trade_1_1OpenGex.html</anchorfile>
      <anchor>ac921a2ae190f4337dade6642d5b295afa13a96ad06820240b8ffb3f97164232a0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>VertexArray</name>
      <anchorfile>namespaceMagnum_1_1Trade_1_1OpenGex.html</anchorfile>
      <anchor>ac921a2ae190f4337dade6642d5b295afac135467232e5951ff43f8067e418447f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>applic</name>
      <anchorfile>namespaceMagnum_1_1Trade_1_1OpenGex.html</anchorfile>
      <anchor>a1f931689f6965fa9f20e84e8c5b68289a9a26f4e136d781b2c1848520ae3141f1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>attrib</name>
      <anchorfile>namespaceMagnum_1_1Trade_1_1OpenGex.html</anchorfile>
      <anchor>a1f931689f6965fa9f20e84e8c5b68289a516e438559e8f2bab01700d47aa6f197</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>begin</name>
      <anchorfile>namespaceMagnum_1_1Trade_1_1OpenGex.html</anchorfile>
      <anchor>a1f931689f6965fa9f20e84e8c5b68289ae6626e94c1015e5b49fd45e1dd92d35d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>clip</name>
      <anchorfile>namespaceMagnum_1_1Trade_1_1OpenGex.html</anchorfile>
      <anchor>a1f931689f6965fa9f20e84e8c5b68289a2dce971eae3a260036e6d9713d772486</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>curve</name>
      <anchorfile>namespaceMagnum_1_1Trade_1_1OpenGex.html</anchorfile>
      <anchor>a1f931689f6965fa9f20e84e8c5b68289ad557c97bc0247e863099b2921b606775</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>end</name>
      <anchorfile>namespaceMagnum_1_1Trade_1_1OpenGex.html</anchorfile>
      <anchor>a1f931689f6965fa9f20e84e8c5b68289a7d34c05f5781373d6c7fac56d18f7d53</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>front</name>
      <anchorfile>namespaceMagnum_1_1Trade_1_1OpenGex.html</anchorfile>
      <anchor>a1f931689f6965fa9f20e84e8c5b68289a8a5263bb2eed3a692e0f4f195a82e18c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>index</name>
      <anchorfile>namespaceMagnum_1_1Trade_1_1OpenGex.html</anchorfile>
      <anchor>a1f931689f6965fa9f20e84e8c5b68289aadc159aa83eeca7f6445d433a33e2aae</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>key</name>
      <anchorfile>namespaceMagnum_1_1Trade_1_1OpenGex.html</anchorfile>
      <anchor>a1f931689f6965fa9f20e84e8c5b68289a9bf1cb45e2b8651c9e22d7446abcd4fc</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kind</name>
      <anchorfile>namespaceMagnum_1_1Trade_1_1OpenGex.html</anchorfile>
      <anchor>a1f931689f6965fa9f20e84e8c5b68289ac06e90780bba6ce7025c18dadf06d184</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>lod</name>
      <anchorfile>namespaceMagnum_1_1Trade_1_1OpenGex.html</anchorfile>
      <anchor>a1f931689f6965fa9f20e84e8c5b68289a193e71c288b7ae8e54e47b42e20921fb</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>material</name>
      <anchorfile>namespaceMagnum_1_1Trade_1_1OpenGex.html</anchorfile>
      <anchor>a1f931689f6965fa9f20e84e8c5b68289a154577709fcaa2cd5c0c7f938cb623e5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>morph</name>
      <anchorfile>namespaceMagnum_1_1Trade_1_1OpenGex.html</anchorfile>
      <anchor>a1f931689f6965fa9f20e84e8c5b68289ac552ac8ad16bad93b1b626ff5a87c0ac</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>motion_blur</name>
      <anchorfile>namespaceMagnum_1_1Trade_1_1OpenGex.html</anchorfile>
      <anchor>a1f931689f6965fa9f20e84e8c5b68289a224f46f7716477f92e775f86fdad3f61</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>object</name>
      <anchorfile>namespaceMagnum_1_1Trade_1_1OpenGex.html</anchorfile>
      <anchor>a1f931689f6965fa9f20e84e8c5b68289ae8c5cec062765c72668d1e378c168087</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>primitive</name>
      <anchorfile>namespaceMagnum_1_1Trade_1_1OpenGex.html</anchorfile>
      <anchor>a1f931689f6965fa9f20e84e8c5b68289a8153a3da7f9d0d647723ecba0a285ce2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>restart</name>
      <anchorfile>namespaceMagnum_1_1Trade_1_1OpenGex.html</anchorfile>
      <anchor>a1f931689f6965fa9f20e84e8c5b68289a71f9f08ca8c42c41b73c0e637b653bba</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>shadow</name>
      <anchorfile>namespaceMagnum_1_1Trade_1_1OpenGex.html</anchorfile>
      <anchor>a1f931689f6965fa9f20e84e8c5b68289aded2827f0f93ee44c700b4b3e12ec82e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>target</name>
      <anchorfile>namespaceMagnum_1_1Trade_1_1OpenGex.html</anchorfile>
      <anchor>a1f931689f6965fa9f20e84e8c5b68289a596bb86cf21072c10f8650dab16d390d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>texcoord</name>
      <anchorfile>namespaceMagnum_1_1Trade_1_1OpenGex.html</anchorfile>
      <anchor>a1f931689f6965fa9f20e84e8c5b68289a33f759f009a97cf9ef59b5995aa3ffb8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>two_sided</name>
      <anchorfile>namespaceMagnum_1_1Trade_1_1OpenGex.html</anchorfile>
      <anchor>a1f931689f6965fa9f20e84e8c5b68289a821084236c6eedf8d87a18d4b172f187</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>type</name>
      <anchorfile>namespaceMagnum_1_1Trade_1_1OpenGex.html</anchorfile>
      <anchor>a1f931689f6965fa9f20e84e8c5b68289a418aa48c09c18d8ea99d0917ee51ef7c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>visible</name>
      <anchorfile>namespaceMagnum_1_1Trade_1_1OpenGex.html</anchorfile>
      <anchor>a1f931689f6965fa9f20e84e8c5b68289aa998be9a9713013727605f355b066820</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>Magnum::Ui</name>
    <filename>namespaceMagnum_1_1Ui.html</filename>
    <class kind="class">Magnum::Ui::AbstractPlane</class>
    <class kind="class">Magnum::Ui::AbstractUiShader</class>
    <class kind="class">Magnum::Ui::AbstractUserInterface</class>
    <class kind="class">Magnum::Ui::Anchor</class>
    <class kind="class">Magnum::Ui::BasicGLLayer</class>
    <class kind="class">Magnum::Ui::BasicInstancedGLLayer</class>
    <class kind="class">Magnum::Ui::BasicInstancedLayer</class>
    <class kind="class">Magnum::Ui::BasicLayer</class>
    <class kind="class">Magnum::Ui::BasicPlane</class>
    <class kind="class">Magnum::Ui::BasicUserInterface</class>
    <class kind="class">Magnum::Ui::Button</class>
    <class kind="class">Magnum::Ui::Input</class>
    <class kind="class">Magnum::Ui::Label</class>
    <class kind="class">Magnum::Ui::Modal</class>
    <class kind="class">Magnum::Ui::Plane</class>
    <class kind="class">Magnum::Ui::StyleConfiguration</class>
    <class kind="class">Magnum::Ui::UserInterface</class>
    <class kind="class">Magnum::Ui::ValidatedInput</class>
    <class kind="class">Magnum::Ui::Widget</class>
    <member kind="typedef">
      <type>Containers::EnumSet&lt; Snap &gt;</type>
      <name>Snaps</name>
      <anchorfile>namespaceMagnum_1_1Ui.html</anchorfile>
      <anchor>abf82220e5ebfc36efdff609efcb9ae01</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Containers::EnumSet&lt; PlaneFlag &gt;</type>
      <name>PlaneFlags</name>
      <anchorfile>namespaceMagnum_1_1Ui.html</anchorfile>
      <anchor>a25efa17947864ff2d297cc5f560cc62e</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Containers::EnumSet&lt; WidgetFlag &gt;</type>
      <name>WidgetFlags</name>
      <anchorfile>namespaceMagnum_1_1Ui.html</anchorfile>
      <anchor>a8f043ada252e182e750e0f74407965de</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>Snap</name>
      <anchorfile>namespaceMagnum_1_1Ui.html</anchorfile>
      <anchor>adb75721c5ea61dfb3b39cdae3743482b</anchor>
      <arglist></arglist>
      <enumvalue file="namespaceMagnum_1_1Ui.html" anchor="adb75721c5ea61dfb3b39cdae3743482ba945d5e233cf7d6240f6b783b36a374ff">Left</enumvalue>
      <enumvalue file="namespaceMagnum_1_1Ui.html" anchor="adb75721c5ea61dfb3b39cdae3743482ba92b09c7c48c520c3c55e497875da437c">Right</enumvalue>
      <enumvalue file="namespaceMagnum_1_1Ui.html" anchor="adb75721c5ea61dfb3b39cdae3743482ba2ad9d63b69c4a10a5cc9cad923133bc4">Bottom</enumvalue>
      <enumvalue file="namespaceMagnum_1_1Ui.html" anchor="adb75721c5ea61dfb3b39cdae3743482baa4ffdcf0dc1f31b9acaf295d75b51d00">Top</enumvalue>
      <enumvalue file="namespaceMagnum_1_1Ui.html" anchor="adb75721c5ea61dfb3b39cdae3743482babb372b16a6afd593f17b8fbdb297d823">InsideX</enumvalue>
      <enumvalue file="namespaceMagnum_1_1Ui.html" anchor="adb75721c5ea61dfb3b39cdae3743482bae1a26b20ef38819a20b38008f8436ee6">InsideY</enumvalue>
      <enumvalue file="namespaceMagnum_1_1Ui.html" anchor="adb75721c5ea61dfb3b39cdae3743482bac87437e57753ee4bc03f6ce6b2a37d97">NoSpaceX</enumvalue>
      <enumvalue file="namespaceMagnum_1_1Ui.html" anchor="adb75721c5ea61dfb3b39cdae3743482ba52bc69c5b52cb1ef358ec05222e8f4c5">NoSpaceY</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>PlaneFlag</name>
      <anchorfile>namespaceMagnum_1_1Ui.html</anchorfile>
      <anchor>ae45be3c82cb871a531ca61b5f228015c</anchor>
      <arglist></arglist>
      <enumvalue file="namespaceMagnum_1_1Ui.html" anchor="ae45be3c82cb871a531ca61b5f228015ca7acdf85c69cc3c5305456a293524386e">Hidden</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>Type</name>
      <anchorfile>namespaceMagnum_1_1Ui.html</anchorfile>
      <anchor>a3a950dd64c0c17160f00681acf28d71c</anchor>
      <arglist></arglist>
      <enumvalue file="namespaceMagnum_1_1Ui.html" anchor="a3a950dd64c0c17160f00681acf28d71ca87b7760f14fbff78d8819291f36ab9a0">Button</enumvalue>
      <enumvalue file="namespaceMagnum_1_1Ui.html" anchor="a3a950dd64c0c17160f00681acf28d71cab021df6aac4654c454f46c77646e745f">Label</enumvalue>
      <enumvalue file="namespaceMagnum_1_1Ui.html" anchor="a3a950dd64c0c17160f00681acf28d71ca324118a6721dd6b8a9b9f4e327df2bf5">Input</enumvalue>
      <enumvalue file="namespaceMagnum_1_1Ui.html" anchor="a3a950dd64c0c17160f00681acf28d71cac59d6df802c32f037c2a15ff75faec17">Modal</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>State</name>
      <anchorfile>namespaceMagnum_1_1Ui.html</anchorfile>
      <anchor>ad16021b9313de52986ac0ff6e92b346c</anchor>
      <arglist></arglist>
      <enumvalue file="namespaceMagnum_1_1Ui.html" anchor="ad16021b9313de52986ac0ff6e92b346ca7a1920d61156abc05a60135aefe8bc67">Default</enumvalue>
      <enumvalue file="namespaceMagnum_1_1Ui.html" anchor="ad16021b9313de52986ac0ff6e92b346caeee0168be69b854c20621fc6f01cc3fc">Hover</enumvalue>
      <enumvalue file="namespaceMagnum_1_1Ui.html" anchor="ad16021b9313de52986ac0ff6e92b346cad78a68f6a85421ae121c2cb5b73a1040">Pressed</enumvalue>
      <enumvalue file="namespaceMagnum_1_1Ui.html" anchor="ad16021b9313de52986ac0ff6e92b346ca4d3d769b812b6faa6b76e1a8abaece2d">Active</enumvalue>
      <enumvalue file="namespaceMagnum_1_1Ui.html" anchor="ad16021b9313de52986ac0ff6e92b346cab9f5c797ebbf55adccdd8539a65a0241">Disabled</enumvalue>
      <enumvalue file="namespaceMagnum_1_1Ui.html" anchor="ad16021b9313de52986ac0ff6e92b346ca7acdf85c69cc3c5305456a293524386e">Hidden</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>Style</name>
      <anchorfile>namespaceMagnum_1_1Ui.html</anchorfile>
      <anchor>ab8c9d883509415e4668b9165e63c10de</anchor>
      <arglist></arglist>
      <enumvalue file="namespaceMagnum_1_1Ui.html" anchor="ab8c9d883509415e4668b9165e63c10dea7a1920d61156abc05a60135aefe8bc67">Default</enumvalue>
      <enumvalue file="namespaceMagnum_1_1Ui.html" anchor="ab8c9d883509415e4668b9165e63c10dea074de7e7c226d5c60f8af14c20725352">Primary</enumvalue>
      <enumvalue file="namespaceMagnum_1_1Ui.html" anchor="ab8c9d883509415e4668b9165e63c10dea505a83f220c02df2f85c3810cd9ceb38">Success</enumvalue>
      <enumvalue file="namespaceMagnum_1_1Ui.html" anchor="ab8c9d883509415e4668b9165e63c10dea4059b0251f66a18cb56f544728796875">Info</enumvalue>
      <enumvalue file="namespaceMagnum_1_1Ui.html" anchor="ab8c9d883509415e4668b9165e63c10dea0eaadb4fcb48a0a0ed7bc9868be9fbaa">Warning</enumvalue>
      <enumvalue file="namespaceMagnum_1_1Ui.html" anchor="ab8c9d883509415e4668b9165e63c10dea990816b607ebf99b1415760965e4d564">Danger</enumvalue>
      <enumvalue file="namespaceMagnum_1_1Ui.html" anchor="ab8c9d883509415e4668b9165e63c10dea8ed64ce6e8032ddb62a463ffa78881d9">Dim</enumvalue>
      <enumvalue file="namespaceMagnum_1_1Ui.html" anchor="ab8c9d883509415e4668b9165e63c10dea745e3db6a7ffd50e1a72b39482f0882d">Flat</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>WidgetFlag</name>
      <anchorfile>namespaceMagnum_1_1Ui.html</anchorfile>
      <anchor>a45de09c646008bdb65fc358488fd64b6</anchor>
      <arglist></arglist>
      <enumvalue file="namespaceMagnum_1_1Ui.html" anchor="a45de09c646008bdb65fc358488fd64b6a3ef193e1ac8f2bc3d7226a29d6b09875">Hovered</enumvalue>
      <enumvalue file="namespaceMagnum_1_1Ui.html" anchor="a45de09c646008bdb65fc358488fd64b6ad78a68f6a85421ae121c2cb5b73a1040">Pressed</enumvalue>
      <enumvalue file="namespaceMagnum_1_1Ui.html" anchor="a45de09c646008bdb65fc358488fd64b6a4d3d769b812b6faa6b76e1a8abaece2d">Active</enumvalue>
      <enumvalue file="namespaceMagnum_1_1Ui.html" anchor="a45de09c646008bdb65fc358488fd64b6ab9f5c797ebbf55adccdd8539a65a0241">Disabled</enumvalue>
      <enumvalue file="namespaceMagnum_1_1Ui.html" anchor="a45de09c646008bdb65fc358488fd64b6a7acdf85c69cc3c5305456a293524386e">Hidden</enumvalue>
    </member>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceMagnum_1_1Ui.html</anchorfile>
      <anchor>a7a282f38bdfb30e0bf96e3a9263d4379</anchor>
      <arglist>(Debug &amp;debug, PlaneFlag value)</arglist>
    </member>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceMagnum_1_1Ui.html</anchorfile>
      <anchor>a054d68d97cdff0794d7fbefc84bc8206</anchor>
      <arglist>(Debug &amp;debug, PlaneFlags value)</arglist>
    </member>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceMagnum_1_1Ui.html</anchorfile>
      <anchor>a80012b5da15050b1d9d527f6ce833fd9</anchor>
      <arglist>(Debug &amp;debug, Type value)</arglist>
    </member>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceMagnum_1_1Ui.html</anchorfile>
      <anchor>a5ce5a2039af17edd22c9e851f07ffb07</anchor>
      <arglist>(Debug &amp;debug, State value)</arglist>
    </member>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceMagnum_1_1Ui.html</anchorfile>
      <anchor>ac5f33b043d9d0c87a98edceac041f506</anchor>
      <arglist>(Debug &amp;debug, Style value)</arglist>
    </member>
    <member kind="function">
      <type>StyleConfiguration</type>
      <name>defaultStyleConfiguration</name>
      <anchorfile>namespaceMagnum_1_1Ui.html</anchorfile>
      <anchor>ad57a0a7abf897080139bce4ed91642cd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceMagnum_1_1Ui.html</anchorfile>
      <anchor>aa8da4a420b361121b5e71f13da8c2b9b</anchor>
      <arglist>(Debug &amp;debug, WidgetFlag value)</arglist>
    </member>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceMagnum_1_1Ui.html</anchorfile>
      <anchor>a9b714e67f7fa8079cdc357574f2486aa</anchor>
      <arglist>(Debug &amp;debug, WidgetFlags value)</arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>std</name>
    <filename>namespacestd.html</filename>
    <class kind="struct">std::hash&lt; Magnum::ResourceKey &gt;</class>
  </compound>
  <compound kind="page">
    <name>magnum-al-info</name>
    <title>Magnum OpenAL Info</title>
    <filename>magnum-al-info</filename>
    <docanchor file="magnum-al-info" title="Usage">magnum-al-info-usage</docanchor>
    <docanchor file="magnum-al-info" title="Example output">magnum-al-info-example</docanchor>
  </compound>
  <compound kind="page">
    <name>magnum-info</name>
    <title>Magnum Info</title>
    <filename>magnum-info</filename>
    <docanchor file="magnum-info" title="Usage">magnum-info-usage</docanchor>
    <docanchor file="magnum-info" title="Example output">magnum-info-example</docanchor>
  </compound>
  <compound kind="page">
    <name>magnum-fontconverter</name>
    <title>Font conversion utility</title>
    <filename>magnum-fontconverter</filename>
    <docanchor file="magnum-fontconverter" title="Usage">magnum-fontconverter-usage</docanchor>
    <docanchor file="magnum-fontconverter" title="Example usage">magnum-fontconverter-example</docanchor>
  </compound>
  <compound kind="page">
    <name>magnum-distancefieldconverter</name>
    <title>Distance Field conversion utility</title>
    <filename>magnum-distancefieldconverter</filename>
    <docanchor file="magnum-distancefieldconverter" title="Usage">magnum-distancefieldconverter-usage</docanchor>
    <docanchor file="magnum-distancefieldconverter" title="Example usage">magnum-distancefield-example</docanchor>
  </compound>
  <compound kind="page">
    <name>magnum-imageconverter</name>
    <title>Image conversion utility</title>
    <filename>magnum-imageconverter</filename>
    <docanchor file="magnum-imageconverter" title="Usage">magnum-imageconverter-usage</docanchor>
    <docanchor file="magnum-imageconverter" title="Example usage">magnum-imageconverter-example</docanchor>
  </compound>
  <compound kind="page">
    <name>getting-started</name>
    <title>Getting started</title>
    <filename>getting-started</filename>
    <docanchor file="getting-started" title="Download bootstrap project">getting-started-bootstrap</docanchor>
    <docanchor file="getting-started" title="Download, build and install Corrade and Magnum">getting-started-download</docanchor>
    <docanchor file="getting-started" title="Review project structure">getting-started-review</docanchor>
    <docanchor file="getting-started" title="Build it and run">getting-started-build</docanchor>
    <docanchor file="getting-started" title="Linux, macOS and other Unix-based OSs">getting-started-linux</docanchor>
    <docanchor file="getting-started" title="Windows">getting-started-windows</docanchor>
    <docanchor file="getting-started" title="Running the application">getting-started-running</docanchor>
    <docanchor file="getting-started" title="Follow tutorials and learn the principles">getting-started-tutorials</docanchor>
    <docanchor file="getting-started" title="Additional information">getting-started-more</docanchor>
  </compound>
  <compound kind="page">
    <name>features</name>
    <title>Feature guide</title>
    <filename>features</filename>
  </compound>
  <compound kind="page">
    <name>example-index</name>
    <title>Examples</title>
    <filename>example-index</filename>
  </compound>
  <compound kind="page">
    <name>tips</name>
    <title>Tips and tricks</title>
    <filename>tips</filename>
  </compound>
  <compound kind="page">
    <name>utilities</name>
    <title>Utilities</title>
    <filename>utilities</filename>
  </compound>
  <compound kind="page">
    <name>opengl</name>
    <title>OpenGL</title>
    <filename>opengl</filename>
    <docanchor file="opengl" title="Version and extension requirements">opengl-required-extensions</docanchor>
  </compound>
  <compound kind="page">
    <name>openal</name>
    <title>OpenAL</title>
    <filename>openal</filename>
    <docanchor file="openal" title="Extension requirements">openal-required-extensions</docanchor>
  </compound>
  <compound kind="page">
    <name>changelog</name>
    <title>Changelog</title>
    <filename>changelog</filename>
    <docanchor file="changelog" title="Changes since 2015-05 snapshot">changelog-latest</docanchor>
    <docanchor file="changelog" title="2015-05 snapshot">changelog-2015-05</docanchor>
    <docanchor file="changelog" title="2014-06 snapshot">changelog-2014-06</docanchor>
    <docanchor file="changelog" title="2014-01 snapshot">changelog-2014-01</docanchor>
    <docanchor file="changelog" title="2013-10 snapshot">changelog-2013-10</docanchor>
    <docanchor file="changelog" title="Initial release">changelog-initial</docanchor>
  </compound>
  <compound kind="page">
    <name>changelog-plugins</name>
    <title>Plugins changelog</title>
    <filename>changelog-plugins</filename>
    <docanchor file="changelog-plugins" title="Changes since 2015-05 snapshot">changelog-plugins-latest</docanchor>
    <docanchor file="changelog-plugins" title="2015-05 snapshot">changelog-plugins-2015-05</docanchor>
    <docanchor file="changelog-plugins" title="2014-06 snapshot">changelog-plugins-2014-06</docanchor>
    <docanchor file="changelog-plugins" title="2014-01 snapshot">changelog-plugins-2014-01</docanchor>
    <docanchor file="changelog-plugins" title="2013-10 snapshot">changelog-plugins-2013-10</docanchor>
    <docanchor file="changelog-plugins" title="Initial release">changelog-plugins-initial</docanchor>
  </compound>
  <compound kind="page">
    <name>changelog-integration</name>
    <title>Integration changelog</title>
    <filename>changelog-integration</filename>
    <docanchor file="changelog-integration" title="Changes since 2015-05 snapshot">changelog-integration-latest</docanchor>
    <docanchor file="changelog-integration" title="2015-05 snapshot">changelog-integration-2015-05</docanchor>
    <docanchor file="changelog-integration" title="2014-06 snapshot">changelog-integration-2014-06</docanchor>
    <docanchor file="changelog-integration" title="2014-01 snapshot">changelog-integration-2014-01</docanchor>
    <docanchor file="changelog-integration" title="2013-10 snapshot">changelog-integration-2013-10</docanchor>
    <docanchor file="changelog-integration" title="Initial release">changelog-integration-initial</docanchor>
  </compound>
  <compound kind="page">
    <name>changelog-extras</name>
    <title>Extras changelog</title>
    <filename>changelog-extras</filename>
    <docanchor file="changelog-extras" title="Changes during the initial release">changelog-extras-latest</docanchor>
  </compound>
  <compound kind="page">
    <name>changelog-examples</name>
    <title>Examples changelog</title>
    <filename>changelog-examples</filename>
    <docanchor file="changelog-examples" title="Changes since 2015-05 snapshot">changelog-examples-latest</docanchor>
    <docanchor file="changelog-examples" title="2015-05 snapshot">changelog-examples-2015-05</docanchor>
    <docanchor file="changelog-examples" title="2014-06 snapshot">changelog-examples-2014-06</docanchor>
    <docanchor file="changelog-examples" title="2014-01 snapshot">changelog-examples-2014-01</docanchor>
    <docanchor file="changelog-examples" title="2013-10 snapshot">changelog-examples-2013-10</docanchor>
    <docanchor file="changelog-examples" title="Initial release">changelog-examples-initial</docanchor>
  </compound>
  <compound kind="page">
    <name>coding-style</name>
    <title>Coding style</title>
    <filename>coding-style</filename>
    <docanchor file="coding-style" title="C++ code">coding-style-cpp</docanchor>
    <docanchor file="coding-style" title="Headers">coding-style-cpp-headers</docanchor>
    <docanchor file="coding-style" title="Code format">coding-style-cpp-format</docanchor>
    <docanchor file="coding-style" title="Builtin types">coding-style-cpp-types</docanchor>
    <docanchor file="coding-style" title="Naming">coding-style-cpp-naming</docanchor>
    <docanchor file="coding-style" title="Forward declarations and forward declaration headers">coding-style-cpp-forward-declarations</docanchor>
    <docanchor file="coding-style" title="Compatibility with various OpenGL editions">coding-style-compatibility</docanchor>
    <docanchor file="coding-style" title="Doxygen documentation">coding-style-documentation</docanchor>
    <docanchor file="coding-style" title="Special documentation commands">coding-style-documentation-commands</docanchor>
    <docanchor file="coding-style" title="Shape collision operators">coding-style-documentation-commands-collisionoperator</docanchor>
    <docanchor file="coding-style" title="Links to OpenGL extensions">coding-style-documentation-commands-extension</docanchor>
    <docanchor file="coding-style" title="Links to related OpenGL functions and definitions">coding-style-documentation-commands-ref_gl</docanchor>
    <docanchor file="coding-style" title="Classes and functions requiring specific OpenGL version or extensions">coding-style-documentation-commands-requires</docanchor>
    <docanchor file="coding-style" title="Section ordering">coding-style-documentation-ordering</docanchor>
    <docanchor file="coding-style" title="Unit tests">coding-style-unit-tests</docanchor>
  </compound>
  <compound kind="page">
    <name>best-practices</name>
    <title>Best practices, pitfalls and platform-specific information</title>
    <filename>best-practices</filename>
    <docanchor file="best-practices" title="GLES-specific">best-practices-gles</docanchor>
    <docanchor file="best-practices" title="Platform-specific">best-practices-platform</docanchor>
    <docanchor file="best-practices" title="macOS">best-practices-mac</docanchor>
    <docanchor file="best-practices" title="iOS">best-practices-ios</docanchor>
    <docanchor file="best-practices" title="ANGLE (WebGL)">best-practices-angle</docanchor>
    <docanchor file="best-practices" title="WebGL (Emscripten)">best-practices-webgl</docanchor>
    <docanchor file="best-practices" title="Hardware-specific">best-practices-hw</docanchor>
    <docanchor file="best-practices" title="Intel hardware">best-practices-intel</docanchor>
    <docanchor file="best-practices" title="PowerVR hardware">best-practices-powervr</docanchor>
    <docanchor file="best-practices" title="AMD hardware">best-practices-amd</docanchor>
    <docanchor file="best-practices" title="NVidia Tegra hardware">best-practices-tegra</docanchor>
  </compound>
  <compound kind="page">
    <name>building</name>
    <title>Downloading and building</title>
    <filename>building</filename>
    <docanchor file="building" title="Downloading the sources">building-download</docanchor>
    <docanchor file="building" title="Compilation, installation">building-compilation</docanchor>
    <docanchor file="building" title="Via command-line (on Linux/Unix)">building-linux</docanchor>
    <docanchor file="building" title="Building on Windows">building-windows</docanchor>
    <docanchor file="building" title="Using Visual Studio">building-windows-msvc</docanchor>
    <docanchor file="building" title="Using QtCreator">building-windows-qtcreator</docanchor>
    <docanchor file="building" title="Enabling or disabling features">building-features</docanchor>
    <docanchor file="building" title="Building and running unit tests">building-tests</docanchor>
    <docanchor file="building" title="Building documentation">building-doc</docanchor>
    <docanchor file="building" title="Related projects">building-related</docanchor>
    <docanchor file="building" title="Prepared packages">building-packages</docanchor>
    <docanchor file="building" title="ArchLinux packages">building-packages-arch</docanchor>
    <docanchor file="building" title="Gentoo ebuilds">building-packages-gentoo</docanchor>
    <docanchor file="building" title="DEB packages">building-packages-deb</docanchor>
    <docanchor file="building" title="Homebrew formulas">building-packages-brew</docanchor>
    <docanchor file="building" title="Building for ANGLE on Windows">building-windows-angle</docanchor>
    <docanchor file="building" title="Crosscompiling">building-crosscompiling</docanchor>
    <docanchor file="building" title="Crosscompiling for Windows RT">building-cross-winrt</docanchor>
    <docanchor file="building" title="Crosscompiling for Windows using MinGW-w64">building-cross-win</docanchor>
    <docanchor file="building" title="Crosscompiling for Emscripten">building-cross-emscripten</docanchor>
    <docanchor file="building" title="Crosscompiling for iOS">building-cross-ios</docanchor>
    <docanchor file="building" title="Crosscompiling for Android ARM and x86">building-cross-android</docanchor>
    <docanchor file="building" title="Continuous Integration">building-ci</docanchor>
    <docanchor file="building" title="Travis">building-ci-travis</docanchor>
    <docanchor file="building" title="AppVeyor">building-ci-appveyor</docanchor>
  </compound>
  <compound kind="page">
    <name>cmake</name>
    <title>Usage with CMake</title>
    <filename>cmake</filename>
    <docanchor file="cmake" title="Other CMake modules">cmake-modules</docanchor>
  </compound>
  <compound kind="page">
    <name>compilation-speedup</name>
    <title>Speeding up compilation</title>
    <filename>compilation-speedup</filename>
    <docanchor file="compilation-speedup" title="Forward declarations instead of includes">compilation-forward-declarations</docanchor>
    <docanchor file="compilation-speedup" title="Templates">compilation-speedup-templates</docanchor>
    <docanchor file="compilation-speedup" title="Template headers and implementation files">compilation-speedup-hpp</docanchor>
    <docanchor file="compilation-speedup" title="Extern templates">compilation-speedup-extern-templates</docanchor>
  </compound>
  <compound kind="page">
    <name>debug-tools</name>
    <title>Debugging helpers</title>
    <filename>debug-tools</filename>
    <docanchor file="debug-tools" title="Debug renderers">debug-tools-renderers</docanchor>
  </compound>
  <compound kind="page">
    <name>matrix-vector</name>
    <title>Operations with matrices and vectors</title>
    <filename>matrix-vector</filename>
    <docanchor file="matrix-vector" title="Matrix and vector classes">matrix-vector-hierarchy</docanchor>
    <docanchor file="matrix-vector" title="Constructing matrices and vectors">matrix-vector-construction</docanchor>
    <docanchor file="matrix-vector" title="Accessing matrix and vector components">matrix-vector-component-access</docanchor>
    <docanchor file="matrix-vector" title="Converting between different underlying types">matrix-vector-conversion</docanchor>
    <docanchor file="matrix-vector" title="Operations with matrices and vectors">matrix-vector-operations</docanchor>
    <docanchor file="matrix-vector" title="Component-wise and inter-vector operations">matrix-vector-componentwise</docanchor>
    <docanchor file="matrix-vector" title="Matrices are column-major and vectors are columns">matrix-vector-column-major</docanchor>
  </compound>
  <compound kind="page">
    <name>method-chaining</name>
    <title>Method chaining</title>
    <filename>method-chaining</filename>
  </compound>
  <compound kind="page">
    <name>openal-support</name>
    <title>OpenAL support state</title>
    <filename>openal-support</filename>
    <docanchor file="openal-support" title="OpenAL implementation state">openal-support-state</docanchor>
    <docanchor file="openal-support" title="Extensions">openal-extension-support</docanchor>
    <docanchor file="openal-support" title="OpenAL Soft Extensions">openal-extension-support-soft</docanchor>
  </compound>
  <compound kind="page">
    <name>opengl-mapping</name>
    <title>OpenGL command mapping</title>
    <filename>opengl-mapping</filename>
    <docanchor file="opengl-mapping" title="Functions">opengl-mapping-functions</docanchor>
    <docanchor file="opengl-mapping" title="A">opengl-mapping-functions-a</docanchor>
    <docanchor file="opengl-mapping" title="B">opengl-mapping-functions-b</docanchor>
    <docanchor file="opengl-mapping" title="C">opengl-mapping-functions-c</docanchor>
    <docanchor file="opengl-mapping" title="D">opengl-mapping-functions-d</docanchor>
    <docanchor file="opengl-mapping" title="E">opengl-mapping-functions-e</docanchor>
    <docanchor file="opengl-mapping" title="F">opengl-mapping-functions-f</docanchor>
    <docanchor file="opengl-mapping" title="G">opengl-mapping-functions-g</docanchor>
    <docanchor file="opengl-mapping" title="H">opengl-mapping-functions-h</docanchor>
    <docanchor file="opengl-mapping" title="I">opengl-mapping-functions-i</docanchor>
    <docanchor file="opengl-mapping" title="L">opengl-mapping-functions-l</docanchor>
    <docanchor file="opengl-mapping" title="M">opengl-mapping-functions-m</docanchor>
    <docanchor file="opengl-mapping" title="O">opengl-mapping-functions-o</docanchor>
    <docanchor file="opengl-mapping" title="P">opengl-mapping-functions-p</docanchor>
    <docanchor file="opengl-mapping" title="Q">opengl-mapping-functions-q</docanchor>
    <docanchor file="opengl-mapping" title="R">opengl-mapping-functions-r</docanchor>
    <docanchor file="opengl-mapping" title="S">opengl-mapping-functions-s</docanchor>
    <docanchor file="opengl-mapping" title="T">opengl-mapping-functions-t</docanchor>
    <docanchor file="opengl-mapping" title="U">opengl-mapping-functions-u</docanchor>
    <docanchor file="opengl-mapping" title="V">opengl-mapping-functions-v</docanchor>
    <docanchor file="opengl-mapping" title="W">opengl-mapping-functions-w</docanchor>
    <docanchor file="opengl-mapping" title="Limit and state queries">opengl-mapping-state</docanchor>
  </compound>
  <compound kind="page">
    <name>opengl-support</name>
    <title>OpenGL support state</title>
    <filename>opengl-support</filename>
    <docanchor file="opengl-support" title="OpenGL implementation state">opengl-support-state</docanchor>
    <docanchor file="opengl-support" title="OpenGL 2.1">opengl-support-21</docanchor>
    <docanchor file="opengl-support" title="OpenGL 3.0">opengl-support-30</docanchor>
    <docanchor file="opengl-support" title="OpenGL 3.1">opengl-support-31</docanchor>
    <docanchor file="opengl-support" title="OpenGL 3.2">opengl-support-32</docanchor>
    <docanchor file="opengl-support" title="OpenGL 3.3">opengl-support-33</docanchor>
    <docanchor file="opengl-support" title="OpenGL 4.0">opengl-support-40</docanchor>
    <docanchor file="opengl-support" title="OpenGL 4.1">opengl-support-41</docanchor>
    <docanchor file="opengl-support" title="OpenGL 4.2">opengl-support-42</docanchor>
    <docanchor file="opengl-support" title="OpenGL 4.3">opengl-support-43</docanchor>
    <docanchor file="opengl-support" title="OpenGL 4.4">opengl-support-44</docanchor>
    <docanchor file="opengl-support" title="OpenGL 4.5">opengl-support-45</docanchor>
    <docanchor file="opengl-support" title="ARB / Khronos OpenGL extensions">opengl-support-extensions</docanchor>
    <docanchor file="opengl-support" title="Vendor OpenGL extensions">opengl-support-extensions-vendor</docanchor>
    <docanchor file="opengl-support" title="OpenGL ES 2.0">opengl-support-es20</docanchor>
    <docanchor file="opengl-support" title="OpenGL ES 3.0">opengl-support-es30</docanchor>
    <docanchor file="opengl-support" title="OpenGL ES 3.1">opengl-support-es31</docanchor>
    <docanchor file="opengl-support" title="OpenGL ES 2.0 extensions to match ES 3.0 functionality">opengl-support-es30-extensions</docanchor>
    <docanchor file="opengl-support" title="OpenGL ES extensions">opengl-support-es-extensions</docanchor>
    <docanchor file="opengl-support" title="WebGL 1.0">opengl-support-webgl10</docanchor>
    <docanchor file="opengl-support" title="WebGL 2.0">opengl-support-webgl20</docanchor>
    <docanchor file="opengl-support" title="WebGL 1.0 extensions to match WebGL 2.0 functionality">opengl-support-webgl20-extensions</docanchor>
    <docanchor file="opengl-support" title="WebGL extensions to match desktop functionality">opengl-support-webgl-extensions</docanchor>
    <docanchor file="opengl-support" title="Unsupported OpenGL features">opengl-unsupported</docanchor>
    <docanchor file="opengl-support" title="Unsupported features">opengl-unsupported-features</docanchor>
    <docanchor file="opengl-support" title="Unsupported ARB / Khronos extensions">opengl-unsupported-extensions</docanchor>
    <docanchor file="opengl-support" title="Unsupported vendor extensions">opengl-unsupported-extensions-vendor</docanchor>
  </compound>
  <compound kind="page">
    <name>opengl-wrapping</name>
    <title>OpenGL wrapping layer</title>
    <filename>opengl-wrapping</filename>
    <docanchor file="opengl-wrapping" title="OpenGL object wrapper instances">opengl-wrapping-instances</docanchor>
    <docanchor file="opengl-wrapping" title="State tracking and interaction with third-party code">opengl-state-tracking</docanchor>
    <docanchor file="opengl-wrapping" title="Extension-dependent functionality">opengl-wrapping-dsa</docanchor>
  </compound>
  <compound kind="page">
    <name>platform</name>
    <title>Platform support</title>
    <filename>platform</filename>
    <docanchor file="platform" title="Windowed applications">platform-windowed</docanchor>
    <docanchor file="platform" title="Responding to viewport size changes">platform-windowed-viewport</docanchor>
    <docanchor file="platform" title="Windowless applications">platform-windowless</docanchor>
    <docanchor file="platform" title="Compilation with CMake">platform-compilation</docanchor>
    <docanchor file="platform" title="Specifying configuration">platform-configuration</docanchor>
    <docanchor file="platform" title="Using custom platform toolkits">platform-custom</docanchor>
    <docanchor file="platform" title="Manually managing windowless contexts">platform-windowless-contexts</docanchor>
  </compound>
  <compound kind="page">
    <name>plugins</name>
    <title>Loading and using plugins</title>
    <filename>plugins</filename>
    <docanchor file="plugins" title="Plugin interfaces">plugins-types</docanchor>
    <docanchor file="plugins" title="Loading and instantiating the plugins">plugins-loading</docanchor>
    <docanchor file="plugins" title="Plugin dependencies">plugins-dependencies</docanchor>
    <docanchor file="plugins" title="Static plugins">plugins-static</docanchor>
    <docanchor file="plugins" title="Developing your own plugins">plugins-develop</docanchor>
  </compound>
  <compound kind="page">
    <name>portability</name>
    <title>Writing portable applications</title>
    <filename>portability</filename>
    <docanchor file="portability" title="Target-specific code">portability-target</docanchor>
    <docanchor file="portability" title="Compiler- and platform-specific code">portability-compiler</docanchor>
    <docanchor file="portability" title="Extension-aware code">portability-extensions</docanchor>
    <docanchor file="portability" title="Writing portable shaders">portability-shaders</docanchor>
    <docanchor file="portability" title="Platform-specific application support">portability-applications</docanchor>
  </compound>
  <compound kind="page">
    <name>scenegraph</name>
    <title>Using scene graph</title>
    <filename>scenegraph</filename>
    <docanchor file="scenegraph" title="Transformations">scenegraph-transformation</docanchor>
    <docanchor file="scenegraph" title="Scene hierarchy">scenegraph-hierarchy</docanchor>
    <docanchor file="scenegraph" title="Object features">scenegraph-features</docanchor>
    <docanchor file="scenegraph" title="Transformation caching in features">scenegraph-features-caching</docanchor>
    <docanchor file="scenegraph" title="Polymorphic access to object transformation">scenegraph-features-transformation</docanchor>
    <docanchor file="scenegraph" title="Construction and destruction order">scenegraph-construction-order</docanchor>
    <docanchor file="scenegraph" title="Object hierarchy">scenegraph-object-construction-order</docanchor>
    <docanchor file="scenegraph" title="Member and inherited features">scenegraph-feature-construction-order</docanchor>
  </compound>
  <compound kind="page">
    <name>shaders</name>
    <title>Builtin shaders</title>
    <filename>shaders</filename>
    <docanchor file="shaders" title="Usage">shaders-usage</docanchor>
    <docanchor file="shaders" title="Generic vertex attributes">shaders-generic</docanchor>
  </compound>
  <compound kind="page">
    <name>shapes</name>
    <title>Collision detection</title>
    <filename>shapes</filename>
    <docanchor file="shapes" title="Available shapes">shapes-collection</docanchor>
    <docanchor file="shapes" title="One-dimensional shapes">shapes-1D</docanchor>
    <docanchor file="shapes" title="Two-dimensional shapes">shapes-2D</docanchor>
    <docanchor file="shapes" title="Three-dimensional shapes">shapes-3D</docanchor>
    <docanchor file="shapes" title="Creating shape compositions">shapes-composition</docanchor>
    <docanchor file="shapes" title="Providing simplified version of shape for better performance">shapes-simplification</docanchor>
    <docanchor file="shapes" title="Detecting shape collisions">shapes-collisions</docanchor>
    <docanchor file="shapes" title="Integration with scene graph">shapes-scenegraph</docanchor>
  </compound>
  <compound kind="page">
    <name>transformations</name>
    <title>2D and 3D transformations</title>
    <filename>transformations</filename>
    <docanchor file="transformations" title="Representing transformations">transformations-representation</docanchor>
    <docanchor file="transformations" title="Transformation types">transformations-types</docanchor>
    <docanchor file="transformations" title="Default (identity) transformation">transformations-default</docanchor>
    <docanchor file="transformations" title="Rotation">transformations-rotation</docanchor>
    <docanchor file="transformations" title="Translation">transformations-translation</docanchor>
    <docanchor file="transformations" title="Scaling and reflection">transformations-scaling</docanchor>
    <docanchor file="transformations" title="Projective transformations">transformations-projective</docanchor>
    <docanchor file="transformations" title="Composing and inverting transformations">transformations-composing</docanchor>
    <docanchor file="transformations" title="Transforming vectors and points">transformations-transforming</docanchor>
    <docanchor file="transformations" title="Transformation properties and conversion">transformations-properties</docanchor>
    <docanchor file="transformations" title="Transformation interpolation">transformations-interpolation</docanchor>
    <docanchor file="transformations" title="Normalizing transformations">transformations-normalization</docanchor>
  </compound>
  <compound kind="page">
    <name>troubleshooting</name>
    <title>Troubleshooting</title>
    <filename>troubleshooting</filename>
    <docanchor file="troubleshooting" title="Building issues">troubleshooting-building</docanchor>
    <docanchor file="troubleshooting" title="Rendering issues">troubleshooting-rendering</docanchor>
    <docanchor file="troubleshooting" title="Debugging rendering">troubleshooting-debugging</docanchor>
  </compound>
  <compound kind="page">
    <name>types</name>
    <title>Type system</title>
    <filename>types</filename>
    <docanchor file="types" title="Builtin types">types-builtin</docanchor>
    <docanchor file="types" title="Matrix/vector types">types-matrix</docanchor>
    <docanchor file="types" title="Binary representation">types-binary</docanchor>
    <docanchor file="types" title="Special types">types-special</docanchor>
    <docanchor file="types" title="Other types">types-other</docanchor>
    <docanchor file="types" title="Initialization">types-initialization</docanchor>
  </compound>
  <compound kind="page">
    <name>building-plugins</name>
    <title>Downloading and building plugins</title>
    <filename>building-plugins</filename>
    <docanchor file="building-plugins" title="Building ArchLinux packages">building-plugins-arch</docanchor>
    <docanchor file="building-plugins" title="Gentoo ebuilds">building-plugins-gentoo</docanchor>
    <docanchor file="building-plugins" title="Building DEB packages">building-plugins-deb</docanchor>
    <docanchor file="building-plugins" title="Homebrew formulas">building-plugins-brew</docanchor>
    <docanchor file="building-plugins" title="Continuous Integration">building-plugins-ci</docanchor>
    <docanchor file="building-plugins" title="Travis">building-plugins-ci-travis</docanchor>
    <docanchor file="building-plugins" title="AppVeyor">building-plugins-ci-appveyor</docanchor>
  </compound>
  <compound kind="page">
    <name>cmake-plugins</name>
    <title>Plugin usage with CMake</title>
    <filename>cmake-plugins</filename>
    <docanchor file="cmake-plugins" title="Other CMake modules">cmake-plugins-modules</docanchor>
  </compound>
  <compound kind="page">
    <name>building-integration</name>
    <title>Downloading and building integration libraries</title>
    <filename>building-integration</filename>
    <docanchor file="building-integration" title="Building ArchLinux packages">building-integration-arch</docanchor>
    <docanchor file="building-integration" title="Gentoo ebuilds">building-integration-gentoo</docanchor>
    <docanchor file="building-integration" title="Building DEB packages">building-integration-deb</docanchor>
    <docanchor file="building-integration" title="Homebrew formulas">building-integration-brew</docanchor>
    <docanchor file="building-integration" title="Continuous Integration">building-integration-ci</docanchor>
    <docanchor file="building-integration" title="Travis">building-integration-ci-travis</docanchor>
    <docanchor file="building-integration" title="AppVeyor">building-integration-ci-appveyor</docanchor>
  </compound>
  <compound kind="page">
    <name>cmake-integration</name>
    <title>Integration library usage with CMake</title>
    <filename>cmake-integration</filename>
    <docanchor file="cmake-integration" title="Other CMake modules">cmake-integration-modules</docanchor>
  </compound>
  <compound kind="page">
    <name>building-examples</name>
    <title>Downloading and building examples</title>
    <filename>building-examples</filename>
    <docanchor file="building-examples" title="Building ArchLinux packages">building-examples-arch</docanchor>
    <docanchor file="building-examples" title="Gentoo ebuilds">building-examples-gentoo</docanchor>
    <docanchor file="building-examples" title="Building DEB packages">building-examples-deb</docanchor>
    <docanchor file="building-examples" title="Homebrew formulas">building-examples-brew</docanchor>
    <docanchor file="building-examples" title="Continuous Integration">building-examples-ci</docanchor>
    <docanchor file="building-examples" title="Travis">building-examples-ci-travis</docanchor>
    <docanchor file="building-examples" title="AppVeyor">building-examples-ci-appveyor</docanchor>
  </compound>
  <compound kind="page">
    <name>examples-primitives</name>
    <title>Primitives</title>
    <filename>examples-primitives</filename>
    <docanchor file="examples-primitives" title="Setting up and preparing the mesh">examples-primitives-setup</docanchor>
    <docanchor file="examples-primitives" title="Rendering">examples-primitives-rendering</docanchor>
    <docanchor file="examples-primitives" title="Mouse event handling">examples-primitives-events</docanchor>
    <docanchor file="examples-primitives" title="Compilation">examples-primitives-compilation</docanchor>
  </compound>
  <compound kind="page">
    <name>examples-textured-triangle</name>
    <title>Textured triangle</title>
    <filename>examples-textured-triangle</filename>
    <docanchor file="examples-textured-triangle" title="Basic skeleton">examples-textured-triangle-skeleton</docanchor>
    <docanchor file="examples-textured-triangle" title="Textured triangle shader">examples-textured-triangle-shader</docanchor>
    <docanchor file="examples-textured-triangle" title="Setting up the mesh and texture">examples-textured-triangle-setup</docanchor>
    <docanchor file="examples-textured-triangle" title="Compilation">examples-textured-triangle-compilation</docanchor>
  </compound>
  <compound kind="page">
    <name>examples-triangle</name>
    <title>Your first triangle</title>
    <filename>examples-triangle</filename>
  </compound>
  <compound kind="page">
    <name>examples-viewer</name>
    <title>Model viewer</title>
    <filename>examples-viewer</filename>
    <docanchor file="examples-viewer" title="Scene graph">examples-viewer-scenegraph</docanchor>
    <docanchor file="examples-viewer" title="Resource manager">examples-viewer-resourcemanager</docanchor>
    <docanchor file="examples-viewer" title="Setting up, initializing resource manager and scene graph">examples-viewer-setup</docanchor>
    <docanchor file="examples-viewer" title="Importing the data">examples-viewer-import</docanchor>
    <docanchor file="examples-viewer" title="Event handling">examples-viewer-interactivity</docanchor>
    <docanchor file="examples-viewer" title="Drawable objects">examples-viewer-objects</docanchor>
    <docanchor file="examples-viewer" title="Compilation">examples-viewer-compilation</docanchor>
  </compound>
  <compound kind="page">
    <name>building-extras</name>
    <title>Downloading and building extras</title>
    <filename>building-extras</filename>
    <docanchor file="building-extras" title="Building ArchLinux packages">building-extras-arch</docanchor>
    <docanchor file="building-extras" title="Gentoo ebuilds">building-extras-gentoo</docanchor>
    <docanchor file="building-extras" title="Building DEB packages">building-extras-deb</docanchor>
    <docanchor file="building-extras" title="Homebrew formulas">building-extras-brew</docanchor>
    <docanchor file="building-extras" title="Continuous Integration">building-extras-ci</docanchor>
    <docanchor file="building-extras" title="Travis">building-extras-ci-travis</docanchor>
    <docanchor file="building-extras" title="AppVeyor">building-extras-ci-appveyor</docanchor>
  </compound>
  <compound kind="page">
    <name>cmake-extras</name>
    <title>Extras library usage with CMake</title>
    <filename>cmake-extras</filename>
    <docanchor file="cmake-extras" title="Other CMake modules">cmake-extras-modules</docanchor>
  </compound>
  <compound kind="page">
    <name>index</name>
    <title>Magnum</title>
    <filename>index</filename>
    <docanchor file="index" title="Design goals">mainpage-design-goals</docanchor>
    <docanchor file="index" title="Supported platforms">mainpage-platforms</docanchor>
    <docanchor file="index" title="Features">mainpage-features</docanchor>
    <docanchor file="index" title="Getting started">mainpage-getting-started</docanchor>
    <docanchor file="index" title="Hacking Magnum">mainpage-hacking</docanchor>
    <docanchor file="index" title="License">mainpage-license</docanchor>
  </compound>
</tagfile>
